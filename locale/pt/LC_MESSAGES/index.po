# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Fortran Community
# This file is distributed under the same license as the Fortran-lang.org
# website package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Fortran-lang.org website\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-17 12:03+0200\n"
"PO-Revision-Date: 2022-08-13 11:11+0000\n"
"Last-Translator: Ian giestas pauli <iangiestaspauli@gmail.com>\n"
"Language: pt\n"
"Language-Team: Portuguese <https://hosted.weblate.org/projects/fortran-"
"lang/webpage/pt/>\n"
"Plural-Forms: nplurals=2; plural=n > 1;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../source/community.md:10
msgid "Community - The Fortran Programming Language"
msgstr "Comunidade - A linguagem de programação Fortran"

#: ../../source/community.md:13
msgid "Fortran-lang Community"
msgstr "Comunidade Fortran-lang"

#: ../../source/community.md:17
msgid "Collaboration for the advancement of Fortran"
msgstr "Colaboração para o avanço do Fortran"

#: ../../source/community.md:21
msgid "Fortran-lang Community Projects"
msgstr "Projetos da Comunidade Fortran-lang"

#: ../../source/community.md:32
msgid "Fortran Standard Library (stdlib)"
msgstr "Biblioteca Padrão do Fortran (stdlib)"

#: ../../source/community.md:35
msgid ""
"A community-driven project for a de facto 'standard' library for Fortran."
" The stdlib project is both a specification and a reference "
"implementation, developed in cooperation with the Fortran Standards "
"Committee. [GitHub](https://github.com/fortran-"
"lang/stdlib),[Documentation](https://stdlib.fortran-"
"lang.org/),[Contributing](https://github.com/fortran-"
"lang/stdlib/blob/HEAD/WORKFLOW.md)."
msgstr ""
"Um projeto dirigido pela comunidade em busca de uma biblioteca 'padrão' "
"de fato para o Fortran. O projeto stdlib tem como objetivo prover tanto "
"uma especificação quanto uma implementação de referência e é desenvolvido"
" em cooperação com o o Comitê de Padrões Fortran. "
"[GitHub](https://github.com/fortran-"
"lang/stdlib),[Documentação](https://stdlib.fortran-lang.org/),[Como "
"ajudar](https://github.com/fortran-lang/stdlib/blob/HEAD/WORKFLOW.md)."

#: ../../source/community.md:39
#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:80
msgid "Fortran Package Manager (fpm)"
msgstr "Gerenciador de Pacotes Fortran (fpm)"

#: ../../source/community.md:42
#, fuzzy
msgid ""
"A prototype project to develop a common build system for Fortran packages"
" and their dependencies. [GitHub](https://github.com/fortran-"
"lang/fpm),[Documentation](https://github.com/fortran-"
"lang/fpm/blob/HEAD/PACKAGING.md),[Contributing](https://github.com"
"/fortran-lang/fpm/blob/HEAD/CONTRIBUTING.md)."
msgstr ""
"Um projeto piloto para desenvolver um sistema de compilação comum para "
"pacotes Fortran e suas dependências. [GitHub](https://github.com/fortran-"
"lang/fpm),[Documentação](https://github.com/fortran-"
"lang/fpm/blob/HEAD/PACKAGING.md),[Como Ajudar](https://github.com"
"/fortran-lang/fpm/blob/HEAD/CONTRIBUTING.md)."

#: ../../source/community.md:46
#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:13
#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:13
#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:13
#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:13
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:13
#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:13
#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:13
#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:14
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:13
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:13
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:13
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:13
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:13
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:13
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:13
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:13
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:13
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:14
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:13
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:14
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:13
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:13
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:13
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:13
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:14
msgid "fortran-lang.org"
msgstr "fortran-lang.org"

#: ../../source/community.md:49
msgid ""
"This website is open source and contributions are welcome!. "
"[GitHub](https://github.com/fortran-"
"lang/webpage),[Contributing](../community/contributing)."
msgstr ""
"Este site possui código-fonte aberto e contribuições são bem-vindas! "
"[GitHub](https://github.com/fortran-lang/webpage),[Como "
"Ajudar](../community/contributing)."

#: ../../source/community.md:70
msgid "Get Involved"
msgstr "Contribua"

#: ../../source/community.md:83
msgid "Join the Discussion"
msgstr "Participe das Discussões"

#: ../../source/community.md:86
msgid ""
"The easiest way to join the community and contribute is by commenting on "
"issues and pull requests in the project repositories."
msgstr ""
"A forma mais fácil de se envolver com a comunidade e contribuir é "
"participando nas issues e pull requests nos repositórios dos projetos."

#: ../../source/community.md:90
msgid ""
"Whether Fortran beginner or seasoned veteran, your feedback and comments "
"are most welcome in guiding the future of Fortran-lang."
msgstr ""
"Seja você um iniciante ou um veterano experiente, seu feedbak e "
"comentários são mais que bem-vindos para guiar o futuro da comunidade "
"Fortran-lang."

#: ../../source/community.md:101
msgid "Build and Test"
msgstr "Compile e Teste"

#: ../../source/community.md:104
#, fuzzy
msgid ""
"Get more involved with each project by cloning, building and testing it "
"on your own machine(s) and with your own codes; if something doesn't "
"work, create an issue to let us know! We value user feedback highly, be "
"it a bug report, feature request, or suggestion for documentation."
msgstr ""
"Envolva-se mais com cada projeto baixando, compilando e testando em suas "
"próprias máquinas e em seus códigos; Se algo não funcionar, crie uma "
"Issue para ficarmos sabendo! Valorizamos muito o feedback dos usuários, "
"seja um relato de falha, ideia para algo novo ou sugestão para a "
"documentação."

#: ../../source/community.md:116
msgid "Contributor Guide"
msgstr "Guia do Colaborador"

#: ../../source/community.md:119
#, fuzzy
msgid ""
"Want to contribute code and content? Check out the contributor guides in "
"each repository for information on the project workflow and recommended "
"practices."
msgstr ""
"Quer contribuir com código ou conteúdo? Dê uma olhada no guia de "
"colaboração de cada repositório para informações de como é o fluxo de "
"trabalho e as práticas recomendadas. Guia de colaboração para o stdlib"

#: ../../source/community.md:123
msgid ""
"[Contributor guide for stdlib](https://github.com/fortran-"
"lang/stdlib/blob/HEAD/WORKFLOW.md) <br> [Contributor guide for "
"fpm](https://github.com/fortran-lang/fpm/blob/HEAD/CONTRIBUTING.md)<br> "
"[Contributor guide for fortran-lang.org](contributing)"
msgstr ""
"[Guia do colaborador para a stdlib](https://github.com/fortran-"
"lang/stdlib/blob/HEAD/WORKFLOW.md) <br> [Contributor guide for "
"fpm](https://github.com/fortran-lang/fpm/blob/HEAD/CONTRIBUTING.md)<br> "
"[Guia do colaborador para a fortran-lang.org](contributing)"

#: ../../source/community.md:132
msgid "Community Conduct"
msgstr "Conduta da Comunidade"

#: ../../source/community.md:135
msgid ""
"As a community, we strive to make participation in our discussions and "
"projects a friendly and harassment-free experience for everyone. See the "
"full  [Code of Conduct](https://github.com/fortran-"
"lang/stdlib/blob/HEAD/CODE_OF_CONDUCT.md)."
msgstr ""
"Como comunidade, nos esforçamos para fazer com que a participação em "
"nossas discussões e projetos seja uma experiência amigável e livre de "
"assédio para todo(a)s. Veja na integra o [Código de "
"Conduta](https://github.com/fortran-"
"lang/stdlib/blob/HEAD/CODE_OF_CONDUCT.md)."

#: ../../source/community.md:143
msgid "Fortran-lang Contributors"
msgstr "Colaboradores da Fortran-lang"

#: ../../source/community.md:149
msgid "source: https://git-contributor.com/"
msgstr "fonte: [https://git-contributor.com/](https://git-contributor.com/)"

#: ../../source/community.md:153
msgid "Contributors:"
msgstr "Colaboradores:"

#: ../../source/community.md:168 ../../source/community.md:183
#: ../../source/community.md:198 ../../source/community.md:213
#: ../../source/community.md:228 ../../source/community.md:243
#: ../../source/community.md:261 ../../source/community.md:276
#: ../../source/community.md:291 ../../source/community.md:306
#: ../../source/community.md:321 ../../source/community.md:336
#: ../../source/community.md:354 ../../source/community.md:369
#: ../../source/community.md:384 ../../source/community.md:399
#: ../../source/community.md:414 ../../source/community.md:429
#: ../../source/community.md:447 ../../source/community.md:462
#: ../../source/community.md:477 ../../source/community.md:492
#: ../../source/community.md:507 ../../source/community.md:522
#: ../../source/community.md:540 ../../source/community.md:555
#: ../../source/community.md:570 ../../source/community.md:585
#: ../../source/community.md:600 ../../source/community.md:615
#: ../../source/community.md:633 ../../source/community.md:648
#: ../../source/community.md:663 ../../source/community.md:678
#: ../../source/community.md:693 ../../source/community.md:708
#: ../../source/community.md:726 ../../source/community.md:741
#: ../../source/community.md:756 ../../source/community.md:771
#: ../../source/community.md:786 ../../source/community.md:801
#: ../../source/community.md:819 ../../source/community.md:834
#: ../../source/community.md:849 ../../source/community.md:864
#: ../../source/community.md:879 ../../source/community.md:894
#: ../../source/community.md:912 ../../source/community.md:927
#: ../../source/community.md:942 ../../source/community.md:957
#: ../../source/community.md:972 ../../source/community.md:987
#: ../../source/community.md:1005 ../../source/community.md:1020
#: ../../source/community.md:1035 ../../source/community.md:1050
#: ../../source/community.md:1065 ../../source/community.md:1080
#: ../../source/community.md:1098 ../../source/community.md:1113
#: ../../source/community.md:1128 ../../source/community.md:1143
#: ../../source/community.md:1158 ../../source/community.md:1173
#: ../../source/community.md:1191 ../../source/community.md:1206
#: ../../source/community.md:1221
#, fuzzy
msgid "card-img-top"
msgstr "card-img-top"

#: ../../source/community/contributing.md:3
msgid "Contributing to fortran-lang.org"
msgstr "Contribuindo na fortran-lang.org"

#: ../../source/community/contributing.md:5
msgid "Fortran-lang.org is open-source and contributions are welcome!"
msgstr ""
"Fortran-lang.org possui código-fonte aberto e contribuições são bem-"
"vindas!"

#: ../../source/community/contributing.md:7
msgid ""
"See {ref}``packages`` for how to add an entry to the [Package "
"index](https://fortran-lang.org/en/packages)"
msgstr ""
"Veja {ref}``packages`` para saber como adicionar um pacote na [Lista de "
"Pacotes](https://fortran-lang.org/en/packages)"

#: ../../source/community/contributing.md:9
msgid ""
"See {ref}``minibooks`` for how to write and structure a mini-book "
"tutorial for the [Learn](https://fortran-lang.org/learn) section"
msgstr ""
"Veja {ref}``minibooks`` para saber como escrever e estruturar um tutorial"
" para a seção [Aprenda](https://fortran-lang.org/learn)"

#: ../../source/community/contributing.md:12
msgid "Introduction"
msgstr "Introdução"

#: ../../source/community/contributing.md:14
msgid "__How is the site written?__"
msgstr "__Como o site é escrito?__"

#: ../../source/community/contributing.md:16
msgid ""
"The content of the website is primarily written in a combination of "
"ReStructuredText, Markdown, HTML and YAML (for data). This source is "
"compiled to produce pure HTML which is what you see on the final website."
msgstr ""
"O conteúdo do site é primariamente escrito com uma combinação de "
"ReStructuredText, Markdown, HTML and YAML (para dados). Este código-fonte"
" é compilado de forma a produzir HTML puro que no final é o que você vê "
"aqui."

#: ../../source/community/contributing.md:19
msgid ""
"The website is _static_ which means that once built, the content on the "
"site is the same for all users; this is in contrast to many websites that"
" are _dynamic_, meaning they can serve different content  depending on "
"the user and the inputs supplied by the user."
msgstr ""
"O site é _estático_ que significa que uma vez compilado, o conteúdo do "
"site é o mesmo para todos os usuários; diferentemente de muitos outros "
"sites que são _dinâmico_, que podem mostrar um conteúdo diferente "
"dependendo do usuário e das informações fornecidas pelo mesmo."

#: ../../source/community/contributing.md:23
#, fuzzy
msgid ""
"Structural components of the website are written in the Sphinx Static "
"site generator for static features, and JavaScript for dynamic features."
msgstr ""
"Componentes estruturais do site são escritos utilizando o gerador de site"
" estático Sphinx e JavaScript para recursos dinâmicos."

#: ../../source/community/contributing.md:26
msgid "__Do I need to know HTML to contribute?__"
msgstr "__Preciso saber HTML para ajudar?__"

#: ../../source/community/contributing.md:28
msgid ""
"The majority of the site content is written in "
"[Markdown](https://github.com/adam-p/markdown-here/wiki/Markdown-"
"Cheatsheet), a simple markup language for formatting text - don't worry "
"if you haven't used it before, it's very easy to pick up!"
msgstr ""
"A maior parte do conteúdo do site é escrita em "
"[Markdown](https://github.com/adam-p/markdown-here/wiki/Markdown-"
"Cheatsheet), uma linguagem simples de marcação para a formatação de texto"
" - mas não se preocupe se você nunca usou Markdown antes, pois é bem "
"fácil de começar a usar!"

#: ../../source/community/contributing.md:31
msgid "__How is the site built?__"
msgstr "__Como o site é compilado?__"

#: ../../source/community/contributing.md:33
msgid ""
"The Fortran-lang site uses the Python-based [Sphinx static site "
"generator](https://www.sphinx-doc.org/en/master/) to compile the "
"RST,Markdown and HTML files. It is recommended for contributors to "
"install Python on your development computer so that changes can be "
"previewed locally, however this is not mandatory since site previews can "
"be generated during the pull request process (see below for more "
"information). See [README.md](README.md) for how to setup Sphinx and "
"build the site."
msgstr ""

#: ../../source/community/contributing.md:37
msgid ""
"The GitHub repository default branch only ever contains the 'source code'"
" for the website, not the final compiled result; an automated service "
"compiles this source code every time an update is pushed and stores the "
"compiled result on the [`gh-pages`](https://github.com/fortran-"
"lang/webpage/tree/gh-pages) branch which is served up at <https"
"://fortran-lang.org>."
msgstr ""

#: ../../source/community/contributing.md:39
msgid ""
"Therefore, as a contributor you only need to upload changes to the site "
"source code and not the compiled result, because this is built "
"automatically from the source code on the default branch."
msgstr ""

#: ../../source/community/contributing.md:42
msgid "Workflow"
msgstr "Fluxo de Trabalho"

#: ../../source/community/contributing.md:44
msgid ""
"Contributions to the site are made by pull request to the github "
"repository: <https://github.com/fortran-lang/webpage/>."
msgstr ""

#: ../../source/community/contributing.md:46
msgid "The workflow for doing so takes the following form:"
msgstr ""

#: ../../source/community/contributing.md:48
msgid "Create/update a personal fork of webpage"
msgstr ""

#: ../../source/community/contributing.md:49
msgid ""
"(See  [github help: syncing a fork](https://help.github.com/en/github"
"/collaborating-with-issues-and-pull-requests/syncing-a-fork) )"
msgstr ""

#: ../../source/community/contributing.md:51
msgid "Create a new branch in your fork"
msgstr ""

#: ../../source/community/contributing.md:52
msgid ""
"The branch name should concisely describe your contribution, _e.g._ `fix-"
"spelling-homepage`, `update-compiler-info`"
msgstr ""

#: ../../source/community/contributing.md:54
msgid "Perform your changes on the local branch"
msgstr ""

#: ../../source/community/contributing.md:56
msgid "Push your modified branch to your fork"
msgstr ""

#: ../../source/community/contributing.md:57
msgid "_e.g._ `git push --set-upstream origin fix-spelling-homepage`"
msgstr ""

#: ../../source/community/contributing.md:59
msgid ""
"Create a pull request in the fortran-lang/webpage from your modified fork"
" branch"
msgstr ""

#: ../../source/community/contributing.md:60
msgid ""
"(See [github help: creating a pull "
"request](https://help.github.com/en/github/collaborating-with-issues-and-"
"pull-requests/creating-a-pull-request) )"
msgstr ""

#: ../../source/community/contributing.md:62
msgid ""
"__Note: Before opening a pull request you must build your changes locally"
" using Sphinx (see [README.md](README.md)) to verify that your changes "
"build correctly and render as you expect.__"
msgstr ""

#: ../../source/community/contributing.md:64
msgid ""
"__Note: You can continue to push changes to your fork branch after you "
"open a pull request  - the pull request will update accordingly__"
msgstr ""

#: ../../source/community/contributing.md:66
msgid ""
"Your pull request will be reviewed by other members of the community who "
"may request changes. GitHub provides an easy interface on its website to "
"apply (or reject) any reviewer-suggested changes with a click of a "
"button. This avoids having to manually copy suggestions to your local "
"copy and push back again. If you use the \"Commit suggestion\" button, "
"you will need to update the local copy on your computer using `git pull` "
"if you intend to push more edits from your computer."
msgstr ""

#: ../../source/community/contributing.md:71
msgid ""
"Once your pull request is approved, usually by at least two other "
"community members, it will be merged into the webpage default branch by "
"the maintainers at which point it will be published to the fortran-"
"lang.org site."
msgstr ""

#: ../../source/community/contributing.md:73
msgid ""
"If required, the repository maintainers can build a public preview of "
"your proposed changes which will be available to view at `fortran-"
"lang.org/pr/<pr_id>/` where `<pr_id>` is the numeric identifier of your "
"pull request."
msgstr ""

#: ../../source/community/contributing.md:75
msgid "This allows reviewers to directly view the generated result of your PR."
msgstr ""

#: ../../source/community/contributing.md:77
msgid ""
"__Note:__ if you push subsequent commits to your pull request branch, you"
" must rebuild the pull request preview by commenting on the pull request "
"with '#build_preview'."
msgstr ""

#: ../../source/community/contributing.md:80
msgid ""
"After a pull request has been merged and successfully rendered, the "
"maintainers will delete the preview build."
msgstr ""

#: ../../source/community/contributing.md:82
msgid ""
"__Note:__ if your pull request preview link doesn't work or doesn't "
"update after re-building, try adding a random parameter to the end of the"
" URL, _e.g._ `https://fortran-lang.org/pr/98?v=2` - the name and value of"
" the parameter don't matter, but use different values for each update. "
"This will force the GitHub content delivery network to serve you an "
"updated version instead of a cached version which is out-of-date."
msgstr ""

#: ../../source/community/contributing.md:85
msgid "Style guide"
msgstr ""

#: ../../source/community/contributing.md:87
msgid "Markdown"
msgstr "Markdown"

#: ../../source/community/contributing.md:89
msgid ""
"Place code excerpts in [code blocks](https://github.com/adam-p/markdown-"
"here/wiki/Markdown-Cheatsheet#code-and-syntax-highlighting), denoted by "
"back ticks (```` ``` ````). Use inline code style (`` `code` ``) for "
"inline code excerpts, programming language keywords, variables names and "
"file names."
msgstr ""

#: ../../source/community/contributing.md:92
msgid ""
"Have no more than one sentence per source-code line, and break-up long "
"sentences across multiples lines -  this is important to avoid large git "
"diffs and code review blocks on github."
msgstr ""

#: ../../source/community/contributing.md:96
msgid "External links"
msgstr ""

#: ../../source/community/contributing.md:98
msgid ""
"It is recommended practice for off-site hyperlinks to open in a new tab. "
"On `Fortran-lang.org` all such links will automatically be suffixed with "
"a new-tab icon; this gives site users prior expectation that the link "
"will lead them off-site while keeping fortran-lang.org open in a previous"
" tab."
msgstr ""

#: ../../source/community/contributing.md:102
msgid "__Example:__ Open link in new tab (HTML or markdown)"
msgstr ""

#: ../../source/community/contributing.md:107
msgid "Internal site links"
msgstr ""

#: ../../source/community/contributing.md:109
msgid ""
"Hyperlinks that point to other parts of the fortran-lang.org website "
"should be prefixed with `{{pathto('index',1)[:-5]}}` - this is important "
"for generating pull request previews (see "
"[here](https://byparker.com/blog/2014/clearing-up-confusion-around-"
"baseurl/) for an explanation)."
msgstr ""

#: ../../source/community/contributing.md:111
msgid "__Example:__ markdown link"
msgstr ""

#: ../../source/community/contributing.md:117
msgid "__Example:__ html link"
msgstr ""

#: ../../source/community/contributing.md:123
msgid "Icon packs"
msgstr ""

#: ../../source/community/contributing.md:125
msgid ""
"Icons are an easy way to improve page aesthetic by breaking-up otherwise "
"monotonic text passages and drawing attention to headings or key "
"information."
msgstr ""

#: ../../source/community/contributing.md:127
msgid "Three icon packs are available for use on `fortran-lang.org`:"
msgstr ""

#: ../../source/community/contributing.md:129
msgid ""
"[Font awesome](https://fontawesome.com/icons?d=gallery) (CC BY 4.0 "
"License)"
msgstr ""

#: ../../source/community/contributing.md:131
msgid "[Feather](https://feathericons.com/) (MIT)"
msgstr ""

#: ../../source/community/contributing.md:133
msgid "[Devicon](https://konpa.github.io/devicon/) (MIT)"
msgstr ""

#: ../../source/community/contributing.md:136
msgid "__Example:__ Font awesome"
msgstr ""

#: ../../source/community/contributing.md:141
msgid "__Example:__ Feather"
msgstr ""

#: ../../source/community/contributing.md:147
msgid "__Example:__ Devicon"
msgstr ""

#: ../../source/community/contributing.md:153
msgid "Visit the respective websites to browse available icons."
msgstr ""

#: ../../source/community/contributing.md:156
msgid "Page contents"
msgstr ""

#: ../../source/community/contributing.md:158
msgid ""
"It is sometimes helpful to display hyperlinked page contents for lengthy "
"pages. The page TOC tree has been automated and will generate the TOC of "
"the current page. Whereas the method to generate TOC of the entire "
"directory on `Fortran-lang.org` is:"
msgstr ""

#: ../../source/community/contributing.md:160
msgid ""
"__For pages in RST:__ add a toc tree directive at the end of the index "
"page of the directory with the names of the all files in that directory."
msgstr ""

#: ../../source/community/contributing.md:173
msgid "__For pages in MD:__"
msgstr ""

#: ../../source/community/contributing.md:175
msgid ""
"add the toc tree directive in md at the end of the index page of the "
"directory with the names of the all files in that directory."
msgstr ""

#: ../../source/community/contributing.md:186
msgid "Tutorials"
msgstr "Tutoriais"

#: ../../source/community/contributing.md:188
msgid "Guidelines for mini-book content."
msgstr ""

#: ../../source/community/contributing.md:190
msgid "General"
msgstr "Geral"

#: ../../source/community/contributing.md:192
msgid "Use the `book` layout."
msgstr ""

#: ../../source/community/contributing.md:194
msgid "Follow the [Markdown guidelines](#markdown)."
msgstr ""

#: ../../source/community/contributing.md:196
msgid "Code style"
msgstr ""

#: ../../source/community/contributing.md:198
msgid ""
"Use two spaces for indentation, indenting bodies of units but keeping the"
" `contains` statement at the same level as its `module` or `type`. Try to"
" limit line length to 90 characters. These considerations should make the"
" code more readable and easier to view on devices with smaller viewport "
"widths."
msgstr ""

#: ../../source/community/contributing.md:223
msgid ""
"Each code block should have a base indentation level of 0, even if it "
"would be indented if put into a larger context."
msgstr ""

#: ../../source/community/contributing.md:229
msgid ""
"Avoid vertically aligning `::` and inline comments since this adds "
"maintenance burden and pushes the line length in most cases."
msgstr ""

#: ../../source/community/contributing.md:231
msgid ""
"If a code block contains lines that are not valid Fortran, leave it as a "
"language-less code block to avoid the syntax highlighter's red boxes."
msgstr ""

#: ../../source/community/contributing.md:238
msgid ""
"Feel free to omit spacing in expressions where it helps with readability,"
" but generally include whitespace around operators."
msgstr ""

#: ../../source/community/contributing.md:247
msgid ""
"Generally add a space after commas, except when indexing with short index"
" values or variables names."
msgstr ""

#: ../../source/community/contributing.md:261
msgid ""
"Other situations besides simple indexings where white space can be "
"omitted:"
msgstr ""

#: ../../source/community/contributing.md:262
msgid "Aliasing in imports"
msgstr ""

#: ../../source/community/contributing.md:266
msgid "String concatentation"
msgstr ""

#: ../../source/community/contributing.md:270
msgid "Accessing components (attributes) of derived types"
msgstr ""

#: ../../source/community/contributing.md:275
msgid "Around `=` when passing keyword arguments"
msgstr ""

#: ../../source/community/contributing.md:282
msgid ""
"Capitalize the first letter for inline comments except for trailing "
"inline comments that only consist of one word or a short phrase."
msgstr ""

#: ../../source/community/contributing.md:288
msgid ""
"These code style recommendations are similar to those in [the DFTB+ style"
" guide](https://dftbplus-"
"develguide.readthedocs.io/en/latest/fortranstyle.html)."
msgstr ""

#: ../../source/community/contributing.md:290
msgid "Text"
msgstr "Texto"

#: ../../source/community/contributing.md:292
msgid "Use sentence case (as opposed to title case) for page and section titles."
msgstr ""

#: ../../source/community/contributing.md:294
msgid ""
"Use *emphasis* (`*emphasis*`/`_emphasis_`, rendered as italic) for key "
"words/phrases when they are first introduced, for emphasis, ..."
msgstr ""

#: ../../source/community/contributing.md:296
msgid ""
"Avoid use of **strong** (`**strong**`, rendered as bold) within "
"paragraphs, since bold style is used for headings, drawing attention to "
"examples (**Example:**), admonition/aside titles, etc."
msgstr ""

#: ../../source/community/contributing.md:298
msgid ""
"Make use of the admonition/aside (*note*, *tip*, *important*) where "
"appropriate."
msgstr ""

#: ../../source/community/contributing.md:299
msgid "to add a **note** to md document use:"
msgstr ""

#: ../../source/community/contributing.md:305
msgid "to add a **tip** to md document use:"
msgstr ""

#: ../../source/community/contributing.md:311
msgid "to add an **important** text to md document use:"
msgstr ""

#: ../../source/community/contributing.md:318
msgid ""
"Prefer including the [Oxford "
"comma](https://en.wikipedia.org/wiki/Serial_comma). It usually makes "
"things more clear."
msgstr ""

#: ../../source/community/contributing.md:319
msgid "Fortran is fast, fun, and famed."
msgstr ""

#: ../../source/community/minibooks.md:3
msgid "Mini-book Tutorials on fortran-lang.org"
msgstr ""

#: ../../source/community/minibooks.md:5
msgid ""
"This guide will cover how to write mini-book tutorials for the "
"[Learn](https://fortran-lang.org/learn) section of <https://fortran-"
"lang.org>."
msgstr ""

#: ../../source/community/minibooks.md:8
msgid ""
"See {ref}``contributing`` for general guidance on contributing to <https"
"://fortran-lang.org>."
msgstr ""

#: ../../source/community/minibooks.md:10
msgid "0. Mini-book formats"
msgstr ""

#: ../../source/community/minibooks.md:12
msgid ""
"Mini-books are designed to be mostly self-contained tutorials on a "
"particular feature of the Fortran language."
msgstr ""

#: ../../source/community/minibooks.md:14
msgid "There are two types of mini-book format:"
msgstr ""

#: ../../source/community/minibooks.md:16
msgid ""
"__Single-page:__ all content is written within a single markdown file and"
" displayed on a single webpage;"
msgstr ""

#: ../../source/community/minibooks.md:19
msgid ""
"__Multi-page:__ tutorial content is written across multiple markdown "
"files and displayed  as a collection of webpages."
msgstr ""

#: ../../source/community/minibooks.md:23
msgid ""
"The choice of book type depends on the length of your content and how you"
" intend to structure it."
msgstr ""

#: ../../source/community/minibooks.md:25
msgid "Consider the table of contents that will be produced:"
msgstr ""

#: ../../source/community/minibooks.md:27
msgid ""
"Single-page books have __one level__ of navigation: a link for each "
"heading in the tutorial in inpage-toc (toc on the right hand side of the "
"page)."
msgstr ""

#: ../../source/community/minibooks.md:29
msgid ""
"Multi-page books have __two levels__ of navigation: a link for each "
"heading in the tutorial in inpage-toc (toc on the right hand side of the "
"page) and sidebar-toc (toc on the left hand side of the page showing "
"different pages in directory)."
msgstr ""

#: ../../source/community/minibooks.md:31
msgid ""
"Single-page mini-books are simpler to produce and should be used for "
"brief topics or short tutorials that will eventually be subsumed into a "
"more-comprehensive multi-page book."
msgstr ""

#: ../../source/community/minibooks.md:34
msgid ""
"Multi-page books are recommended for more-comprehensive tutorials that "
"can be structured with one subtopic per page."
msgstr ""

#: ../../source/community/minibooks.md:36
msgid ""
"The rest of this guide is split into two sections, one each for the "
"single-page and multi-page book types."
msgstr ""

#: ../../source/community/minibooks.md:38
msgid "1. Single-page mini-book"
msgstr ""

#: ../../source/community/minibooks.md:40
msgid "The steps required for publishing a single-page mini-book are:"
msgstr ""

#: ../../source/community/minibooks.md:42
msgid "Create a new markdown document in the `./learn` directory"
msgstr ""

#: ../../source/community/minibooks.md:44
msgid "Write your tutorial content"
msgstr ""

#: ../../source/community/minibooks.md:46
#: ../../source/community/minibooks.md:167
msgid ""
"Add an entry to [_data/learning.yml](./_data/learning.yml) for your new "
"mini-book"
msgstr ""

#: ../../source/community/minibooks.md:48
#: ../../source/community/minibooks.md:169
msgid "Open a pull request"
msgstr ""

#: ../../source/community/minibooks.md:50
msgid "1.1 Writing your mini-book in markdown"
msgstr ""

#: ../../source/community/minibooks.md:52
msgid ""
"For single-page mini-books your tutorial will be entirely contained "
"within a single markdown document."
msgstr ""

#: ../../source/community/minibooks.md:54
msgid ""
"First create a new markdown document in the "
"`./learn/{{name_of_minibook}}/` directory with the `.md` file extension "
"and a short name that concisely describes the topic of your tutorial, "
"_e.g._ `./learn/{{name_of_minibook}}/file_io.md`."
msgstr ""

#: ../../source/community/minibooks.md:57
msgid "Open your new markdown file and add a header in the following format:"
msgstr ""

#: ../../source/community/minibooks.md:67
msgid ""
"You should replace `<book-title>` with a human-readable description of "
"your tutorial content; this will be displayed as an `<h1>` heading at the"
" top of your mini-book page."
msgstr ""

#: ../../source/community/minibooks.md:70
msgid ""
"Replace `<book-filename>` with the filename of your markdown file but "
"__excluding the `.md` extension__. There should also be no trailing "
"slash."
msgstr ""

#: ../../source/community/minibooks.md:74
msgid "__Example:__ header"
msgstr ""

#: ../../source/community/minibooks.md:84
msgid "__NOT:__ `permalink: /learn/file_io.md`"
msgstr ""

#: ../../source/community/minibooks.md:86
msgid "__NOT:__ `permalink: /learn/file_io/`"
msgstr ""

#: ../../source/community/minibooks.md:88
msgid ""
"You can now fill the rest of the file with your tutorial content written "
"in markdown; see [Kramdown "
"syntax](https://kramdown.gettalong.org/syntax.html) for documentation on "
"the markdown implementation."
msgstr ""

#: ../../source/community/minibooks.md:93
msgid "1.2 Structuring your mini-book with headings"
msgstr ""

#: ../../source/community/minibooks.md:95
msgid ""
"You should use headings to break-up your single-page mini-book into a "
"logical structure. Each  heading will show up in the hyperlinked table-"
"of-contents."
msgstr ""

#: ../../source/community/minibooks.md:98
msgid "In markdown, headings can be written as:"
msgstr ""

#: ../../source/community/minibooks.md:109
msgid "__Note:__ make sure to include a blank line before your heading."
msgstr ""

#: ../../source/community/minibooks.md:111
msgid "1.3 Add your mini-book to the Learn page"
msgstr ""

#: ../../source/community/minibooks.md:113
#: ../../source/community/minibooks.md:246
msgid ""
"To add your new mini-book to the _Learn_ page, you need to add a new "
"entry in the [_data/learning.yml](./_data/learning.yml) datafile."
msgstr ""

#: ../../source/community/minibooks.md:116
#: ../../source/community/minibooks.md:249
msgid ""
"Open this file and create a new entry under the `books:` field in the "
"following format:"
msgstr ""

#: ../../source/community/minibooks.md:127
msgid ""
"The `title` field is what will be displayed on the _Learn_ page for your "
"mini-book and should generally be the same as the `title` field in your "
"markdown file, but this isn't required."
msgstr ""

#: ../../source/community/minibooks.md:130
#: ../../source/community/minibooks.md:267
msgid ""
"The contents of the `description` field is also displayed on the _Learn_ "
"page and should briefly summarise the contents of your mini-book "
"tutorial."
msgstr ""

#: ../../source/community/minibooks.md:133
#: ../../source/community/minibooks.md:270
msgid ""
"The `category` field should match one of the categories listed at the top"
" of the data file (under the `categories:` field) and is used to group "
"tutorials on the Learn page."
msgstr ""

#: ../../source/community/minibooks.md:136
msgid ""
"The `link` field should exactly match the `permalink` field in your "
"markdown document."
msgstr ""

#: ../../source/community/minibooks.md:138
#: ../../source/community/minibooks.md:277
msgid "__Example:__ `learning.yml` book entry"
msgstr ""

#: ../../source/community/minibooks.md:149
msgid ""
"Save the modified `learning.yml` data file and run fortran_packages.py "
"and rebuild the website on your local machine to check the results. If "
"successful, a new link should appear on the _Learn_ page with the title "
"of your new mini-book."
msgstr ""

#: ../../source/community/minibooks.md:152
msgid ""
"Once you have completed your mini-book and added an entry to the "
"`learning.yml` data file, open a pull request at <https://github.com"
"/fortran-lang/webpage> (see [CONTRIBUTING](./CONTRIBUTING.md))."
msgstr ""

#: ../../source/community/minibooks.md:157
msgid "2. Multi-page mini-books"
msgstr ""

#: ../../source/community/minibooks.md:159
msgid "The steps required for publishing a multi-page mini-book are:"
msgstr ""

#: ../../source/community/minibooks.md:161
msgid "Create a new folder in the `./learn/` directory"
msgstr ""

#: ../../source/community/minibooks.md:163
msgid "Create an `index.md` file in your new folder"
msgstr ""

#: ../../source/community/minibooks.md:165
msgid "Write your tutorial content in markdown files in your new folder"
msgstr ""

#: ../../source/community/minibooks.md:172
msgid "2.1 Create a new folder for your mini-book"
msgstr ""

#: ../../source/community/minibooks.md:174
msgid ""
"Create a new folder in the `./learn/` directory with a short name that "
"concisely describes the topic of your tutorial, _e.g._ "
"`./learn/coarrays/`. All pages of your mini-book will be contained within"
" this folder."
msgstr ""

#: ../../source/community/minibooks.md:177
msgid ""
"The first page of your mini-book should be called `index.md`, so create a"
" new markdown file in your mini-book folder called `index.md`, and add a "
"header in the following format:"
msgstr ""

#: ../../source/community/minibooks.md:189
msgid ""
"The `title` field should contain a human-readable description of your "
"mini-book tutorial."
msgstr ""

#: ../../source/community/minibooks.md:191
msgid ""
"The `permalink` field should contain `/learn/` followed by the name of "
"your mini-book folder. __There should be no trailing slash.__"
msgstr ""

#: ../../source/community/minibooks.md:194
msgid "__Example:__ header for `index.md`"
msgstr ""

#: ../../source/community/minibooks.md:203
msgid "__NOT:__ `permalink: /learn/coarrays/`"
msgstr ""

#: ../../source/community/minibooks.md:205
msgid ""
"In your table of contents, this first page will be displayed as "
"'_Introduction_'; you should populate the remainder of `index.md` with an"
" introduction to your mini-book tutorial which may include: a summary of "
"the concepts covered; any prerequisites; and any references to other "
"related mini-books or useful third-party resources."
msgstr ""

#: ../../source/community/minibooks.md:210
msgid "2.2 Add pages to your mini-book"
msgstr ""

#: ../../source/community/minibooks.md:212
msgid ""
"For each new page in your mini-book, create a new markdown file in your "
"mini-book folder. Each page needs a header, just like the `index.md`, but"
" the `title` and `permalink` fields must be unique to each new page."
msgstr ""

#: ../../source/community/minibooks.md:224
msgid ""
"Replace `<page-title>` with the title of your new page; this will be "
"displayed in the hyperlinked table-of-contents."
msgstr ""

#: ../../source/community/minibooks.md:226
msgid ""
"Replace `<page-filename>` with the name of the markdown file for your new"
" page but __excluding the `.md` extension__."
msgstr ""

#: ../../source/community/minibooks.md:229
msgid "__Example:__ a header for a new page `./learn/coarrays/background.md`"
msgstr ""

#: ../../source/community/minibooks.md:239
msgid ""
"As with single-page mini-books, you should use headings to break-up each "
"page into a logical structure. Each  heading on the current page will "
"show up in the inpage table-of-contents."
msgstr ""

#: ../../source/community/minibooks.md:244
msgid "2.3 Add your mini-book to the Learn page"
msgstr ""

#: ../../source/community/minibooks.md:264
msgid ""
"The `title` field is what will be displayed on the _Learn_ page for your "
"mini-book and should generally be the same as the `title` field in your "
"`index.md` markdown file, but this isn't required."
msgstr ""

#: ../../source/community/minibooks.md:273
msgid ""
"The top-level `link` field should exactly match the `permalink` field in "
"your `index.md` file."
msgstr ""

#: ../../source/community/minibooks.md:275
msgid ""
"Each `link` field under `pages` should exactly match the `permalink` "
"field in each of your subsequent mini-book pages."
msgstr ""

#: ../../source/community/minibooks.md:292
msgid ""
"Save the modified `learning.yml` data file and run fortran_package.py and"
" rebuild the website on your local machine to check the results. If "
"successful, a new link should appear on the _Learn_ page with the title "
"of your new mini-book."
msgstr ""

#: ../../source/community/minibooks.md:295
msgid ""
"Once you have completed your mini-book and added an entry to the "
"`learning.yml` data file, open a pull request at <https://github.com"
"/fortran-lang/fortran-lang.org> (see [CONTRIBUTING](./CONTRIBUTING.md))."
msgstr ""

#: ../../source/community/packages.md:3
msgid "Fortran-lang.org package index"
msgstr ""

#: ../../source/community/packages.md:6
msgid "Package criteria"
msgstr ""

#: ../../source/community/packages.md:8
msgid "The following criteria are required of packages to be indexed:"
msgstr ""

#: ../../source/community/packages.md:10
msgid ""
"__Relevance__: the package must be primarily implemented in Fortran or "
"provide a complete Fortran interface to an existing package or be "
"purposed solely towards software development in Fortran."
msgstr ""

#: ../../source/community/packages.md:14
msgid ""
"__Maturity__: the primary functionality of the package shall be "
"implemented. No prototype, testing or partially complete packages will be"
" accepted. If the package is hosted on github or similar, it should have "
"at least 5 'stars'."
msgstr ""

#: ../../source/community/packages.md:18
msgid ""
"__Availability__: the package source shall be freely available for "
"browsing online or cloning or downloading"
msgstr ""

#: ../../source/community/packages.md:21
msgid ""
"__Open source__: the package shall be licensed under an appropriate "
"[open-source license](https://opensource.org/licenses) with the license "
"file clearly included with the source code"
msgstr ""

#: ../../source/community/packages.md:24
msgid ""
"__Uniqueness__: the package shall not be a fork or minor revision of "
"existing packages"
msgstr ""

#: ../../source/community/packages.md:26
msgid ""
"__README__: the package shall have some form of README or landing-page "
"clearly stating the package purpose and functionality. This should also "
"contain information on the package dependencies and the steps required to"
" build and run."
msgstr ""

#: ../../source/community/packages.md:29
msgid "The following criteria are not required but are recommended:"
msgstr ""

#: ../../source/community/packages.md:31
msgid ""
"__Documentation__: any form of written documentation aimed at users of "
"the package. Ideally this should cover:"
msgstr ""

#: ../../source/community/packages.md:33
msgid "Supported / tested compilers"
msgstr ""

#: ../../source/community/packages.md:34
msgid "Dependencies"
msgstr "Dependências"

#: ../../source/community/packages.md:35
msgid "Build and install process"
msgstr ""

#: ../../source/community/packages.md:36
msgid "Modules contained within the package"
msgstr ""

#: ../../source/community/packages.md:37
msgid "Procedures made available and their interfaces"
msgstr ""

#: ../../source/community/packages.md:38
msgid "Example code"
msgstr ""

#: ../../source/community/packages.md:40
msgid ""
"__Contributing__: details on how users may submit issues and contribute "
"to the development of the package"
msgstr ""

#: ../../source/community/packages.md:43
msgid ""
"__Tests__: any form of executable test(s) that can be used to verify the "
"functionality of the package"
msgstr ""

#: ../../source/community/packages.md:45
msgid ""
"__Portability__: no non-standard language extensions or proprietary "
"dependencies"
msgstr ""

#: ../../source/community/packages.md:47
msgid ""
"__FPM__: support installation by the Fortran Package Manager "
"[fpm](https://github.com/fortran-lang/fpm)"
msgstr ""

#: ../../source/community/packages.md:50
msgid "Process for adding packages"
msgstr ""

#: ../../source/community/packages.md:52
msgid ""
"Users should confirm that their project meets the minimum requirements "
"for listing in the  Fortran-lang package index, as written in this "
"document"
msgstr ""

#: ../../source/community/packages.md:55
msgid ""
"Users should open a pull request using the 'Package index request' "
"template"
msgstr ""

#: ../../source/community/packages.md:57
msgid ""
"At least three Fortran-lang community members shall review the request "
"against the criteria above"
msgstr ""

#: ../../source/community/packages.md:59
msgid ""
"If three or more Fortran-lang community members agree that the package "
"should be listed and there is no significant objection, then the pull "
"request will be merged"
msgstr ""

#: ../../source/community/packages.md:62
msgid "Package index requests"
msgstr ""

#: ../../source/community/packages.md:64
msgid ""
"Package index requests are made by pull requests against the [fortran-"
"lang.org repository](https://github.com/fortran-lang/webpage/). See [this"
" guide](https://guides.github.com/activities/forking/) for guidance on "
"forking and making pull requests."
msgstr ""

#: ../../source/community/packages.md:67
msgid "Package details are listed in the `_data/package_index.yml` data file."
msgstr ""

#: ../../source/community/packages.md:69
msgid ""
"To add a package simply create a new entry within this file. The data "
"file is ordered by high-level categories merely to aid in navigation; "
"find the appropriate category for your package and create a new entry."
msgstr ""

#: ../../source/community/packages.md:73
msgid "Github hosted packages"
msgstr ""

#: ../../source/community/packages.md:85
msgid "Valid categories:"
msgstr ""

#: ../../source/community/packages.md:86
msgid "`libraries`: general libraries"
msgstr ""

#: ../../source/community/packages.md:87
msgid ""
"`interfaces`: libraries that provide interfaces to other libraries, "
"software or devices"
msgstr ""

#: ../../source/community/packages.md:88
msgid ""
"`programming`: general programming utilities: errors, logging, testing, "
"documentation _etc._"
msgstr ""

#: ../../source/community/packages.md:89
msgid ""
"`data-types`: libraries providing advanced data types: containers, "
"datetime, resizable arrays _etc._"
msgstr ""

#: ../../source/community/packages.md:90
msgid "`strings`: string handling libraries"
msgstr ""

#: ../../source/community/packages.md:91
msgid "`io`: libraries that parse and generate various file formats"
msgstr ""

#: ../../source/community/packages.md:92
msgid "`graphics`: plotting and GUIs"
msgstr ""

#: ../../source/community/packages.md:93
msgid ""
"`numerical`: matrices, linear algebra, solvers, root-finding, "
"interpolation, optimization, differential eqns, statistics, machine "
"learning, random numbers _etc._"
msgstr ""

#: ../../source/community/packages.md:94
msgid "`scientific`: domain-specific scientific libraries or applications"
msgstr ""

#: ../../source/community/packages.md:95
msgid ""
"`examples`: repositories offering language feature demonstrations, "
"tutorials and benchmarks"
msgstr ""

#: ../../source/community/packages.md:97
msgid ""
"__Projects listing more than one category must provide good justification"
" thereof in the pull request.__"
msgstr ""

#: ../../source/community/packages.md:99 ../../source/community/packages.md:127
msgid "__Notes:__"
msgstr "__Notas:__"

#: ../../source/community/packages.md:101
msgid ""
"The package description should clearly describe the functionality of the "
"package in a single sentence."
msgstr ""

#: ../../source/community/packages.md:103
msgid ""
"Tags (optional) should contain any terms not already contained in the "
"name or description that users may search directly for. Tags should be "
"separate by spaces."
msgstr ""

#: ../../source/community/packages.md:105
msgid "Package version"
msgstr ""

#: ../../source/community/packages.md:106
msgid ""
"this can be determined automatically if a versioned release has been "
"created on github"
msgstr ""

#: ../../source/community/packages.md:107
msgid "if version is specified, it will override any detected github version"
msgstr ""

#: ../../source/community/packages.md:108
msgid ""
"if version is 'none', then no version information will be displayed. (Use"
" this if your package has no version.)"
msgstr ""

#: ../../source/community/packages.md:111
msgid "Package license"
msgstr ""

#: ../../source/community/packages.md:112
msgid ""
"this can be determined automatically if github is able to detect a known "
"license"
msgstr ""

#: ../../source/community/packages.md:113
msgid "license must be specified if github is unable to detect a known license"
msgstr ""

#: ../../source/community/packages.md:115
msgid "Non-github hosted packages"
msgstr ""

#: ../../source/community/packages.md:129
msgid ""
"License and version information cannot be detected automatically for non-"
"github repositories"
msgstr ""

#: ../../source/community/packages.md:130
msgid "if your package has no version, then omit the version field"
msgstr ""

#: ../../source/community/packages.md:131
msgid "a license must be specified for non-github repositories"
msgstr ""

#: ../../source/community/packages.md:134
msgid "Member review checklist"
msgstr ""

#: ../../source/community/packages.md:136
msgid "Community members reviewing packages should cover the following points:"
msgstr ""

#: ../../source/community/packages.md:138
msgid "Ensure the package meets the minimum criteria as written in this document"
msgstr ""

#: ../../source/community/packages.md:140
msgid "Check the package metadata"
msgstr ""

#: ../../source/community/packages.md:141
msgid "Repository exists and is accessible"
msgstr ""

#: ../../source/community/packages.md:142
msgid "Description clearly and concisely describes the package"
msgstr ""

#: ../../source/community/packages.md:143
msgid "Assigned category is appropriate"
msgstr ""

#: ../../source/community/packages.md:145
msgid "Check license information"
msgstr ""

#: ../../source/community/packages.md:146
msgid ""
"If license field has been omitted: check that github has detected the "
"license"
msgstr ""

#: ../../source/community/packages.md:147
msgid ""
"If license field is included: check that it matches repository license "
"file"
msgstr ""

#: ../../source/community/packages.md:149
msgid "After merge:"
msgstr ""

#: ../../source/community/packages.md:150
msgid "Check that package is available in expected category and search"
msgstr ""

#: ../../source/compilers.md:8
#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:70
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:102
#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:99
#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:106
#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:184
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:132
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:125
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:166
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:147
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:129
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:163
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:178
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:176
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:215
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:144
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:159
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:171
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:149
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:130
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:142
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:160
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:145
msgid "Compilers"
msgstr "Compiladores"

#: ../../source/compilers.md:14
msgid ""
"[GNU Fortran Compiler (gfortran)](https://gcc.gnu.org/fortran/) is a "
"mature free and open source compiler, part of the GNU Compiler "
"Collection."
msgstr ""

#: ../../source/compilers.md:17
msgid ""
"[OpenCoarrays](http://www.opencoarrays.org/) is a library and compiler "
"wrapper around gfortran which enables the parallel programming features "
"of Fortran 2018 with gfortran."
msgstr ""

#: ../../source/compilers.md:23
msgid ""
"[Flang](https://github.com/llvm/llvm-project/tree/main/flang) is a new "
"front-end for Fortran 2018 that has been recently added to LLVM. It is "
"implemented in modern C++ and uses a Fortran-oriented MLIR dialect for "
"lowering to LLVM IR. This project is under active development."
msgstr ""

#: ../../source/compilers.md:32
msgid ""
"[Flang](https://github.com/flang-compiler/flang) is an open source "
"compiler based on the NVIDIA/PGI commercial compiler."
msgstr ""

#: ../../source/compilers.md:38
msgid ""
"[LFortran](https://lfortran.org) is a modern, interactive, LLVM-based "
"Fortran compiler."
msgstr ""

#: ../../source/compilers.md:46
msgid ""
"[Intel "
"oneAPI](https://software.intel.com/content/www/us/en/develop/tools/oneapi"
"/all-toolkits.html) is Intel's suite of compilers, tools, and libraries "
"for Fortran, C, C++, and Python. Intel oneAPI HPC Toolkit provides [two "
"Fortran "
"compilers](https://software.intel.com/content/www/us/en/develop/articles"
"/intel-oneapi-fortran-compiler-release-notes.html):"
msgstr ""

#: ../../source/compilers.md:51
msgid ""
"Intel Fortran Compiler Classic (`ifort`), a mature compiler with full "
"Fortran 2018 support; and"
msgstr ""

#: ../../source/compilers.md:53
msgid ""
"Intel Fortran Compiler Beta (`ifx`), a new, LLVM-based compiler that "
"supports Fortran 95 and partially newer versions of the standard."
msgstr ""

#: ../../source/compilers.md:56
msgid ""
"Intel oneAPI is available for free. Currently the compiler supports "
"Linux, MacOS and Windows platforms and x86\\_64 architectures. Community "
"support is available for the free version at the [Intel Developer "
"forum](https://community.intel.com/t5/Intel-Fortran-Compiler/bd-p"
"/fortran-compiler)."
msgstr ""

#: ../../source/compilers.md:63
msgid ""
"The latest [NAG Fortran Compiler](https://www.nag.com/nag-compiler) "
"release (7.0) has extensive support for legacy and modern Fortran "
"features including parallel programming with coarrays, as well as "
"additional support for programming with OpenMP."
msgstr ""

#: ../../source/compilers.md:66
msgid ""
"The Compiler also provides significant support for Fortran 2018 (atomic "
"operations, events and tasks, plus other smaller features), almost all of"
" Fortran 2008, complete coverage of Fortran 2003, and all of OpenMP 3.1. "
"All platforms include supporting tools for software development: source "
"file polishers, dependency generator for module and include files, call-"
"graph generator, interface builder and a precision unifier."
msgstr ""

#: ../../source/compilers.md:75
msgid ""
"The [NVIDIA HPC SDK](https://developer.nvidia.com/hpc-sdk) C, C++, and "
"Fortran compilers, former [PGI "
"compilers](https://www.pgroup.com/products/index.htm), support GPU "
"acceleration of HPC modeling and simulation applications with standard "
"C++ and Fortran, OpenACC® directives, and CUDA®. GPU-accelerated math "
"libraries maximize performance on common HPC algorithms, and optimized "
"communications libraries enable standards-based multi-GPU and scalable "
"systems programming."
msgstr ""

#: ../../source/compilers.md:77
msgid ""
"NVHPC compilers are available free of charge. Currently the compiler "
"supports Linux platforms and x86\\_64, ppc64le and aarch64 architectures."
" Community support is available at the [HPC compiler "
"forum](https://forums.developer.nvidia.com/c/accelerated-computing/hpc-"
"compilers/nvc-nvc-and-nvfortran/313)."
msgstr ""

#: ../../source/compilers.md:84
msgid ""
"The [Cray Compiling Environment "
"(CCE)](https://www.cray.com/sites/default/files/SB-Cray-Programming-"
"Environment.pdf) is the cornerstone innovation of Cray's adaptive "
"computing paradigm. CCE builds on a well-developed and sophisticated Cray"
" technology base that identifies regions of computation that are either "
"sequential scalar, vector parallel or highly multithreaded. It includes "
"optimizing compilers that automatically exploit the scalar, vector and "
"multithreading hardware capabilities of the Cray system. CCE supports "
"Fortran, C and C++."
msgstr ""

#: ../../source/compilers.md:94
msgid ""
"[IBM® XL Fortran](https://www.ibm.com/us-en/marketplace/xl-fortran-linux-"
"compiler-power) for Linux is an industry standards-based programming tool"
" used to develop large and complex applications in the Fortran "
"programming language. It generates code that leverages the capabilities "
"of the latest POWER9 architecture and maximizes your hardware "
"utilization. IBM XL Fortran for Linux optimizes your infrastructure on "
"IBM Power Systems™ in support of extensive numerical, scientific and "
"high-performance computing."
msgstr ""

#: ../../source/compilers.md:102
msgid ""
"A community edition of the IBM XL compilers are available free of charge."
" The compilers support Linux and AIX platforms and ppc64le architectures."
msgstr ""

#: ../../source/compilers.md:108
msgid ""
"The [AMD Optimizing C/C++ Compiler (AOCC)](https://developer.amd.com/amd-"
"aocc/) compiler system is a high performance, production quality code "
"generation tool. The AOCC environment provides various options to "
"developers when building and optimizing C, C++, and Fortran applications "
"targeting 32-bit and 64-bit Linux® platforms. The AOCC compiler system "
"offers a high level of advanced optimizations, multi-threading and "
"processor support that includes global optimization, vectorization, "
"inter-procedural analyses, loop transformations, and code generation. AMD"
" also provides highly optimized libraries, which extract the optimal "
"performance from each x86 processor core when utilized. The AOCC Compiler"
" Suite simplifies and accelerates development and tuning for x86 "
"applications."
msgstr ""

#: ../../source/compilers.md:120
msgid ""
"The AOCC compilers are available free of charge and support Linux "
"platforms with x86\\_64 architectures."
msgstr ""

#: ../../source/compilers.md:125
msgid ""
"[Linux user-space Fortran compiler](https://developer.arm.com/tools-and-"
"software/server-and-hpc/compile/arm-compiler-for-linux/arm-fortran-"
"compiler). Tailored for HPC and scientific codes, with support for "
"popular Fortran and OpenMP standards and tuned for leading server-class "
"Arm-based platforms. Built on the open source Flang front-end, and the "
"LLVM‑based optimization and code generation back-end. Available as part "
"of the Arm Compiler for Linux package."
msgstr ""

#: ../../source/compilers.md:133
msgid ""
"[Absoft compilers](https://www.absoft.com/products/) include Pro Fortran "
"delivering Absoft’s exclusive AP load balancing, AVX, OpenMP 3.1, "
"extended Fortran 95 compiler with F2003 and F2008 features, FX3 graphical"
" debugger, native tool suite integration, AMDAL HPC scientific and "
"engineering library, and more. Pro Fortran includes Fast Data "
"Visualization, an Absoft exclusive technology for graphical rendering and"
" data output."
msgstr ""

#: ../../source/compilers.md:142
msgid ""
"[Oracle C, C++, Fortran Compiler](https://www.oracle.com/application-"
"development/technologies/developerstudio-features.html) is highly "
"optimized for Oracle systems, on-premise and in the cloud"
msgstr ""

#: ../../source/compilers.md:145
msgid ""
"Advanced code generation technology for the latest Oracle SPARC and x86 "
"based systems"
msgstr ""

#: ../../source/compilers.md:146
msgid ""
"Support for the latest industry standards, including C++14, C++11, C11 "
"and OpenMP 4.0 and extensive GCC compatibility features"
msgstr ""

#: ../../source/compilers.md:147
msgid ""
"Automatic code analysis during compilation and automatic stack overflow "
"protection at application runtime"
msgstr ""

#: ../../source/compilers.md:152
msgid ""
"LF Professional v7.8 combines the 32/64-bit LGF Rainier compiler with the"
" classic [Lahey/Fujitsu LF95](https://lahey.com/) compiler. LGF Rainier "
"has full Fortran 95/90/77 compliance with extensive support for the "
"Fortran 2003 and 2008 standards. Lahey/Fujitsu LF95 offers best in class "
"diagnostics. Includes the automatic-parallelizing GFortran compiler, "
"Lahey/Fujitsu Fortran 95 compiler, Visual Studio Fortran support, "
"Winteracter WiSK Graphics package, and more."
msgstr ""

#: ../../source/compilers.md:161
msgid ""
"[Silverfrost FTN95](https://www.silverfrost.com/) is a full Fortran 95 "
"standards compliant compiler, capable of producing fast executables for "
"Win32 and for Microsoft .NET. FTN95 ships with the world's best runtime "
"checking and a great range of supporting software. All standard and many "
"vendor-specific legacy language features are supported, so that Fortran "
"projects may be any combination of Fortran 77, Fortran 90 and Fortran 95."
" Some features of Fortran 2003 and 2008 have been "
"[added](https://www.silverfrost.com/19/ftn95/support/ftn95_revision_history.aspx)."
" Silverfrost Fortran runs on Windows / x86_64. There is a free personal "
"edition."
msgstr ""

#: ../../source/compilers.md:173
msgid ""
"[The Fortran "
"compiler](https://www.nec.com/en/global/solutions/hpc/sx/tools.html) "
"conforms to the Fortran-2003 standard (ISO/IEC 1539-1:2004) and supports "
"many features from Fortran-2008 (ISO/IEC 1539-1:2010)."
msgstr ""

#: ../../source/compilers.md:179
msgid ""
"[MCST C, C++, Fortran Compiler](http://mcst.ru/lcc) with full support of "
"Fortran-95 (ISO/IEC 1539:1997) and partial support of Fortran-2003 "
"(ISO/IEC 1539:2004), Fortran-2008 (ISO/IEC 1539:2010) and Fortran-2018 "
"(ISO/IEC 1539:2018). Used for russian processor architectures Elbrus "
"(e2k) and SPARC (MCST-R), also a cross-compiler for x86_64 architecture "
"is available."
msgstr ""

#: ../../source/compilers.md:187
msgid ""
"The following is a list of Fortran compilers that seem discontinued, so "
"we do not list them above:"
msgstr ""

#: ../../source/compilers.md:190
msgid "Apogee"
msgstr "Apogee"

#: ../../source/compilers.md:191
msgid "Edinburgh Portable Compilers"
msgstr ""

#: ../../source/compilers.md:192
msgid "Hewlett Packard"
msgstr ""

#: ../../source/compilers.md:193
msgid "Watcom"
msgstr "Watcom"

#: ../../source/compilers.md:194
msgid "PathScale"
msgstr "PathScale"

#: ../../source/compilers.md:195
msgid "G95"
msgstr "G95"

#: ../../source/compilers.md:196
msgid "Open64"
msgstr "Open64"

#: ../../source/compilers.md:197
msgid "Unisys"
msgstr ""

#: ../../source/compilers.md:201
msgid ""
"Please let us know if there is any compiler that is not listed, or if we "
"listed a compiler in the Discontinued section and it is in fact actively "
"maintained."
msgstr ""

#: ../../source/index.md:5
msgid "The Fortran Programming Language"
msgstr ""

#: ../../source/index.md:8
msgid "High-performance parallel programming language"
msgstr ""

#: ../../source/index.md:12
msgid "{bdg-link-primary}`Get started <learn/>`"
msgstr ""

#: ../../source/index.md:16
msgid "Features"
msgstr "Recursos"

#: ../../source/index.md:20
msgid "High performance"
msgstr ""

#: ../../source/index.md:23
msgid ""
"Fortran has been designed from the ground up for computationally "
"intensive applications in science and engineering. Mature and battle-"
"tested compilers and libraries allow you to write code that runs close to"
" the metal, fast."
msgstr ""

#: ../../source/index.md:26
msgid "Statically and strongly typed"
msgstr ""

#: ../../source/index.md:29
msgid ""
"Fortran is statically and strongly typed, which allows the compiler to "
"catch many programming errors early on for you. This also allows the "
"compiler to generate efficient binary code."
msgstr ""

#: ../../source/index.md:32
msgid "Easy to learn and use"
msgstr ""

#: ../../source/index.md:35
msgid ""
"Fortran is a relatively small language that is surprisingly easy to learn"
" and use. Expressing most mathematical and arithmetic operations over "
"large arrays is as simple as writing them as equations on a whiteboard."
msgstr ""

#: ../../source/index.md:38
msgid "Versatile"
msgstr "Versátil"

#: ../../source/index.md:41
msgid ""
"Fortran allows you to write code in a style that best fits your problem: "
"imperative, procedural, array-oriented, object-oriented, or functional."
msgstr ""

#: ../../source/index.md:44
msgid "Natively parallel"
msgstr ""

#: ../../source/index.md:47
msgid ""
"Fortran is a natively parallel programming language with intuitive array-"
"like syntax to communicate data between CPUs. You can run almost the same"
" code on a single CPU, on a shared-memory multicore system, or on a "
"distributed-memory HPC or cloud-based system. Coarrays, teams, events, "
"and collective subroutines allow you to express different parallel "
"programming patterns that best fit your problem at hand."
msgstr ""

#: ../../source/index.md:50
msgid "FAQ"
msgstr "Perguntas Frequentes"

#: ../../source/index.md:54
msgid "What is the status of Fortran?"
msgstr ""

#: ../../source/index.md:57
msgid ""
"Fortran is still in active development. The latest revision of the "
"language is"
msgstr ""

#: ../../source/index.md:59
msgid ""
"[Fortran "
"2018](https://isotc.iso.org/livelink/livelink?func=ll&objId=19441669&objAction=Open),and"
" the next one, with the working title Fortran 202x, is planned for "
"release in the next few years. Further, open source projects like the "
"[Standard Library](https://github.com/fortran-lang/stdlib) and the "
"[Fortran Package Manager](https://github.com/fortran-lang/fpm) are in "
"active development."
msgstr ""

#: ../../source/index.md:62
msgid "What is Fortran used for?"
msgstr ""

#: ../../source/index.md:65
msgid ""
"Fortran is mostly used in domains that adopted computation early--science"
" and engineering. These include numerical weather and ocean prediction, "
"computational fluid dynamics, applied math, statistics, and finance. "
"Fortran is the dominant language of High Performance Computing and is "
"used to [benchmark the fastest supercomputers in the "
"world](https://top500.org/)."
msgstr ""

#: ../../source/index.md:68
msgid "Should I use Fortran for my new project?"
msgstr ""

#: ../../source/index.md:71
msgid ""
"If you're writing a program or a library to perform fast arithmetic "
"computation over large numeric arrays, Fortran is the optimal tool for "
"the job."
msgstr ""

#: ../../source/index.md:100
msgid "Make Fortran better"
msgstr ""

#: ../../source/index.md:110
msgid "Write proposals"
msgstr ""

#: ../../source/index.md:113
msgid ""
"Have an idea about how to improve the language? You can write new "
"proposals or contribute to existing proposals to the Fortran Standard "
"Committee on  [GitHub](https://github.com/j3-fortran/fortran_proposals)."
msgstr ""

#: ../../source/index.md:121
msgid "Develop tools"
msgstr ""

#: ../../source/index.md:124
msgid ""
"You can also help make Fortran better by contributing to its suite of "
"tools, such as  [Standard Library](https://github.com/fortran-"
"lang/stdlib) ,[Package Manager](https://github.com/fortran-lang/fpm) "
",[this website](https://github.com/fortran-lang/webpage)."
msgstr ""

#: ../../source/index.md:136
msgid "Write Fortran software"
msgstr ""

#: ../../source/index.md:139
msgid ""
"Or just write Fortran software for your research, business, or "
"schoolwork. You can learn how to [get started here.](learn)."
msgstr ""

#: ../../source/learn.md:5
msgid "Learn"
msgstr "Aprenda"

#: ../../source/learn.md:8
msgid "Learn Fortran"
msgstr ""

#: ../../source/learn.md:12
msgid "Learning resources for beginners and experts alike"
msgstr ""

#: ../../source/learn.md:16
msgid "Getting Started"
msgstr ""

#: ../../source/learn.md:30
msgid ""
"Try the quickstart Fortran tutorial, to get an overview of the language "
"syntax and capabilities."
msgstr ""

#: ../../source/learn.md:32
msgid ""
"<svg version=\"1.1\" width=\"1.0em\" height=\"1.0em\" class=\"sd-octicon "
"sd-octicon-book sd-text-info\" viewBox=\"0 0 16 16\" aria-"
"hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M0 1.75A.75.75 0 01.75 "
"1h4.253c1.227 0 2.317.59 3 1.501A3.744 3.744 0 0111.006 1h4.245a.75.75 0 "
"01.75.75v10.5a.75.75 0 01-.75.75h-4.507a2.25 2.25 0 "
"00-1.591.659l-.622.621a.75.75 0 01-1.06 0l-.622-.621A2.25 2.25 0 005.258 "
"13H.75a.75.75 0 01-.75-.75V1.75zm8.755 3a2.25 2.25 0 "
"012.25-2.25H14.5v9h-3.757c-.71 0-1.4.201-1.992.572l.004-7.322zm-1.504 "
"7.324l.004-5.073-.002-2.253A2.25 2.25 0 005.003 2.5H1.5v9h3.757a3.75 3.75"
" 0 011.994.574z\"></path></svg> Quickstart tutorial"
msgstr ""

#: ../../source/learn.md:50
msgid ""
"Ask a question in the Fortran-lang discourse - a forum for friendly "
"discussion of all things Fortran."
msgstr ""

#: ../../source/learn.md:52
msgid ""
"<svg version=\"1.1\" width=\"1.0em\" height=\"1.0em\" class=\"sd-octicon "
"sd-octicon-check-circle sd-text-info\" viewBox=\"0 0 16 16\" aria-"
"hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M1.5 8a6.5 6.5 0 1113 0 "
"6.5 6.5 0 01-13 0zM0 8a8 8 0 1116 0A8 8 0 010 8zm11.78-1.72a.75.75 0 "
"00-1.06-1.06L6.75 9.19 5.28 7.72a.75.75 0 00-1.06 1.06l2 2a.75.75 0 "
"001.06 0l4.5-4.5z\"></path></svg> Fortran-lang Discourse"
msgstr ""

#: ../../source/learn.md:66
msgid "Mini-book Tutorials"
msgstr ""

#: ../../source/learn.md:73
#: ../../source/learn/building_programs/project_make.md:32
msgid "Getting started"
msgstr ""

#: ../../source/learn.md:87
msgid ""
"{octicon}``book;1em;sd-text-info`` <a "
"href='../learn/quickstart/'>Quickstart Fortran Tutorial</a>"
msgstr ""

#: ../../source/learn.md:89
msgid "An introduction to the Fortran syntax and its capabilities"
msgstr ""

#: ../../source/learn.md:101
msgid ""
"{octicon}``book;1em;sd-text-info`` <a "
"href='../learn/building_programs/'>Building programs</a>"
msgstr ""

#: ../../source/learn.md:103
msgid "How to use the compiler to build an executable program"
msgstr ""

#: ../../source/learn.md:115
msgid ""
"{octicon}``book;1em;sd-text-info`` <a href='../learn/os_setup/'>Setting "
"up your OS</a>"
msgstr ""

#: ../../source/learn.md:117
msgid ""
"How to install a Fortran compiler and set up a development environment in"
" Windows, Linux and macOS."
msgstr ""

#: ../../source/learn.md:129
msgid ""
"{octicon}``book;1em;sd-text-info`` <a "
"href='../learn/best_practices/'>Fortran Best Practices</a>"
msgstr ""

#: ../../source/learn.md:131
msgid "This tutorial collects a modern canonical way of doing things in Fortran."
msgstr ""

#: ../../source/learn.md:140
msgid "Fortran Documentation"
msgstr ""

#: ../../source/learn.md:162
msgid ""
"{octicon}``book;1em;sd-text-info`` <a href='../learn/intrinsics/'>Fortran"
" Intrinsics</a>"
msgstr ""

#: ../../source/learn.md:164
msgid "man-pages for the Fortran Intrinsics"
msgstr ""

#: ../../source/learn.md:172
msgid "Other Resources"
msgstr ""

#: ../../source/learn.md:177
msgid "On the web"
msgstr ""

#: ../../source/learn.md:183
msgid ""
"[Fortran wiki](http://fortranwiki.org/) A rich collection of Fortran "
"articles and resources in an editable wiki format"
msgstr ""

#: ../../source/learn.md:187
msgid ""
"[Fortran 90 org](https://www.fortran90.org/) Fortran Best Practices "
"guide, Python/Fortran Rosetta Stone, Fortran FAQ"
msgstr ""

#: ../../source/learn.md:191
msgid ""
"[Fortran 2018 Standard Interpretation "
"Document](https://j3-fortran.org/doc/year/18/18-007r1.pdf) J3/18-007r1 "
"F2018, specification of the base Fortran 2018 language"
msgstr ""

#: ../../source/learn.md:195
msgid ""
"[J3 Fortran Proposals](https://github.com/j3-fortran/fortran_proposals) a"
" repository for community collaboration on proposals for the Fortran "
"Standards Committee"
msgstr ""

#: ../../source/learn.md:199
msgid ""
"[J3: US Fortran Standards Committee](https://j3-fortran.org/) J3 is the "
"US National Body for the international Fortran standards committee"
msgstr ""

#: ../../source/learn.md:203
msgid ""
"[WG5: International Fortran Standards "
"Committee](https://wg5-fortran.org/) None"
msgstr ""

#: ../../source/learn.md:207
msgid ""
"[Scivision Fortran 2018 "
"Examples](https://github.com/scivision/fortran2018-examples) A github "
"repository containing code samples for various Fortran 2018 features"
msgstr ""

#: ../../source/learn.md:211
msgid ""
"[Doctor Fortran Blog](https://stevelionel.com/drfortran) A collection of "
"posts on interesting or little-understood aspects of the Fortran language"
msgstr ""

#: ../../source/learn.md:221
msgid "Online Courses"
msgstr ""

#: ../../source/learn.md:228
msgid ""
"[Programming in "
"Fortran](https://doku.lrz.de/display/PUBLIC/Programming+with+Fortran) "
"course offered at the Leibniz-Rechenzentrum"
msgstr ""

#: ../../source/learn.md:232
msgid ""
"[PRACE Course: Fortran for Scientific "
"Computing](https://www.futurelearn.com/courses/fortran-for-scientific-"
"computing)"
msgstr ""

#: ../../source/learn.md:236
msgid ""
"[PRACE Course: Advanced Fortran "
"Topics](https://doku.lrz.de/display/PUBLIC/PRACE+Course%3A+Advanced+Fortran+Topics)"
msgstr ""

#: ../../source/learn.md:240
msgid ""
"[The 'F' Word - Programming in "
"Fortran](https://www.youtube.com/playlist?list=PLRO4xf5MdhAv9CNTETor75rANZtBqPVgQ)"
" modern Fortran for developing an extensible library that can be used to "
"solve conservation laws (PDEs) using spectral and spectral element "
"methods"
msgstr ""

#: ../../source/learn.md:244
msgid ""
"[Kursmaterial für Wissenschaftliches Programmieren (Modern Fortran, "
"2017)](https://www.bccms.uni-bremen.de/cms/people/b-aradi/wissen-progr"
"/modern-fortran/2017) from Bálint Aradi at Bremen Center for "
"Computational Materials Science (German)"
msgstr ""

#: ../../source/learn.md:248
msgid ""
"[Formations Fortran](http://www.idris.fr/formations/fortran/) Fortran "
"course from beginner to expert level (French)"
msgstr ""

#: ../../source/learn.md:252
msgid ""
"[Modern Fortran Programming for Chemists and "
"Physicists](http://www.chem.helsinki.fi/~manninen/fortran2014/) course by"
" Pekka Manninen from University of Helsinki (includes coarrays)"
msgstr ""

#: ../../source/learn.md:256
msgid ""
"[Expressing Object-Oriented Concepts in "
"Fortran90](http://www.cs.rpi.edu/~szymansk/OOF90/Forum.html)"
msgstr ""

#: ../../source/learn.md:260
msgid ""
"[Coarray tutorial](https://github.com/tkoenig1/coarray-"
"tutorial/blob/main/tutorial.md) by Thomas Koenig"
msgstr ""

#: ../../source/learn.md:264
msgid ""
"[Parallel Programming "
"Workshop](https://fs.hlrs.de/projects/par/par_prog_ws/) materials from "
"the High-Performance Computing Center in Stuttgart"
msgstr ""

#: ../../source/learn.md:268
msgid ""
"[Programming in Modern "
"Fortran](https://cyber.dabamos.de/programming/modernfortran/) by Philipp "
"Engel"
msgstr ""

#: ../../source/learn.md:272
msgid ""
"[2018 Workshop on Fortran Modernization for Scientific "
"Applications](https://tcevents.chem.uzh.ch/event/3/)"
msgstr ""

#: ../../source/learn.md:276
msgid ""
"[Introduction to Programming using Fortran "
"95/2003/2008](http://www.egr.unlv.edu/~ed/fortran.html)"
msgstr ""

#: ../../source/learn.md:280
msgid ""
"[Scientific Programing and Numerical "
"Computation](http://homepage.ntu.edu.tw/~wttsai/fortran/) course by Wu-"
"ting Tsai from National Taiwan University"
msgstr ""

#: ../../source/learn.md:284
msgid ""
"[Introduction to Modern Fortran](https://www-"
"uxsup.csx.cam.ac.uk/courses/moved.Fortran/) course given by Nick Maclaren"
" from the University of Cambridge Computing Service, derived from a "
"course by Steve Morgan from the University of Liverpool"
msgstr ""

#: ../../source/learn.md:288
msgid ""
"[User Notes on Fortran Programming "
"(UNFP)](http://www.ibiblio.org/pub/languages/fortran/unfp.html)"
msgstr ""

#: ../../source/learn.md:292
msgid ""
"[Designing and Building Parallel "
"Programs](https://www.mcs.anl.gov/~itf/dbpp/) by Ian Foster, contains "
"descriptions of several non-standard Fortran dialects like Fortran M and "
"High Performance Fortran)"
msgstr ""

#: ../../source/learn.md:296
msgid ""
"[Parallel programming with Fortran 2008 and 2018 "
"coarrays](https://coarrays.sourceforge.io/doc.html) course by Anton "
"Shterenlikht from the University of Bristol"
msgstr ""

#: ../../source/learn.md:300
msgid ""
"[Professional Programmer's Guide to "
"Fortran77](https://www.star.le.ac.uk/~cgp/prof77.html) by Clive G. Page, "
"University of Leicester, UK"
msgstr ""

#: ../../source/learn.md:304
msgid ""
"[Fortran90 for Fortran77 "
"Programmers](https://www.star.le.ac.uk/~cgp/f90course/f90.html) by Clive "
"G. Page"
msgstr ""

#: ../../source/learn.md:308
msgid ""
"[Introduction to Computer Programming Using Fortran "
"95](https://www.archer.ac.uk/training/course-"
"material/2014/08/F95_CCFE/Fortran95CourseNotes.pdf) training materials "
"from ARCHER, the UK National Supercomputing Service"
msgstr ""

#: ../../source/learn.md:312
msgid ""
"[Combining Object-Oriented Techniques with Co-arrays in Fortran "
"2008](https://www.ecmwf.int/sites/default/files/elibrary/2008/15361"
"-combining-object-oriented-techniques-co-arrays-fortran.pdf) by Robert W."
" Numrich"
msgstr ""

#: ../../source/learn.md:316
msgid ""
"[Parallel programming in Fortran with "
"Coarrays](ftp://ftp.numerical.rl.ac.uk/pub/talks/jkr.reading.5XI08.pdf) "
"by John Reid"
msgstr ""

#: ../../source/learn.md:320
msgid ""
"[Introduction to Co-Array "
"Fortran](https://faculty.csbsju.edu/mheroux/fall2011_csci317/NumrichCafTalk.pdf)"
" by Robert W. Numrich"
msgstr ""

#: ../../source/learn.md:324
msgid ""
"[Fortran 90 for the Fortran 77 "
"Programmer](https://www.nsc.liu.se/~boein/f77to90/f77to90.html) by Bo "
"Einarsson and Yurij Shokin"
msgstr ""

#: ../../source/learn.md:328
msgid ""
"[Fortran Tutorial](https://www.tat.physik.uni-"
"tuebingen.de/~kley/lehre/ftn77/tutorial/) older tutorial by Erik Boman, "
"Stanford University"
msgstr ""

#: ../../source/learn.md:332
msgid ""
"[Fortran 90 Tutorial](https://web.stanford.edu/class/me200c/tutorial_90/)"
" older tutorial by Paul Hargrove and Sarah Whitlock, Stanford University"
msgstr ""

#: ../../source/learn.md:336
#, python-format
msgid ""
"[Fortran 90 "
"Tutorial](https://pages.mtu.edu/%7eshene/COURSES/cs201/NOTES/fortran.html)"
" by C.-K. Shene, Michigan Technologial University"
msgstr ""

#: ../../source/learn.md:340
msgid ""
"[Exploring Modern Fortran Basics](https://www.manning.com/books"
"/exploring-modern-fortran-basics) by Milan Curcic, excerpt (Chapters 2, "
"3, and 4) from Modern Fortran - Building Efficient Parallel Applications"
msgstr ""

#: ../../source/learn.md:348
msgid "In print"
msgstr ""

#: ../../source/learn.md:354
msgid ""
"Ramkarthik, M. S., and Solanki, P. D. 2021 [Numerical Recipes in Quantum "
"Information Theory and Quantum Computing: An Adventure in FORTRAN "
"90](https://www.routledge.com/Numerical-Recipes-in-Quantum-Information-"
"Theory-and-Quantum-Computing-An/Ramkarthik-Solanki/p/book/9780367759285) "
"1st ed Boca Raton.  CRC Press"
msgstr ""

#: ../../source/learn.md:363
msgid ""
"Metcalf, M., Reid, J. and Cohen, M. 2018 [Modern Fortran "
"Explained](https://global.oup.com/academic/product/modern-fortran-"
"explained-9780198811893) 5th ed Oxford, UK.  Oxford University Press"
msgstr ""

#: ../../source/learn.md:372
msgid ""
"Curcic, M. 2020 [Modern Fortran: Building Efficient Parallel "
"Applications](https://www.manning.com/books/modern-fortran) 1st ed "
"Shelter Island, NY.  Manning Publications"
msgstr ""

#: ../../source/learn.md:381
msgid ""
"Fehr, H. and Kindermann, F. 2020 [Introduction to Computational Economics"
" Using Fortran](https://www.ce-fortran.com/) 1st ed Oxford, UK.  Oxford "
"University Press"
msgstr ""

#: ../../source/learn.md:390
msgid ""
"Markus, A. 2012 [Modern Fortran in "
"Practice](https://www.cambridge.org/core/books/modern-fortran-in-"
"practice/BC5BD23B2E478B4D457C5D6265BA9363) 1st ed Cambridge, UK.  "
"Cambridge University Press"
msgstr ""

#: ../../source/learn.md:399
msgid ""
"Chivers, I. and Sleightholme, J. 2018 [Introduction to Programming with "
"Fortran](https://doi.org/10.1007/978-3-319-75502-1) 4th ed .  Springer "
"International Publishing"
msgstr ""

#: ../../source/learn.md:408
msgid ""
"Chapman, S. J. 2018 [Fortran for Scientists and "
"Engineers](https://www.mheducation.com/highered/product/fortran-"
"scientists-engineers-chapman/M9780073385891.html) 4th ed New York.  "
"McGraw-Hill Education"
msgstr ""

#: ../../source/learn.md:417
msgid ""
"Ray, S. 2019 [Fortran 2018 with Parallel "
"Programming](https://www.routledge.com/Fortran-2018-with-Parallel-"
"Programming/Ray/p/book/9780367218430) 1st ed .  Chapman and Hall/CRC"
msgstr ""

#: ../../source/learn.md:426
msgid ""
"Brainerd, W. S. 2015 [Guide to Fortran 2008 "
"Programming](https://doi.org/10.1007/978-1-4471-6759-4) 1st ed London.  "
"Springer-Verlag"
msgstr ""

#: ../../source/learn.md:435
msgid ""
"Numrich, R. W. 2018 [Parallel Programming with Co-"
"arrays](https://doi.org/10.1201/9780429437182) 1st ed New York.  Chapman "
"and Hall/CRC"
msgstr ""

#: ../../source/learn.md:444
msgid ""
"Akin, E. 2003 [Object-Oriented Programming via Fortran "
"90/95](https://doi.org/10.1017/CBO9780511530111) 1st ed Cambridge.  "
"Cambridge University Press"
msgstr ""

#: ../../source/learn.md:453
msgid ""
"McCormack, D. 2009 [Scientific Software Development with "
"Fortran](https://www.lulu.com/en/gb/shop/drew-mccormack/scientific-"
"software-development-in-fortran/ebook/product-1gvmw8p6.html) 1st ed None."
"  Lulu Press"
msgstr ""

#: ../../source/learn.md:462
msgid ""
"Rouson, D., Xia, J., and Xiaofeng, X. 2014 [Scientific Software Design: "
"The Object-Oriented "
"Way](https://www.cambridge.org/gb/academic/subjects/engineering"
"/engineering-general-interest/scientific-software-design-object-oriented-"
"way) 2nd ed Cambridge.  Cambridge University Press"
msgstr ""

#: ../../source/learn.md:471
msgid ""
"Chirila, D. B., and Lohmann, G. 2015 [Introduction to Modern Fortran for "
"the Earth System Sciences](https://doi.org/10.1007/978-3-642-37009-0) 1st"
" ed Berlin.  Springer-Verlag"
msgstr ""

#: ../../source/learn.md:480
msgid ""
"Clerman, N. S. and Spector, W. 2011 [Modern Fortran: Style and "
"Usage](https://doi.org/10.1017/CBO9781139027687) 1st ed Cambridge.  "
"Cambridge University Press"
msgstr ""

#: ../../source/learn.md:489
msgid ""
"Hanson, R. J. and Hopkins, T. 2013 [Numerical Computing with Modern "
"Fortran](https://doi.org/10.1137/1.9781611973129.fm) 1st ed Philadelphia."
"  SIAM"
msgstr ""

#: ../../source/learn.md:498
msgid ""
"Oliveira, S. and Steward, D. 2006 [Writing Scientific Software: A Guide "
"to Good Style](https://www.cambridge.org/gb/academic/subjects/computer-"
"science/scientific-computing-scientific-software/writing-scientific-"
"software-guide-good-style) 1st ed Cambridge.  Cambridge University Press"
msgstr ""

#: ../../source/learn.md:507
msgid ""
"Kernighan, B. and Pike, R. 1999 [The Practice of "
"Programming](https://www.oreilly.com/library/view/the-practice-"
"of/9780133133448/) 1st ed Reading.  Addison-Wesley Professional"
msgstr ""

#: ../../source/learn/best_practices/allocatable_arrays.md:1
#: ../../source/learn/best_practices/index.md:11
msgid "Allocatable Arrays"
msgstr ""

#: ../../source/learn/best_practices/allocatable_arrays.md:3
msgid ""
"The ``allocatable`` attribute provides a safe way for memory handling. In"
" comparison to variables with ``pointer`` attribute the memory is managed"
" automatically and will be deallocated automatically once the variable "
"goes out-of-scope. Using ``allocatable`` variables removes the "
"possibility to create memory leaks in an application."
msgstr ""

#: ../../source/learn/best_practices/allocatable_arrays.md:9
msgid ""
"They can be used in subroutines to create scratch or work arrays, where "
"automatic arrays would become too large to fit on the stack."
msgstr ""

#: ../../source/learn/best_practices/allocatable_arrays.md:17
msgid ""
"The allocation status can be checked using the ``allocated`` intrinsic to"
" avoid uninitialized access"
msgstr ""

#: ../../source/learn/best_practices/allocatable_arrays.md:30
msgid ""
"To allocate variables inside a procedure the dummy argument has to carry "
"the ``allocatable`` attribute. Using it in combination with "
"``intent(out)`` will deallocate previous allocations before entering the "
"procedure:"
msgstr ""

#: ../../source/learn/best_practices/allocatable_arrays.md:41
msgid "The allocated array can be used afterwards like a normal array"
msgstr ""

#: ../../source/learn/best_practices/allocatable_arrays.md:48
msgid ""
"An already allocated array cannot be allocated again without prior "
"deallocation. Similarly, deallocation can only be invoked for allocated "
"arrays. To reallocate an array use"
msgstr ""

#: ../../source/learn/best_practices/allocatable_arrays.md:57
msgid ""
"Passing allocated arrays to procedures does not require the "
"``allocatable`` attribute for the dummy arguments anymore."
msgstr ""

#: ../../source/learn/best_practices/allocatable_arrays.md:80
msgid ""
"Passing an unallocated array in this context will lead to an invalid "
"memory access. Allocatable arrays can be passed to ``optional`` dummy "
"arguments -- if they are unallocated the argument will not be present. "
"The ``allocatable`` attribute is not limited to arrays and can also be "
"associated with scalars, which can be useful in combination with "
"``optional`` dummy arguments."
msgstr ""

#: ../../source/learn/best_practices/allocatable_arrays.md:86
msgid ""
"Allocations can be moved between different arrays with ``allocatable`` "
"attribute using the ``move_alloc`` intrinsic subroutine."
msgstr ""

#: ../../source/learn/best_practices/allocatable_arrays.md:118
msgid ""
"Finally, allocations do not initialize the array. The content of the "
"uninitialized array is most likely just the bytes of whatever was "
"previously at the respective address. The allocation supports "
"initialization using the source attribute:"
msgstr ""

#: ../../source/learn/best_practices/allocatable_arrays.md:127
msgid ""
"The ``source`` keyword supports scalar and array valued variables and "
"constants."
msgstr ""

#: ../../source/learn/best_practices/arrays.md:1
#: ../../source/learn/best_practices/index.md:11
msgid "Arrays"
msgstr "Arrays"

#: ../../source/learn/best_practices/arrays.md:3
msgid ""
"Arrays are a central object in Fortran. The creation of dynamic sized "
"arrays is discussed in the [allocatable arrays "
"section](./allocatable_arrays.html)."
msgstr ""

#: ../../source/learn/best_practices/arrays.md:6
msgid "To pass arrays to procedures four ways are available"
msgstr ""

#: ../../source/learn/best_practices/arrays.md:8
msgid "*assumed-shape* arrays"
msgstr ""

#: ../../source/learn/best_practices/arrays.md:9
msgid "*assumed-rank* arrays"
msgstr ""

#: ../../source/learn/best_practices/arrays.md:10
#: ../../source/learn/best_practices/element_operations.md:6
msgid "*explicit-shape* arrays"
msgstr ""

#: ../../source/learn/best_practices/arrays.md:11
msgid "*assumed-size* arrays"
msgstr ""

#: ../../source/learn/best_practices/arrays.md:13
msgid ""
"The preferred way to pass arrays to procedures is as *assumed-shape* "
"arrays"
msgstr ""

#: ../../source/learn/best_practices/arrays.md:26
msgid "Higher-dimensional arrays can be passed in a similar way."
msgstr ""

#: ../../source/learn/best_practices/arrays.md:35
msgid "The array is simply passed by"
msgstr ""

#: ../../source/learn/best_practices/arrays.md:42
msgid ""
"In this case no array copy is done, which has the advantage that the "
"shape and size information is automatically passed along and checked at "
"compile and optionally at runtime. Similarly, array strides can be passed"
" without requiring a copy of the array but as *assumed-shape* descriptor:"
msgstr ""

#: ../../source/learn/best_practices/arrays.md:54
msgid ""
"This should always be your default way of passing arrays in and out of "
"subroutines. Avoid passing arrays as whole slices, as it obfuscates the "
"actual intent of the code:"
msgstr ""

#: ../../source/learn/best_practices/arrays.md:62
msgid ""
"In case more general arrays should be passed to a procedure the *assumed-"
"rank* functionality introduced in the Fortran 2018 standard can be used"
msgstr ""

#: ../../source/learn/best_practices/arrays.md:77
msgid ""
"The actual rank can be queried at runtime using the ``select rank`` "
"construct. This easily allows to create more generic functions that have "
"to deal with different array ranks."
msgstr ""

#: ../../source/learn/best_practices/arrays.md:81
msgid ""
"*Explicit-shape* arrays can be useful for returning data from functions. "
"Most of their functionality can be provided by *assumed-shape* and "
"*assumed-rank* arrays but they find frequent use for interfacing with C "
"or in legacy Fortran procedures, therefore they will be discussed briefly"
" here."
msgstr ""

#: ../../source/learn/best_practices/arrays.md:86
msgid ""
"To use *explicit-shape* arrays, the dimension has to be passed explicitly"
" as dummy argument like in the example below"
msgstr ""

#: ../../source/learn/best_practices/arrays.md:100
msgid "For high-dimensional arrays additional indices have to be passed."
msgstr ""

#: ../../source/learn/best_practices/arrays.md:110
msgid "The routines can be invoked by"
msgstr ""

#: ../../source/learn/best_practices/arrays.md:118
msgid ""
"Note that the shape is not checked, so the following would be legal code "
"that will potentially yield incorrect results:"
msgstr ""

#: ../../source/learn/best_practices/arrays.md:127
msgid ""
"In this case the memory layout is preserved but the shape is changed. "
"Also, *explicit-shape* arrays require contiguous memory and will create "
"temporary arrays in case non-contiguous array strides are passed."
msgstr ""

#: ../../source/learn/best_practices/arrays.md:131
msgid "To return an array from a function with *explicit-shape* use"
msgstr ""

#: ../../source/learn/best_practices/arrays.md:144
msgid ""
"Finally, there are *assumed-size* arrays, which provide the least "
"compile-time and run-time checking and can be found frequently in legacy "
"code. They should be avoided in favour of *assumed-shape* or *assumed-"
"rank* arrays. An *assumed-size* array dummy argument is identified by an "
"asterisk as the last dimension, this disables the usage of this array "
"with many intrinsic functions, like ``size`` or ``shape``."
msgstr ""

#: ../../source/learn/best_practices/arrays.md:151
msgid ""
"To check for the correct size and shape of an *assumed-shape* array the "
"``size`` and ``shape`` intrinsic functions can be used to query for those"
" properties"
msgstr ""

#: ../../source/learn/best_practices/arrays.md:159
msgid ""
"Note that ``size`` returns the total size of all dimensions. To obtain "
"the shape of a specific dimension add it as second argument to the "
"function."
msgstr ""

#: ../../source/learn/best_practices/arrays.md:162
msgid "Arrays can be initialized by using an array constructor"
msgstr ""

#: ../../source/learn/best_practices/arrays.md:169
msgid ""
"The array constructor can be annotated with the type of the constructed "
"array"
msgstr ""

#: ../../source/learn/best_practices/arrays.md:176
msgid "Implicit do loops can be used inside an array constructor as well"
msgstr ""

#: ../../source/learn/best_practices/arrays.md:184
msgid "In order for the array to start with different index than 1, do:"
msgstr ""

#: ../../source/learn/best_practices/callbacks.md:1
#: ../../source/learn/best_practices/index.md:11
#, fuzzy
msgid "Callbacks"
msgstr "Callbacks"

#: ../../source/learn/best_practices/callbacks.md:3
msgid ""
"A callback is a function that is passed as an argument to another "
"function."
msgstr ""

#: ../../source/learn/best_practices/callbacks.md:5
msgid ""
"The preferred way of creating such a callback is to provide an *abstract "
"interface* declaring the signature of the callback. This allows to use "
"compile time checks for the passed callback."
msgstr ""

#: ../../source/learn/best_practices/callbacks.md:37
msgid ""
"The function can then be used with a callback by importing the module as "
"shown in the following example"
msgstr ""

#: ../../source/learn/best_practices/callbacks.md:66
msgid ""
"Exporting the abstract interface allows you to create procedure pointers "
"with the correct signature and also to extend the callback further as "
"shown here"
msgstr ""

#: ../../source/learn/best_practices/element_operations.md:1
msgid "Element-wise Operations on Arrays"
msgstr ""

#: ../../source/learn/best_practices/element_operations.md:3
msgid ""
"There are three approaches to perform element-wise operations on arrays "
"when using subroutines and functions:"
msgstr ""

#: ../../source/learn/best_practices/element_operations.md:5
msgid "`elemental` procedures"
msgstr ""

#: ../../source/learn/best_practices/element_operations.md:7
msgid ""
"implementing the operation for vectors and write simple wrapper "
"subroutines (that use `reshape` internally) for each array shape"
msgstr ""

#: ../../source/learn/best_practices/element_operations.md:10
msgid ""
"In the first approach, one uses the `elemental` keyword to create a "
"function like this:"
msgstr ""

#: ../../source/learn/best_practices/element_operations.md:21
msgid ""
"All arguments (in and out) must be scalars. You can then use this "
"function with arrays of any (compatible) shape, for example:"
msgstr ""

#: ../../source/learn/best_practices/element_operations.md:32
msgid "The output will be:"
msgstr ""

#: ../../source/learn/best_practices/element_operations.md:42
msgid ""
"In the above, typically `n` is a parameter and `x` is the array of an "
"arbitrary shape, but as you can see, Fortran does not care as long as the"
" final operation makes sense (if one argument is an array, then the other"
" arguments must be either arrays of the same shape or scalars). If it "
"does not, you will get a compiler error."
msgstr ""

#: ../../source/learn/best_practices/element_operations.md:48
msgid ""
"The `elemental` keyword implies the `pure` keyword, so the procedure must"
" be pure. It results that `elemental procedures` can only use `pure` "
"procedures and have no side effects."
msgstr ""

#: ../../source/learn/best_practices/element_operations.md:51
msgid ""
"If the elemental procedure algorithm can be made faster using array "
"operations inside, or if for some reasons the arguments must be arrays of"
" incompatible shapes, then one should use the other two approaches. One "
"can make `nroot` operate on a vector and write a simple wrapper for other"
" array shapes, e.g.:"
msgstr ""

#: ../../source/learn/best_practices/element_operations.md:82
msgid "And use as follows:"
msgstr ""

#: ../../source/learn/best_practices/element_operations.md:90
msgid "This will print:"
msgstr ""

#: ../../source/learn/best_practices/element_operations.md:98
msgid "Or one can use *explicit-shape* arrays as follows:"
msgstr ""

#: ../../source/learn/best_practices/element_operations.md:110
msgid "Use as follows:"
msgstr ""

#: ../../source/learn/best_practices/element_operations.md:118
msgid "The output is the same as before:"
msgstr ""

#: ../../source/learn/best_practices/file_io.md:1
#: ../../source/learn/best_practices/index.md:11
msgid "File Input/Output"
msgstr ""

#: ../../source/learn/best_practices/file_io.md:3
msgid ""
"In Fortran files are managed by unit identifiers. Interaction with the "
"filesystem mainly happens through the ``open`` and ``inquire`` built-in "
"procedures. Generally, the workflow is to open a file to a unit "
"identifier, read and/or write to it and close it again."
msgstr ""

#: ../../source/learn/best_practices/file_io.md:15
msgid ""
"By default the file will be created if it is not existing already and "
"opened for both reading and writing. Writing to an existing file will "
"start in the first record (line) and therefore overwrite the file by "
"default."
msgstr ""

#: ../../source/learn/best_practices/file_io.md:19
msgid ""
"To create a read-only access to a file the ``status`` and ``action`` have"
" to be specified with"
msgstr ""

#: ../../source/learn/best_practices/file_io.md:29
msgid ""
"In case the file is not present a runtime error will occur. To check for "
"the existence of a file prior to opening it the ``inquire`` function can "
"be used"
msgstr ""

#: ../../source/learn/best_practices/file_io.md:40
msgid ""
"Alternatively, the ``open`` procedure can return an optional *iostat* and"
" *iomsg*:"
msgstr ""

#: ../../source/learn/best_practices/file_io.md:52
msgid ""
"Note that *iomsg* requires a fixed-length character variable with "
"sufficient storage size to hold the error message."
msgstr ""

#: ../../source/learn/best_practices/file_io.md:55
msgid ""
"Similarly, writing to a file happens by using the *status* and *action* "
"keyword. To create a new file use"
msgstr ""

#: ../../source/learn/best_practices/file_io.md:65
msgid ""
"Alternatively, ``status=\"replace\"`` can be used to overwrite an "
"existing file. It is highly recommended to first check for the existence "
"of a file before deciding on the *status* to use. To append to an output "
"file the *position* keyword can be specified explicitly with"
msgstr ""

#: ../../source/learn/best_practices/file_io.md:79
msgid ""
"To reset the position in a file the built-in procedures ``rewind`` and "
"``backspace`` can be used. ``rewind`` will reset to the first record "
"(line), while ``backspace`` will return to the previous record (line)."
msgstr ""

#: ../../source/learn/best_practices/file_io.md:83
msgid ""
"Finally, to delete a file the file has to be opened and can be deleted "
"after closing with"
msgstr ""

#: ../../source/learn/best_practices/file_io.md:96
msgid ""
"A useful IO feature is scratch files, which can be opened with "
"``status=\"scratch\"``. They are automatically deleted after closing the "
"unit identifier."
msgstr ""

#: ../../source/learn/best_practices/floating_point.md:1
#: ../../source/learn/best_practices/index.md:11
msgid "Floating Point Numbers"
msgstr ""

#: ../../source/learn/best_practices/floating_point.md:3
msgid ""
"The default representation of floating point numbers is using single "
"precision (usually 32 bits / 4 bytes). For most applications a higher "
"precision is required. For this purpose a custom kind parameter can be "
"defined. The recommended way of defining kind parameters is to use"
msgstr ""

#: ../../source/learn/best_practices/floating_point.md:12
msgid ""
"For many purposes it also suffices to directly infer the kind parameter "
"from a literal like here"
msgstr ""

#: ../../source/learn/best_practices/floating_point.md:19
msgid ""
"or to rename the imported kind parameter from the ``iso_fortran_env`` "
"module"
msgstr ""

#: ../../source/learn/best_practices/floating_point.md:25
msgid ""
"For some insightful thoughts on kind parameters see <a "
"href=\"https://web.archive.org/web/20200930090137/https://stevelionel.com/drfortran/2017/03/27"
"/doctor-fortran-in-it-takes-all-kinds/\">Doctor Fortran in it takes all "
"KINDs</a>."
msgstr ""

#: ../../source/learn/best_practices/floating_point.md:28
msgid ""
"It is recommended to have a central module to define kind parameters and "
"include them with use as necessary. An example for such a module is given"
" with"
msgstr ""

#: ../../source/learn/best_practices/floating_point.md:56
msgid ""
"Floating point constants should always be declared including a kind "
"parameter suffix:"
msgstr ""

#: ../../source/learn/best_practices/floating_point.md:65
msgid ""
"It is safe to assign integers to floating point numbers without losing "
"accuracy:"
msgstr ""

#: ../../source/learn/best_practices/floating_point.md:72
msgid ""
"In order to impose floating point division (as opposed to integer "
"division `3/4` equal to `0`), one can convert the integer to a floating "
"point number by:"
msgstr ""

#: ../../source/learn/best_practices/floating_point.md:81
msgid "or simply separate the integer division with multiplication by `1.0_dp`"
msgstr ""

#: ../../source/learn/best_practices/floating_point.md:88
msgid ""
"To print floating point numbers without losing precision use the "
"unlimited format specifier ``(g0)`` or the exponential representation "
"``(es24.16e3)``, which will give you 17 significant digits of printout."
msgstr ""

#: ../../source/learn/best_practices/index.md:11
msgid "Element-wise Operations on Array"
msgstr ""

#: ../../source/learn/best_practices/index.md:11
#: ../../source/learn/best_practices/integer_division.md:1
msgid "Integer Division"
msgstr ""

#: ../../source/learn/best_practices/index.md:11
#: ../../source/learn/best_practices/modules_programs.md:1
msgid "Modules and Programs"
msgstr ""

#: ../../source/learn/best_practices/index.md:11
#: ../../source/learn/best_practices/multidim_arrays.md:1
msgid "Multidimensional Arrays"
msgstr ""

#: ../../source/learn/best_practices/index.md:11
#: ../../source/learn/best_practices/style_guide.md:1
msgid "Fortran Style Guide"
msgstr ""

#: ../../source/learn/best_practices/index.md:11
#: ../../source/learn/best_practices/type_casting.md:1
msgid "Type Casting in Callbacks"
msgstr ""

#: ../../source/learn/best_practices/index.md:3
msgid "Fortran Best Practices"
msgstr ""

#: ../../source/learn/best_practices/index.md:5
msgid ""
"This mini-book collects a modern canonical way of doing things in "
"Fortran. It serves as a style guide and best practice recommendation for "
"popular topics and common tasks. Generally, a canonical solution or "
"pattern is presented and discussed. It is meant for programmers with "
"basic familiarity of the Fortran syntax and programming in general."
msgstr ""

#: ../../source/learn/best_practices/integer_division.md:3
msgid ""
"Fortran distinguishes between floating point and integer arithmetic.  It "
"is important to note that division for integers is always using integer "
"arithmetic. Furthermore, while Fortran uses the standard order-of-"
"operations (e.g. multiplication and division preceed addition and "
"subtraction, in the absence of parenthesis), operations of the same "
"precedence are evaluated from left to right.  Consider the following "
"example for integer division of an odd number:"
msgstr ""

#: ../../source/learn/best_practices/integer_division.md:21
msgid ""
"Be careful about whether you want to actually use integer arithmetic in "
"this context. If you want to use floating point arithmetic instead make "
"sure to cast to reals before using the division operator, or separate the"
" integers by multiplying by `1.0_dp`:"
msgstr ""

#: ../../source/learn/best_practices/modules_programs.md:3
msgid ""
"Modules are the preferred way create modern Fortran libraries and "
"applications. As a convention, one source file should always contain only"
" one module, while the module name should match the filepath to allow "
"easy navigation in larger projects. It is also recommended to prefix "
"module names with the library name to avoid name clashes when used as "
"dependency in other projects."
msgstr ""

#: ../../source/learn/best_practices/modules_programs.md:9
msgid "An example for such a module file is given here"
msgstr ""

#: ../../source/learn/best_practices/modules_programs.md:45
msgid ""
"There are a few things in this example module to highlight. First, every "
"module starts with comments documenting the purpose and content of the "
"module. Similarly, every procedure starts with a comment briefly "
"describing its purpose and the intent of the dummy arguments. "
"Documentation is one of the most important parts of creating long-living "
"software, regardless of language."
msgstr ""

#: ../../source/learn/best_practices/modules_programs.md:51
msgid ""
"Second, imports (*use*) and exports (*public*) are explicitly given, this"
" allows on a glance at the module source to check the used and available "
"procedures, constants and derived types. The imports are usually limited "
"to the module scope rather than reimported in every procedure or "
"interface scope. Similarly, exports are made explicitly by adding a "
"*private* statement on a single line and explicitly listing all exported "
"symbols in *public* statements."
msgstr ""

#: ../../source/learn/best_practices/modules_programs.md:59
msgid ""
"Finally, the `implicit none` statement works for the whole module and "
"there is no need to repeat it within each procedure."
msgstr ""

#: ../../source/learn/best_practices/modules_programs.md:62
msgid ""
"Variables inside a module are static (*implicitly saved*). It is highly "
"recommended to limit the usage of module variables to constant "
"expressions, like parameters or enumerators only or export them as "
"*protected* rather than *public*."
msgstr ""

#: ../../source/learn/best_practices/modules_programs.md:67
msgid ""
"Submodules can be used to break long dependency chains and shorten "
"recompilation cascades in Fortran programs. They also offer the "
"possibility to provide specialized and optimized implementations without "
"requiring the use of preprocessor."
msgstr ""

#: ../../source/learn/best_practices/modules_programs.md:71
msgid ""
"An example from the Fortran standard library is the quadrature module, "
"which only defines interfaces to module procedures, but no "
"implementations"
msgstr ""

#: ../../source/learn/best_practices/modules_programs.md:104
msgid ""
"While the implementation is provided in separate submodules like the one "
"for the trapezoidal integration rule given here."
msgstr ""

#: ../../source/learn/best_practices/modules_programs.md:138
msgid ""
"Note that the module procedures do not have to be implemented in the same"
" submodule. Several submodules can be used to reduce the compilation load"
" for huge modules."
msgstr ""

#: ../../source/learn/best_practices/modules_programs.md:141
msgid ""
"Finally, when setting up a program, it is recommended to keep the actual "
"implementations in the program body at minimum. Reusing implementations "
"from modules allows you to write  reusable code and focus the program "
"unit on conveying user input to the respective library  functions and "
"objects."
msgstr ""

#: ../../source/learn/best_practices/multidim_arrays.md:3
msgid ""
"Multidimensional arrays are stored in column-major order. This means the "
"left-most (inner-most) index addresses elements contiguously. From a "
"practical point this means that the array slice ``V(:, 1)`` is "
"contiguous, while the stride between elements in the slice ``V(1, :)`` is"
" the dimension of the columns. This is important when passing array "
"slices to procedures which expect to work on contiguous data."
msgstr ""

#: ../../source/learn/best_practices/multidim_arrays.md:10
msgid ""
"The locality of the memory is important to consider depending on your "
"application, usually when performing operations on a multidimensional the"
" sequential access should always advance in unity strides."
msgstr ""

#: ../../source/learn/best_practices/multidim_arrays.md:14
msgid ""
"In the following example the inverse distance between two sets of points "
"is evaluated. Note that the points are stored contiguously in the arrays "
"``xyz1``/``xyz2``, while the inner-most loop is advancing the left-most "
"index of the matrix ``a``."
msgstr ""

#: ../../source/learn/best_practices/multidim_arrays.md:33
msgid ""
"Another example would be the contraction of the third dimension of a rank"
" three array:"
msgstr ""

#: ../../source/learn/best_practices/multidim_arrays.md:46
msgid ""
"Contiguous array slices can be used in array-bound remapping to allow "
"usage of higher rank arrays as lower rank arrays without requiring to "
"reshape and potentially create a temporary copy of the array."
msgstr ""

#: ../../source/learn/best_practices/multidim_arrays.md:50
msgid ""
"For example this can be used to contract the third dimension of a rank "
"three array using a matrix-vector operation:"
msgstr ""

#: ../../source/learn/best_practices/style_guide.md:3
msgid "Naming Convention"
msgstr ""

#: ../../source/learn/best_practices/style_guide.md:6
msgid ""
"Ultimately this is a matter of preference. Here is a style guide that we "
"like and that seems to be prevalent in most scientific codes (as well as "
"the Fortran standard library), and you are welcome to follow it."
msgstr ""

#: ../../source/learn/best_practices/style_guide.md:10
msgid ""
"Use lowercase for all Fortran constructs (`do`, `subroutine`, `module`, "
"...)."
msgstr ""

#: ../../source/learn/best_practices/style_guide.md:12
msgid ""
"Follow short mathematical notation for mathematical variables/functions "
"(`Ylm`, `Gamma`, `gamma`, `Enl`, `Rnl`, ...)."
msgstr ""

#: ../../source/learn/best_practices/style_guide.md:14
msgid ""
"For other names use all lowercase: try to keep names to one or two "
"syllables; if more are required, use underscores to clarify (`sortpair`, "
"`whitechar`, `meshexp`, `numstrings`, `linspace`, `meshgrid`, `argsort`, "
"`spline`, `spline_interp`, `spline_interpolate`, `stoperr`, `stop_error`,"
" `meshexp_der`)."
msgstr ""

#: ../../source/learn/best_practices/style_guide.md:20
msgid ""
"For example \"spline interpolation\" can be shortened to "
"`spline_interpolation`, `spline_interpolate`, `spline_interp`, `spline`, "
"but not to `splineint` (\"int\" could mean integration, integer, etc. ---"
" too much ambiguity, even in the clear context of a computational code). "
"This is in contrast to `get_argument()` where `getarg()` is perfectly "
"clean and clear."
msgstr ""

#: ../../source/learn/best_practices/style_guide.md:27
msgid ""
"The above are general guidelines. In general, choosing the right name "
"certainly depends on the word being truncated as to whether the first "
"syllable is sufficient. Usually it is but clearly not always. Thus some "
"thought should go into step \"try to keep names to 2 syllables or less\" "
"since it can really affect the indicativeness and simplicity. Simple "
"consistent naming rules are a real help in this regard -- for both "
"collaboration and for one's own sanity when going back to some old code "
"you haven't seen in while."
msgstr ""

#: ../../source/learn/best_practices/style_guide.md:36
msgid "Indentation"
msgstr "Identação"

#: ../../source/learn/best_practices/style_guide.md:39
msgid ""
"Use a consistent indentation to make your code readable. The amount of "
"indentation is a matter of preference, the most common choices are two, "
"three or four spaces."
msgstr ""

#: ../../source/learn/best_practices/style_guide.md:43
msgid "Comparison to Other Languages"
msgstr ""

#: ../../source/learn/best_practices/style_guide.md:46
msgid ""
"On the other hand, in most of the rest of the programming world, where "
"the main focus is, in one form or another, on defining and using large "
"sets of complex objects, with tons of properties and behaviors, known "
"only in the code in which they are defined (as opposed to defined by the "
"same notation throughout the literature), it makes more sense to use "
"longer, more descriptive names. The naming conventions one sees used in "
"more general-purpose languages such as C++ and Python, therefore, are "
"perfectly consistent with their more general-purpose missions. But "
"Fortran has a different mission (numerical scientific computing)."
msgstr ""

#: ../../source/learn/best_practices/type_casting.md:3
msgid ""
"There are essentially five different ways to do type casting, each with "
"its own advantages and disadvantages."
msgstr ""

#: ../../source/learn/best_practices/type_casting.md:6
msgid ""
"The methods I, II and V can be used both in C and Fortran. The methods "
"III and IV are only available in Fortran. The method VI is obsolete and "
"should not be used."
msgstr ""

#: ../../source/learn/best_practices/type_casting.md:10
msgid "Work Arrays"
msgstr ""

#: ../../source/learn/best_practices/type_casting.md:13
msgid ""
"Pass a \"work array\" which is packed with everything needed by the "
"caller and unpacked by the called routine. This is the old way -- e.g., "
"how LAPACK does it."
msgstr ""

#: ../../source/learn/best_practices/type_casting.md:17
#: ../../source/learn/best_practices/type_casting.md:88
#: ../../source/learn/best_practices/type_casting.md:172
#: ../../source/learn/best_practices/type_casting.md:237
#: ../../source/learn/best_practices/type_casting.md:289
msgid "Integrator:"
msgstr "Cálculo de Integrais:"

#: ../../source/learn/best_practices/type_casting.md:46
#: ../../source/learn/best_practices/type_casting.md:126
#: ../../source/learn/best_practices/type_casting.md:199
#: ../../source/learn/best_practices/type_casting.md:264
#: ../../source/learn/best_practices/type_casting.md:319
#: ../../source/learn/best_practices/type_casting.md:431
msgid "Usage:"
msgstr "Uso:"

#: ../../source/learn/best_practices/type_casting.md:79
msgid "General Structure"
msgstr ""

#: ../../source/learn/best_practices/type_casting.md:82
msgid ""
"Define a general structure which encompass the variations you actually "
"need (or are even remotely likely to need going forward). This single "
"structure type can then change if needed as future needs/ideas permit but"
" won't likely need to change from passing, say, real numbers to, say, and"
" instantiation of a text editor."
msgstr ""

#: ../../source/learn/best_practices/type_casting.md:159
msgid ""
"There is only so much flexibility really needed. For example, you could "
"define two structure types for this purpose, one for Schroedinger and one"
" for Dirac. Each would then be sufficiently general and contain all the "
"needed pieces with all the right labels."
msgstr ""

#: ../../source/learn/best_practices/type_casting.md:164
msgid ""
"Point is: it needn't be \"one abstract type to encompass all\" or bust. "
"There are natural and viable options between \"all\" and \"none\"."
msgstr ""

#: ../../source/learn/best_practices/type_casting.md:167
msgid "Private Module Variables"
msgstr ""

#: ../../source/learn/best_practices/type_casting.md:170
msgid "Hide the variable arguments completely by passing in module variables."
msgstr ""

#: ../../source/learn/best_practices/type_casting.md:229
msgid ""
"However it is best to avoid such global variables -- even though really "
"just semi-global -- if possible. But sometimes it may be the simplest "
"cleanest way. However, with a bit of thought, usually there is a better, "
"safer, more explicit way along the lines of II or IV."
msgstr ""

#: ../../source/learn/best_practices/type_casting.md:234
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:210
msgid "Nested functions"
msgstr ""

#: ../../source/learn/best_practices/type_casting.md:283
msgid "Using type(c\\_ptr) Pointer"
msgstr ""

#: ../../source/learn/best_practices/type_casting.md:286
msgid ""
"In C, one would use the `void *` pointer. In Fortran, one can use "
"`type(c_ptr)` for exactly the same purpose."
msgstr ""

#: ../../source/learn/best_practices/type_casting.md:357
msgid ""
"As always, with the advantages of such re-casting, as Fortran lets you do"
" if you really want to, come also the disadvantages that fewer compile- "
"and run-time checks are possible to catch errors; and with that, "
"inevitably more leaky, bug-prone code. So one always has to balance the "
"costs and benefits."
msgstr ""

#: ../../source/learn/best_practices/type_casting.md:363
msgid ""
"Usually, in the context of scientific programming, where the main thrust "
"is to represent and solve precise mathematical formulations (as opposed "
"to create a GUI with some untold number of buttons, drop-downs, and other"
" interface elements), simplest, least bug-prone, and fastest is to use "
"one of the previous approaches."
msgstr ""

#: ../../source/learn/best_practices/type_casting.md:369
msgid "transfer() Intrinsic Function"
msgstr ""

#: ../../source/learn/best_practices/type_casting.md:372
msgid ""
"Before Fortran 2003, the only way to do type casting was using the "
"`transfer` intrinsic function. It is functionally equivalent to the "
"method V, but more verbose and more error prone. It is now obsolete and "
"one should use the method V instead."
msgstr ""

#: ../../source/learn/best_practices/type_casting.md:377
msgid "Examples:"
msgstr "Exemplos:"

#: ../../source/learn/best_practices/type_casting.md:379
#, fuzzy
msgid "<http://jblevins.org/log/transfer>"
msgstr "<http://jblevins.org/log/transfer>"

#: ../../source/learn/best_practices/type_casting.md:381
#, fuzzy
msgid "<http://jblevins.org/research/generic-list.pdf>"
msgstr "<http://jblevins.org/research/generic-list.pdf>"

#: ../../source/learn/best_practices/type_casting.md:383
#, fuzzy
msgid "<http://www.macresearch.org/advanced_fortran_90_callbacks_with_the_transfer_function>"
msgstr "<http://www.macresearch.org/advanced_fortran_90_callbacks_with_the_transfer_function>"

#: ../../source/learn/best_practices/type_casting.md:385
msgid "Object Oriented Approach"
msgstr ""

#: ../../source/learn/best_practices/type_casting.md:388
msgid "The module:"
msgstr ""

#: ../../source/learn/best_practices/type_casting.md:425
msgid ""
"The abstract type prescribes exactly what the integration routine needs, "
"namely a method to evaluate the function, but imposes nothing else on the"
" user. The user extends this type, providing a concrete implementation of"
" the eval type bound procedure and adding necessary context data as "
"components of the extended type."
msgstr ""

#: ../../source/learn/best_practices/type_casting.md:470
msgid "Complete Example of void \\* vs type(c\\_ptr) and transfer()"
msgstr ""

#: ../../source/learn/best_practices/type_casting.md:473
msgid ""
"Here are three equivalent codes: one in C using `void *` and two codes in"
" Fortran using `type(c_ptr)` and `transfer()`:"
msgstr ""

#: ../../source/learn/best_practices/type_casting.md
msgid "Language &nbsp;"
msgstr ""

#: ../../source/learn/best_practices/type_casting.md
msgid "Method"
msgstr "Método"

#: ../../source/learn/best_practices/type_casting.md
msgid "Link"
msgstr "Link"

#: ../../source/learn/best_practices/type_casting.md
#, fuzzy
msgid "C"
msgstr "C"

#: ../../source/learn/best_practices/type_casting.md
msgid "`void *`"
msgstr ""

#: ../../source/learn/best_practices/type_casting.md
#, fuzzy
msgid "<https://gist.github.com/1665641>"
msgstr "<https://gist.github.com/1665641>"

#: ../../source/learn/best_practices/type_casting.md
#, fuzzy
msgid "Fortran"
msgstr "Fortran"

#: ../../source/learn/best_practices/type_casting.md
msgid "`type(c_ptr)` &nbsp;"
msgstr ""

#: ../../source/learn/best_practices/type_casting.md
#, fuzzy
msgid "<https://gist.github.com/1665626>"
msgstr "<https://gist.github.com/1665626>"

#: ../../source/learn/best_practices/type_casting.md
#, fuzzy
msgid "`transfer()`"
msgstr "`transfer()`"

#: ../../source/learn/best_practices/type_casting.md
#, fuzzy
msgid "<https://gist.github.com/1665630>"
msgstr "<https://gist.github.com/1665630>"

#: ../../source/learn/best_practices/type_casting.md:482
msgid ""
"The C code uses the standard C approach for writing extensible libraries "
"that accept callbacks and contexts. The two Fortran codes show how to do "
"the same. The `type(c_ptr)` method is equivalent to the C version and "
"that is the approach that should be used."
msgstr ""

#: ../../source/learn/best_practices/type_casting.md:487
msgid ""
"The `transfer()` method is here for completeness only (before Fortran "
"2003, it was the only way) and it is a little cumbersome, because the "
"user needs to create auxiliary conversion functions for each of his "
"types. As such, the `type(c_ptr)` method should be used instead."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:1
#: ../../source/learn/building_programs/index.md:47
msgid "Build tools"
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:3
msgid ""
"Compiling your Fortran projects by hand can become quite complicated "
"depending on the number of source files and the interdependencies through"
" the module. Supporting different compilers and linkers or different "
"platforms can become increasingly complicated unless the right tools are "
"used to automatically perform those tasks."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:9
msgid ""
"Depending on the size of your project and the purpose of project "
"different options for the build automation can be used."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:12
msgid ""
"First, your integrated development environment probably provides a way to"
" build your program. A popular cross-platform  tool is Microsoft's <a "
"href=\"https://code.visualstudio.com/\" target=\"_blank\" "
"rel=\"noopener\">Visual Studio Code</a>, but others exist, such as <a "
"href=\"https://atom.io/\" target=\"_blank\" rel=\"noopener\">Atom</a>, <a"
" href=\"https://www.eclipse.org/photran/\" target=\"_blank\" "
"rel=\"noopener\">Eclipse Photran</a>, and <a "
"href=\"http://www.codeblocks.org/\" target=\"_blank\" "
"rel=\"noopener\">Code::Blocks</a>. They offer a graphical user-interface,"
" but are often very specific for the compiler and platform."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:22
msgid ""
"For smaller projects, the rule based build system ``make`` is a common "
"choice. Based on the rules defined it can perform task like (re)compiling"
" object files from updated source files, creating libraries and linking "
"executables. To use ``make`` for your project you have to encode those "
"rules in ``Makefile``, which defines the interdependencies of all the "
"final program, the intermediary object files or libraries and the actual "
"source files. For a short introduction see [the guide on ``make"
"``](#using-make-as-build-tool)."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:31
msgid ""
"Maintenance tools like autotools and CMake can generate Makefiles or "
"Visual Studio project files via a high-level description. They abstract "
"away from the compiler and platform specifics."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:35
msgid ""
"Which of those tools are the best choice for your projects depends on "
"many factors. Choose a build tool you are comfortable working with, it "
"should not get in your way while developing. Spending more time on "
"working against your build tools than doing actual development work can "
"quickly become frustrating."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:40
msgid ""
"Also, consider the accessibility of your build tools. If it is restricted"
" to a specific integrated development environment, can all developers on "
"your project access it? If you are using a specific build system, does it"
" work on all platforms you are developing for? How large is the entry "
"barrier of your build tools? Consider the learning curve for the build "
"tools, the perfect build tool will be of no use, if you have to learn a "
"complex programming language first to add a new source file. Finally, "
"consider what other project are using, those you are depending on and "
"those that use (or will use) your project as dependency."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:52
msgid "Using make as build tool"
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:54
msgid ""
"The most well-known and commonly used build system is called ``make``. It"
" performs actions following rules defined in a configuration file called "
"``Makefile`` or ``makefile``, which usually leads to compiling a program "
"from the provided source code."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:61
msgid ""
"For an in-depth ``make`` tutorial lookup its info page. There is an "
"online version of this <a "
"href=“https://www.gnu.org/software/make/manual/make.html“ target=“_blank“"
" rel=“noopener“>info page, available."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:63
msgid ""
"We will start with the basics from your clean source directory. Create "
"and open the file ``Makefile``, we start with a simple rule called *all*:"
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:71
msgid ""
"After saving the ``Makefile`` run it by executing ``make`` in the same "
"directory. You should see the following output:"
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:77
msgid ""
"First, we note that ``make`` is substituting ``$@`` for the name of the "
"rule, the second thing to note is that ``make`` is always printing the "
"command it is running, finally, we see the result of running ``echo "
"\"all\"``."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:82
msgid ""
"We call the entry point of our ``Makefile`` always *all* by convention, "
"but you can choose whatever name you like."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:86
msgid ""
"You should not have noticed it if your editor is working correctly, but "
"you have to indent the content of a rule with a tab character. In case "
"you have problems running the above ``Makefile`` and see an error like"
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:92
msgid ""
"The indentation is probably not correct. In this case replace the "
"indentation in the second line with a tab character."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:98
msgid ""
"Now we want to make our rules more complicated, therefore we add another "
"rule:"
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:110
msgid ""
"Note how we declare variables in ``make``, you should always declare your"
" local variables with ``:=``. To access the content of a variable we use "
"the ``$(...)``, note that we have to enclose the variable name in "
"parenthesis."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:115
msgid ""
"The declaration of variables is usually done with ``:=``, but ``make`` "
"does support *recursively expanded* variables as well with ``=``. "
"Normally, the first kind of declaration is wanted, as they are more "
"predictable and do not have a runtime overhead from the recursive "
"expansion."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:121
msgid ""
"We introduced a dependency of the rule all, namely the content of the "
"variable ``PROG``, also we modified the printout, we want to see all the "
"dependencies of this rule, which are stored in the variable ``$^``. Now "
"for the new rule which we name after the value of the variable ``PROG``, "
"it does the same thing we did before for the rule *all*, note how the "
"value of ``$@`` is dependent on the rule it is used in."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:128
msgid "Again check by running the ``make``, you should see:"
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:135
msgid ""
"The dependency has been correctly resolved and evaluated before "
"performing any action on the rule *all*. Let's run only the second rule: "
"type ``make my_prog`` and you will only find the first two lines in your "
"terminal."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:140
msgid ""
"The next step is to perform some real actions with ``make``, we take the "
"source code from the previous chapter here and add new rules to our "
"``Makefile``:"
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:157
msgid ""
"We define ``OBJS`` which stands for object files, our program depends on "
"those ``OBJS`` and for each object file we create a rule to make them "
"from a source file. The last rule we introduced is a pattern matching "
"rule, ``%`` is the common pattern between ``tabulate.o`` and "
"``tabulate.f90``, which connects our object file ``tabulate.o`` to the "
"source file ``tabulate.f90``. With this set, we run our compiler, here "
"``gfortran`` and translate the source file into an object file, we do not"
" create an executable yet due to the ``-c`` flag. Note the usage of the "
"``$<`` for the first element of the dependencies here."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:168
msgid ""
"After compiling all the object files we attempt to link the program, we "
"do not use a linker directly, but ``gfortran`` to produce the executable."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:171
msgid "Now we run the build script with ``make``:"
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:182
msgid ""
"We remember that we have dependencies between our source files, therefore"
" we add this dependency explicitly to the ``Makefile`` with"
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:189
msgid ""
"Now we can retry and find that the build is working correctly. The output"
" should look like"
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:196
msgid ""
"You should find *four* new files in the directory now. Run ``my_prog`` to"
" make sure everything works as expected. Let's run ``make`` again:"
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:202
msgid ""
"Using the timestamps of the executable ``make`` was able to determine, it"
" is newer than both ``tabulate.o`` and ``functions.o``, which in turn are"
" newer than ``tabulate.f90`` and ``functions.f90``. Therefore, the "
"program is already up-to-date with the latest code and no action has to "
"be performed."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:208
msgid "In the end, we will have a look at a complete ``Makefile``."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:242
msgid ""
"Since you are starting with ``make`` we highly recommend to always "
"include the first line, like with Fortran's ``implicit none`` we do not "
"want to have implicit rules messing up our ``Makefile`` in surprising and"
" harmful ways."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:246
msgid ""
"Next, we have a configuration section where we define variables, in case "
"you want to switch out your compiler, it can be easily done here. We also"
" introduced the ``SRCS`` variable to hold all source files, which is more"
" intuitive than specifying object files. We can easily create the object "
"files by appending a ``.o`` suffix using the functions ``addsuffix``. The"
" ``.PHONY`` is a special rule, which should be used for all entry points "
"of your ``Makefile``, here we define two entry point, we already know "
"*all*, the new *clean* rule deletes all the build artifacts again such "
"that we indeed start with a clean directory."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:257
msgid ""
"Also, we slightly changed the build rule for the object files to account "
"for appending the ``.o`` suffix instead of substituting it. Notice that "
"we still need to explicitly define the interdependencies in the "
"``Makefile``. We also added a dependency for the object files on the "
"``Makefile`` itself, in case you change the compiler, this will allow you"
" to safely rebuild."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:263
msgid ""
"Now you know enough about ``make`` to use it for building small projects."
" If you plan to use ``make`` more extensively, we have compiled a few "
"tips for you as well."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:268
msgid ""
"In this guide, we avoided and disabled a lot of the commonly used "
"``make`` features that can be particularly troublesome if not used "
"correctly, we highly recommend staying away from the builtin rules and "
"variables if you do not feel confident working with ``make``, but "
"explicitly declare all variables and rules."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:273
msgid ""
"You will find that ``make`` is capable tool to automate short "
"interdependent workflows and to build small projects. But for larger "
"projects, you will probably soon run against some of it limitations. "
"Usually, ``make`` is therefore not used alone but combined with other "
"tools to generate the ``Makefile`` completely or in parts."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:281
msgid "Recursively expanded variables"
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:283
msgid ""
"Commonly seen in many projects are recursively expanded variables "
"(declared with ``=`` instead of ``:=``). Recursive expansion of your "
"variables allows out-of-order declaration and other neat tricks with "
"``make``, since they are defined as rules, which are expanded at runtime,"
" rather than being defined while parsing."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:288
msgid ""
"For example, declaring and using your Fortran flags with this snippet "
"will work completely fine:"
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:300
msgid ""
"You should find the expected (or maybe unexpected) printout after running"
" ``make``"
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:305
#, python-format
msgid "{% include note.html content=\"\" %}"
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:308
msgid ""
"appending with ``+=`` to an undefined variable will produce a recursively"
" expanded variable with this state being inherited for all further "
"appending."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:311
msgid ""
"While, it seems like an interesting feature to use, it tends to lead to "
"surprising and unexpected outcomes. Usually, when defining variables like"
" your compiler, there is little reason to actually use the recursive "
"expansion at all."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:315
msgid "The same can easily be archived using the ``:=`` declaration:"
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:327
msgid ""
"always think of a ``Makefile`` as a whole set of rules, it must be parsed"
" completely before any rule can be evaluated."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:330
msgid ""
"You can use whatever kind of variables you like most, mixing them should "
"be done carefully, of course. It is important to be aware of the "
"differences between the two kinds and the respective implications."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:335
msgid "Comments and whitespace"
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:337
msgid ""
"There are some caveats with whitespace and comments, which might pop up "
"from time to time when using ``make``. First, ``make`` does not know of "
"any data type except for strings and the default separator is just a "
"space. This means ``make`` will give a hard time trying to build a "
"project which has spaces in file names. If you encounter such case, "
"renaming the file is possibly the easiest solution at hand."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:344
msgid ""
"Another common problem is leading and trailing whitespace, once "
"introduced, ``make`` will happily carry it along and it does in fact make"
" a difference when comparing strings in ``make``."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:348
msgid "Those can be introduced by comments like"
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:356
msgid ""
"While the comment will be correctly removed by ``make``, the trailing two"
" spaces are now part of the variable content. Run ``make`` and check that"
" this is indeed the case:"
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:365
msgid ""
"To solve this issue, you can either move the comment, or strip the "
"whitespace with the ``strip`` function instead. Alternatively, you could "
"try to ``join`` the strings."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:376
msgid ""
"All in all, none of this solutions will make your ``Makefile`` more "
"readable, therefore, it is prudent to pay extra attention to whitespace "
"and comments when writing and using ``make``."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:381
msgid "The meson build system"
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:383
msgid ""
"After you have learned the basics of ``make``, which we call a low-level "
"build system, we will introduce ``meson``, a high-level build system. "
"While you specify in a low-level build system how to build your program, "
"you can use a high-level build system to specify what to build. A high-"
"level build system will deal for you with how and generate build files "
"for a low-level build system."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:390
msgid ""
"There are plenty of high-level build systems available, but we will focus"
" on ``meson`` because it is constructed to be particularly user friendly."
" The default low-level build-system of ``meson`` is called ``ninja``."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:394
msgid "Let's have a look at a complete ``meson.build`` file:"
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:402
msgid ""
"And we are already done, the next step is to configure our low-level "
"build system with ``meson setup build``, you should see output somewhat "
"similar to this"
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:420
msgid ""
"The provided information at this point is already more detailed than "
"anything we could have provided in a ``Makefile``, let's run the build "
"with ``ninja -C build``, which should show something like"
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:429
msgid ""
"Find and test your program at ``build/my_prog`` to ensure it works "
"correctly. We note the steps ``ninja`` performed are the same we would "
"have coded up in a ``Makefile`` (including the dependency), yet we did "
"not have to specify them, have a look at your ``meson.build`` file again:"
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:439
msgid ""
"We only specified that we have a Fortran project (which happens to "
"require a certain version of ``meson`` for the Fortran support) and told "
"``meson`` to build an executable ``my_prog`` from the files "
"``tabulate.f90`` and ``functions.f90``. We had not to tell ``meson`` how "
"to build the project, it figured this out by itself."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:447
msgid ""
"``meson`` is a cross-platform build system, the project you just "
"specified for your program can be used to compile binaries for your "
"native operating system or to cross-compile your project for other "
"platforms. Similarly, the ``meson.build`` file is portable and will work "
"on different platforms as well."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:454
msgid ""
"The documentation of ``meson`` can be found at the <a "
"href=\"https://mesonbuild.com/\" target=\"_blank\" rel=\"noopener"
"\">meson-build webpage</a>."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:458
msgid "Creating a CMake project"
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:460
msgid ""
"Similar to ``meson`` CMake is a high-level build system as well and "
"commonly used to build Fortran projects."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:464
msgid ""
"CMake follows a slightly different strategy and provides you with a "
"complete programming language to create your build files. This is has the"
" advantage that you can do almost everything with CMake, but your CMake "
"build files can also become as complex as the program you are building."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:471
msgid "Start by creating the file ``CMakeLists.txt`` with the content"
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:479
msgid ""
"Similar to ``meson`` we are already done with our CMake build file. We "
"configure our low-level build files with ``cmake -B build -G Ninja``, you"
" should see output similar to this"
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:493
msgid ""
"You might be surprised that CMake tries to use the compiler ``f95``, "
"fortunately this is just a symbolic link to ``gfortran`` on most systems "
"and not the actual ``f95`` compiler. To give CMake a better hint you can "
"export the environment variable ``FC=gfortran`` rerunning should show the"
" correct compiler name now"
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:509
msgid ""
"In a similar manner you could use your Intel Fortran compiler instead to "
"build your project (set ``FC=ifort``)."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:512
msgid ""
"CMake provides support for several low-level build files, since the "
"default is platform specific, we will just use ``ninja`` since we already"
" used it together with ``meson``. As before, build your project with "
"``ninja -C build``:"
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:523
msgid ""
"Find and test your program at ``build/my_prog`` to ensure it works "
"correctly. The steps ``ninja`` performed are somewhat different, because "
"there is usually more than one way to write the low-level build files to "
"accomplish the task of building a project. Fortunately, we do not have to"
" concern ourselves but have our build system handle those details for us."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:529
msgid ""
"Finally, we will shortly recap on our complete ``CMakeLists.txt`` to "
"specify our project:"
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:538
msgid ""
"We specified that we have a Fortran project and told CMake to create an "
"executable ``my_prog`` from  the files ``tabulate.f90`` and "
"``functions.f90``. CMake knows the details how to build the executable "
"from the specified sources, so we do not have to worry about the actual "
"steps in the build process."
msgstr ""

#: ../../source/learn/building_programs/build_tools.md:544
msgid ""
"CMake's offical reference can be found at the <a "
"href=\"https://cmake.org/cmake/help/latest/\", target=\"_blank\" "
"rel=\"noopener\">CMake webpage</a>. It is organised in manpages, which "
"are also available with your local CMake installation as well using ``man"
" cmake``. While it covers all functionality of CMake, it sometimes covers"
" them only very briefly."
msgstr ""

#: ../../source/learn/building_programs/compiling_source.md:1
#: ../../source/learn/building_programs/index.md:47
msgid "Compiling the source code"
msgstr ""

#: ../../source/learn/building_programs/compiling_source.md:3
msgid ""
"The first step in the build process is to compile the source code. The "
"output from this step is generally known as the object code — a set of "
"instructions for the computer generated from the human-readable source "
"code. Different compilers will produce different object codes from the "
"same source code and the naming conventions are different."
msgstr ""

#: ../../source/learn/building_programs/compiling_source.md:9
msgid "The consequences:"
msgstr ""

#: ../../source/learn/building_programs/compiling_source.md:11
msgid ""
"If you use a particular compiler for one source file, you need to use the"
" same compiler (or a compatible one) for all other pieces. After all, a "
"program may be built from many different source files and the compiled "
"pieces have to cooperate."
msgstr ""

#: ../../source/learn/building_programs/compiling_source.md:15
msgid ""
"Each source file will be compiled and the result is stored in a file with"
" an extension like \".o\" or \".obj\". It is these object files that are "
"the input for the next step: the link process."
msgstr ""

#: ../../source/learn/building_programs/compiling_source.md:19
msgid ""
"Compilers are complex pieces of software: they have to understand the "
"language in much more detail and depth than the average programmer. They "
"also need to understand the inner working of the computer. And then, over"
" the years they have been extended with numerous options to customise the"
" compilation process and the final program that will be built."
msgstr ""

#: ../../source/learn/building_programs/compiling_source.md:26
msgid ""
"But the basics are simple enough. Take the gfortran compiler, part of the"
" GNU compiler collection. To compile a simple program as the one above, "
"that consists of one source file, you run the following command, assuming"
" the source code is stored in the file \"hello.f90\":"
msgstr ""

#: ../../source/learn/building_programs/compiling_source.md:35
msgid ""
"This results in a file \"hello.o\" (as the gfortran compiler uses \".o\" "
"as the extension for the object files)."
msgstr ""

#: ../../source/learn/building_programs/compiling_source.md:38
msgid ""
"The option \"-c\" means: only compile the source files. If you were to "
"leave it out, then the default action of the compiler is to compile the "
"source file and start the linker to build the actual executable program. "
"The command:"
msgstr ""

#: ../../source/learn/building_programs/compiling_source.md:47
msgid "results in an executable file, \"a.out\" on Linux or \"a.exe\" on Windows."
msgstr ""

#: ../../source/learn/building_programs/compiling_source.md:50
msgid "Some remarks:"
msgstr ""

#: ../../source/learn/building_programs/compiling_source.md:52
msgid ""
"The compiler may complain about the contents of the source file, if it "
"finds something wrong with it — a typo for instance or an unknown "
"keyword. In that case the compilation process is broken off and you will "
"not get an object file or an executable program. For instance, if the "
"word \"program\" was inadvertently typed as \"prgoram\":"
msgstr ""

#: ../../source/learn/building_programs/compiling_source.md:73
msgid ""
"Using this compilation report you can correct the source code and try "
"again."
msgstr ""

#: ../../source/learn/building_programs/compiling_source.md:76
msgid ""
"The step without \"-c\" can only succeed if the source file contains a "
"main program — characterised by the `program` statement in Fortran. "
"Otherwise the link step will complain about a missing \"symbol\", "
"something along these lines:"
msgstr ""

#: ../../source/learn/building_programs/compiling_source.md:88
msgid ""
"The file \"hello2.f90\" is almost the same as the file \"hello.f90\", "
"except that the keyword `program` has been replaced by the keyword "
"`subroutine`."
msgstr ""

#: ../../source/learn/building_programs/compiling_source.md:91
msgid ""
"The above examples of output from the compiler will differ per compiler "
"and platform on which it runs. These examples come from the gfortran "
"compiler running in a Cygwin environment on Windows."
msgstr ""

#: ../../source/learn/building_programs/compiling_source.md:95
msgid "Compilers also differ in the options they support, but in general:"
msgstr ""

#: ../../source/learn/building_programs/compiling_source.md:97
msgid ""
"Options for optimising the code — resulting in faster programs or smaller"
" memory footprints;"
msgstr ""

#: ../../source/learn/building_programs/compiling_source.md:99
msgid ""
"Options for checking the source code — checks that a variable is not used"
" before it has been given a value, for instance or checks if some "
"extension to the language is used;"
msgstr ""

#: ../../source/learn/building_programs/compiling_source.md:102
msgid "Options for the location of include or module files, see below;"
msgstr ""

#: ../../source/learn/building_programs/compiling_source.md:103
msgid "Options for debugging."
msgstr ""

#: ../../source/learn/building_programs/distributing.md:1
#: ../../source/learn/building_programs/index.md:47
msgid "Distributing your programs"
msgstr ""

#: ../../source/learn/building_programs/distributing.md:3
msgid ""
"When you distribute your programs, there are a number of options you can "
"choose from:"
msgstr ""

#: ../../source/learn/building_programs/distributing.md:6
msgid "Distribute the entire source code"
msgstr ""

#: ../../source/learn/building_programs/distributing.md:7
msgid "Distribute a pre-built executable program"
msgstr ""

#: ../../source/learn/building_programs/distributing.md:8
msgid "Distribute static or dynamic libraries that people can use"
msgstr ""

#: ../../source/learn/building_programs/distributing.md:10
msgid "__Option 1: Distribute the entire source code__"
msgstr ""

#: ../../source/learn/building_programs/distributing.md:12
msgid ""
"By far the simplest — for you as a programmer — is this one: you leave it"
" up to the user to build it on their own machine. Unfortunately, that "
"means you will have to have a user-friendly build system in place and the"
" user will have to have access to suitable compilers. For build systems: "
"see the previous section."
msgstr ""

#: ../../source/learn/building_programs/distributing.md:18
msgid "__Option 2: Distribute a pre-built executable program__"
msgstr ""

#: ../../source/learn/building_programs/distributing.md:20
msgid ""
"A pre-built program that does not need to be customised, other than via "
"its input, will still need to come with the various run-time libraries "
"and will be specific to the operating system/environment it was built "
"for."
msgstr ""

#: ../../source/learn/building_programs/distributing.md:24
msgid ""
"The set of run-time libraries differs per operating system and compiler "
"version. For a freely available compiler like gfortran, the easiest thing"
" is to ask the user to install that compiler on their system. In the case"
" of Windows: the Cygwin environment may be called for."
msgstr ""

#: ../../source/learn/building_programs/distributing.md:29
msgid ""
"Alternatively, you can supply copies of the run-time libraries together "
"with your program. Put them in the directory where they can be found at "
"run-time."
msgstr ""

#: ../../source/learn/building_programs/distributing.md:32
msgid ""
"Note: On Windows, the Intel Fortran comes with a set of _redistributable_"
" libraries. These will need to be made available."
msgstr ""

#: ../../source/learn/building_programs/distributing.md:35
msgid ""
"In general: use a tool like \"ldd\" or \"dependency walker\" to find out "
"what libraries are required and consult the documentation of the "
"compiler."
msgstr ""

#: ../../source/learn/building_programs/distributing.md:38
msgid ""
"If your program does allow customisation, consider using dynamic "
"libraries for this. More is said about this below."
msgstr ""

#: ../../source/learn/building_programs/distributing.md:41
msgid "__Option 3: Distribute static or dynamic libraries that people can use__"
msgstr ""

#: ../../source/learn/building_programs/distributing.md:43
msgid ""
"This option is a combination of the first two options. It does put some "
"burden on the user, as they must create a main program that calls your "
"routines in the proper way, but they do not need to know much about the "
"build system you used. You will have to deal with the run-time libraries,"
" though."
msgstr ""

#: ../../source/learn/building_programs/distributing.md:48
msgid ""
"If you choose this option, besides the compiled libraries, you will also "
"need to supply the module intermediate files. These files are compiler-"
"specific, but so are the static libraries you build."
msgstr ""

#: ../../source/learn/building_programs/distributing.md:52
msgid "Distributing the tabulation program"
msgstr ""

#: ../../source/learn/building_programs/distributing.md:53
msgid ""
"As shown above, the tabulation program can be built with the user-defined"
" function in a dynamic library. This enables you to:"
msgstr ""

#: ../../source/learn/building_programs/distributing.md:56
msgid "Ship the executable (with the appropriate run-time libraries)"
msgstr ""

#: ../../source/learn/building_programs/distributing.md:57
msgid "Provide a skeleton version of the module, something like:"
msgstr ""

#: ../../source/learn/building_programs/distributing.md:75
msgid "Provide a basic build script with a command like:"
msgstr ""

#: ../../source/learn/building_programs/distributing.md:81
msgid "or:"
msgstr "ou:"

#: ../../source/learn/building_programs/distributing.md:87
msgid ""
"As said, you cannot control that the user has done the right thing — any "
"DLL \"functions.dll\" with a function `f` would be accepted, but not "
"necessarily lead to a successful run."
msgstr ""

#: ../../source/learn/building_programs/distributing.md:91
msgid ""
"An alternative set-up would be to change the main program into a "
"subroutine and have the function as an argument:"
msgstr ""

#: ../../source/learn/building_programs/distributing.md:113
msgid "Then provide a skeleton main program:"
msgstr ""

#: ../../source/learn/building_programs/distributing.md:133
msgid ""
"The advantage is that the compiler can check the interface of the "
"function that is passed and that the user has more freedom in the use of "
"the functionality provided by your library."
msgstr ""

#: ../../source/learn/building_programs/include_files.md:1
#: ../../source/learn/building_programs/index.md:47
msgid "Include files and modules"
msgstr ""

#: ../../source/learn/building_programs/include_files.md:3
msgid ""
"Your program can be contained in various source files, all stored in the "
"same directory or organised in some convenient directory tree. The "
"details of the organisation depend on personal taste, arrangements made "
"by the group of developers you belong to, or simply the history of the "
"program. Whatever the directory structure is, you will encounter a "
"situation where the compiler needs assistence in order to compile a "
"particular source file:"
msgstr ""

#: ../../source/learn/building_programs/include_files.md:11
msgid ""
"Fortran (and other languages) has the possibility to include an external "
"file. While this feature has become a bit less useful with the advent of "
"modules, it still has its uses. Quite often, such \"include files\" are "
"stored in a directory separated from the directories containing the "
"source files, because they are used in several locations. Quite often the"
" name of that directory is \"include\"."
msgstr ""

#: ../../source/learn/building_programs/include_files.md:17
msgid ""
"As we have seen, compiling source code that defines one or more modules, "
"leads to the compiler generating so-called \"module intermediate files\" "
"(with the extension \".mod\"). The compiler needs access to these files "
"to be able to read the interfaces and variables and what not, and based "
"on this information, actually compile the source code that uses the "
"various modules."
msgstr ""

#: ../../source/learn/building_programs/include_files.md:23
msgid ""
"Compilers support options like `-I` to indicate where these include files"
" and module intermediate files are to be found. Suppose we store the two "
"files of our `tabulate` program in the following directory structure:"
msgstr ""

#: ../../source/learn/building_programs/include_files.md:36
msgid "Compiling the file \"functions.f90\" with the commands"
msgstr ""

#: ../../source/learn/building_programs/include_files.md:43
msgid "leads to this structure:"
msgstr ""

#: ../../source/learn/building_programs/include_files.md:55
msgid ""
"To successfully compile and subsequently build the program we need to "
"tell the compiler where it can find the file \"user\\_functions.mod\":"
msgstr ""

#: ../../source/learn/building_programs/include_files.md:64
msgid "The result:"
msgstr ""

#: ../../source/learn/building_programs/include_files.md:78
msgid "Notes:"
msgstr "Notas:"

#: ../../source/learn/building_programs/include_files.md:80
msgid ""
"The details differ per compiler. Sometimes the `-I` option should be "
"followed by a space and then the name of the directory, sometimes the "
"directory should come consecutively."
msgstr ""

#: ../../source/learn/building_programs/include_files.md:83
msgid ""
"By default the module intermediate files (.mod) are put in the same "
"directory as the object files. When your program code is organised in "
"different subdirectories, they will get scattered over the directory "
"tree, complicating the compilation process. Luckily, many compilers allow"
" you to specify the output location for these files. For gfortran this is"
" `-J`, for instance: `-J../include` (so that the .mod files could all "
"appear in the same directory)"
msgstr ""

#: ../../source/learn/building_programs/include_files.md:91
msgid ""
"For large programs, consisting of many source files, it is important to "
"think through what organisation to use."
msgstr ""

#: ../../source/learn/building_programs/index.md:47
#: ../../source/learn/building_programs/linking_pieces.md:1
msgid "Linking the objects"
msgstr ""

#: ../../source/learn/building_programs/index.md:47
#: ../../source/learn/building_programs/managing_libraries.md:1
msgid "Managing libraries (static and dynamic libraries)"
msgstr ""

#: ../../source/learn/building_programs/index.md:47
#: ../../source/learn/building_programs/project_make.md:1
msgid "An introduction to make"
msgstr ""

#: ../../source/learn/building_programs/index.md:47
#: ../../source/learn/building_programs/runtime_libraries.md:1
msgid "Run-time libraries"
msgstr ""

#: ../../source/learn/building_programs/index.md:1
msgid "Building programs"
msgstr ""

#: ../../source/learn/building_programs/index.md:3
msgid ""
"Languages like Fortran, C, C++ and Java, to name but a few, share certain"
" characteristics: you write code in your language of choice but then you "
"have to build an executable program from that source code. Other "
"languages are interpreted — the source code is analysed by a special "
"program and taken as direct instructions. Two very simple examples of "
"that type of language: Windows batch files and Linux shell scripts."
msgstr ""

#: ../../source/learn/building_programs/index.md:11
msgid ""
"In this tutorial we concentrate on the first type of languages, with "
"Fortran as the main example. One advantage of compiled languages is that "
"the build process that you need to build an executable program, is used "
"to transform the human-readable source code into an efficient program "
"that can be run on the computer."
msgstr ""

#: ../../source/learn/building_programs/index.md:17
msgid ""
"Remark: this tutorial gives examples for the Windows and Linux operating "
"systems, however the workflow and general principles still apply to "
"macOS."
msgstr ""

#: ../../source/learn/building_programs/index.md:20
msgid "Compiled languages"
msgstr ""

#: ../../source/learn/building_programs/index.md:22
msgid "Let us have a look at a simple example:"
msgstr ""

#: ../../source/learn/building_programs/index.md:30
msgid ""
"This is just about the simplest program you can write in Fortran and it "
"is certainly a variation on one of the most famous programs. Even though "
"it is simple to express in source code, a lot of things actually happen "
"when the executable that is built from this code runs:"
msgstr ""

#: ../../source/learn/building_programs/index.md:35
msgid ""
"A process is started on the computer in such a way that it can write to "
"the console — the window (DOS-box, xterm, ...) at which you type the "
"program's name."
msgstr ""

#: ../../source/learn/building_programs/index.md:38
msgid ""
"It writes the text \"Hello!\" to the console. To do so it must properly "
"interact with the console."
msgstr ""

#: ../../source/learn/building_programs/index.md:40
msgid ""
"When done, it finishes, cleaning up all the resources (memory, connection"
" to the console etc.) it took."
msgstr ""

#: ../../source/learn/building_programs/index.md:43
msgid ""
"Fortunately, as a programmer in a high-level language you do not need to "
"consider all these details. In fact, this is the sort of things that is "
"taken care of by the build process: the compiler and the linker."
msgstr ""

#: ../../source/learn/building_programs/linking_pieces.md:3
msgid ""
"Almost all programs, except for the simplest, are built up from different"
" pieces. We are going to examine such a situation in more detail."
msgstr ""

#: ../../source/learn/building_programs/linking_pieces.md:7
msgid ""
"Here is a general program for tabulating a function (source code in "
"\"tabulate.f90\"):"
msgstr ""

#: ../../source/learn/building_programs/linking_pieces.md:28
msgid "Note the `use` statement — this will be where we define the function `f`."
msgstr ""

#: ../../source/learn/building_programs/linking_pieces.md:30
msgid ""
"We want to make the program general, so keep the specific source code — "
"the implementation of the function `f` — separated from the general "
"source code. There are several ways to achieve this, but one is to put it"
" in a different source file. We can give the general program to a user "
"and they provide a specific source code."
msgstr ""

#: ../../source/learn/building_programs/linking_pieces.md:36
msgid ""
"Assume for the sake of the example that the function is implemented in a "
"source file \"function.f90\" as:"
msgstr ""

#: ../../source/learn/building_programs/linking_pieces.md:52
msgid ""
"To build the program with this specific function, we need to compile two "
"source files and combine them via the link step into one executable "
"program. Because the program \"tabulate\" depends on the module "
"\"function\", we need to compile the source file containing our module "
"first. A sequence of commands to do this is:"
msgstr ""

#: ../../source/learn/building_programs/linking_pieces.md:63
msgid ""
"The first step compiles the module, resulting in an object file "
"\"functions.o\" and a module intermediate file, \"user\\_functions.mod\"."
" This module file contains all the information the compiler needs to "
"determine that the function `f` is defined in this module and what its "
"interface is. This information is important: it enables the compiler to "
"check that you call the function in the right way. It might be that you "
"made a mistake and called the function with two arguments instead of one."
" If the compiler does not know anything about the function's interface, "
"then it cannot check anything."
msgstr ""

#: ../../source/learn/building_programs/linking_pieces.md:73
msgid "The second step invokes the compiler in such a way that:"
msgstr ""

#: ../../source/learn/building_programs/linking_pieces.md:75
msgid "it compiles the file \"tabulate.f90\" (using the module file);"
msgstr ""

#: ../../source/learn/building_programs/linking_pieces.md:76
msgid ""
"it invokes the linker to combine the object files tabulate.o and "
"functions.o into an executable program — with the default name \"a.out\" "
"or \"a.exe\" (if you want a different name, use the option \"-o\")."
msgstr ""

#: ../../source/learn/building_programs/linking_pieces.md:80
msgid ""
"What you do not see in general is that the linker also adds a number of "
"extra files in this link step, the run-time libraries. These run-time "
"libraries contain all the \"standard\" stuff — low-level routines that do"
" the input and output to screen, the `sin` function and much more."
msgstr ""

#: ../../source/learn/building_programs/linking_pieces.md:85
msgid ""
"If you want to see the gory details, add the option \"-v\". This "
"instructs the compiler to report all the steps that are in detail."
msgstr ""

#: ../../source/learn/building_programs/linking_pieces.md:88
msgid ""
"The end result, the executable program, contains the compiled source code"
" and various auxiliary routines that make it work. It also contains "
"references to so-called dynamic run-time libraries (in Windows: DLLs, in "
"Linux: shared objects or shared libraries). Without these run-time "
"libraries the program will not start."
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:3
msgid ""
"If you need to manage a program built of dozens of source files (and that"
" is not uncommon!), the command-line needed to specify all the object "
"files will be very long indeed. This soon becomes tedious or even "
"impossible to maintain. So a different solution is called for: create "
"your own libraries."
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:9
msgid ""
"Libraries contain any number of object files in a compact form, so that "
"the command-line becomes far shorter:"
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:16
msgid ""
"where \"supportlib.a\" is a collection of one, two or many object files, "
"all compiled and then put into a library. The extension \".a\" is used by"
" Linux and Linux-like platforms. On Windows the extension \".lib\" is "
"used."
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:20
msgid ""
"Creating your own libraries is not that complicated:  on Linux, you can "
"achieve this using a utility like `ar`:"
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:30
msgid "or on Windows using the `lib` utility:"
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:39
msgid "Note:"
msgstr "Nota:"

#: ../../source/learn/building_programs/managing_libraries.md:41
msgid ""
"The command `ar` with the option `r` either creates the library (the name"
" appears after the option) or adds new object files to the library (or "
"replaces any existing ones)."
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:44
msgid ""
"The command `lib` will create a new library if you use specify the option"
" `/out:` with the name of the new library next to it. To add object files"
" to an existing library, leave out the `/out:` bit."
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:47
msgid ""
"On platforms like Linux there is a particular convention to name "
"libraries. If you name your library like \"libname.a\" (note the \"lib\" "
"prefix), then you can refer to it as `-lname` in the link step."
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:50
msgid ""
"Libraries are often sought in directories indicated by an option `-L` or "
"`/LIBPATH`. This saves you from having to specify the exact path for "
"every library."
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:54
msgid ""
"Using libraries you can build very large programs without having to "
"resort to extremely long command lines."
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:58
msgid "Static versus dynamic libraries"
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:60
msgid ""
"The above discussion is tacitly assuming that you are using the so-called"
" static libraries. Static libraries (or at least parts of their contents)"
" become an integral part of the executable program. The only way to "
"change the routines incorporated in the program is by rebuilding the "
"program with a new version of the library."
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:66
msgid ""
"A flexible alternative is to use the so-called dynamic libraries. These "
"libraries remain outside the executable program and as a consequence can "
"be replaced without rebulding the entire program. Compilers and indeed "
"the operating system itself rely heavily on such dynamic libraries. You "
"could consider dynamic libraries as a sort of executable programs that "
"need a bit of help to be run."
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:73
msgid ""
"Building dynamic libraries works slightly differently from building "
"static libraries: you use the compiler/linker instead of a tool like `ar`"
" or `lib`."
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:77
msgid "On Linux:"
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:85
msgid "On Windows, with the Intel Fortran compiler:"
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:93
msgid "The differences are that:"
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:95
msgid ""
"You need to specify a compile option on Linux, for gfortran that is "
"`-fpic`, because the object code is slightly different."
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:97
msgid ""
"You need to tell in the link step that you want a dynamic library (on "
"Linux: a shared object/library, hence the extension \".so\"; on Windows: "
"a dynamic link library)"
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:101
msgid ""
"There is one more thing to be aware of: On Windows you must explicitly "
"specify that a procedure is to be _exported_, i.e. is visible in the "
"dynamic library. There are several ways — depending on the compiler you "
"use — to achieve this. One method is via a so-called compiler directive:"
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:112
msgid "Or, with the Intel Fortran compiler:"
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:119
msgid ""
"Besides a dynamic library (DLL), a so-called import library may be "
"generated."
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:122
msgid ""
"Because the details differ per compiler, here are two examples: gfortran "
"on Cygwin and Intel Fortran on Windows. In both cases we look at the "
"`tabulate` program in the file \"tabulate.f90\"."
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:126
msgid "GNU/Linux and gfortran"
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:127
msgid ""
"The `tabulate` program requires a user-defined routine `f`. If we let it "
"reside in a dynamic library, say \"functions.dll\", we can simply replace"
" the implementation of the function by putting another dynamic library in"
" the directory. No need to rebuild the program as such."
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:132
msgid ""
"On Cygwin it is not necessary to explicitly export a procedure — all "
"publically visible routines are exported when you build a dynamic "
"library. Also, no import library is generated."
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:136
msgid ""
"Since our dynamic library can be built from a single source file, we can "
"take a shortcut:"
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:143
msgid ""
"This produces the files \"functions.dll\" and \"user\\_functions.mod\". "
"The utility `nm` tells us the exact name of the function `f`:"
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:158
msgid ""
"It has received a prefix `__function_MOD_` to distinguish it from any "
"other routine \"f\" that might be defined in another module."
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:161
msgid "The next step is to build the program:"
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:167
msgid ""
"The DLL and the .mod file are used to build the executable program with "
"checks on the function's interface, the right name and the reference to "
"\"a\" DLL, called \"functions.dll\"."
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:171
msgid ""
"You can replace the shared library \"functions.dll\" by another one, "
"implementing a different function \"f\". Of course, you need to be "
"careful to use the correct interface for this function. The "
"compiler/linker are not invoked anymore, so they can do no checking."
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:176
msgid "Windows and Intel Fortran"
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:177
msgid ""
"The setup is the same as with Linux, but on Windows it is necessary to "
"explicitly export the routines. And an import library is generated — this"
" is the library that should be used in the link step."
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:181
msgid ""
"The source file must contain the compiler directive, otherwise the "
"function `f` is not exported:"
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:189
msgid "Again we take a shortcut:"
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:195
msgid ""
"This produces the files \"functions.dll\", \"user\\_functions.mod\" as "
"well as \"functions.lib\" (and two other files of no importance here). "
"The \"dependency walker\" program tells us that the exact name of the "
"function \"f\" is `FUNCTION_mp_F`. It is also exported, so that it can be"
" found by the linker in the next step:"
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:204
msgid "Note that we need to specify the name of the export library, not the DLL!"
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:206
msgid ""
"(Note also: the Intel Fortran compiler uses the name of the first source "
"file as the name for the executable — here we do without the `-exe` "
"option.)"
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:209
msgid ""
"Just as under Cygwin, the DLL and the .mod file are used to build the "
"executable program with checks on the function's interface, the right "
"name and the reference to \"a\" DLL, called \"functions.dll\"."
msgstr ""

#: ../../source/learn/building_programs/managing_libraries.md:213
msgid ""
"You can replace the shared library \"functions.dll\" by another one, but "
"the same caution is required: while the implementation can be quite "
"different, the function's interface must be the same."
msgstr ""

#: ../../source/learn/building_programs/project_make.md:3
msgid ""
"We briefly discussed the basics of ``make``. This chapter gives ideas and"
" strategies to scale ``make`` for larger projects."
msgstr ""

#: ../../source/learn/building_programs/project_make.md:6
msgid "Before going into detail with ``make``, consider a few points:"
msgstr ""

#: ../../source/learn/building_programs/project_make.md:7
msgid ""
"``make`` is a Unix tool and might give you a hard time when porting to "
"non-Unix platforms. That said, there are also different flavors of "
"``make`` available, not all might support the features you want to use."
msgstr ""

#: ../../source/learn/building_programs/project_make.md:10
msgid ""
"While ``make`` gives you full control over the build process, it also "
"means you are responsible for the entire build process, and you have to "
"specify the rules for every detail of your project. You might find "
"yourself spending a significant amount of time writing and maintaining "
"your ``Makefile`` instead of developing your source code."
msgstr ""

#: ../../source/learn/building_programs/project_make.md:14
msgid ""
"You can work with your ``Makefile``, but think about other developers on "
"your project who may not be familiar with ``make``. How much time do you "
"expect them to spend learning your ``Makefile`` and would they be able to"
" debug or add features?"
msgstr ""

#: ../../source/learn/building_programs/project_make.md:17
msgid ""
"Pure ``make`` will not scale. You will soon add auxiliary programs to "
"dynamically or statically generate your ``Makefile``. Those introduce "
"dependencies and possible sources of errors. The effort needed to test "
"and document those tools should not be underestimated."
msgstr ""

#: ../../source/learn/building_programs/project_make.md:22
msgid ""
"If you think ``make`` is suitable for your needs, than you can start "
"writing your ``Makefile``. For this course we will use real world "
"examples from the package index, which (at the time of writing) use build"
" systems other than ``make``. This guide should present a general "
"recommended style to write ``make``, but also serve as demonstration of "
"useful and interesting features."
msgstr ""

#: ../../source/learn/building_programs/project_make.md:29
msgid ""
"Even if you find ``make`` unsuitable to build your project, it is *the* "
"tool to automate workflows defined by files. Maybe you can leverage its "
"power in a different context."
msgstr ""

#: ../../source/learn/building_programs/project_make.md:34
msgid ""
"For this part we will work with <a "
"href=\"https://github.com/jacobwilliams/fortran-csv-module/tree/1.2.0\" "
"target=\"_blank\" rel=\"noopener\"> the Fortran CSV module (v1.2.0)</a>. "
"Our goal is to write a ``Makefile`` to compile this project to a static "
"library. Start by cloning the repository"
msgstr ""

#: ../../source/learn/building_programs/project_make.md:45
msgid ""
"For this part we will work with the code from tag ``1.2.0``, to make it "
"as reproducible as possible. Feel free to use the latest version or "
"another project instead."
msgstr ""

#: ../../source/learn/building_programs/project_make.md:48
msgid ""
"This project uses FoBiS as build system, and you can check the "
"``build.sh`` for options used with FoBiS. We are about to write a "
"``Makefile`` for this project. First, we check the directory structure "
"and the source files"
msgstr ""

#: ../../source/learn/building_programs/project_make.md:70
msgid ""
"We find seven different Fortran source files; the four in ``src`` should "
"be compiled and added to a static library while the three in "
"``src/tests`` contain individual programs that depend on this static "
"library."
msgstr ""

#: ../../source/learn/building_programs/project_make.md:74
msgid "Start by creating a simple ``Makefile``:"
msgstr ""

#: ../../source/learn/building_programs/project_make.md:140
msgid ""
"Invoking ``make`` should build the static library and the test "
"executables as expected:"
msgstr ""

#: ../../source/learn/building_programs/project_make.md:155
msgid ""
"There are a few things to note there, a ``make`` build usually interlaces"
" the build artifacts and the source code, unless you put extra effort "
"into implementing a build directory. Also, right now the the source files"
" and dependencies are specified explicitly, which results in several "
"additional lines even for such a simple project."
msgstr ""

#: ../../source/learn/building_programs/project_make.md:162
msgid "Automatically generated dependencies"
msgstr ""

#: ../../source/learn/building_programs/project_make.md:164
msgid ""
"The main drawback of ``make`` for Fortran is the missing capability to "
"determine module dependencies. This is usually solved by either adding "
"those by hand or automatically scanning the source code with an external "
"tool. Some compilers (like the Intel Fortran compiler) also offer to "
"generate dependencies in ``make`` format."
msgstr ""

#: ../../source/learn/building_programs/project_make.md:169
msgid ""
"Before diving into the dependency generation, we will outline the concept"
" of a robust take on the dependency problem. First, we want an approach "
"that can process all source files independently, while each source file "
"provides (``module``) or requires (``use``) modules. When generating the "
"dependencies only the name of the source file and the module files are "
"known, and no information on the object file names should be required."
msgstr ""

#: ../../source/learn/building_programs/project_make.md:177
msgid ""
"If you check the dependency section above you will note that all "
"dependencies are defined between object files rather than source files. "
"To change this, we can generate a map from the source files their "
"respective object files:"
msgstr ""

#: ../../source/learn/building_programs/project_make.md:187
msgid ""
"Note the declaration of ``obj`` as recursively expanded variable, we "
"effectively use this mechanism to define a function in ``make``. The "
"``foreach`` function allows us to loop over all source files, while the "
"``eval`` function allows us to generate ``make`` statements and evaluate "
"them for this ``Makefile``."
msgstr ""

#: ../../source/learn/building_programs/project_make.md:192
msgid ""
"We adjust the dependencies accordingly as we can now define the name of "
"the object files through the source file names:"
msgstr ""

#: ../../source/learn/building_programs/project_make.md:212
msgid ""
"The same strategy of creating a map is already used for the module files,"
" now it is just expanded to the object files as well."
msgstr ""

#: ../../source/learn/building_programs/project_make.md:215
msgid ""
"To generate the respective dependency map automatically we will use an "
"``awk`` script here"
msgstr ""

#: ../../source/learn/building_programs/project_make.md:277
msgid ""
"This script makes a few assumptions about the source code it parses, so "
"it will not work with all Fortran code (namely submodules are not "
"supported), but for this example it will suffice."
msgstr ""

#: ../../source/learn/building_programs/project_make.md:282
msgid "Using awk"
msgstr ""

#: ../../source/learn/building_programs/project_make.md:284
msgid ""
"The above script uses the ``awk`` language, which is designed for the "
"purpose of text stream processing and uses a C-like syntax. In ``awk`` "
"you can define groups which are evaluated on certain events, *e.g.* when "
"a line matches a specific pattern, usually expressed by a <a "
"href=\"https://en.wikipedia.org/wiki/Regular_expression\" "
"target=\"_blank\" rel=\"noopener\"> regular expression</a>."
msgstr ""

#: ../../source/learn/building_programs/project_make.md:290
msgid ""
"This ``awk`` script defines five groups, two of them use the special "
"pattern ``BEGIN`` and ``END`` which are run before the script starts and "
"after the script finishes, respectively. Before the script starts we make"
" the script case-insensitive since we are dealing with Fortran source "
"code here. We also use the special variable ``FILENAME`` to determine "
"which file we are currently parsing and to allow processing multiple "
"files at once."
msgstr ""

#: ../../source/learn/building_programs/project_make.md:298
msgid ""
"With the three patterns defined we are looking for ``module``, ``use`` "
"and ``include`` statements as the first space delimited entry. With the "
"used pattern not all valid Fortran code will be parsed correctly. A "
"failing example would be:"
msgstr ""

#: ../../source/learn/building_programs/project_make.md:307
msgid ""
"To make this parsable by the ``awk`` script we can add another group "
"directly after the ``BEGIN`` group, modifying the stream while processing"
" it with"
msgstr ""

#: ../../source/learn/building_programs/project_make.md:316
msgid ""
"In theory you would need a full Fortran parser to deal with continuation "
"lines and other difficulties. This might be possible to implement in "
"``awk`` but would require a huge script in the end."
msgstr ""

#: ../../source/learn/building_programs/project_make.md:320
msgid ""
"Also, keep in mind that generating the dependencies should be fast, an "
"expensive parser can produce a significant overhead when generating "
"dependencies for a large code base. Making reasonable assumptions can "
"simplify and speed up this step, but also introduces an error source in "
"your build tools."
msgstr ""

#: ../../source/learn/building_programs/project_make.md:327
msgid ""
"Make the script executable (``chmod +x gen-deps.awk``) and test it with "
"``./gen-deps.awk $(find src -name '*.[fF]90')``. You should see output "
"like this:"
msgstr ""

#: ../../source/learn/building_programs/project_make.md:349
msgid ""
"Note that the scripts output will use recursively expanded variables and "
"not define any dependencies yet, because out-of-order declaration of "
"variables might be necessary and we do not want to create any target by "
"accident. You can verify that the same information as in the above "
"handwritten snippet is present. The only exception is the additional "
"dependency on the ``iso_fortran_env.mod``, since it is an undefined "
"variable it will just expand to an empty string and not introduce any "
"further dependencies."
msgstr ""

#: ../../source/learn/building_programs/project_make.md:357
msgid ""
"Now, you can finally include this piece in your ``Makefile`` to automate "
"the dependency generation:"
msgstr ""

#: ../../source/learn/building_programs/project_make.md:428
msgid ""
"Here additional dependency files are generated for each source file "
"individually and than included into the main ``Makefile``. Also, the "
"dependency files are added as dependency to the object files to ensure "
"they are generated before the object is compiled. The pipe character in "
"the dependencies defines an order of the rules without a timestamp "
"dependency, because it is not necessary to recompile an object file in "
"case dependencies are regenerated and potentially unchanged."
msgstr ""

#: ../../source/learn/building_programs/project_make.md:436
msgid ""
"Again, we make use of the ``eval`` function to generate the dependencies "
"in a ``foreach`` loop over all object files. Note that we created a map "
"between the object files in the dependency files, expanding ``dep`` once "
"yields the object file name, expanding it again yields the object files "
"it depends on."
msgstr ""

#: ../../source/learn/building_programs/project_make.md:441
msgid "Building your project with ``make`` should give an output similar to"
msgstr ""

#: ../../source/learn/building_programs/project_make.md:462
msgid ""
"Once the dependency files are generated, ``make`` will only update them "
"if the source changes and not require to rebuild them again for every "
"invocation."
msgstr ""

#: ../../source/learn/building_programs/project_make.md:466
msgid ""
"With correct dependencies you can leverage parallel execution of your "
"``Makefile``, just use the ``-j`` flag to create multiple ``make`` "
"processes."
msgstr ""

#: ../../source/learn/building_programs/project_make.md:469
msgid ""
"Since dependencies can now be generated automatically, there is no need "
"to specify the source files explicitly, the ``wildcard`` function can be "
"used to determine them dynamically:"
msgstr ""

#: ../../source/learn/building_programs/runtime_libraries.md:3
msgid ""
"To illustrate that even a simple program depends on external run-time "
"libraries, here is the output from the `ldd` utility that reports such "
"dependencies:"
msgstr ""

#: ../../source/learn/building_programs/runtime_libraries.md:18
msgid ""
"Other compilers or other versions of the same compiler will probably "
"require different dynamic libraries. As long as you run the program on "
"the same computer — or, more accurately, within the same environment — "
"there should be no problem. However, when such a library cannot be found,"
" you will get (hopefully) an error message and the program stops "
"immediately."
msgstr ""

#: ../../source/learn/building_programs/runtime_libraries.md:25
msgid ""
"Therefore it is good to know what libraries are required. On Linux and "
"Linux-like environments, the `ldd` utility is a great help. On Windows, "
"you may want to use the `dependency walker` (the latest version, which "
"works very nicely with Windows 10, is found here: "
"<https://github.com/lucasg/Dependencies>)"
msgstr ""

#: ../../source/learn/building_programs/runtime_libraries.md:30
msgid ""
"Another thing you should know is where the program tries to find these "
"libraries. That is a vast subject in its own right and full of "
"complications and history. Here we merely scratch the surface:"
msgstr ""

#: ../../source/learn/building_programs/runtime_libraries.md:34
msgid "_On Linux:_"
msgstr ""

#: ../../source/learn/building_programs/runtime_libraries.md:36
msgid ""
"The environment variable `LD_LIBRARY_PATH` is used. It consists of a list"
" of directories to be searched, each directory separated via colons (:) "
"from the others. For instance: `/usr/lib:/usr/local/lib` — typical system"
" directories."
msgstr ""

#: ../../source/learn/building_programs/runtime_libraries.md:40
msgid ""
"At the link step you can also use an option to set `RPATH`, a list of "
"directories that is put into the executable file itself."
msgstr ""

#: ../../source/learn/building_programs/runtime_libraries.md:42
msgid "Then there are several system directories that are searched."
msgstr ""

#: ../../source/learn/building_programs/runtime_libraries.md:44
msgid "_On Windows:_"
msgstr ""

#: ../../source/learn/building_programs/runtime_libraries.md:46
msgid ""
"The directory containing the executable program may also contain dynamic "
"libraries."
msgstr ""

#: ../../source/learn/building_programs/runtime_libraries.md:48
msgid ""
"The environment variable \"PATH\" is used. Again a list of directories to"
" be searched, but now the separating character is the semicolon (;)."
msgstr ""

#: ../../source/learn/building_programs/runtime_libraries.md:50
msgid "A set of system directories is searched."
msgstr ""

#: ../../source/learn/building_programs/runtime_libraries.md:52
msgid ""
"Unfortunately, the details can change from one version of the operating "
"system to the next. The above is merely an indication — use tools like "
"\"ldd\" or \"dependency walker\" to find out what libraries are loaded "
"and where they are found."
msgstr ""

#: ../../source/learn/building_programs/runtime_libraries.md:57
msgid ""
"If you want to share your program with colleagues or clients or simply "
"users all over the world, you will have to take care that, besides the "
"program, you also distribute the libraries it depends on. For more "
"information: see below."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:1
msgid "GNU Free Documentation License"
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:2
msgid "*Version 1.2, November 2002*"
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:9
msgid "0. PREAMBLE"
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:11
msgid ""
"The purpose of this License is to make a manual, textbook, or other "
"functional and useful document \"free\" in the sense of freedom: to "
"assure everyone the effective freedom to copy and redistribute it, with "
"or without modifying it, either commercially or noncommercially. "
"Secondarily, this License preserves for the author and publisher a way to"
" get credit for their work, while not being considered responsible for "
"modifications made by others."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:19
msgid ""
"This License is a kind of \"copyleft\", which means that derivative works"
" of the document must themselves be free in the same sense.  It "
"complements the GNU General Public License, which is a copyleft license "
"designed for free software."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:24
msgid ""
"We have designed this License in order to use it for manuals for free "
"software, because free software needs free documentation: a free program "
"should come with manuals providing the same freedoms that the software "
"does.  But this License is not limited to software manuals; it can be "
"used for any textual work, regardless of subject matter or whether it is "
"published as a printed book.  We recommend this License principally for "
"works whose purpose is instruction or reference."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:33
msgid "1. APPLICABILITY AND DEFINITIONS"
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:35
msgid ""
"This License applies to any manual or other work, in any medium, that "
"contains a notice placed by the copyright holder saying it can be "
"distributed under the terms of this License.  Such a notice grants a "
"world-wide, royalty-free license, unlimited in duration, to use that work"
" under the conditions stated herein.  The \"Document\", below, refers to "
"any such manual or work.  Any member of the public is a licensee, and is "
"addressed as \"you\".  You accept the license if you copy, modify or "
"distribute the work in a way requiring permission under copyright law."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:45
msgid ""
"A \"Modified Version\" of the Document means any work containing the "
"Document or a portion of it, either copied verbatim, or with "
"modifications and/or translated into another language."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:49
msgid ""
"A \"Secondary Section\" is a named appendix or a front-matter section of "
"the Document that deals exclusively with the relationship of the "
"publishers or authors of the Document to the Document's overall subject "
"(or to related matters) and contains nothing that could fall directly "
"within that overall subject.  (Thus, if the Document is in part a "
"textbook of mathematics, a Secondary Section may not explain any "
"mathematics.)  The relationship could be a matter of historical "
"connection with the subject or with related matters, or of legal, "
"commercial, philosophical, ethical or political position regarding them."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:60
msgid ""
"The \"Invariant Sections\" are certain Secondary Sections whose titles "
"are designated, as being those of Invariant Sections, in the notice that "
"says that the Document is released under this License.  If a section does"
" not fit the above definition of Secondary then it is not allowed to be "
"designated as Invariant.  The Document may contain zero Invariant "
"Sections.  If the Document does not identify any Invariant Sections then "
"there are none."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:68
msgid ""
"The \"Cover Texts\" are certain short passages of text that are listed, "
"as Front-Cover Texts or Back-Cover Texts, in the notice that says that "
"the Document is released under this License.  A Front-Cover Text may be "
"at most 5 words, and a Back-Cover Text may be at most 25 words."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:73
msgid ""
"A \"Transparent\" copy of the Document means a machine-readable copy, "
"represented in a format whose specification is available to the general "
"public, that is suitable for revising the document straightforwardly with"
" generic text editors or (for images composed of pixels) generic paint "
"programs or (for drawings) some widely available drawing editor, and that"
" is suitable for input to text formatters or for automatic translation to"
" a variety of formats suitable for input to text formatters.  A copy made"
" in an otherwise Transparent file format whose markup, or absence of "
"markup, has been arranged to thwart or discourage subsequent modification"
" by readers is not Transparent. An image format is not Transparent if "
"used for any substantial amount of text.  A copy that is not "
"\"Transparent\" is called \"Opaque\"."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:86
msgid ""
"Examples of suitable formats for Transparent copies include plain ASCII "
"without markup, Texinfo input format, LaTeX input format, SGML or XML "
"using a publicly available DTD, and standard-conforming simple HTML, "
"PostScript or PDF designed for human modification.  Examples of "
"transparent image formats include PNG, XCF and JPG.  Opaque formats "
"include proprietary formats that can be read and edited only by "
"proprietary word processors, SGML or XML for which the DTD and/or "
"processing tools are not generally available, and the machine-generated "
"HTML, PostScript or PDF produced by some word processors for output "
"purposes only."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:97
msgid ""
"The \"Title Page\" means, for a printed book, the title page itself, plus"
" such following pages as are needed to hold, legibly, the material this "
"License requires to appear in the title page.  For works in formats which"
" do not have any title page as such, \"Title Page\" means the text near "
"the most prominent appearance of the work's title, preceding the "
"beginning of the body of the text."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:104
msgid ""
"A section \"Entitled XYZ\" means a named subunit of the Document whose "
"title either is precisely XYZ or contains XYZ in parentheses following "
"text that translates XYZ in another language.  (Here XYZ stands for a "
"specific section name mentioned below, such as \"Acknowledgements\", "
"\"Dedications\", \"Endorsements\", or \"History\".)  To \"Preserve the "
"Title\" of such a section when you modify the Document means that it "
"remains a section \"Entitled XYZ\" according to this definition."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:112
msgid ""
"The Document may include Warranty Disclaimers next to the notice which "
"states that this License applies to the Document.  These Warranty "
"Disclaimers are considered to be included by reference in this License, "
"but only as regards disclaiming warranties: any other implication that "
"these Warranty Disclaimers may have is void and has no effect on the "
"meaning of this License."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:120
msgid "2. VERBATIM COPYING"
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:122
msgid ""
"You may copy and distribute the Document in any medium, either "
"commercially or noncommercially, provided that this License, the "
"copyright notices, and the license notice saying this License applies to "
"the Document are reproduced in all copies, and that you add no other "
"conditions whatsoever to those of this License.  You may not use "
"technical measures to obstruct or control the reading or further copying "
"of the copies you make or distribute.  However, you may accept "
"compensation in exchange for copies.  If you distribute a large enough "
"number of copies you must also follow the conditions in section 3."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:132
msgid ""
"You may also lend copies, under the same conditions stated above, and you"
" may publicly display copies."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:136
msgid "3. COPYING IN QUANTITY"
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:138
msgid ""
"If you publish printed copies (or copies in media that commonly have "
"printed covers) of the Document, numbering more than 100, and the "
"Document's license notice requires Cover Texts, you must enclose the "
"copies in covers that carry, clearly and legibly, all these Cover Texts: "
"Front-Cover Texts on the front cover, and Back-Cover Texts on the back "
"cover.  Both covers must also clearly and legibly identify you as the "
"publisher of these copies.  The front cover must present the full title "
"with all words of the title equally prominent and visible.  You may add "
"other material on the covers in addition. Copying with changes limited to"
" the covers, as long as they preserve the title of the Document and "
"satisfy these conditions, can be treated as verbatim copying in other "
"respects."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:151
msgid ""
"If the required texts for either cover are too voluminous to fit legibly,"
" you should put the first ones listed (as many as fit reasonably) on the "
"actual cover, and continue the rest onto adjacent pages."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:156
msgid ""
"If you publish or distribute Opaque copies of the Document numbering more"
" than 100, you must either include a machine-readable Transparent copy "
"along with each Opaque copy, or state in or with each Opaque copy a "
"computer-network location from which the general network-using public has"
" access to download using public-standard network protocols a complete "
"Transparent copy of the Document, free of added material. If you use the "
"latter option, you must take reasonably prudent steps, when you begin "
"distribution of Opaque copies in quantity, to ensure that this "
"Transparent copy will remain thus accessible at the stated location until"
" at least one year after the last time you distribute an Opaque copy "
"(directly or through your agents or retailers) of that edition to the "
"public."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:169
msgid ""
"It is requested, but not required, that you contact the authors of the "
"Document well before redistributing any large number of copies, to give "
"them a chance to provide you with an updated version of the Document."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:174
msgid "4. MODIFICATIONS"
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:176
msgid ""
"You may copy and distribute a Modified Version of the Document under the "
"conditions of sections 2 and 3 above, provided that you release the "
"Modified Version under precisely this License, with the Modified Version "
"filling the role of the Document, thus licensing distribution and "
"modification of the Modified Version to whoever possesses a copy of it.  "
"In addition, you must do these things in the Modified Version:"
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:183
msgid ""
"__A__. Use in the Title Page (and on the covers, if any) a title distinct"
"  from that of the Document, and from those of previous versions  (which "
"should, if there were any, be listed in the History section  of the "
"Document).  You may use the same title as a previous version  if the "
"original publisher of that version gives permission."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:188
msgid ""
"__B__. List on the Title Page, as authors, one or more persons or "
"entities  responsible for authorship of the modifications in the Modified"
"  Version, together with at least five of the principal authors of the  "
"Document (all of its principal authors, if it has fewer than five),  "
"unless they release you from this requirement."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:193
msgid ""
"__C__. State on the Title page the name of the publisher of the  Modified"
" Version, as the publisher."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:195
msgid "__D__. Preserve all the copyright notices of the Document."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:196
msgid ""
"__E__. Add an appropriate copyright notice for your modifications  "
"adjacent to the other copyright notices."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:198
msgid ""
"__F__. Include, immediately after the copyright notices, a license notice"
"  giving the public permission to use the Modified Version under the  "
"terms of this License, in the form shown in the Addendum below."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:201
msgid ""
"__G__. Preserve in that license notice the full lists of Invariant "
"Sections  and required Cover Texts given in the Document's license "
"notice."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:203
msgid "__H__. Include an unaltered copy of this License."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:204
msgid ""
"__I__. Preserve the section Entitled \"History\", Preserve its Title, and"
" add  to it an item stating at least the title, year, new authors, and  "
"publisher of the Modified Version as given on the Title Page.  If  there "
"is no section Entitled \"History\" in the Document, create one  stating "
"the title, year, authors, and publisher of the Document as  given on its "
"Title Page, then add an item describing the Modified  Version as stated "
"in the previous sentence."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:211
msgid ""
"__J__. Preserve the network location, if any, given in the Document for  "
"public access to a Transparent copy of the Document, and likewise  the "
"network locations given in the Document for previous versions  it was "
"based on.  These may be placed in the \"History\" section.  You may omit "
"a network location for a work that was published at  least four years "
"before the Document itself, or if the original  publisher of the version "
"it refers to gives permission."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:218
msgid ""
"__K__. For any section Entitled \"Acknowledgements\" or \"Dedications\","
"  Preserve the Title of the section, and preserve in the section all  the"
" substance and tone of each of the contributor acknowledgements  and/or "
"dedications given therein."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:222
msgid ""
"__L__. Preserve all the Invariant Sections of the Document,  unaltered in"
" their text and in their titles.  Section numbers  or the equivalent are "
"not considered part of the section titles."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:225
msgid ""
"__M__. Delete any section Entitled \"Endorsements\".  Such a section  may"
" not be included in the Modified Version."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:227
msgid ""
"__N__. Do not retitle any existing section to be Entitled "
"\"Endorsements\"  or to conflict in title with any Invariant Section."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:229
msgid "__O__. Preserve any Warranty Disclaimers."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:231
msgid ""
"If the Modified Version includes new front-matter sections or appendices "
"that qualify as Secondary Sections and contain no material copied from "
"the Document, you may at your option designate some or all of these "
"sections as invariant.  To do this, add their titles to the list of "
"Invariant Sections in the Modified Version's license notice. These titles"
" must be distinct from any other section titles."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:238
msgid ""
"You may add a section Entitled \"Endorsements\", provided it contains "
"nothing but endorsements of your Modified Version by various parties--for"
" example, statements of peer review or that the text has been approved by"
" an organization as the authoritative definition of a standard."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:244
msgid ""
"You may add a passage of up to five words as a Front-Cover Text, and a "
"passage of up to 25 words as a Back-Cover Text, to the end of the list of"
" Cover Texts in the Modified Version.  Only one passage of Front-Cover "
"Text and one of Back-Cover Text may be added by (or through arrangements "
"made by) any one entity.  If the Document already includes a cover text "
"for the same cover, previously added by you or by arrangement made by the"
" same entity you are acting on behalf of, you may not add another; but "
"you may replace the old one, on explicit permission from the previous "
"publisher that added the old one."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:254
msgid ""
"The author(s) and publisher(s) of the Document do not by this License "
"give permission to use their names for publicity for or to assert or "
"imply endorsement of any Modified Version."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:259
msgid "5. COMBINING DOCUMENTS"
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:261
msgid ""
"You may combine the Document with other documents released under this "
"License, under the terms defined in section 4 above for modified "
"versions, provided that you include in the combination all of the "
"Invariant Sections of all of the original documents, unmodified, and list"
" them all as Invariant Sections of your combined work in its license "
"notice, and that you preserve all their Warranty Disclaimers."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:268
msgid ""
"The combined work need only contain one copy of this License, and "
"multiple identical Invariant Sections may be replaced with a single copy."
"  If there are multiple Invariant Sections with the same name but "
"different contents, make the title of each such section unique by adding "
"at the end of it, in parentheses, the name of the original author or "
"publisher of that section if known, or else a unique number. Make the "
"same adjustment to the section titles in the list of Invariant Sections "
"in the license notice of the combined work."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:277
msgid ""
"In the combination, you must combine any sections Entitled \"History\" in"
" the various original documents, forming one section Entitled "
"\"History\"; likewise combine any sections Entitled \"Acknowledgements\","
" and any sections Entitled \"Dedications\".  You must delete all sections"
" Entitled \"Endorsements\"."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:284
msgid "6. COLLECTIONS OF DOCUMENTS"
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:286
msgid ""
"You may make a collection consisting of the Document and other documents "
"released under this License, and replace the individual copies of this "
"License in the various documents with a single copy that is included in "
"the collection, provided that you follow the rules of this License for "
"verbatim copying of each of the documents in all other respects."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:292
msgid ""
"You may extract a single document from such a collection, and distribute "
"it individually under this License, provided you insert a copy of this "
"License into the extracted document, and follow this License in all other"
" respects regarding verbatim copying of that document."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:298
msgid "7. AGGREGATION WITH INDEPENDENT WORKS"
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:300
msgid ""
"A compilation of the Document or its derivatives with other separate and "
"independent documents or works, in or on a volume of a storage or "
"distribution medium, is called an \"aggregate\" if the copyright "
"resulting from the compilation is not used to limit the legal rights of "
"the compilation's users beyond what the individual works permit. When the"
" Document is included in an aggregate, this License does not apply to the"
" other works in the aggregate which are not themselves derivative works "
"of the Document."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:309
msgid ""
"If the Cover Text requirement of section 3 is applicable to these copies "
"of the Document, then if the Document is less than one half of the entire"
" aggregate, the Document's Cover Texts may be placed on covers that "
"bracket the Document within the aggregate, or the electronic equivalent "
"of covers if the Document is in electronic form. Otherwise they must "
"appear on printed covers that bracket the whole aggregate."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:318
msgid "8. TRANSLATION"
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:320
msgid ""
"Translation is considered a kind of modification, so you may distribute "
"translations of the Document under the terms of section 4. Replacing "
"Invariant Sections with translations requires special permission from "
"their copyright holders, but you may include translations of some or all "
"Invariant Sections in addition to the original versions of these "
"Invariant Sections.  You may include a translation of this License, and "
"all the license notices in the Document, and any Warranty Disclaimers, "
"provided that you also include the original English version of this "
"License and the original versions of those notices and disclaimers.  In "
"case of a disagreement between the translation and the original version "
"of this License or a notice or disclaimer, the original version will "
"prevail."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:333
msgid ""
"If a section in the Document is Entitled \"Acknowledgements\", "
"\"Dedications\", or \"History\", the requirement (section 4) to Preserve "
"its Title (section 1) will typically require changing the actual title."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:339
msgid "9. TERMINATION"
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:341
msgid ""
"You may not copy, modify, sublicense, or distribute the Document except "
"as expressly provided for under this License.  Any other attempt to copy,"
" modify, sublicense or distribute the Document is void, and will "
"automatically terminate your rights under this License.  However, parties"
" who have received copies, or rights, from you under this License will "
"not have their licenses terminated so long as such parties remain in full"
" compliance."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:350
msgid "10. FUTURE REVISIONS OF THIS LICENSE"
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:352
msgid ""
"The Free Software Foundation may publish new, revised versions of the GNU"
" Free Documentation License from time to time.  Such new versions will be"
" similar in spirit to the present version, but may differ in detail to "
"address new problems or concerns.  See http://www.gnu.org/copyleft/."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:358
msgid ""
"Each version of the License is given a distinguishing version number. If "
"the Document specifies that a particular numbered version of this License"
" \"or any later version\" applies to it, you have the option of following"
" the terms and conditions either of that specified version or of any "
"later version that has been published (not as a draft) by the Free "
"Software Foundation.  If the Document does not specify a version number "
"of this License, you may choose any version ever published (not as a "
"draft) by the Free Software Foundation."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:368
msgid "ADDENDUM: How to use this License for your documents"
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:370
msgid ""
"To use this License in a document you have written, include a copy of the"
" License in the document and put the following copyright and license "
"notices just after the title page:"
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:382
msgid ""
"If you have Invariant Sections, Front-Cover Texts and Back-Cover Texts, "
"replace the \"with...Texts.\" line with this:"
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:388
msgid ""
"If you have Invariant Sections without Cover Texts, or some other "
"combination of the three, merge those two alternatives to suit the "
"situation."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:392
msgid ""
"If your document contains nontrivial examples of program code, we "
"recommend releasing these examples in parallel under your choice of free "
"software license, such as the GNU General Public License, to permit their"
" use in free software."
msgstr ""

#: ../../source/learn/intrinsics/GNU_Free_Documentation_License.md:397
msgid "fortran-lang intrinsic descriptions"
msgstr ""

#: ../../source/learn/intrinsics/array/index.md:1
msgid "Properties and attributes of arrays"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MERGE.md:2
#, fuzzy
msgid "merge"
msgstr "merge"

#: ../../source/learn/intrinsics/_pages/ABS.md:3
#: ../../source/learn/intrinsics/_pages/ACHAR.md:3
#: ../../source/learn/intrinsics/_pages/ACOS.md:3
#: ../../source/learn/intrinsics/_pages/ACOSH.md:3
#: ../../source/learn/intrinsics/_pages/ADJUSTL.md:3
#: ../../source/learn/intrinsics/_pages/ADJUSTR.md:3
#: ../../source/learn/intrinsics/_pages/AIMAG.md:3
#: ../../source/learn/intrinsics/_pages/AINT.md:3
#: ../../source/learn/intrinsics/_pages/ALL.md:3
#: ../../source/learn/intrinsics/_pages/ALLOCATED.md:3
#: ../../source/learn/intrinsics/_pages/ANINT.md:3
#: ../../source/learn/intrinsics/_pages/ANY.md:3
#: ../../source/learn/intrinsics/_pages/ASIN.md:3
#: ../../source/learn/intrinsics/_pages/ASINH.md:3
#: ../../source/learn/intrinsics/_pages/ASSOCIATED.md:3
#: ../../source/learn/intrinsics/_pages/ATAN.md:3
#: ../../source/learn/intrinsics/_pages/ATAN2.md:3
#: ../../source/learn/intrinsics/_pages/ATANH.md:3
#: ../../source/learn/intrinsics/_pages/ATOMIC_ADD.md:3
#: ../../source/learn/intrinsics/_pages/ATOMIC_AND.md:3
#: ../../source/learn/intrinsics/_pages/ATOMIC_CAS.md:3
#: ../../source/learn/intrinsics/_pages/ATOMIC_DEFINE.md:3
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_ADD.md:3
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_AND.md:3
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_OR.md:3
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_XOR.md:3
#: ../../source/learn/intrinsics/_pages/ATOMIC_OR.md:3
#: ../../source/learn/intrinsics/_pages/ATOMIC_REF.md:3
#: ../../source/learn/intrinsics/_pages/ATOMIC_XOR.md:3
#: ../../source/learn/intrinsics/_pages/BESSEL_J0.md:3
#: ../../source/learn/intrinsics/_pages/BESSEL_J1.md:3
#: ../../source/learn/intrinsics/_pages/BESSEL_JN.md:3
#: ../../source/learn/intrinsics/_pages/BESSEL_Y0.md:3
#: ../../source/learn/intrinsics/_pages/BESSEL_Y1.md:3
#: ../../source/learn/intrinsics/_pages/BESSEL_YN.md:3
#: ../../source/learn/intrinsics/_pages/BGE.md:3
#: ../../source/learn/intrinsics/_pages/BGT.md:3
#: ../../source/learn/intrinsics/_pages/BIT_SIZE.md:3
#: ../../source/learn/intrinsics/_pages/BLE.md:3
#: ../../source/learn/intrinsics/_pages/BLT.md:3
#: ../../source/learn/intrinsics/_pages/BTEST.md:3
#: ../../source/learn/intrinsics/_pages/CEILING.md:3
#: ../../source/learn/intrinsics/_pages/CHAR.md:3
#: ../../source/learn/intrinsics/_pages/CMPLX.md:3
#: ../../source/learn/intrinsics/_pages/COMMAND_ARGUMENT_COUNT.md:3
#: ../../source/learn/intrinsics/_pages/COMPILER_OPTIONS.md:3
#: ../../source/learn/intrinsics/_pages/COMPILER_VERSION.md:3
#: ../../source/learn/intrinsics/_pages/CONJG.md:3
#: ../../source/learn/intrinsics/_pages/COS.md:3
#: ../../source/learn/intrinsics/_pages/COSH.md:3
#: ../../source/learn/intrinsics/_pages/COUNT.md:3
#: ../../source/learn/intrinsics/_pages/CO_BROADCAST.md:3
#: ../../source/learn/intrinsics/_pages/CO_LBOUND.md:3
#: ../../source/learn/intrinsics/_pages/CO_MAX.md:3
#: ../../source/learn/intrinsics/_pages/CO_MIN.md:3
#: ../../source/learn/intrinsics/_pages/CO_REDUCE.md:3
#: ../../source/learn/intrinsics/_pages/CO_SUM.md:3
#: ../../source/learn/intrinsics/_pages/CO_UBOUND.md:3
#: ../../source/learn/intrinsics/_pages/CPU_TIME.md:3
#: ../../source/learn/intrinsics/_pages/CSHIFT.md:3
#: ../../source/learn/intrinsics/_pages/C_ASSOCIATED.md:3
#: ../../source/learn/intrinsics/_pages/C_FUNLOC.md:3
#: ../../source/learn/intrinsics/_pages/C_F_POINTER.md:3
#: ../../source/learn/intrinsics/_pages/C_F_PROCPOINTER.md:3
#: ../../source/learn/intrinsics/_pages/C_LOC.md:3
#: ../../source/learn/intrinsics/_pages/C_SIZEOF.md:3
#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:3
#: ../../source/learn/intrinsics/_pages/DBLE.md:3
#: ../../source/learn/intrinsics/_pages/DIGITS.md:3
#: ../../source/learn/intrinsics/_pages/DIM.md:3
#: ../../source/learn/intrinsics/_pages/DOT_PRODUCT.md:3
#: ../../source/learn/intrinsics/_pages/DPROD.md:3
#: ../../source/learn/intrinsics/_pages/DSHIFTL.md:3
#: ../../source/learn/intrinsics/_pages/DSHIFTR.md:3
#: ../../source/learn/intrinsics/_pages/EOSHIFT.md:3
#: ../../source/learn/intrinsics/_pages/EPSILON.md:3
#: ../../source/learn/intrinsics/_pages/ERF.md:3
#: ../../source/learn/intrinsics/_pages/ERFC.md:3
#: ../../source/learn/intrinsics/_pages/ERFC_SCALED.md:3
#: ../../source/learn/intrinsics/_pages/EVENT_QUERY.md:3
#: ../../source/learn/intrinsics/_pages/EXECUTE_COMMAND_LINE.md:3
#: ../../source/learn/intrinsics/_pages/EXP.md:3
#: ../../source/learn/intrinsics/_pages/EXPONENT.md:3
#: ../../source/learn/intrinsics/_pages/EXTENDS_TYPE_OF.md:3
#: ../../source/learn/intrinsics/_pages/FINDLOC.md:3
#: ../../source/learn/intrinsics/_pages/FLOOR.md:3
#: ../../source/learn/intrinsics/_pages/FRACTION.md:3
#: ../../source/learn/intrinsics/_pages/GAMMA.md:3
#: ../../source/learn/intrinsics/_pages/GET_COMMAND.md:3
#: ../../source/learn/intrinsics/_pages/GET_COMMAND_ARGUMENT.md:3
#: ../../source/learn/intrinsics/_pages/GET_ENVIRONMENT_VARIABLE.md:3
#: ../../source/learn/intrinsics/_pages/HUGE.md:3
#: ../../source/learn/intrinsics/_pages/HYPOT.md:3
#: ../../source/learn/intrinsics/_pages/IACHAR.md:3
#: ../../source/learn/intrinsics/_pages/IALL.md:3
#: ../../source/learn/intrinsics/_pages/IAND.md:3
#: ../../source/learn/intrinsics/_pages/IANY.md:3
#: ../../source/learn/intrinsics/_pages/IBCLR.md:3
#: ../../source/learn/intrinsics/_pages/IBITS.md:3
#: ../../source/learn/intrinsics/_pages/IBSET.md:3
#: ../../source/learn/intrinsics/_pages/ICHAR.md:3
#: ../../source/learn/intrinsics/_pages/IEOR.md:3
#: ../../source/learn/intrinsics/_pages/IMAGE_INDEX.md:3
#: ../../source/learn/intrinsics/_pages/INDEX.md:3
#: ../../source/learn/intrinsics/_pages/INT.md:3
#: ../../source/learn/intrinsics/_pages/IOR.md:3
#: ../../source/learn/intrinsics/_pages/IPARITY.md:3
#: ../../source/learn/intrinsics/_pages/ISHFT.md:3
#: ../../source/learn/intrinsics/_pages/ISHFTC.md:3
#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:3
#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_END.md:3
#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_EOR.md:3
#: ../../source/learn/intrinsics/_pages/KIND.md:3
#: ../../source/learn/intrinsics/_pages/LBOUND.md:3
#: ../../source/learn/intrinsics/_pages/LEADZ.md:3
#: ../../source/learn/intrinsics/_pages/LEN.md:3
#: ../../source/learn/intrinsics/_pages/LEN_TRIM.md:3
#: ../../source/learn/intrinsics/_pages/LGE.md:3
#: ../../source/learn/intrinsics/_pages/LGT.md:3
#: ../../source/learn/intrinsics/_pages/LLE.md:3
#: ../../source/learn/intrinsics/_pages/LLT.md:3
#: ../../source/learn/intrinsics/_pages/LOG.md:3
#: ../../source/learn/intrinsics/_pages/LOG10.md:3
#: ../../source/learn/intrinsics/_pages/LOGICAL.md:3
#: ../../source/learn/intrinsics/_pages/LOG_GAMMA.md:3
#: ../../source/learn/intrinsics/_pages/MASKL.md:3
#: ../../source/learn/intrinsics/_pages/MASKR.md:3
#: ../../source/learn/intrinsics/_pages/MATMUL.md:3
#: ../../source/learn/intrinsics/_pages/MAX.md:3
#: ../../source/learn/intrinsics/_pages/MAXEXPONENT.md:3
#: ../../source/learn/intrinsics/_pages/MAXLOC.md:3
#: ../../source/learn/intrinsics/_pages/MAXVAL.md:3
#: ../../source/learn/intrinsics/_pages/MERGE.md:3
#: ../../source/learn/intrinsics/_pages/MERGE_BITS.md:3
#: ../../source/learn/intrinsics/_pages/MIN.md:3
#: ../../source/learn/intrinsics/_pages/MINEXPONENT.md:3
#: ../../source/learn/intrinsics/_pages/MINLOC.md:3
#: ../../source/learn/intrinsics/_pages/MINVAL.md:3
#: ../../source/learn/intrinsics/_pages/MOD.md:3
#: ../../source/learn/intrinsics/_pages/MODULO.md:3
#: ../../source/learn/intrinsics/_pages/MOVE_ALLOC.md:3
#: ../../source/learn/intrinsics/_pages/MVBITS.md:3
#: ../../source/learn/intrinsics/_pages/NEAREST.md:3
#: ../../source/learn/intrinsics/_pages/NEW_LINE.md:3
#: ../../source/learn/intrinsics/_pages/NINT.md:3
#: ../../source/learn/intrinsics/_pages/NORM2.md:3
#: ../../source/learn/intrinsics/_pages/NOT.md:3
#: ../../source/learn/intrinsics/_pages/NULL.md:3
#: ../../source/learn/intrinsics/_pages/NUM_IMAGES.md:3
#: ../../source/learn/intrinsics/_pages/PACK.md:3
#: ../../source/learn/intrinsics/_pages/PARITY.md:3
#: ../../source/learn/intrinsics/_pages/POPCNT.md:3
#: ../../source/learn/intrinsics/_pages/POPPAR.md:3
#: ../../source/learn/intrinsics/_pages/PRECISION.md:3
#: ../../source/learn/intrinsics/_pages/PRESENT.md:3
#: ../../source/learn/intrinsics/_pages/PRODUCT.md:3
#: ../../source/learn/intrinsics/_pages/RADIX.md:3
#: ../../source/learn/intrinsics/_pages/RANDOM_NUMBER.md:3
#: ../../source/learn/intrinsics/_pages/RANDOM_SEED.md:3
#: ../../source/learn/intrinsics/_pages/RANGE.md:3
#: ../../source/learn/intrinsics/_pages/RANK.md:3
#: ../../source/learn/intrinsics/_pages/REAL.md:3
#: ../../source/learn/intrinsics/_pages/REPEAT.md:3
#: ../../source/learn/intrinsics/_pages/RESHAPE.md:3
#: ../../source/learn/intrinsics/_pages/RRSPACING.md:3
#: ../../source/learn/intrinsics/_pages/SAME_TYPE_AS.md:3
#: ../../source/learn/intrinsics/_pages/SCALE.md:3
#: ../../source/learn/intrinsics/_pages/SCAN.md:3
#: ../../source/learn/intrinsics/_pages/SELECTED_CHAR_KIND.md:3
#: ../../source/learn/intrinsics/_pages/SELECTED_INT_KIND.md:3
#: ../../source/learn/intrinsics/_pages/SELECTED_REAL_KIND.md:3
#: ../../source/learn/intrinsics/_pages/SET_EXPONENT.md:3
#: ../../source/learn/intrinsics/_pages/SHAPE.md:3
#: ../../source/learn/intrinsics/_pages/SHIFTA.md:3
#: ../../source/learn/intrinsics/_pages/SHIFTL.md:3
#: ../../source/learn/intrinsics/_pages/SHIFTR.md:3
#: ../../source/learn/intrinsics/_pages/SIGN.md:3
#: ../../source/learn/intrinsics/_pages/SIN.md:3
#: ../../source/learn/intrinsics/_pages/SINH.md:3
#: ../../source/learn/intrinsics/_pages/SIZE.md:3
#: ../../source/learn/intrinsics/_pages/SPACING.md:3
#: ../../source/learn/intrinsics/_pages/SPREAD.md:3
#: ../../source/learn/intrinsics/_pages/SQRT.md:3
#: ../../source/learn/intrinsics/_pages/STORAGE_SIZE.md:3
#: ../../source/learn/intrinsics/_pages/SUM.md:3
#: ../../source/learn/intrinsics/_pages/SYSTEM_CLOCK.md:3
#: ../../source/learn/intrinsics/_pages/TAN.md:3
#: ../../source/learn/intrinsics/_pages/TANH.md:3
#: ../../source/learn/intrinsics/_pages/THIS_IMAGE.md:3
#: ../../source/learn/intrinsics/_pages/TINY.md:3
#: ../../source/learn/intrinsics/_pages/TRAILZ.md:3
#: ../../source/learn/intrinsics/_pages/TRANSFER.md:3
#: ../../source/learn/intrinsics/_pages/TRANSPOSE.md:3
#: ../../source/learn/intrinsics/_pages/TRIM.md:3
#: ../../source/learn/intrinsics/_pages/UBOUND.md:3
#: ../../source/learn/intrinsics/_pages/UNPACK.md:3
#: ../../source/learn/intrinsics/_pages/VERIFY.md:3
msgid "__Name__"
msgstr "__Nome__"

#: ../../source/learn/intrinsics/_pages/MERGE.md:5
msgid "__merge__(3) - \\[ARRAY CONSTRUCTION\\] Merge variables"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ABS.md:7
#: ../../source/learn/intrinsics/_pages/ACHAR.md:7
#: ../../source/learn/intrinsics/_pages/ACOS.md:6
#: ../../source/learn/intrinsics/_pages/ACOSH.md:7
#: ../../source/learn/intrinsics/_pages/ADJUSTL.md:7
#: ../../source/learn/intrinsics/_pages/ADJUSTR.md:7
#: ../../source/learn/intrinsics/_pages/AIMAG.md:8
#: ../../source/learn/intrinsics/_pages/AINT.md:8
#: ../../source/learn/intrinsics/_pages/ALL.md:8
#: ../../source/learn/intrinsics/_pages/ALLOCATED.md:8
#: ../../source/learn/intrinsics/_pages/ANINT.md:8
#: ../../source/learn/intrinsics/_pages/ANY.md:8
#: ../../source/learn/intrinsics/_pages/ASIN.md:7
#: ../../source/learn/intrinsics/_pages/ASINH.md:8
#: ../../source/learn/intrinsics/_pages/ASSOCIATED.md:8
#: ../../source/learn/intrinsics/_pages/ATAN.md:7
#: ../../source/learn/intrinsics/_pages/ATAN2.md:7
#: ../../source/learn/intrinsics/_pages/ATANH.md:8
#: ../../source/learn/intrinsics/_pages/ATOMIC_ADD.md:7
#: ../../source/learn/intrinsics/_pages/ATOMIC_AND.md:8
#: ../../source/learn/intrinsics/_pages/ATOMIC_CAS.md:8
#: ../../source/learn/intrinsics/_pages/ATOMIC_DEFINE.md:8
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_ADD.md:8
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_AND.md:8
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_OR.md:8
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_XOR.md:8
#: ../../source/learn/intrinsics/_pages/ATOMIC_OR.md:8
#: ../../source/learn/intrinsics/_pages/ATOMIC_REF.md:8
#: ../../source/learn/intrinsics/_pages/ATOMIC_XOR.md:8
#: ../../source/learn/intrinsics/_pages/BESSEL_J0.md:8
#: ../../source/learn/intrinsics/_pages/BESSEL_J1.md:8
#: ../../source/learn/intrinsics/_pages/BESSEL_JN.md:8
#: ../../source/learn/intrinsics/_pages/BESSEL_Y0.md:8
#: ../../source/learn/intrinsics/_pages/BESSEL_Y1.md:8
#: ../../source/learn/intrinsics/_pages/BESSEL_YN.md:8
#: ../../source/learn/intrinsics/_pages/BGE.md:8
#: ../../source/learn/intrinsics/_pages/BGT.md:8
#: ../../source/learn/intrinsics/_pages/BIT_SIZE.md:7
#: ../../source/learn/intrinsics/_pages/BLE.md:8
#: ../../source/learn/intrinsics/_pages/BLT.md:8
#: ../../source/learn/intrinsics/_pages/BTEST.md:7
#: ../../source/learn/intrinsics/_pages/CEILING.md:8
#: ../../source/learn/intrinsics/_pages/CHAR.md:8
#: ../../source/learn/intrinsics/_pages/CMPLX.md:8
#: ../../source/learn/intrinsics/_pages/COMMAND_ARGUMENT_COUNT.md:7
#: ../../source/learn/intrinsics/_pages/COMPILER_OPTIONS.md:8
#: ../../source/learn/intrinsics/_pages/COMPILER_VERSION.md:8
#: ../../source/learn/intrinsics/_pages/CONJG.md:7
#: ../../source/learn/intrinsics/_pages/COS.md:7
#: ../../source/learn/intrinsics/_pages/COSH.md:8
#: ../../source/learn/intrinsics/_pages/COUNT.md:8
#: ../../source/learn/intrinsics/_pages/CO_BROADCAST.md:8
#: ../../source/learn/intrinsics/_pages/CO_LBOUND.md:8
#: ../../source/learn/intrinsics/_pages/CO_MAX.md:8
#: ../../source/learn/intrinsics/_pages/CO_MIN.md:8
#: ../../source/learn/intrinsics/_pages/CO_REDUCE.md:8
#: ../../source/learn/intrinsics/_pages/CO_SUM.md:8
#: ../../source/learn/intrinsics/_pages/CO_UBOUND.md:8
#: ../../source/learn/intrinsics/_pages/CPU_TIME.md:7
#: ../../source/learn/intrinsics/_pages/CSHIFT.md:8
#: ../../source/learn/intrinsics/_pages/C_ASSOCIATED.md:8
#: ../../source/learn/intrinsics/_pages/C_FUNLOC.md:8
#: ../../source/learn/intrinsics/_pages/C_F_POINTER.md:8
#: ../../source/learn/intrinsics/_pages/C_F_PROCPOINTER.md:8
#: ../../source/learn/intrinsics/_pages/C_LOC.md:8
#: ../../source/learn/intrinsics/_pages/C_SIZEOF.md:8
#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:7
#: ../../source/learn/intrinsics/_pages/DBLE.md:8
#: ../../source/learn/intrinsics/_pages/DIGITS.md:7
#: ../../source/learn/intrinsics/_pages/DIM.md:8
#: ../../source/learn/intrinsics/_pages/DOT_PRODUCT.md:8
#: ../../source/learn/intrinsics/_pages/DPROD.md:8
#: ../../source/learn/intrinsics/_pages/DSHIFTL.md:8
#: ../../source/learn/intrinsics/_pages/DSHIFTR.md:8
#: ../../source/learn/intrinsics/_pages/EOSHIFT.md:8
#: ../../source/learn/intrinsics/_pages/EPSILON.md:7
#: ../../source/learn/intrinsics/_pages/ERF.md:8
#: ../../source/learn/intrinsics/_pages/ERFC.md:8
#: ../../source/learn/intrinsics/_pages/ERFC_SCALED.md:8
#: ../../source/learn/intrinsics/_pages/EVENT_QUERY.md:8
#: ../../source/learn/intrinsics/_pages/EXECUTE_COMMAND_LINE.md:8
#: ../../source/learn/intrinsics/_pages/EXP.md:7
#: ../../source/learn/intrinsics/_pages/EXPONENT.md:8
#: ../../source/learn/intrinsics/_pages/EXTENDS_TYPE_OF.md:8
#: ../../source/learn/intrinsics/_pages/FINDLOC.md:8
#: ../../source/learn/intrinsics/_pages/FLOOR.md:7
#: ../../source/learn/intrinsics/_pages/FRACTION.md:8
#: ../../source/learn/intrinsics/_pages/GAMMA.md:7
#: ../../source/learn/intrinsics/_pages/GET_COMMAND.md:7
#: ../../source/learn/intrinsics/_pages/GET_COMMAND_ARGUMENT.md:7
#: ../../source/learn/intrinsics/_pages/GET_ENVIRONMENT_VARIABLE.md:7
#: ../../source/learn/intrinsics/_pages/HUGE.md:7
#: ../../source/learn/intrinsics/_pages/HYPOT.md:7
#: ../../source/learn/intrinsics/_pages/IACHAR.md:8
#: ../../source/learn/intrinsics/_pages/IALL.md:8
#: ../../source/learn/intrinsics/_pages/IAND.md:8
#: ../../source/learn/intrinsics/_pages/IANY.md:8
#: ../../source/learn/intrinsics/_pages/IBCLR.md:8
#: ../../source/learn/intrinsics/_pages/IBITS.md:8
#: ../../source/learn/intrinsics/_pages/IBSET.md:8
#: ../../source/learn/intrinsics/_pages/ICHAR.md:8
#: ../../source/learn/intrinsics/_pages/IEOR.md:8
#: ../../source/learn/intrinsics/_pages/IMAGE_INDEX.md:8
#: ../../source/learn/intrinsics/_pages/INDEX.md:8
#: ../../source/learn/intrinsics/_pages/INT.md:6
#: ../../source/learn/intrinsics/_pages/IOR.md:8
#: ../../source/learn/intrinsics/_pages/IPARITY.md:8
#: ../../source/learn/intrinsics/_pages/ISHFT.md:8
#: ../../source/learn/intrinsics/_pages/ISHFTC.md:8
#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:8
#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_END.md:8
#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_EOR.md:8
#: ../../source/learn/intrinsics/_pages/KIND.md:8
#: ../../source/learn/intrinsics/_pages/LBOUND.md:7
#: ../../source/learn/intrinsics/_pages/LEADZ.md:8
#: ../../source/learn/intrinsics/_pages/LEN.md:7
#: ../../source/learn/intrinsics/_pages/LEN_TRIM.md:7
#: ../../source/learn/intrinsics/_pages/LGE.md:8
#: ../../source/learn/intrinsics/_pages/LGT.md:8
#: ../../source/learn/intrinsics/_pages/LLE.md:8
#: ../../source/learn/intrinsics/_pages/LLT.md:8
#: ../../source/learn/intrinsics/_pages/LOG.md:8
#: ../../source/learn/intrinsics/_pages/LOG10.md:7
#: ../../source/learn/intrinsics/_pages/LOGICAL.md:8
#: ../../source/learn/intrinsics/_pages/LOG_GAMMA.md:8
#: ../../source/learn/intrinsics/_pages/MASKL.md:7
#: ../../source/learn/intrinsics/_pages/MASKR.md:7
#: ../../source/learn/intrinsics/_pages/MATMUL.md:8
#: ../../source/learn/intrinsics/_pages/MAX.md:7
#: ../../source/learn/intrinsics/_pages/MAXEXPONENT.md:8
#: ../../source/learn/intrinsics/_pages/MAXLOC.md:8
#: ../../source/learn/intrinsics/_pages/MAXVAL.md:8
#: ../../source/learn/intrinsics/_pages/MERGE.md:7
#: ../../source/learn/intrinsics/_pages/MERGE_BITS.md:7
#: ../../source/learn/intrinsics/_pages/MIN.md:8
#: ../../source/learn/intrinsics/_pages/MINEXPONENT.md:8
#: ../../source/learn/intrinsics/_pages/MINLOC.md:8
#: ../../source/learn/intrinsics/_pages/MINVAL.md:7
#: ../../source/learn/intrinsics/_pages/MOD.md:8
#: ../../source/learn/intrinsics/_pages/MODULO.md:8
#: ../../source/learn/intrinsics/_pages/MOVE_ALLOC.md:8
#: ../../source/learn/intrinsics/_pages/MVBITS.md:8
#: ../../source/learn/intrinsics/_pages/NEAREST.md:8
#: ../../source/learn/intrinsics/_pages/NEW_LINE.md:7
#: ../../source/learn/intrinsics/_pages/NINT.md:7
#: ../../source/learn/intrinsics/_pages/NORM2.md:8
#: ../../source/learn/intrinsics/_pages/NOT.md:6
#: ../../source/learn/intrinsics/_pages/NULL.md:8
#: ../../source/learn/intrinsics/_pages/NUM_IMAGES.md:8
#: ../../source/learn/intrinsics/_pages/PACK.md:7
#: ../../source/learn/intrinsics/_pages/PARITY.md:8
#: ../../source/learn/intrinsics/_pages/POPCNT.md:8
#: ../../source/learn/intrinsics/_pages/POPPAR.md:8
#: ../../source/learn/intrinsics/_pages/PRECISION.md:8
#: ../../source/learn/intrinsics/_pages/PRESENT.md:8
#: ../../source/learn/intrinsics/_pages/PRODUCT.md:7
#: ../../source/learn/intrinsics/_pages/RADIX.md:8
#: ../../source/learn/intrinsics/_pages/RANDOM_NUMBER.md:8
#: ../../source/learn/intrinsics/_pages/RANDOM_SEED.md:8
#: ../../source/learn/intrinsics/_pages/RANGE.md:8
#: ../../source/learn/intrinsics/_pages/RANK.md:8
#: ../../source/learn/intrinsics/_pages/REAL.md:7
#: ../../source/learn/intrinsics/_pages/REPEAT.md:8
#: ../../source/learn/intrinsics/_pages/RESHAPE.md:8
#: ../../source/learn/intrinsics/_pages/RRSPACING.md:8
#: ../../source/learn/intrinsics/_pages/SAME_TYPE_AS.md:8
#: ../../source/learn/intrinsics/_pages/SCALE.md:8
#: ../../source/learn/intrinsics/_pages/SCAN.md:8
#: ../../source/learn/intrinsics/_pages/SELECTED_CHAR_KIND.md:8
#: ../../source/learn/intrinsics/_pages/SELECTED_INT_KIND.md:8
#: ../../source/learn/intrinsics/_pages/SELECTED_REAL_KIND.md:8
#: ../../source/learn/intrinsics/_pages/SET_EXPONENT.md:8
#: ../../source/learn/intrinsics/_pages/SHAPE.md:8
#: ../../source/learn/intrinsics/_pages/SHIFTA.md:8
#: ../../source/learn/intrinsics/_pages/SHIFTL.md:8
#: ../../source/learn/intrinsics/_pages/SHIFTR.md:8
#: ../../source/learn/intrinsics/_pages/SIGN.md:8
#: ../../source/learn/intrinsics/_pages/SIN.md:7
#: ../../source/learn/intrinsics/_pages/SINH.md:7
#: ../../source/learn/intrinsics/_pages/SIZE.md:8
#: ../../source/learn/intrinsics/_pages/SPACING.md:8
#: ../../source/learn/intrinsics/_pages/SPREAD.md:8
#: ../../source/learn/intrinsics/_pages/SQRT.md:7
#: ../../source/learn/intrinsics/_pages/STORAGE_SIZE.md:8
#: ../../source/learn/intrinsics/_pages/SUM.md:8
#: ../../source/learn/intrinsics/_pages/SYSTEM_CLOCK.md:8
#: ../../source/learn/intrinsics/_pages/TAN.md:8
#: ../../source/learn/intrinsics/_pages/TANH.md:8
#: ../../source/learn/intrinsics/_pages/THIS_IMAGE.md:8
#: ../../source/learn/intrinsics/_pages/TINY.md:8
#: ../../source/learn/intrinsics/_pages/TRAILZ.md:7
#: ../../source/learn/intrinsics/_pages/TRANSFER.md:8
#: ../../source/learn/intrinsics/_pages/TRANSPOSE.md:8
#: ../../source/learn/intrinsics/_pages/TRIM.md:8
#: ../../source/learn/intrinsics/_pages/UBOUND.md:7
#: ../../source/learn/intrinsics/_pages/UNPACK.md:8
#: ../../source/learn/intrinsics/_pages/VERIFY.md:7
msgid "__Syntax__"
msgstr "__Sintaxe__"

#: ../../source/learn/intrinsics/_pages/ABS.md:23
#: ../../source/learn/intrinsics/_pages/ACHAR.md:18
#: ../../source/learn/intrinsics/_pages/ACOS.md:17
#: ../../source/learn/intrinsics/_pages/ACOSH.md:18
#: ../../source/learn/intrinsics/_pages/ADJUSTL.md:15
#: ../../source/learn/intrinsics/_pages/ADJUSTR.md:15
#: ../../source/learn/intrinsics/_pages/AIMAG.md:16
#: ../../source/learn/intrinsics/_pages/AINT.md:25
#: ../../source/learn/intrinsics/_pages/ALL.md:12
#: ../../source/learn/intrinsics/_pages/ALLOCATED.md:16
#: ../../source/learn/intrinsics/_pages/ANINT.md:12
#: ../../source/learn/intrinsics/_pages/ANY.md:12
#: ../../source/learn/intrinsics/_pages/ASIN.md:17
#: ../../source/learn/intrinsics/_pages/ASINH.md:18
#: ../../source/learn/intrinsics/_pages/ASSOCIATED.md:12
#: ../../source/learn/intrinsics/_pages/ATAN.md:18
#: ../../source/learn/intrinsics/_pages/ATAN2.md:11
#: ../../source/learn/intrinsics/_pages/ATANH.md:12
#: ../../source/learn/intrinsics/_pages/ATOMIC_ADD.md:11
#: ../../source/learn/intrinsics/_pages/ATOMIC_AND.md:12
#: ../../source/learn/intrinsics/_pages/ATOMIC_CAS.md:12
#: ../../source/learn/intrinsics/_pages/ATOMIC_DEFINE.md:17
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_ADD.md:12
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_AND.md:12
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_OR.md:12
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_XOR.md:12
#: ../../source/learn/intrinsics/_pages/ATOMIC_OR.md:12
#: ../../source/learn/intrinsics/_pages/ATOMIC_REF.md:12
#: ../../source/learn/intrinsics/_pages/ATOMIC_XOR.md:12
#: ../../source/learn/intrinsics/_pages/BESSEL_J0.md:12
#: ../../source/learn/intrinsics/_pages/BESSEL_J1.md:12
#: ../../source/learn/intrinsics/_pages/BESSEL_JN.md:14
#: ../../source/learn/intrinsics/_pages/BESSEL_Y0.md:12
#: ../../source/learn/intrinsics/_pages/BESSEL_Y1.md:12
#: ../../source/learn/intrinsics/_pages/BESSEL_YN.md:14
#: ../../source/learn/intrinsics/_pages/BGE.md:12
#: ../../source/learn/intrinsics/_pages/BGT.md:12
#: ../../source/learn/intrinsics/_pages/BIT_SIZE.md:14
#: ../../source/learn/intrinsics/_pages/BLE.md:12
#: ../../source/learn/intrinsics/_pages/BLT.md:12
#: ../../source/learn/intrinsics/_pages/BTEST.md:17
#: ../../source/learn/intrinsics/_pages/CEILING.md:16
#: ../../source/learn/intrinsics/_pages/CHAR.md:16
#: ../../source/learn/intrinsics/_pages/CMPLX.md:17
#: ../../source/learn/intrinsics/_pages/COMMAND_ARGUMENT_COUNT.md:14
#: ../../source/learn/intrinsics/_pages/COMPILER_OPTIONS.md:12
#: ../../source/learn/intrinsics/_pages/COMPILER_VERSION.md:14
#: ../../source/learn/intrinsics/_pages/CONJG.md:16
#: ../../source/learn/intrinsics/_pages/COS.md:17
#: ../../source/learn/intrinsics/_pages/COSH.md:19
#: ../../source/learn/intrinsics/_pages/COUNT.md:12
#: ../../source/learn/intrinsics/_pages/CO_BROADCAST.md:12
#: ../../source/learn/intrinsics/_pages/CO_LBOUND.md:12
#: ../../source/learn/intrinsics/_pages/CO_MAX.md:12
#: ../../source/learn/intrinsics/_pages/CO_MIN.md:12
#: ../../source/learn/intrinsics/_pages/CO_REDUCE.md:12
#: ../../source/learn/intrinsics/_pages/CO_SUM.md:12
#: ../../source/learn/intrinsics/_pages/CO_UBOUND.md:12
#: ../../source/learn/intrinsics/_pages/CPU_TIME.md:12
#: ../../source/learn/intrinsics/_pages/CSHIFT.md:12
#: ../../source/learn/intrinsics/_pages/C_ASSOCIATED.md:12
#: ../../source/learn/intrinsics/_pages/C_FUNLOC.md:12
#: ../../source/learn/intrinsics/_pages/C_F_POINTER.md:12
#: ../../source/learn/intrinsics/_pages/C_F_PROCPOINTER.md:12
#: ../../source/learn/intrinsics/_pages/C_LOC.md:12
#: ../../source/learn/intrinsics/_pages/C_SIZEOF.md:12
#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:16
#: ../../source/learn/intrinsics/_pages/DBLE.md:18
#: ../../source/learn/intrinsics/_pages/DIGITS.md:17
#: ../../source/learn/intrinsics/_pages/DIM.md:17
#: ../../source/learn/intrinsics/_pages/DOT_PRODUCT.md:12
#: ../../source/learn/intrinsics/_pages/DPROD.md:12
#: ../../source/learn/intrinsics/_pages/DSHIFTL.md:12
#: ../../source/learn/intrinsics/_pages/DSHIFTR.md:12
#: ../../source/learn/intrinsics/_pages/EOSHIFT.md:12
#: ../../source/learn/intrinsics/_pages/EPSILON.md:11
#: ../../source/learn/intrinsics/_pages/ERF.md:12
#: ../../source/learn/intrinsics/_pages/ERFC.md:16
#: ../../source/learn/intrinsics/_pages/ERFC_SCALED.md:12
#: ../../source/learn/intrinsics/_pages/EVENT_QUERY.md:12
#: ../../source/learn/intrinsics/_pages/EXECUTE_COMMAND_LINE.md:18
#: ../../source/learn/intrinsics/_pages/EXP.md:11
#: ../../source/learn/intrinsics/_pages/EXPONENT.md:12
#: ../../source/learn/intrinsics/_pages/EXTENDS_TYPE_OF.md:12
#: ../../source/learn/intrinsics/_pages/FINDLOC.md:16
#: ../../source/learn/intrinsics/_pages/FLOOR.md:17
#: ../../source/learn/intrinsics/_pages/FRACTION.md:12
#: ../../source/learn/intrinsics/_pages/GAMMA.md:11
#: ../../source/learn/intrinsics/_pages/GET_COMMAND.md:16
#: ../../source/learn/intrinsics/_pages/GET_COMMAND_ARGUMENT.md:17
#: ../../source/learn/intrinsics/_pages/GET_ENVIRONMENT_VARIABLE.md:17
#: ../../source/learn/intrinsics/_pages/HUGE.md:18
#: ../../source/learn/intrinsics/_pages/HYPOT.md:16
#: ../../source/learn/intrinsics/_pages/IACHAR.md:12
#: ../../source/learn/intrinsics/_pages/IALL.md:16
#: ../../source/learn/intrinsics/_pages/IAND.md:12
#: ../../source/learn/intrinsics/_pages/IANY.md:16
#: ../../source/learn/intrinsics/_pages/IBCLR.md:12
#: ../../source/learn/intrinsics/_pages/IBITS.md:12
#: ../../source/learn/intrinsics/_pages/IBSET.md:12
#: ../../source/learn/intrinsics/_pages/ICHAR.md:15
#: ../../source/learn/intrinsics/_pages/IEOR.md:12
#: ../../source/learn/intrinsics/_pages/IMAGE_INDEX.md:12
#: ../../source/learn/intrinsics/_pages/INDEX.md:18
#: ../../source/learn/intrinsics/_pages/INT.md:14
#: ../../source/learn/intrinsics/_pages/IOR.md:14
#: ../../source/learn/intrinsics/_pages/IPARITY.md:16
#: ../../source/learn/intrinsics/_pages/ISHFT.md:12
#: ../../source/learn/intrinsics/_pages/ISHFTC.md:12
#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:12
#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_END.md:15
#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_EOR.md:12
#: ../../source/learn/intrinsics/_pages/KIND.md:12
#: ../../source/learn/intrinsics/_pages/LBOUND.md:16
#: ../../source/learn/intrinsics/_pages/LEADZ.md:12
#: ../../source/learn/intrinsics/_pages/LEN.md:19
#: ../../source/learn/intrinsics/_pages/LEN_TRIM.md:16
#: ../../source/learn/intrinsics/_pages/LGE.md:12
#: ../../source/learn/intrinsics/_pages/LGT.md:12
#: ../../source/learn/intrinsics/_pages/LLE.md:18
#: ../../source/learn/intrinsics/_pages/LLT.md:12
#: ../../source/learn/intrinsics/_pages/LOG.md:12
#: ../../source/learn/intrinsics/_pages/LOG10.md:14
#: ../../source/learn/intrinsics/_pages/LOGICAL.md:16
#: ../../source/learn/intrinsics/_pages/LOG_GAMMA.md:12
#: ../../source/learn/intrinsics/_pages/MASKL.md:14
#: ../../source/learn/intrinsics/_pages/MASKR.md:14
#: ../../source/learn/intrinsics/_pages/MATMUL.md:12
#: ../../source/learn/intrinsics/_pages/MAX.md:11
#: ../../source/learn/intrinsics/_pages/MAXEXPONENT.md:12
#: ../../source/learn/intrinsics/_pages/MAXLOC.md:12
#: ../../source/learn/intrinsics/_pages/MAXVAL.md:16
#: ../../source/learn/intrinsics/_pages/MERGE.md:11
#: ../../source/learn/intrinsics/_pages/MERGE_BITS.md:19
#: ../../source/learn/intrinsics/_pages/MIN.md:12
#: ../../source/learn/intrinsics/_pages/MINEXPONENT.md:12
#: ../../source/learn/intrinsics/_pages/MINLOC.md:16
#: ../../source/learn/intrinsics/_pages/MINVAL.md:11
#: ../../source/learn/intrinsics/_pages/MOD.md:12
#: ../../source/learn/intrinsics/_pages/MODULO.md:12
#: ../../source/learn/intrinsics/_pages/MOVE_ALLOC.md:12
#: ../../source/learn/intrinsics/_pages/MVBITS.md:12
#: ../../source/learn/intrinsics/_pages/NEAREST.md:12
#: ../../source/learn/intrinsics/_pages/NEW_LINE.md:14
#: ../../source/learn/intrinsics/_pages/NINT.md:13
#: ../../source/learn/intrinsics/_pages/NORM2.md:17
#: ../../source/learn/intrinsics/_pages/NOT.md:10
#: ../../source/learn/intrinsics/_pages/NULL.md:13
#: ../../source/learn/intrinsics/_pages/NUM_IMAGES.md:12
#: ../../source/learn/intrinsics/_pages/PACK.md:20
#: ../../source/learn/intrinsics/_pages/POPCNT.md:12
#: ../../source/learn/intrinsics/_pages/POPPAR.md:12
#: ../../source/learn/intrinsics/_pages/PRECISION.md:12
#: ../../source/learn/intrinsics/_pages/PRESENT.md:15
#: ../../source/learn/intrinsics/_pages/PRODUCT.md:17
#: ../../source/learn/intrinsics/_pages/RADIX.md:12
#: ../../source/learn/intrinsics/_pages/RANDOM_NUMBER.md:12
#: ../../source/learn/intrinsics/_pages/RANDOM_SEED.md:12
#: ../../source/learn/intrinsics/_pages/RANGE.md:18
#: ../../source/learn/intrinsics/_pages/RANK.md:12
#: ../../source/learn/intrinsics/_pages/REAL.md:11
#: ../../source/learn/intrinsics/_pages/REPEAT.md:16
#: ../../source/learn/intrinsics/_pages/RESHAPE.md:12
#: ../../source/learn/intrinsics/_pages/RRSPACING.md:12
#: ../../source/learn/intrinsics/_pages/SAME_TYPE_AS.md:12
#: ../../source/learn/intrinsics/_pages/SCALE.md:15
#: ../../source/learn/intrinsics/_pages/SCAN.md:12
#: ../../source/learn/intrinsics/_pages/SELECTED_CHAR_KIND.md:12
#: ../../source/learn/intrinsics/_pages/SELECTED_INT_KIND.md:12
#: ../../source/learn/intrinsics/_pages/SELECTED_REAL_KIND.md:12
#: ../../source/learn/intrinsics/_pages/SET_EXPONENT.md:12
#: ../../source/learn/intrinsics/_pages/SHAPE.md:12
#: ../../source/learn/intrinsics/_pages/SHIFTA.md:12
#: ../../source/learn/intrinsics/_pages/SHIFTL.md:12
#: ../../source/learn/intrinsics/_pages/SHIFTR.md:12
#: ../../source/learn/intrinsics/_pages/SIN.md:17
#: ../../source/learn/intrinsics/_pages/SINH.md:17
#: ../../source/learn/intrinsics/_pages/SIZE.md:12
#: ../../source/learn/intrinsics/_pages/SPACING.md:12
#: ../../source/learn/intrinsics/_pages/SPREAD.md:18
#: ../../source/learn/intrinsics/_pages/SQRT.md:18
#: ../../source/learn/intrinsics/_pages/STORAGE_SIZE.md:12
#: ../../source/learn/intrinsics/_pages/SUM.md:13
#: ../../source/learn/intrinsics/_pages/SYSTEM_CLOCK.md:18
#: ../../source/learn/intrinsics/_pages/TAN.md:12
#: ../../source/learn/intrinsics/_pages/TANH.md:12
#: ../../source/learn/intrinsics/_pages/THIS_IMAGE.md:13
#: ../../source/learn/intrinsics/_pages/TINY.md:16
#: ../../source/learn/intrinsics/_pages/TRAILZ.md:12
#: ../../source/learn/intrinsics/_pages/TRANSFER.md:12
#: ../../source/learn/intrinsics/_pages/TRANSPOSE.md:12
#: ../../source/learn/intrinsics/_pages/TRIM.md:12
#: ../../source/learn/intrinsics/_pages/UBOUND.md:11
#: ../../source/learn/intrinsics/_pages/UNPACK.md:12
#: ../../source/learn/intrinsics/_pages/VERIFY.md:18
msgid "__Description__"
msgstr "__Descrição__"

#: ../../source/learn/intrinsics/_pages/MERGE.md:13
msgid ""
"The elemental function __merge__(3) selects values from two arrays or "
"scalars according to a logical mask. The result is equal to an element of"
" __tsource__ where the corresponding element of __mask__ is __.true.__, "
"or an element of __fsource__ when it is .false. ."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MERGE.md:18
msgid "Multi-dimensional arrays are supported."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MERGE.md:20
msgid ""
"Note that argument expressions to __merge__(3) are not required to be "
"short-circuited so (as an example) if the array __x__ contains zero "
"values in the statement below the standard does not prevent floating "
"point divide by zero being generated; as __1.0/x__ may be evaluated for "
"all values of __x__ before the mask is used to select which value to "
"retain:"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MERGE.md:30
msgid ""
"Note the compiler is also free to short-circuit or to generate an "
"infinity so this may work in many programming environments but is not "
"recommended."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MERGE.md:34
msgid ""
"For cases like this one may instead use masked assignment via the "
"__where__ construct:"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MERGE.md:45
msgid "instead of the more obscure"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ABS.md:34
#: ../../source/learn/intrinsics/_pages/ACHAR.md:31
#: ../../source/learn/intrinsics/_pages/ACOS.md:21
#: ../../source/learn/intrinsics/_pages/ACOSH.md:22
#: ../../source/learn/intrinsics/_pages/ADJUSTL.md:20
#: ../../source/learn/intrinsics/_pages/ADJUSTR.md:21
#: ../../source/learn/intrinsics/_pages/AIMAG.md:20
#: ../../source/learn/intrinsics/_pages/AINT.md:29
#: ../../source/learn/intrinsics/_pages/ALL.md:19
#: ../../source/learn/intrinsics/_pages/ALLOCATED.md:21
#: ../../source/learn/intrinsics/_pages/ANINT.md:16
#: ../../source/learn/intrinsics/_pages/ANY.md:17
#: ../../source/learn/intrinsics/_pages/ASIN.md:25
#: ../../source/learn/intrinsics/_pages/ASINH.md:22
#: ../../source/learn/intrinsics/_pages/ASSOCIATED.md:17
#: ../../source/learn/intrinsics/_pages/ATAN.md:22
#: ../../source/learn/intrinsics/_pages/ATAN2.md:23
#: ../../source/learn/intrinsics/_pages/ATANH.md:16
#: ../../source/learn/intrinsics/_pages/ATOMIC_ADD.md:21
#: ../../source/learn/intrinsics/_pages/ATOMIC_AND.md:22
#: ../../source/learn/intrinsics/_pages/ATOMIC_CAS.md:24
#: ../../source/learn/intrinsics/_pages/ATOMIC_DEFINE.md:27
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_ADD.md:23
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_AND.md:23
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_OR.md:23
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_XOR.md:23
#: ../../source/learn/intrinsics/_pages/ATOMIC_OR.md:22
#: ../../source/learn/intrinsics/_pages/ATOMIC_REF.md:22
#: ../../source/learn/intrinsics/_pages/ATOMIC_XOR.md:22
#: ../../source/learn/intrinsics/_pages/BESSEL_J0.md:17
#: ../../source/learn/intrinsics/_pages/BESSEL_J1.md:17
#: ../../source/learn/intrinsics/_pages/BESSEL_JN.md:23
#: ../../source/learn/intrinsics/_pages/BESSEL_Y0.md:17
#: ../../source/learn/intrinsics/_pages/BESSEL_Y1.md:17
#: ../../source/learn/intrinsics/_pages/BESSEL_YN.md:23
#: ../../source/learn/intrinsics/_pages/BGE.md:17
#: ../../source/learn/intrinsics/_pages/BGT.md:16
#: ../../source/learn/intrinsics/_pages/BIT_SIZE.md:22
#: ../../source/learn/intrinsics/_pages/BLE.md:16
#: ../../source/learn/intrinsics/_pages/BLT.md:16
#: ../../source/learn/intrinsics/_pages/BTEST.md:21
#: ../../source/learn/intrinsics/_pages/CEILING.md:20
#: ../../source/learn/intrinsics/_pages/CHAR.md:20
#: ../../source/learn/intrinsics/_pages/CMPLX.md:101
#: ../../source/learn/intrinsics/_pages/COMMAND_ARGUMENT_COUNT.md:19
#: ../../source/learn/intrinsics/_pages/COMPILER_OPTIONS.md:16
#: ../../source/learn/intrinsics/_pages/COMPILER_VERSION.md:19
#: ../../source/learn/intrinsics/_pages/CONJG.md:30
#: ../../source/learn/intrinsics/_pages/COS.md:25
#: ../../source/learn/intrinsics/_pages/COSH.md:23
#: ../../source/learn/intrinsics/_pages/COUNT.md:19
#: ../../source/learn/intrinsics/_pages/CO_BROADCAST.md:21
#: ../../source/learn/intrinsics/_pages/CO_LBOUND.md:17
#: ../../source/learn/intrinsics/_pages/CO_MAX.md:23
#: ../../source/learn/intrinsics/_pages/CO_MIN.md:23
#: ../../source/learn/intrinsics/_pages/CO_REDUCE.md:27
#: ../../source/learn/intrinsics/_pages/CO_SUM.md:23
#: ../../source/learn/intrinsics/_pages/CO_UBOUND.md:17
#: ../../source/learn/intrinsics/_pages/CSHIFT.md:23
#: ../../source/learn/intrinsics/_pages/C_ASSOCIATED.md:18
#: ../../source/learn/intrinsics/_pages/C_FUNLOC.md:16
#: ../../source/learn/intrinsics/_pages/C_F_POINTER.md:17
#: ../../source/learn/intrinsics/_pages/C_F_PROCPOINTER.md:17
#: ../../source/learn/intrinsics/_pages/C_LOC.md:16
#: ../../source/learn/intrinsics/_pages/C_SIZEOF.md:17
#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:23
#: ../../source/learn/intrinsics/_pages/DBLE.md:22
#: ../../source/learn/intrinsics/_pages/DIGITS.md:24
#: ../../source/learn/intrinsics/_pages/DIM.md:22
#: ../../source/learn/intrinsics/_pages/DOT_PRODUCT.md:22
#: ../../source/learn/intrinsics/_pages/DPROD.md:31
#: ../../source/learn/intrinsics/_pages/DSHIFTL.md:18
#: ../../source/learn/intrinsics/_pages/DSHIFTR.md:18
#: ../../source/learn/intrinsics/_pages/EOSHIFT.md:33
#: ../../source/learn/intrinsics/_pages/EPSILON.md:30
#: ../../source/learn/intrinsics/_pages/ERF.md:19
#: ../../source/learn/intrinsics/_pages/ERFC.md:35
#: ../../source/learn/intrinsics/_pages/ERFC_SCALED.md:22
#: ../../source/learn/intrinsics/_pages/EVENT_QUERY.md:20
#: ../../source/learn/intrinsics/_pages/EXECUTE_COMMAND_LINE.md:40
#: ../../source/learn/intrinsics/_pages/EXP.md:27
#: ../../source/learn/intrinsics/_pages/EXPONENT.md:17
#: ../../source/learn/intrinsics/_pages/FLOOR.md:23
#: ../../source/learn/intrinsics/_pages/FRACTION.md:18
#: ../../source/learn/intrinsics/_pages/GAMMA.md:23
#: ../../source/learn/intrinsics/_pages/HUGE.md:23
#: ../../source/learn/intrinsics/_pages/HYPOT.md:26
#: ../../source/learn/intrinsics/_pages/IACHAR.md:17
#: ../../source/learn/intrinsics/_pages/IALL.md:21
#: ../../source/learn/intrinsics/_pages/IAND.md:16
#: ../../source/learn/intrinsics/_pages/IANY.md:21
#: ../../source/learn/intrinsics/_pages/IBCLR.md:16
#: ../../source/learn/intrinsics/_pages/IBITS.md:19
#: ../../source/learn/intrinsics/_pages/IBSET.md:16
#: ../../source/learn/intrinsics/_pages/ICHAR.md:26
#: ../../source/learn/intrinsics/_pages/IEOR.md:16
#: ../../source/learn/intrinsics/_pages/IMAGE_INDEX.md:16
#: ../../source/learn/intrinsics/_pages/INDEX.md:24
#: ../../source/learn/intrinsics/_pages/INT.md:18
#: ../../source/learn/intrinsics/_pages/IOR.md:18
#: ../../source/learn/intrinsics/_pages/IPARITY.md:21
#: ../../source/learn/intrinsics/_pages/ISHFT.md:22
#: ../../source/learn/intrinsics/_pages/ISHFTC.md:22
#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:76
#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_END.md:23
#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_EOR.md:19
#: ../../source/learn/intrinsics/_pages/KIND.md:16
#: ../../source/learn/intrinsics/_pages/LBOUND.md:21
#: ../../source/learn/intrinsics/_pages/LEADZ.md:16
#: ../../source/learn/intrinsics/_pages/LEN.md:29
#: ../../source/learn/intrinsics/_pages/LEN_TRIM.md:20
#: ../../source/learn/intrinsics/_pages/LGE.md:26
#: ../../source/learn/intrinsics/_pages/LGT.md:26
#: ../../source/learn/intrinsics/_pages/LLE.md:32
#: ../../source/learn/intrinsics/_pages/LLT.md:26
#: ../../source/learn/intrinsics/_pages/LOG.md:17
#: ../../source/learn/intrinsics/_pages/LOG10.md:19
#: ../../source/learn/intrinsics/_pages/LOGICAL.md:20
#: ../../source/learn/intrinsics/_pages/LOG_GAMMA.md:16
#: ../../source/learn/intrinsics/_pages/MASKL.md:19
#: ../../source/learn/intrinsics/_pages/MASKR.md:19
#: ../../source/learn/intrinsics/_pages/MATMUL.md:16
#: ../../source/learn/intrinsics/_pages/MAX.md:15
#: ../../source/learn/intrinsics/_pages/MAXEXPONENT.md:17
#: ../../source/learn/intrinsics/_pages/MAXLOC.md:25
#: ../../source/learn/intrinsics/_pages/MAXVAL.md:26
#: ../../source/learn/intrinsics/_pages/MERGE.md:51
#: ../../source/learn/intrinsics/_pages/MERGE_BITS.md:43
#: ../../source/learn/intrinsics/_pages/MIN.md:16
#: ../../source/learn/intrinsics/_pages/MINEXPONENT.md:17
#: ../../source/learn/intrinsics/_pages/MINLOC.md:29
#: ../../source/learn/intrinsics/_pages/MINVAL.md:24
#: ../../source/learn/intrinsics/_pages/MOD.md:16
#: ../../source/learn/intrinsics/_pages/MODULO.md:16
#: ../../source/learn/intrinsics/_pages/MOVE_ALLOC.md:17
#: ../../source/learn/intrinsics/_pages/MVBITS.md:25
#: ../../source/learn/intrinsics/_pages/NEAREST.md:17
#: ../../source/learn/intrinsics/_pages/NEW_LINE.md:35
#: ../../source/learn/intrinsics/_pages/NINT.md:27
#: ../../source/learn/intrinsics/_pages/NORM2.md:22
#: ../../source/learn/intrinsics/_pages/NOT.md:14
#: ../../source/learn/intrinsics/_pages/NULL.md:22
#: ../../source/learn/intrinsics/_pages/NUM_IMAGES.md:16
#: ../../source/learn/intrinsics/_pages/PACK.md:28
#: ../../source/learn/intrinsics/_pages/POPCNT.md:17
#: ../../source/learn/intrinsics/_pages/POPPAR.md:17
#: ../../source/learn/intrinsics/_pages/PRECISION.md:17
#: ../../source/learn/intrinsics/_pages/PRESENT.md:19
#: ../../source/learn/intrinsics/_pages/PRODUCT.md:30
#: ../../source/learn/intrinsics/_pages/RADIX.md:16
#: ../../source/learn/intrinsics/_pages/RANDOM_NUMBER.md:17
#: ../../source/learn/intrinsics/_pages/RANDOM_SEED.md:20
#: ../../source/learn/intrinsics/_pages/RANGE.md:23
#: ../../source/learn/intrinsics/_pages/RANK.md:16
#: ../../source/learn/intrinsics/_pages/REAL.md:15
#: ../../source/learn/intrinsics/_pages/REPEAT.md:20
#: ../../source/learn/intrinsics/_pages/RESHAPE.md:18
#: ../../source/learn/intrinsics/_pages/RRSPACING.md:17
#: ../../source/learn/intrinsics/_pages/SAME_TYPE_AS.md:16
#: ../../source/learn/intrinsics/_pages/SCALE.md:19
#: ../../source/learn/intrinsics/_pages/SCAN.md:21
#: ../../source/learn/intrinsics/_pages/SELECTED_CHAR_KIND.md:20
#: ../../source/learn/intrinsics/_pages/SELECTED_INT_KIND.md:19
#: ../../source/learn/intrinsics/_pages/SELECTED_REAL_KIND.md:18
#: ../../source/learn/intrinsics/_pages/SET_EXPONENT.md:17
#: ../../source/learn/intrinsics/_pages/SHAPE.md:16
#: ../../source/learn/intrinsics/_pages/SHIFTA.md:21
#: ../../source/learn/intrinsics/_pages/SHIFTL.md:19
#: ../../source/learn/intrinsics/_pages/SHIFTR.md:19
#: ../../source/learn/intrinsics/_pages/SIN.md:26
#: ../../source/learn/intrinsics/_pages/SINH.md:28
#: ../../source/learn/intrinsics/_pages/SIZE.md:17
#: ../../source/learn/intrinsics/_pages/SPACING.md:17
#: ../../source/learn/intrinsics/_pages/SPREAD.md:26
#: ../../source/learn/intrinsics/_pages/SQRT.md:41
#: ../../source/learn/intrinsics/_pages/STORAGE_SIZE.md:16
#: ../../source/learn/intrinsics/_pages/SUM.md:18
#: ../../source/learn/intrinsics/_pages/SYSTEM_CLOCK.md:40
#: ../../source/learn/intrinsics/_pages/TAN.md:16
#: ../../source/learn/intrinsics/_pages/TANH.md:16
#: ../../source/learn/intrinsics/_pages/THIS_IMAGE.md:17
#: ../../source/learn/intrinsics/_pages/TINY.md:21
#: ../../source/learn/intrinsics/_pages/TRAILZ.md:16
#: ../../source/learn/intrinsics/_pages/TRANSFER.md:21
#: ../../source/learn/intrinsics/_pages/TRANSPOSE.md:17
#: ../../source/learn/intrinsics/_pages/TRIM.md:16
#: ../../source/learn/intrinsics/_pages/UBOUND.md:16
#: ../../source/learn/intrinsics/_pages/UNPACK.md:16
#: ../../source/learn/intrinsics/_pages/VERIFY.md:40
msgid "__Arguments__"
msgstr "__Argumentos__"

#: ../../source/learn/intrinsics/_pages/MERGE.md:53
#, fuzzy
msgid "__tsource__"
msgstr "__tsource__"

#: ../../source/learn/intrinsics/_pages/MERGE.md:54
msgid "May be of any type, including user-defined."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MERGE.md:56
#, fuzzy
msgid "__fsource__"
msgstr "__fsource__"

#: ../../source/learn/intrinsics/_pages/MERGE.md:57
msgid "Shall be of the same type and type parameters as __tsource__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ALL.md:21
#: ../../source/learn/intrinsics/_pages/ANY.md:19
#: ../../source/learn/intrinsics/_pages/COUNT.md:21
#: ../../source/learn/intrinsics/_pages/FINDLOC.md:48
#: ../../source/learn/intrinsics/_pages/IALL.md:30
#: ../../source/learn/intrinsics/_pages/IANY.md:30
#: ../../source/learn/intrinsics/_pages/IPARITY.md:30
#: ../../source/learn/intrinsics/_pages/MAXLOC.md:35
#: ../../source/learn/intrinsics/_pages/MAXVAL.md:36
#: ../../source/learn/intrinsics/_pages/MERGE.md:59
#: ../../source/learn/intrinsics/_pages/MINLOC.md:39
#: ../../source/learn/intrinsics/_pages/MINVAL.md:34
#: ../../source/learn/intrinsics/_pages/PACK.md:33
#: ../../source/learn/intrinsics/_pages/PRODUCT.md:39
#: ../../source/learn/intrinsics/_pages/SUM.md:27
#: ../../source/learn/intrinsics/_pages/UNPACK.md:22
#, fuzzy
msgid "__mask__"
msgstr "__mask__"

#: ../../source/learn/intrinsics/_pages/MERGE.md:60
msgid "Shall be of type _logical_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MERGE.md:62
msgid "Note that (currently) _character_ values must be of the same length."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ABS.md:40
#: ../../source/learn/intrinsics/_pages/ACHAR.md:41
#: ../../source/learn/intrinsics/_pages/ACOS.md:27
#: ../../source/learn/intrinsics/_pages/ACOSH.md:27
#: ../../source/learn/intrinsics/_pages/ADJUSTL.md:25
#: ../../source/learn/intrinsics/_pages/ADJUSTR.md:26
#: ../../source/learn/intrinsics/_pages/AIMAG.md:25
#: ../../source/learn/intrinsics/_pages/AINT.md:38
#: ../../source/learn/intrinsics/_pages/ALL.md:30
#: ../../source/learn/intrinsics/_pages/ALLOCATED.md:29
#: ../../source/learn/intrinsics/_pages/ANINT.md:25
#: ../../source/learn/intrinsics/_pages/ANY.md:27
#: ../../source/learn/intrinsics/_pages/ASIN.md:31
#: ../../source/learn/intrinsics/_pages/ASINH.md:27
#: ../../source/learn/intrinsics/_pages/ASSOCIATED.md:28
#: ../../source/learn/intrinsics/_pages/ATAN.md:32
#: ../../source/learn/intrinsics/_pages/ATAN2.md:32
#: ../../source/learn/intrinsics/_pages/ATANH.md:21
#: ../../source/learn/intrinsics/_pages/BESSEL_J0.md:22
#: ../../source/learn/intrinsics/_pages/BESSEL_J1.md:22
#: ../../source/learn/intrinsics/_pages/BESSEL_JN.md:38
#: ../../source/learn/intrinsics/_pages/BESSEL_Y0.md:22
#: ../../source/learn/intrinsics/_pages/BESSEL_Y1.md:22
#: ../../source/learn/intrinsics/_pages/BESSEL_YN.md:38
#: ../../source/learn/intrinsics/_pages/BGE.md:25
#: ../../source/learn/intrinsics/_pages/BGT.md:25
#: ../../source/learn/intrinsics/_pages/BIT_SIZE.md:29
#: ../../source/learn/intrinsics/_pages/BLE.md:24
#: ../../source/learn/intrinsics/_pages/BLT.md:24
#: ../../source/learn/intrinsics/_pages/BTEST.md:32
#: ../../source/learn/intrinsics/_pages/CEILING.md:29
#: ../../source/learn/intrinsics/_pages/CHAR.md:29
#: ../../source/learn/intrinsics/_pages/CMPLX.md:114
#: ../../source/learn/intrinsics/_pages/COMMAND_ARGUMENT_COUNT.md:23
#: ../../source/learn/intrinsics/_pages/COMPILER_OPTIONS.md:20
#: ../../source/learn/intrinsics/_pages/COMPILER_VERSION.md:23
#: ../../source/learn/intrinsics/_pages/CONJG.md:35
#: ../../source/learn/intrinsics/_pages/COS.md:31
#: ../../source/learn/intrinsics/_pages/COSH.md:28
#: ../../source/learn/intrinsics/_pages/COUNT.md:31
#: ../../source/learn/intrinsics/_pages/CO_LBOUND.md:29
#: ../../source/learn/intrinsics/_pages/CO_UBOUND.md:29
#: ../../source/learn/intrinsics/_pages/CPU_TIME.md:31
#: ../../source/learn/intrinsics/_pages/CSHIFT.md:34
#: ../../source/learn/intrinsics/_pages/C_ASSOCIATED.md:26
#: ../../source/learn/intrinsics/_pages/C_FUNLOC.md:21
#: ../../source/learn/intrinsics/_pages/C_LOC.md:24
#: ../../source/learn/intrinsics/_pages/C_SIZEOF.md:22
#: ../../source/learn/intrinsics/_pages/DBLE.md:27
#: ../../source/learn/intrinsics/_pages/DIGITS.md:29
#: ../../source/learn/intrinsics/_pages/DIM.md:30
#: ../../source/learn/intrinsics/_pages/DOT_PRODUCT.md:32
#: ../../source/learn/intrinsics/_pages/DPROD.md:39
#: ../../source/learn/intrinsics/_pages/DSHIFTL.md:29
#: ../../source/learn/intrinsics/_pages/DSHIFTR.md:29
#: ../../source/learn/intrinsics/_pages/EOSHIFT.md:47
#: ../../source/learn/intrinsics/_pages/EPSILON.md:35
#: ../../source/learn/intrinsics/_pages/ERF.md:24
#: ../../source/learn/intrinsics/_pages/ERFC.md:40
#: ../../source/learn/intrinsics/_pages/ERFC_SCALED.md:27
#: ../../source/learn/intrinsics/_pages/EXP.md:32
#: ../../source/learn/intrinsics/_pages/EXPONENT.md:22
#: ../../source/learn/intrinsics/_pages/EXTENDS_TYPE_OF.md:27
#: ../../source/learn/intrinsics/_pages/FINDLOC.md:58
#: ../../source/learn/intrinsics/_pages/FINDLOC.md:78
#: ../../source/learn/intrinsics/_pages/FLOOR.md:32
#: ../../source/learn/intrinsics/_pages/FRACTION.md:23
#: ../../source/learn/intrinsics/_pages/GAMMA.md:28
#: ../../source/learn/intrinsics/_pages/GET_COMMAND.md:27
#: ../../source/learn/intrinsics/_pages/GET_COMMAND_ARGUMENT.md:34
#: ../../source/learn/intrinsics/_pages/GET_ENVIRONMENT_VARIABLE.md:32
#: ../../source/learn/intrinsics/_pages/HUGE.md:30
#: ../../source/learn/intrinsics/_pages/HYPOT.md:34
#: ../../source/learn/intrinsics/_pages/IACHAR.md:26
#: ../../source/learn/intrinsics/_pages/IALL.md:34
#: ../../source/learn/intrinsics/_pages/IAND.md:24
#: ../../source/learn/intrinsics/_pages/IANY.md:34
#: ../../source/learn/intrinsics/_pages/IBCLR.md:27
#: ../../source/learn/intrinsics/_pages/IBITS.md:31
#: ../../source/learn/intrinsics/_pages/IBSET.md:27
#: ../../source/learn/intrinsics/_pages/ICHAR.md:35
#: ../../source/learn/intrinsics/_pages/IEOR.md:24
#: ../../source/learn/intrinsics/_pages/IMAGE_INDEX.md:25
#: ../../source/learn/intrinsics/_pages/INDEX.md:40
#: ../../source/learn/intrinsics/_pages/INT.md:29
#: ../../source/learn/intrinsics/_pages/IOR.md:26
#: ../../source/learn/intrinsics/_pages/IPARITY.md:34
#: ../../source/learn/intrinsics/_pages/ISHFT.md:30
#: ../../source/learn/intrinsics/_pages/ISHFTC.md:34
#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:82
#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_END.md:28
#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_EOR.md:24
#: ../../source/learn/intrinsics/_pages/KIND.md:21
#: ../../source/learn/intrinsics/_pages/LBOUND.md:33
#: ../../source/learn/intrinsics/_pages/LEADZ.md:21
#: ../../source/learn/intrinsics/_pages/LEN.md:38
#: ../../source/learn/intrinsics/_pages/LEN_TRIM.md:30
#: ../../source/learn/intrinsics/_pages/LGE.md:34
#: ../../source/learn/intrinsics/_pages/LGT.md:34
#: ../../source/learn/intrinsics/_pages/LLE.md:43
#: ../../source/learn/intrinsics/_pages/LLT.md:34
#: ../../source/learn/intrinsics/_pages/LOG.md:22
#: ../../source/learn/intrinsics/_pages/LOG10.md:24
#: ../../source/learn/intrinsics/_pages/LOGICAL.md:30
#: ../../source/learn/intrinsics/_pages/LOG_GAMMA.md:21
#: ../../source/learn/intrinsics/_pages/MASKL.md:29
#: ../../source/learn/intrinsics/_pages/MASKR.md:29
#: ../../source/learn/intrinsics/_pages/MATMUL.md:28
#: ../../source/learn/intrinsics/_pages/MAX.md:23
#: ../../source/learn/intrinsics/_pages/MAXEXPONENT.md:22
#: ../../source/learn/intrinsics/_pages/MAXLOC.md:38
#: ../../source/learn/intrinsics/_pages/MAXVAL.md:40
#: ../../source/learn/intrinsics/_pages/MERGE.md:64
#: ../../source/learn/intrinsics/_pages/MERGE_BITS.md:54
#: ../../source/learn/intrinsics/_pages/MIN.md:24
#: ../../source/learn/intrinsics/_pages/MINEXPONENT.md:22
#: ../../source/learn/intrinsics/_pages/MINLOC.md:42
#: ../../source/learn/intrinsics/_pages/MINVAL.md:37
#: ../../source/learn/intrinsics/_pages/MOD.md:25
#: ../../source/learn/intrinsics/_pages/MODULO.md:25
#: ../../source/learn/intrinsics/_pages/NEAREST.md:25
#: ../../source/learn/intrinsics/_pages/NEW_LINE.md:40
#: ../../source/learn/intrinsics/_pages/NINT.md:37
#: ../../source/learn/intrinsics/_pages/NORM2.md:31
#: ../../source/learn/intrinsics/_pages/NOT.md:19
#: ../../source/learn/intrinsics/_pages/NULL.md:28
#: ../../source/learn/intrinsics/_pages/NUM_IMAGES.md:24
#: ../../source/learn/intrinsics/_pages/PACK.md:44
#: ../../source/learn/intrinsics/_pages/POPCNT.md:22
#: ../../source/learn/intrinsics/_pages/POPPAR.md:22
#: ../../source/learn/intrinsics/_pages/PRECISION.md:22
#: ../../source/learn/intrinsics/_pages/PRESENT.md:26
#: ../../source/learn/intrinsics/_pages/PRODUCT.md:43
#: ../../source/learn/intrinsics/_pages/RADIX.md:21
#: ../../source/learn/intrinsics/_pages/RANGE.md:28
#: ../../source/learn/intrinsics/_pages/RANK.md:21
#: ../../source/learn/intrinsics/_pages/REAL.md:24
#: ../../source/learn/intrinsics/_pages/REPEAT.md:30
#: ../../source/learn/intrinsics/_pages/RESHAPE.md:36
#: ../../source/learn/intrinsics/_pages/RRSPACING.md:22
#: ../../source/learn/intrinsics/_pages/SAME_TYPE_AS.md:26
#: ../../source/learn/intrinsics/_pages/SCALE.md:27
#: ../../source/learn/intrinsics/_pages/SCAN.md:36
#: ../../source/learn/intrinsics/_pages/SELECTED_REAL_KIND.md:33
#: ../../source/learn/intrinsics/_pages/SET_EXPONENT.md:25
#: ../../source/learn/intrinsics/_pages/SHAPE.md:26
#: ../../source/learn/intrinsics/_pages/SHIFTA.md:29
#: ../../source/learn/intrinsics/_pages/SHIFTL.md:27
#: ../../source/learn/intrinsics/_pages/SHIFTR.md:27
#: ../../source/learn/intrinsics/_pages/SIN.md:31
#: ../../source/learn/intrinsics/_pages/SINH.md:33
#: ../../source/learn/intrinsics/_pages/SIZE.md:31
#: ../../source/learn/intrinsics/_pages/SPACING.md:22
#: ../../source/learn/intrinsics/_pages/SPREAD.md:39
#: ../../source/learn/intrinsics/_pages/SQRT.md:47
#: ../../source/learn/intrinsics/_pages/STORAGE_SIZE.md:24
#: ../../source/learn/intrinsics/_pages/SUM.md:31
#: ../../source/learn/intrinsics/_pages/TAN.md:21
#: ../../source/learn/intrinsics/_pages/TANH.md:21
#: ../../source/learn/intrinsics/_pages/THIS_IMAGE.md:30
#: ../../source/learn/intrinsics/_pages/TINY.md:26
#: ../../source/learn/intrinsics/_pages/TRAILZ.md:21
#: ../../source/learn/intrinsics/_pages/TRANSFER.md:32
#: ../../source/learn/intrinsics/_pages/TRANSPOSE.md:22
#: ../../source/learn/intrinsics/_pages/TRIM.md:21
#: ../../source/learn/intrinsics/_pages/UBOUND.md:28
#: ../../source/learn/intrinsics/_pages/UNPACK.md:28
#: ../../source/learn/intrinsics/_pages/VERIFY.md:55
msgid "__Returns__"
msgstr "__Retorno__"

#: ../../source/learn/intrinsics/_pages/MERGE.md:66
msgid ""
"The result is of the same type and type parameters as __tsource__. For "
"any element the result is __tsource__ if __mask__ is true and __fsource__"
" otherwise."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ABS.md:50
#: ../../source/learn/intrinsics/_pages/ACHAR.md:47
#: ../../source/learn/intrinsics/_pages/ACOS.md:32
#: ../../source/learn/intrinsics/_pages/ACOSH.md:36
#: ../../source/learn/intrinsics/_pages/ADJUSTL.md:31
#: ../../source/learn/intrinsics/_pages/ADJUSTR.md:32
#: ../../source/learn/intrinsics/_pages/AIMAG.md:30
#: ../../source/learn/intrinsics/_pages/AINT.md:47
#: ../../source/learn/intrinsics/_pages/ALL.md:66
#: ../../source/learn/intrinsics/_pages/ALLOCATED.md:35
#: ../../source/learn/intrinsics/_pages/ANINT.md:33
#: ../../source/learn/intrinsics/_pages/ANY.md:42
#: ../../source/learn/intrinsics/_pages/ASIN.md:38
#: ../../source/learn/intrinsics/_pages/ASINH.md:33
#: ../../source/learn/intrinsics/_pages/ASSOCIATED.md:64
#: ../../source/learn/intrinsics/_pages/ATAN.md:40
#: ../../source/learn/intrinsics/_pages/ATAN2.md:43
#: ../../source/learn/intrinsics/_pages/ATANH.md:28
#: ../../source/learn/intrinsics/_pages/ATOMIC_ADD.md:34
#: ../../source/learn/intrinsics/_pages/ATOMIC_AND.md:35
#: ../../source/learn/intrinsics/_pages/ATOMIC_CAS.md:44
#: ../../source/learn/intrinsics/_pages/ATOMIC_DEFINE.md:41
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_ADD.md:39
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_AND.md:39
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_OR.md:39
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_XOR.md:39
#: ../../source/learn/intrinsics/_pages/ATOMIC_OR.md:35
#: ../../source/learn/intrinsics/_pages/ATOMIC_REF.md:36
#: ../../source/learn/intrinsics/_pages/ATOMIC_XOR.md:35
#: ../../source/learn/intrinsics/_pages/BESSEL_J0.md:27
#: ../../source/learn/intrinsics/_pages/BESSEL_J1.md:27
#: ../../source/learn/intrinsics/_pages/BESSEL_JN.md:42
#: ../../source/learn/intrinsics/_pages/BESSEL_Y0.md:26
#: ../../source/learn/intrinsics/_pages/BESSEL_Y1.md:26
#: ../../source/learn/intrinsics/_pages/BESSEL_YN.md:42
#: ../../source/learn/intrinsics/_pages/BIT_SIZE.md:33
#: ../../source/learn/intrinsics/_pages/BTEST.md:38
#: ../../source/learn/intrinsics/_pages/CEILING.md:37
#: ../../source/learn/intrinsics/_pages/CHAR.md:33
#: ../../source/learn/intrinsics/_pages/CMPLX.md:120
#: ../../source/learn/intrinsics/_pages/COMMAND_ARGUMENT_COUNT.md:29
#: ../../source/learn/intrinsics/_pages/COMPILER_OPTIONS.md:26
#: ../../source/learn/intrinsics/_pages/COMPILER_VERSION.md:28
#: ../../source/learn/intrinsics/_pages/CONJG.md:39
#: ../../source/learn/intrinsics/_pages/COS.md:38
#: ../../source/learn/intrinsics/_pages/COSH.md:36
#: ../../source/learn/intrinsics/_pages/COUNT.md:38
#: ../../source/learn/intrinsics/_pages/CO_BROADCAST.md:38
#: ../../source/learn/intrinsics/_pages/CO_MAX.md:40
#: ../../source/learn/intrinsics/_pages/CO_MIN.md:40
#: ../../source/learn/intrinsics/_pages/CO_REDUCE.md:57
#: ../../source/learn/intrinsics/_pages/CO_SUM.md:40
#: ../../source/learn/intrinsics/_pages/CPU_TIME.md:44
#: ../../source/learn/intrinsics/_pages/CSHIFT.md:38
#: ../../source/learn/intrinsics/_pages/C_ASSOCIATED.md:32
#: ../../source/learn/intrinsics/_pages/C_FUNLOC.md:26
#: ../../source/learn/intrinsics/_pages/C_F_POINTER.md:30
#: ../../source/learn/intrinsics/_pages/C_F_PROCPOINTER.md:25
#: ../../source/learn/intrinsics/_pages/C_LOC.md:29
#: ../../source/learn/intrinsics/_pages/C_SIZEOF.md:32
#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:55
#: ../../source/learn/intrinsics/_pages/DBLE.md:33
#: ../../source/learn/intrinsics/_pages/DIGITS.md:33
#: ../../source/learn/intrinsics/_pages/DIM.md:34
#: ../../source/learn/intrinsics/_pages/DOT_PRODUCT.md:38
#: ../../source/learn/intrinsics/_pages/DPROD.md:43
#: ../../source/learn/intrinsics/_pages/EOSHIFT.md:51
#: ../../source/learn/intrinsics/_pages/EPSILON.md:39
#: ../../source/learn/intrinsics/_pages/ERF.md:29
#: ../../source/learn/intrinsics/_pages/ERFC.md:47
#: ../../source/learn/intrinsics/_pages/ERFC_SCALED.md:31
#: ../../source/learn/intrinsics/_pages/EVENT_QUERY.md:33
#: ../../source/learn/intrinsics/_pages/EXECUTE_COMMAND_LINE.md:75
#: ../../source/learn/intrinsics/_pages/EXP.md:38
#: ../../source/learn/intrinsics/_pages/EXPONENT.md:26
#: ../../source/learn/intrinsics/_pages/EXTENDS_TYPE_OF.md:43
#: ../../source/learn/intrinsics/_pages/FINDLOC.md:124
#: ../../source/learn/intrinsics/_pages/FLOOR.md:40
#: ../../source/learn/intrinsics/_pages/FRACTION.md:29
#: ../../source/learn/intrinsics/_pages/GAMMA.md:32
#: ../../source/learn/intrinsics/_pages/GET_COMMAND.md:44
#: ../../source/learn/intrinsics/_pages/GET_COMMAND_ARGUMENT.md:54
#: ../../source/learn/intrinsics/_pages/GET_ENVIRONMENT_VARIABLE.md:63
#: ../../source/learn/intrinsics/_pages/HUGE.md:35
#: ../../source/learn/intrinsics/_pages/HYPOT.md:41
#: ../../source/learn/intrinsics/_pages/IACHAR.md:31
#: ../../source/learn/intrinsics/_pages/IALL.md:43
#: ../../source/learn/intrinsics/_pages/IAND.md:29
#: ../../source/learn/intrinsics/_pages/IANY.md:43
#: ../../source/learn/intrinsics/_pages/ICHAR.md:40
#: ../../source/learn/intrinsics/_pages/IMAGE_INDEX.md:31
#: ../../source/learn/intrinsics/_pages/INDEX.md:46
#: ../../source/learn/intrinsics/_pages/INT.md:51
#: ../../source/learn/intrinsics/_pages/IOR.md:31
#: ../../source/learn/intrinsics/_pages/IPARITY.md:43
#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:88
#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_END.md:34
#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_EOR.md:30
#: ../../source/learn/intrinsics/_pages/KIND.md:26
#: ../../source/learn/intrinsics/_pages/LBOUND.md:43
#: ../../source/learn/intrinsics/_pages/LEADZ.md:26
#: ../../source/learn/intrinsics/_pages/LEN.md:47
#: ../../source/learn/intrinsics/_pages/LEN_TRIM.md:35
#: ../../source/learn/intrinsics/_pages/LLE.md:49
#: ../../source/learn/intrinsics/_pages/LOG.md:29
#: ../../source/learn/intrinsics/_pages/LOG10.md:29
#: ../../source/learn/intrinsics/_pages/LOGICAL.md:36
#: ../../source/learn/intrinsics/_pages/LOG_GAMMA.md:25
#: ../../source/learn/intrinsics/_pages/MASKL.md:37
#: ../../source/learn/intrinsics/_pages/MAX.md:37
#: ../../source/learn/intrinsics/_pages/MAXEXPONENT.md:26
#: ../../source/learn/intrinsics/_pages/MAXLOC.md:51
#: ../../source/learn/intrinsics/_pages/MAXVAL.md:48
#: ../../source/learn/intrinsics/_pages/MERGE.md:69
#: ../../source/learn/intrinsics/_pages/MIN.md:29
#: ../../source/learn/intrinsics/_pages/MINEXPONENT.md:26
#: ../../source/learn/intrinsics/_pages/MINLOC.md:51
#: ../../source/learn/intrinsics/_pages/MINVAL.md:46
#: ../../source/learn/intrinsics/_pages/MOD.md:32
#: ../../source/learn/intrinsics/_pages/MODULO.md:38
#: ../../source/learn/intrinsics/_pages/MOVE_ALLOC.md:26
#: ../../source/learn/intrinsics/_pages/NEAREST.md:32
#: ../../source/learn/intrinsics/_pages/NEW_LINE.md:46
#: ../../source/learn/intrinsics/_pages/NINT.md:47
#: ../../source/learn/intrinsics/_pages/NORM2.md:42
#: ../../source/learn/intrinsics/_pages/NOT.md:23
#: ../../source/learn/intrinsics/_pages/NULL.md:32
#: ../../source/learn/intrinsics/_pages/NUM_IMAGES.md:36
#: ../../source/learn/intrinsics/_pages/PACK.md:50
#: ../../source/learn/intrinsics/_pages/POPCNT.md:26
#: ../../source/learn/intrinsics/_pages/POPPAR.md:29
#: ../../source/learn/intrinsics/_pages/PRECISION.md:26
#: ../../source/learn/intrinsics/_pages/PRESENT.md:31
#: ../../source/learn/intrinsics/_pages/PRODUCT.md:48
#: ../../source/learn/intrinsics/_pages/RADIX.md:26
#: ../../source/learn/intrinsics/_pages/RANDOM_NUMBER.md:22
#: ../../source/learn/intrinsics/_pages/RANDOM_SEED.md:37
#: ../../source/learn/intrinsics/_pages/RANGE.md:32
#: ../../source/learn/intrinsics/_pages/RANK.md:26
#: ../../source/learn/intrinsics/_pages/REAL.md:38
#: ../../source/learn/intrinsics/_pages/REPEAT.md:34
#: ../../source/learn/intrinsics/_pages/RESHAPE.md:40
#: ../../source/learn/intrinsics/_pages/SCALE.md:32
#: ../../source/learn/intrinsics/_pages/SCAN.md:41
#: ../../source/learn/intrinsics/_pages/SELECTED_CHAR_KIND.md:25
#: ../../source/learn/intrinsics/_pages/SELECTED_INT_KIND.md:24
#: ../../source/learn/intrinsics/_pages/SELECTED_REAL_KIND.md:57
#: ../../source/learn/intrinsics/_pages/SET_EXPONENT.md:31
#: ../../source/learn/intrinsics/_pages/SHAPE.md:34
#: ../../source/learn/intrinsics/_pages/SIN.md:36
#: ../../source/learn/intrinsics/_pages/SINH.md:37
#: ../../source/learn/intrinsics/_pages/SIZE.md:36
#: ../../source/learn/intrinsics/_pages/SPACING.md:26
#: ../../source/learn/intrinsics/_pages/SPREAD.md:45
#: ../../source/learn/intrinsics/_pages/SQRT.md:52
#: ../../source/learn/intrinsics/_pages/STORAGE_SIZE.md:31
#: ../../source/learn/intrinsics/_pages/SUM.md:40
#: ../../source/learn/intrinsics/_pages/SYSTEM_CLOCK.md:60
#: ../../source/learn/intrinsics/_pages/TAN.md:25
#: ../../source/learn/intrinsics/_pages/TANH.md:30
#: ../../source/learn/intrinsics/_pages/THIS_IMAGE.md:44
#: ../../source/learn/intrinsics/_pages/TINY.md:32
#: ../../source/learn/intrinsics/_pages/TRAILZ.md:26
#: ../../source/learn/intrinsics/_pages/TRANSFER.md:51
#: ../../source/learn/intrinsics/_pages/TRANSPOSE.md:27
#: ../../source/learn/intrinsics/_pages/TRIM.md:26
#: ../../source/learn/intrinsics/_pages/UBOUND.md:44
#: ../../source/learn/intrinsics/_pages/UNPACK.md:33
#: ../../source/learn/intrinsics/_pages/VERIFY.md:60
msgid "__Examples__"
msgstr "__Exemplos__"

#: ../../source/learn/intrinsics/_pages/MERGE.md:71
msgid "The value of"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MERGE.md:77
msgid "is 1.0 for K=5 and 0.0 for K=__-2__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/COUNT.md:66
#: ../../source/learn/intrinsics/_pages/INDEX.md:64
#: ../../source/learn/intrinsics/_pages/MERGE.md:126
#: ../../source/learn/intrinsics/_pages/MINEXPONENT.md:41
msgid "Expected Results:"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ABS.md:121
#: ../../source/learn/intrinsics/_pages/ACHAR.md:149
#: ../../source/learn/intrinsics/_pages/ACOS.md:59
#: ../../source/learn/intrinsics/_pages/ACOSH.md:53
#: ../../source/learn/intrinsics/_pages/ADJUSTL.md:58
#: ../../source/learn/intrinsics/_pages/ADJUSTR.md:71
#: ../../source/learn/intrinsics/_pages/AIMAG.md:60
#: ../../source/learn/intrinsics/_pages/AINT.md:79
#: ../../source/learn/intrinsics/_pages/ALL.md:124
#: ../../source/learn/intrinsics/_pages/ALLOCATED.md:78
#: ../../source/learn/intrinsics/_pages/ANINT.md:69
#: ../../source/learn/intrinsics/_pages/ANY.md:69
#: ../../source/learn/intrinsics/_pages/ASIN.md:88
#: ../../source/learn/intrinsics/_pages/ASINH.md:52
#: ../../source/learn/intrinsics/_pages/ASSOCIATED.md:80
#: ../../source/learn/intrinsics/_pages/ATAN.md:71
#: ../../source/learn/intrinsics/_pages/ATAN2.md:61
#: ../../source/learn/intrinsics/_pages/ATANH.md:46
#: ../../source/learn/intrinsics/_pages/ATOMIC_ADD.md:47
#: ../../source/learn/intrinsics/_pages/ATOMIC_AND.md:47
#: ../../source/learn/intrinsics/_pages/ATOMIC_CAS.md:57
#: ../../source/learn/intrinsics/_pages/ATOMIC_DEFINE.md:53
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_ADD.md:52
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_AND.md:52
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_OR.md:52
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_XOR.md:52
#: ../../source/learn/intrinsics/_pages/ATOMIC_OR.md:48
#: ../../source/learn/intrinsics/_pages/ATOMIC_REF.md:55
#: ../../source/learn/intrinsics/_pages/ATOMIC_XOR.md:48
#: ../../source/learn/intrinsics/_pages/BESSEL_J0.md:46
#: ../../source/learn/intrinsics/_pages/BESSEL_J1.md:45
#: ../../source/learn/intrinsics/_pages/BESSEL_JN.md:61
#: ../../source/learn/intrinsics/_pages/BESSEL_Y0.md:45
#: ../../source/learn/intrinsics/_pages/BESSEL_Y1.md:40
#: ../../source/learn/intrinsics/_pages/BESSEL_YN.md:59
#: ../../source/learn/intrinsics/_pages/BGE.md:29
#: ../../source/learn/intrinsics/_pages/BGT.md:31
#: ../../source/learn/intrinsics/_pages/BIT_SIZE.md:64
#: ../../source/learn/intrinsics/_pages/BLE.md:28
#: ../../source/learn/intrinsics/_pages/BLT.md:28
#: ../../source/learn/intrinsics/_pages/BTEST.md:114
#: ../../source/learn/intrinsics/_pages/CEILING.md:63
#: ../../source/learn/intrinsics/_pages/CHAR.md:56
#: ../../source/learn/intrinsics/_pages/CMPLX.md:161
#: ../../source/learn/intrinsics/_pages/COMMAND_ARGUMENT_COUNT.md:54
#: ../../source/learn/intrinsics/_pages/COMPILER_OPTIONS.md:50
#: ../../source/learn/intrinsics/_pages/COMPILER_VERSION.md:53
#: ../../source/learn/intrinsics/_pages/CONJG.md:96
#: ../../source/learn/intrinsics/_pages/COS.md:65
#: ../../source/learn/intrinsics/_pages/COSH.md:50
#: ../../source/learn/intrinsics/_pages/COUNT.md:83
#: ../../source/learn/intrinsics/_pages/CO_LBOUND.md:37
#: ../../source/learn/intrinsics/_pages/CO_MAX.md:60
#: ../../source/learn/intrinsics/_pages/CO_MIN.md:56
#: ../../source/learn/intrinsics/_pages/CO_REDUCE.md:90
#: ../../source/learn/intrinsics/_pages/CO_SUM.md:61
#: ../../source/learn/intrinsics/_pages/CO_UBOUND.md:37
#: ../../source/learn/intrinsics/_pages/CPU_TIME.md:65
#: ../../source/learn/intrinsics/_pages/CSHIFT.md:67
#: ../../source/learn/intrinsics/_pages/C_ASSOCIATED.md:53
#: ../../source/learn/intrinsics/_pages/C_FUNLOC.md:57
#: ../../source/learn/intrinsics/_pages/C_F_POINTER.md:51
#: ../../source/learn/intrinsics/_pages/C_F_PROCPOINTER.md:53
#: ../../source/learn/intrinsics/_pages/C_LOC.md:44
#: ../../source/learn/intrinsics/_pages/C_SIZEOF.md:51
#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:97
#: ../../source/learn/intrinsics/_pages/DBLE.md:50
#: ../../source/learn/intrinsics/_pages/DIGITS.md:57
#: ../../source/learn/intrinsics/_pages/DIM.md:62
#: ../../source/learn/intrinsics/_pages/DOT_PRODUCT.md:63
#: ../../source/learn/intrinsics/_pages/DPROD.md:82
#: ../../source/learn/intrinsics/_pages/DSHIFTL.md:33
#: ../../source/learn/intrinsics/_pages/DSHIFTR.md:33
#: ../../source/learn/intrinsics/_pages/EOSHIFT.md:80
#: ../../source/learn/intrinsics/_pages/EPSILON.md:106
#: ../../source/learn/intrinsics/_pages/ERF.md:46
#: ../../source/learn/intrinsics/_pages/ERFC.md:64
#: ../../source/learn/intrinsics/_pages/ERFC_SCALED.md:48
#: ../../source/learn/intrinsics/_pages/EVENT_QUERY.md:52
#: ../../source/learn/intrinsics/_pages/EXECUTE_COMMAND_LINE.md:101
#: ../../source/learn/intrinsics/_pages/EXP.md:82
#: ../../source/learn/intrinsics/_pages/EXPONENT.md:45
#: ../../source/learn/intrinsics/_pages/FLOOR.md:75
#: ../../source/learn/intrinsics/_pages/FRACTION.md:45
#: ../../source/learn/intrinsics/_pages/GAMMA.md:118
#: ../../source/learn/intrinsics/_pages/GET_COMMAND.md:77
#: ../../source/learn/intrinsics/_pages/GET_COMMAND_ARGUMENT.md:119
#: ../../source/learn/intrinsics/_pages/GET_ENVIRONMENT_VARIABLE.md:123
#: ../../source/learn/intrinsics/_pages/HUGE.md:85
#: ../../source/learn/intrinsics/_pages/HYPOT.md:91
#: ../../source/learn/intrinsics/_pages/IACHAR.md:69
#: ../../source/learn/intrinsics/_pages/IALL.md:66
#: ../../source/learn/intrinsics/_pages/IAND.md:45
#: ../../source/learn/intrinsics/_pages/IANY.md:64
#: ../../source/learn/intrinsics/_pages/IBCLR.md:31
#: ../../source/learn/intrinsics/_pages/IBITS.md:35
#: ../../source/learn/intrinsics/_pages/IBSET.md:31
#: ../../source/learn/intrinsics/_pages/ICHAR.md:101
#: ../../source/learn/intrinsics/_pages/IEOR.md:29
#: ../../source/learn/intrinsics/_pages/IMAGE_INDEX.md:44
#: ../../source/learn/intrinsics/_pages/INDEX.md:68
#: ../../source/learn/intrinsics/_pages/INT.md:112
#: ../../source/learn/intrinsics/_pages/IOR.md:54
#: ../../source/learn/intrinsics/_pages/IPARITY.md:63
#: ../../source/learn/intrinsics/_pages/ISHFT.md:34
#: ../../source/learn/intrinsics/_pages/ISHFTC.md:38
#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:111
#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_END.md:59
#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_EOR.md:47
#: ../../source/learn/intrinsics/_pages/KIND.md:46
#: ../../source/learn/intrinsics/_pages/LBOUND.md:108
#: ../../source/learn/intrinsics/_pages/LEADZ.md:120
#: ../../source/learn/intrinsics/_pages/LEN.md:43
#: ../../source/learn/intrinsics/_pages/LEN_TRIM.md:67
#: ../../source/learn/intrinsics/_pages/LGE.md:39
#: ../../source/learn/intrinsics/_pages/LGT.md:39
#: ../../source/learn/intrinsics/_pages/LLE.md:85
#: ../../source/learn/intrinsics/_pages/LLT.md:39
#: ../../source/learn/intrinsics/_pages/LOG.md:47
#: ../../source/learn/intrinsics/_pages/LOG10.md:55
#: ../../source/learn/intrinsics/_pages/LOGICAL.md:59
#: ../../source/learn/intrinsics/_pages/LOG_GAMMA.md:40
#: ../../source/learn/intrinsics/_pages/MASKL.md:87
#: ../../source/learn/intrinsics/_pages/MASKR.md:96
#: ../../source/learn/intrinsics/_pages/MATMUL.md:34
#: ../../source/learn/intrinsics/_pages/MAX.md:109
#: ../../source/learn/intrinsics/_pages/MAXEXPONENT.md:46
#: ../../source/learn/intrinsics/_pages/MAXLOC.md:94
#: ../../source/learn/intrinsics/_pages/MAXVAL.md:78
#: ../../source/learn/intrinsics/_pages/MERGE.md:145
#: ../../source/learn/intrinsics/_pages/MERGE_BITS.md:113
#: ../../source/learn/intrinsics/_pages/MIN.md:46
#: ../../source/learn/intrinsics/_pages/MINEXPONENT.md:46
#: ../../source/learn/intrinsics/_pages/MINLOC.md:81
#: ../../source/learn/intrinsics/_pages/MINVAL.md:138
#: ../../source/learn/intrinsics/_pages/MOD.md:70
#: ../../source/learn/intrinsics/_pages/MODULO.md:64
#: ../../source/learn/intrinsics/_pages/MOVE_ALLOC.md:64
#: ../../source/learn/intrinsics/_pages/MVBITS.md:128
#: ../../source/learn/intrinsics/_pages/NEAREST.md:61
#: ../../source/learn/intrinsics/_pages/NEW_LINE.md:72
#: ../../source/learn/intrinsics/_pages/NINT.md:110
#: ../../source/learn/intrinsics/_pages/NORM2.md:81
#: ../../source/learn/intrinsics/_pages/NOT.md:46
#: ../../source/learn/intrinsics/_pages/NULL.md:110
#: ../../source/learn/intrinsics/_pages/NUM_IMAGES.md:57
#: ../../source/learn/intrinsics/_pages/PACK.md:100
#: ../../source/learn/intrinsics/_pages/PARITY.md:59
#: ../../source/learn/intrinsics/_pages/POPCNT.md:52
#: ../../source/learn/intrinsics/_pages/POPPAR.md:53
#: ../../source/learn/intrinsics/_pages/PRECISION.md:46
#: ../../source/learn/intrinsics/_pages/PRESENT.md:57
#: ../../source/learn/intrinsics/_pages/PRODUCT.md:221
#: ../../source/learn/intrinsics/_pages/RADIX.md:45
#: ../../source/learn/intrinsics/_pages/RANDOM_NUMBER.md:81
#: ../../source/learn/intrinsics/_pages/RANDOM_SEED.md:60
#: ../../source/learn/intrinsics/_pages/RANGE.md:52
#: ../../source/learn/intrinsics/_pages/RANK.md:43
#: ../../source/learn/intrinsics/_pages/REAL.md:65
#: ../../source/learn/intrinsics/_pages/REPEAT.md:58
#: ../../source/learn/intrinsics/_pages/RESHAPE.md:67
#: ../../source/learn/intrinsics/_pages/RRSPACING.md:27
#: ../../source/learn/intrinsics/_pages/SAME_TYPE_AS.md:31
#: ../../source/learn/intrinsics/_pages/SCALE.md:51
#: ../../source/learn/intrinsics/_pages/SCAN.md:59
#: ../../source/learn/intrinsics/_pages/SELECTED_CHAR_KIND.md:55
#: ../../source/learn/intrinsics/_pages/SELECTED_INT_KIND.md:49
#: ../../source/learn/intrinsics/_pages/SELECTED_REAL_KIND.md:82
#: ../../source/learn/intrinsics/_pages/SET_EXPONENT.md:47
#: ../../source/learn/intrinsics/_pages/SHAPE.md:58
#: ../../source/learn/intrinsics/_pages/SHIFTA.md:33
#: ../../source/learn/intrinsics/_pages/SHIFTL.md:31
#: ../../source/learn/intrinsics/_pages/SHIFTR.md:31
#: ../../source/learn/intrinsics/_pages/SIGN.md:72
#: ../../source/learn/intrinsics/_pages/SIN.md:121
#: ../../source/learn/intrinsics/_pages/SINH.md:81
#: ../../source/learn/intrinsics/_pages/SIZE.md:179
#: ../../source/learn/intrinsics/_pages/SPACING.md:45
#: ../../source/learn/intrinsics/_pages/SPREAD.md:116
#: ../../source/learn/intrinsics/_pages/SQRT.md:85
#: ../../source/learn/intrinsics/_pages/STORAGE_SIZE.md:53
#: ../../source/learn/intrinsics/_pages/SUM.md:81
#: ../../source/learn/intrinsics/_pages/SYSTEM_CLOCK.md:94
#: ../../source/learn/intrinsics/_pages/TAN.md:42
#: ../../source/learn/intrinsics/_pages/TANH.md:47
#: ../../source/learn/intrinsics/_pages/TINY.md:48
#: ../../source/learn/intrinsics/_pages/TRAILZ.md:104
#: ../../source/learn/intrinsics/_pages/TRANSFER.md:101
#: ../../source/learn/intrinsics/_pages/TRANSPOSE.md:83
#: ../../source/learn/intrinsics/_pages/TRIM.md:50
#: ../../source/learn/intrinsics/_pages/UBOUND.md:106
#: ../../source/learn/intrinsics/_pages/UNPACK.md:55
#: ../../source/learn/intrinsics/_pages/VERIFY.md:243
msgid "__Standard__"
msgstr "__Padrão__"

#: ../../source/learn/intrinsics/_pages/ADJUSTL.md:60
#: ../../source/learn/intrinsics/_pages/ADJUSTR.md:73
#: ../../source/learn/intrinsics/_pages/ALL.md:126
#: ../../source/learn/intrinsics/_pages/ANY.md:71
#: ../../source/learn/intrinsics/_pages/ASSOCIATED.md:82
#: ../../source/learn/intrinsics/_pages/BIT_SIZE.md:66
#: ../../source/learn/intrinsics/_pages/BTEST.md:116
#: ../../source/learn/intrinsics/_pages/CEILING.md:65
#: ../../source/learn/intrinsics/_pages/CPU_TIME.md:67
#: ../../source/learn/intrinsics/_pages/CSHIFT.md:69
#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:99
#: ../../source/learn/intrinsics/_pages/DIGITS.md:59
#: ../../source/learn/intrinsics/_pages/DOT_PRODUCT.md:65
#: ../../source/learn/intrinsics/_pages/EOSHIFT.md:82
#: ../../source/learn/intrinsics/_pages/EPSILON.md:108
#: ../../source/learn/intrinsics/_pages/EXPONENT.md:47
#: ../../source/learn/intrinsics/_pages/FLOOR.md:77
#: ../../source/learn/intrinsics/_pages/FRACTION.md:47
#: ../../source/learn/intrinsics/_pages/HUGE.md:87
#: ../../source/learn/intrinsics/_pages/IAND.md:47
#: ../../source/learn/intrinsics/_pages/IBCLR.md:33
#: ../../source/learn/intrinsics/_pages/IBITS.md:37
#: ../../source/learn/intrinsics/_pages/IBSET.md:33
#: ../../source/learn/intrinsics/_pages/IEOR.md:31
#: ../../source/learn/intrinsics/_pages/IOR.md:56
#: ../../source/learn/intrinsics/_pages/ISHFT.md:36
#: ../../source/learn/intrinsics/_pages/ISHFTC.md:40
#: ../../source/learn/intrinsics/_pages/KIND.md:48
#: ../../source/learn/intrinsics/_pages/MATMUL.md:36
#: ../../source/learn/intrinsics/_pages/MAXEXPONENT.md:48
#: ../../source/learn/intrinsics/_pages/MAXLOC.md:96
#: ../../source/learn/intrinsics/_pages/MAXVAL.md:80
#: ../../source/learn/intrinsics/_pages/MERGE.md:147
#: ../../source/learn/intrinsics/_pages/MINEXPONENT.md:48
#: ../../source/learn/intrinsics/_pages/MINLOC.md:83
#: ../../source/learn/intrinsics/_pages/MINVAL.md:140
#: ../../source/learn/intrinsics/_pages/MODULO.md:66
#: ../../source/learn/intrinsics/_pages/MVBITS.md:130
#: ../../source/learn/intrinsics/_pages/NEAREST.md:63
#: ../../source/learn/intrinsics/_pages/NOT.md:48
#: ../../source/learn/intrinsics/_pages/NULL.md:112
#: ../../source/learn/intrinsics/_pages/PACK.md:102
#: ../../source/learn/intrinsics/_pages/PRECISION.md:48
#: ../../source/learn/intrinsics/_pages/PRESENT.md:59
#: ../../source/learn/intrinsics/_pages/PRODUCT.md:223
#: ../../source/learn/intrinsics/_pages/RADIX.md:47
#: ../../source/learn/intrinsics/_pages/RANDOM_NUMBER.md:83
#: ../../source/learn/intrinsics/_pages/RANDOM_SEED.md:62
#: ../../source/learn/intrinsics/_pages/RANGE.md:54
#: ../../source/learn/intrinsics/_pages/REPEAT.md:60
#: ../../source/learn/intrinsics/_pages/RESHAPE.md:69
#: ../../source/learn/intrinsics/_pages/RRSPACING.md:29
#: ../../source/learn/intrinsics/_pages/SCALE.md:53
#: ../../source/learn/intrinsics/_pages/SELECTED_INT_KIND.md:51
#: ../../source/learn/intrinsics/_pages/SET_EXPONENT.md:49
#: ../../source/learn/intrinsics/_pages/SPACING.md:47
#: ../../source/learn/intrinsics/_pages/SPREAD.md:118
#: ../../source/learn/intrinsics/_pages/SUM.md:83
#: ../../source/learn/intrinsics/_pages/SYSTEM_CLOCK.md:96
#: ../../source/learn/intrinsics/_pages/TINY.md:50
#: ../../source/learn/intrinsics/_pages/TRANSPOSE.md:85
#: ../../source/learn/intrinsics/_pages/TRIM.md:52
#: ../../source/learn/intrinsics/_pages/UNPACK.md:57
msgid "Fortran 95 and later"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACHAR.md:153
#: ../../source/learn/intrinsics/_pages/ACOS.md:62
#: ../../source/learn/intrinsics/_pages/ACOSH.md:57
#: ../../source/learn/intrinsics/_pages/ADJUSTL.md:62
#: ../../source/learn/intrinsics/_pages/ADJUSTR.md:75
#: ../../source/learn/intrinsics/_pages/AINT.md:83
#: ../../source/learn/intrinsics/_pages/ALLOCATED.md:83
#: ../../source/learn/intrinsics/_pages/ANINT.md:73
#: ../../source/learn/intrinsics/_pages/ASIN.md:92
#: ../../source/learn/intrinsics/_pages/ASINH.md:56
#: ../../source/learn/intrinsics/_pages/ASSOCIATED.md:84
#: ../../source/learn/intrinsics/_pages/ATAN.md:76
#: ../../source/learn/intrinsics/_pages/ATANH.md:50
#: ../../source/learn/intrinsics/_pages/ATOMIC_ADD.md:51
#: ../../source/learn/intrinsics/_pages/ATOMIC_AND.md:51
#: ../../source/learn/intrinsics/_pages/ATOMIC_CAS.md:61
#: ../../source/learn/intrinsics/_pages/ATOMIC_DEFINE.md:57
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_ADD.md:56
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_AND.md:56
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_OR.md:56
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_XOR.md:56
#: ../../source/learn/intrinsics/_pages/ATOMIC_OR.md:52
#: ../../source/learn/intrinsics/_pages/ATOMIC_REF.md:59
#: ../../source/learn/intrinsics/_pages/ATOMIC_XOR.md:52
#: ../../source/learn/intrinsics/_pages/BESSEL_J0.md:50
#: ../../source/learn/intrinsics/_pages/BESSEL_J1.md:49
#: ../../source/learn/intrinsics/_pages/BESSEL_JN.md:65
#: ../../source/learn/intrinsics/_pages/BESSEL_Y0.md:49
#: ../../source/learn/intrinsics/_pages/BESSEL_Y1.md:44
#: ../../source/learn/intrinsics/_pages/BESSEL_YN.md:63
#: ../../source/learn/intrinsics/_pages/BGE.md:33
#: ../../source/learn/intrinsics/_pages/BGT.md:35
#: ../../source/learn/intrinsics/_pages/BLE.md:32
#: ../../source/learn/intrinsics/_pages/BLT.md:32
#: ../../source/learn/intrinsics/_pages/BTEST.md:118
#: ../../source/learn/intrinsics/_pages/CEILING.md:67
#: ../../source/learn/intrinsics/_pages/CHAR.md:60
#: ../../source/learn/intrinsics/_pages/CMPLX.md:151
#: ../../source/learn/intrinsics/_pages/COMMAND_ARGUMENT_COUNT.md:58
#: ../../source/learn/intrinsics/_pages/COMPILER_OPTIONS.md:54
#: ../../source/learn/intrinsics/_pages/COMPILER_VERSION.md:57
#: ../../source/learn/intrinsics/_pages/COS.md:69
#: ../../source/learn/intrinsics/_pages/COSH.md:54
#: ../../source/learn/intrinsics/_pages/CO_BROADCAST.md:54
#: ../../source/learn/intrinsics/_pages/CO_LBOUND.md:41
#: ../../source/learn/intrinsics/_pages/CO_MAX.md:64
#: ../../source/learn/intrinsics/_pages/CO_MIN.md:60
#: ../../source/learn/intrinsics/_pages/CO_REDUCE.md:94
#: ../../source/learn/intrinsics/_pages/CO_SUM.md:65
#: ../../source/learn/intrinsics/_pages/CO_UBOUND.md:41
#: ../../source/learn/intrinsics/_pages/CPU_TIME.md:69
#: ../../source/learn/intrinsics/_pages/C_ASSOCIATED.md:57
#: ../../source/learn/intrinsics/_pages/C_FUNLOC.md:61
#: ../../source/learn/intrinsics/_pages/C_F_POINTER.md:55
#: ../../source/learn/intrinsics/_pages/C_F_PROCPOINTER.md:57
#: ../../source/learn/intrinsics/_pages/C_LOC.md:48
#: ../../source/learn/intrinsics/_pages/C_SIZEOF.md:55
#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:101
#: ../../source/learn/intrinsics/_pages/DBLE.md:54
#: ../../source/learn/intrinsics/_pages/DIGITS.md:61
#: ../../source/learn/intrinsics/_pages/DSHIFTL.md:37
#: ../../source/learn/intrinsics/_pages/DSHIFTR.md:37
#: ../../source/learn/intrinsics/_pages/EPSILON.md:110
#: ../../source/learn/intrinsics/_pages/EXP.md:86
#: ../../source/learn/intrinsics/_pages/EXPONENT.md:49
#: ../../source/learn/intrinsics/_pages/FLOOR.md:79
#: ../../source/learn/intrinsics/_pages/FRACTION.md:49
#: ../../source/learn/intrinsics/_pages/GAMMA.md:122
#: ../../source/learn/intrinsics/_pages/GET_COMMAND.md:81
#: ../../source/learn/intrinsics/_pages/GET_COMMAND_ARGUMENT.md:123
#: ../../source/learn/intrinsics/_pages/HUGE.md:89
#: ../../source/learn/intrinsics/_pages/IACHAR.md:73
#: ../../source/learn/intrinsics/_pages/IALL.md:70
#: ../../source/learn/intrinsics/_pages/IAND.md:49
#: ../../source/learn/intrinsics/_pages/IANY.md:68
#: ../../source/learn/intrinsics/_pages/IBCLR.md:35
#: ../../source/learn/intrinsics/_pages/IBITS.md:39
#: ../../source/learn/intrinsics/_pages/IBSET.md:35
#: ../../source/learn/intrinsics/_pages/ICHAR.md:105
#: ../../source/learn/intrinsics/_pages/IEOR.md:33
#: ../../source/learn/intrinsics/_pages/IMAGE_INDEX.md:48
#: ../../source/learn/intrinsics/_pages/INDEX.md:73
#: ../../source/learn/intrinsics/_pages/INT.md:116
#: ../../source/learn/intrinsics/_pages/IOR.md:58
#: ../../source/learn/intrinsics/_pages/IPARITY.md:67
#: ../../source/learn/intrinsics/_pages/ISHFT.md:38
#: ../../source/learn/intrinsics/_pages/ISHFTC.md:42
#: ../../source/learn/intrinsics/_pages/LBOUND.md:112
#: ../../source/learn/intrinsics/_pages/LEADZ.md:124
#: ../../source/learn/intrinsics/_pages/LEN.md:108
#: ../../source/learn/intrinsics/_pages/LEN_TRIM.md:72
#: ../../source/learn/intrinsics/_pages/LGE.md:43
#: ../../source/learn/intrinsics/_pages/LGT.md:43
#: ../../source/learn/intrinsics/_pages/LLE.md:89
#: ../../source/learn/intrinsics/_pages/LLT.md:43
#: ../../source/learn/intrinsics/_pages/LOGICAL.md:63
#: ../../source/learn/intrinsics/_pages/LOG_GAMMA.md:44
#: ../../source/learn/intrinsics/_pages/MASKL.md:91
#: ../../source/learn/intrinsics/_pages/MASKR.md:100
#: ../../source/learn/intrinsics/_pages/MAX.md:113
#: ../../source/learn/intrinsics/_pages/MAXEXPONENT.md:50
#: ../../source/learn/intrinsics/_pages/MAXLOC.md:98
#: ../../source/learn/intrinsics/_pages/MAXVAL.md:82
#: ../../source/learn/intrinsics/_pages/MERGE.md:149
#: ../../source/learn/intrinsics/_pages/MIN.md:50
#: ../../source/learn/intrinsics/_pages/MINEXPONENT.md:50
#: ../../source/learn/intrinsics/_pages/MINLOC.md:85
#: ../../source/learn/intrinsics/_pages/MINVAL.md:142
#: ../../source/learn/intrinsics/_pages/MOD.md:74
#: ../../source/learn/intrinsics/_pages/MODULO.md:68
#: ../../source/learn/intrinsics/_pages/MOVE_ALLOC.md:68
#: ../../source/learn/intrinsics/_pages/MVBITS.md:132
#: ../../source/learn/intrinsics/_pages/NEAREST.md:65
#: ../../source/learn/intrinsics/_pages/NINT.md:114
#: ../../source/learn/intrinsics/_pages/NORM2.md:85
#: ../../source/learn/intrinsics/_pages/NOT.md:50
#: ../../source/learn/intrinsics/_pages/NULL.md:114
#: ../../source/learn/intrinsics/_pages/NUM_IMAGES.md:61
#: ../../source/learn/intrinsics/_pages/PACK.md:104
#: ../../source/learn/intrinsics/_pages/POPCNT.md:56
#: ../../source/learn/intrinsics/_pages/POPPAR.md:57
#: ../../source/learn/intrinsics/_pages/PRECISION.md:50
#: ../../source/learn/intrinsics/_pages/PRODUCT.md:225
#: ../../source/learn/intrinsics/_pages/RADIX.md:49
#: ../../source/learn/intrinsics/_pages/RANDOM_NUMBER.md:85
#: ../../source/learn/intrinsics/_pages/RANDOM_SEED.md:64
#: ../../source/learn/intrinsics/_pages/RANGE.md:56
#: ../../source/learn/intrinsics/_pages/REAL.md:69
#: ../../source/learn/intrinsics/_pages/REPEAT.md:62
#: ../../source/learn/intrinsics/_pages/RESHAPE.md:71
#: ../../source/learn/intrinsics/_pages/RRSPACING.md:31
#: ../../source/learn/intrinsics/_pages/SAME_TYPE_AS.md:35
#: ../../source/learn/intrinsics/_pages/SCALE.md:55
#: ../../source/learn/intrinsics/_pages/SCAN.md:63
#: ../../source/learn/intrinsics/_pages/SELECTED_INT_KIND.md:53
#: ../../source/learn/intrinsics/_pages/SELECTED_REAL_KIND.md:86
#: ../../source/learn/intrinsics/_pages/SET_EXPONENT.md:51
#: ../../source/learn/intrinsics/_pages/SHAPE.md:62
#: ../../source/learn/intrinsics/_pages/SHIFTA.md:37
#: ../../source/learn/intrinsics/_pages/SHIFTL.md:35
#: ../../source/learn/intrinsics/_pages/SHIFTR.md:35
#: ../../source/learn/intrinsics/_pages/SIN.md:125
#: ../../source/learn/intrinsics/_pages/SINH.md:85
#: ../../source/learn/intrinsics/_pages/SIZE.md:183
#: ../../source/learn/intrinsics/_pages/SPACING.md:49
#: ../../source/learn/intrinsics/_pages/SPREAD.md:120
#: ../../source/learn/intrinsics/_pages/STORAGE_SIZE.md:57
#: ../../source/learn/intrinsics/_pages/SUM.md:85
#: ../../source/learn/intrinsics/_pages/SYSTEM_CLOCK.md:98
#: ../../source/learn/intrinsics/_pages/TAN.md:46
#: ../../source/learn/intrinsics/_pages/TANH.md:51
#: ../../source/learn/intrinsics/_pages/TINY.md:52
#: ../../source/learn/intrinsics/_pages/TRAILZ.md:108
#: ../../source/learn/intrinsics/_pages/TRIM.md:54
#: ../../source/learn/intrinsics/_pages/UBOUND.md:111
#: ../../source/learn/intrinsics/_pages/UNPACK.md:59
#: ../../source/learn/intrinsics/_pages/VERIFY.md:247
msgid "__See Also__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MERGE.md:151
msgid ""
"[__pack__(3)](PACK), [__unpack__(3)](UNPACK), [__pack__(3)](PACK), "
"[__spread__(3)](SPREAD), [__unpack__(3)](UNPACK)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ABS.md:125
#: ../../source/learn/intrinsics/_pages/ACHAR.md:165
#: ../../source/learn/intrinsics/_pages/ACOS.md:68
#: ../../source/learn/intrinsics/_pages/ACOSH.md:62
#: ../../source/learn/intrinsics/_pages/ADJUSTL.md:66
#: ../../source/learn/intrinsics/_pages/ADJUSTR.md:79
#: ../../source/learn/intrinsics/_pages/ASIN.md:98
#: ../../source/learn/intrinsics/_pages/ATAN.md:82
#: ../../source/learn/intrinsics/_pages/BTEST.md:131
#: ../../source/learn/intrinsics/_pages/COMMAND_ARGUMENT_COUNT.md:63
#: ../../source/learn/intrinsics/_pages/CONJG.md:100
#: ../../source/learn/intrinsics/_pages/CPU_TIME.md:74
#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:113
#: ../../source/learn/intrinsics/_pages/DBLE.md:59
#: ../../source/learn/intrinsics/_pages/DIGITS.md:79
#: ../../source/learn/intrinsics/_pages/DIM.md:66
#: ../../source/learn/intrinsics/_pages/EPSILON.md:128
#: ../../source/learn/intrinsics/_pages/EXP.md:94
#: ../../source/learn/intrinsics/_pages/FLOOR.md:90
#: ../../source/learn/intrinsics/_pages/GET_COMMAND.md:86
#: ../../source/learn/intrinsics/_pages/GET_COMMAND_ARGUMENT.md:128
#: ../../source/learn/intrinsics/_pages/GET_ENVIRONMENT_VARIABLE.md:127
#: ../../source/learn/intrinsics/_pages/HUGE.md:107
#: ../../source/learn/intrinsics/_pages/HYPOT.md:95
#: ../../source/learn/intrinsics/_pages/INT.md:125
#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_END.md:63
#: ../../source/learn/intrinsics/_pages/LEN.md:129
#: ../../source/learn/intrinsics/_pages/LEN_TRIM.md:89
#: ../../source/learn/intrinsics/_pages/MASKL.md:95
#: ../../source/learn/intrinsics/_pages/MASKR.md:104
#: ../../source/learn/intrinsics/_pages/MERGE.md:157
#: ../../source/learn/intrinsics/_pages/MINVAL.md:147
#: ../../source/learn/intrinsics/_pages/NEW_LINE.md:76
#: ../../source/learn/intrinsics/_pages/NINT.md:123
#: ../../source/learn/intrinsics/_pages/NOT.md:60
#: ../../source/learn/intrinsics/_pages/PACK.md:112
#: ../../source/learn/intrinsics/_pages/PRODUCT.md:230
#: ../../source/learn/intrinsics/_pages/SIN.md:132
#: ../../source/learn/intrinsics/_pages/SQRT.md:89
#: ../../source/learn/intrinsics/_pages/TRAILZ.md:115
#: ../../source/learn/intrinsics/_pages/VERIFY.md:265
msgid "####### fortran-lang intrinsic descriptions (license: MIT) @urbanjost"
msgstr ""

#: ../../source/learn/intrinsics/_pages/PACK.md:2
#, fuzzy
msgid "pack"
msgstr "pack"

#: ../../source/learn/intrinsics/_pages/PACK.md:5
msgid ""
"__pack__(3) - \\[ARRAY CONSTRUCTION\\] Pack an array into an array of "
"rank one"
msgstr ""

#: ../../source/learn/intrinsics/_pages/PACK.md:16
msgid ""
"where TYPE(kind=KIND) may be any type, where __array__ and __vector__    "
"and the returned value must by of the same type. __mask__ may be a    "
"scalar as well an an array."
msgstr ""

#: ../../source/learn/intrinsics/_pages/PACK.md:22
msgid "Stores the elements of ARRAY in an array of rank one."
msgstr ""

#: ../../source/learn/intrinsics/_pages/PACK.md:24
msgid ""
"The beginning of the resulting array is made up of elements whose "
"__mask__ equals __.true.__. Afterwards, positions are filled with "
"elements taken from __vector__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ALLOCATED.md:23
#: ../../source/learn/intrinsics/_pages/CO_LBOUND.md:19
#: ../../source/learn/intrinsics/_pages/CO_UBOUND.md:19
#: ../../source/learn/intrinsics/_pages/CSHIFT.md:25
#: ../../source/learn/intrinsics/_pages/EOSHIFT.md:35
#: ../../source/learn/intrinsics/_pages/FINDLOC.md:36
#: ../../source/learn/intrinsics/_pages/IALL.md:23
#: ../../source/learn/intrinsics/_pages/IANY.md:23
#: ../../source/learn/intrinsics/_pages/IPARITY.md:23
#: ../../source/learn/intrinsics/_pages/LBOUND.md:23
#: ../../source/learn/intrinsics/_pages/MAXLOC.md:27
#: ../../source/learn/intrinsics/_pages/MAXVAL.md:28
#: ../../source/learn/intrinsics/_pages/MINLOC.md:31
#: ../../source/learn/intrinsics/_pages/MINVAL.md:26
#: ../../source/learn/intrinsics/_pages/NORM2.md:24
#: ../../source/learn/intrinsics/_pages/PACK.md:30
#: ../../source/learn/intrinsics/_pages/PRODUCT.md:32
#: ../../source/learn/intrinsics/_pages/SIZE.md:19
#: ../../source/learn/intrinsics/_pages/SUM.md:20
#: ../../source/learn/intrinsics/_pages/UBOUND.md:18
#, fuzzy
msgid "__array__"
msgstr "__array__"

#: ../../source/learn/intrinsics/_pages/CSHIFT.md:26
#: ../../source/learn/intrinsics/_pages/PACK.md:31
msgid "Shall be an array of any type."
msgstr ""

#: ../../source/learn/intrinsics/_pages/PACK.md:34
msgid ""
"Shall be an array of type _logical_ and of the same size as __array__. "
"Alternatively, it may be a _logical_ scalar."
msgstr ""

#: ../../source/learn/intrinsics/_pages/PACK.md:37
#: ../../source/learn/intrinsics/_pages/UNPACK.md:18
#, fuzzy
msgid "__vector__"
msgstr "__vector__"

#: ../../source/learn/intrinsics/_pages/PACK.md:38
msgid ""
"(Optional) shall be an array of the same type as __array__ and of rank "
"one. If present, the number of elements in __vector__ shall be equal to "
"or greater than the number of true elements in __mask__. If __mask__ is "
"scalar, the number of elements in __vector__ shall be equal to or greater"
" than the number of elements in __array__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/PACK.md:46
msgid ""
"The result is an array of rank one and the same type as that of "
"__array__. If __vector__ is present, the result size is that of "
"__vector__, the number of __.true.__ values in __mask__ otherwise."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ABS.md:52
#: ../../source/learn/intrinsics/_pages/ACOS.md:33
#: ../../source/learn/intrinsics/_pages/ACOSH.md:38
#: ../../source/learn/intrinsics/_pages/ADJUSTL.md:33
#: ../../source/learn/intrinsics/_pages/ADJUSTR.md:34
#: ../../source/learn/intrinsics/_pages/AIMAG.md:32
#: ../../source/learn/intrinsics/_pages/AINT.md:49
#: ../../source/learn/intrinsics/_pages/ALL.md:68
#: ../../source/learn/intrinsics/_pages/ALLOCATED.md:37
#: ../../source/learn/intrinsics/_pages/ANINT.md:35
#: ../../source/learn/intrinsics/_pages/ANY.md:44
#: ../../source/learn/intrinsics/_pages/ASINH.md:35
#: ../../source/learn/intrinsics/_pages/ASSOCIATED.md:66
#: ../../source/learn/intrinsics/_pages/ATAN.md:42
#: ../../source/learn/intrinsics/_pages/ATAN2.md:45
#: ../../source/learn/intrinsics/_pages/ATANH.md:30
#: ../../source/learn/intrinsics/_pages/ATOMIC_ADD.md:36
#: ../../source/learn/intrinsics/_pages/ATOMIC_AND.md:37
#: ../../source/learn/intrinsics/_pages/ATOMIC_CAS.md:46
#: ../../source/learn/intrinsics/_pages/ATOMIC_DEFINE.md:43
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_ADD.md:41
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_AND.md:41
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_OR.md:41
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_XOR.md:41
#: ../../source/learn/intrinsics/_pages/ATOMIC_OR.md:37
#: ../../source/learn/intrinsics/_pages/ATOMIC_REF.md:38
#: ../../source/learn/intrinsics/_pages/ATOMIC_XOR.md:37
#: ../../source/learn/intrinsics/_pages/BESSEL_J0.md:29
#: ../../source/learn/intrinsics/_pages/BESSEL_J1.md:29
#: ../../source/learn/intrinsics/_pages/BESSEL_JN.md:44
#: ../../source/learn/intrinsics/_pages/BESSEL_Y0.md:28
#: ../../source/learn/intrinsics/_pages/BESSEL_Y1.md:28
#: ../../source/learn/intrinsics/_pages/BESSEL_YN.md:44
#: ../../source/learn/intrinsics/_pages/BIT_SIZE.md:35
#: ../../source/learn/intrinsics/_pages/BTEST.md:40
#: ../../source/learn/intrinsics/_pages/CEILING.md:39
#: ../../source/learn/intrinsics/_pages/CHAR.md:35
#: ../../source/learn/intrinsics/_pages/CMPLX.md:122
#: ../../source/learn/intrinsics/_pages/COMMAND_ARGUMENT_COUNT.md:31
#: ../../source/learn/intrinsics/_pages/COMPILER_OPTIONS.md:28
#: ../../source/learn/intrinsics/_pages/COMPILER_VERSION.md:30
#: ../../source/learn/intrinsics/_pages/CONJG.md:41
#: ../../source/learn/intrinsics/_pages/COS.md:40
#: ../../source/learn/intrinsics/_pages/COSH.md:38
#: ../../source/learn/intrinsics/_pages/COUNT.md:40
#: ../../source/learn/intrinsics/_pages/CO_BROADCAST.md:40
#: ../../source/learn/intrinsics/_pages/CO_MAX.md:42
#: ../../source/learn/intrinsics/_pages/CO_MIN.md:42
#: ../../source/learn/intrinsics/_pages/CO_REDUCE.md:59
#: ../../source/learn/intrinsics/_pages/CO_SUM.md:42
#: ../../source/learn/intrinsics/_pages/CPU_TIME.md:46
#: ../../source/learn/intrinsics/_pages/CSHIFT.md:40
#: ../../source/learn/intrinsics/_pages/C_ASSOCIATED.md:34
#: ../../source/learn/intrinsics/_pages/C_FUNLOC.md:28
#: ../../source/learn/intrinsics/_pages/C_F_POINTER.md:32
#: ../../source/learn/intrinsics/_pages/C_F_PROCPOINTER.md:27
#: ../../source/learn/intrinsics/_pages/C_LOC.md:31
#: ../../source/learn/intrinsics/_pages/C_SIZEOF.md:34
#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:57
#: ../../source/learn/intrinsics/_pages/DBLE.md:35
#: ../../source/learn/intrinsics/_pages/DIGITS.md:35
#: ../../source/learn/intrinsics/_pages/DIM.md:36
#: ../../source/learn/intrinsics/_pages/DOT_PRODUCT.md:40
#: ../../source/learn/intrinsics/_pages/DPROD.md:45
#: ../../source/learn/intrinsics/_pages/EOSHIFT.md:53
#: ../../source/learn/intrinsics/_pages/EPSILON.md:41
#: ../../source/learn/intrinsics/_pages/ERF.md:31
#: ../../source/learn/intrinsics/_pages/ERFC.md:49
#: ../../source/learn/intrinsics/_pages/ERFC_SCALED.md:33
#: ../../source/learn/intrinsics/_pages/EVENT_QUERY.md:35
#: ../../source/learn/intrinsics/_pages/EXECUTE_COMMAND_LINE.md:77
#: ../../source/learn/intrinsics/_pages/EXP.md:40
#: ../../source/learn/intrinsics/_pages/EXPONENT.md:28
#: ../../source/learn/intrinsics/_pages/FLOOR.md:42
#: ../../source/learn/intrinsics/_pages/FRACTION.md:31
#: ../../source/learn/intrinsics/_pages/GAMMA.md:34
#: ../../source/learn/intrinsics/_pages/GET_COMMAND.md:46
#: ../../source/learn/intrinsics/_pages/GET_COMMAND_ARGUMENT.md:56
#: ../../source/learn/intrinsics/_pages/GET_ENVIRONMENT_VARIABLE.md:65
#: ../../source/learn/intrinsics/_pages/HUGE.md:37
#: ../../source/learn/intrinsics/_pages/HYPOT.md:43
#: ../../source/learn/intrinsics/_pages/IACHAR.md:33
#: ../../source/learn/intrinsics/_pages/IALL.md:45
#: ../../source/learn/intrinsics/_pages/IAND.md:31
#: ../../source/learn/intrinsics/_pages/IANY.md:45
#: ../../source/learn/intrinsics/_pages/ICHAR.md:42
#: ../../source/learn/intrinsics/_pages/IMAGE_INDEX.md:33
#: ../../source/learn/intrinsics/_pages/INT.md:53
#: ../../source/learn/intrinsics/_pages/IOR.md:33
#: ../../source/learn/intrinsics/_pages/IPARITY.md:45
#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:90
#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_END.md:36
#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_EOR.md:32
#: ../../source/learn/intrinsics/_pages/KIND.md:28
#: ../../source/learn/intrinsics/_pages/LEADZ.md:28
#: ../../source/learn/intrinsics/_pages/LLE.md:51
#: ../../source/learn/intrinsics/_pages/LOG.md:31
#: ../../source/learn/intrinsics/_pages/LOG10.md:31
#: ../../source/learn/intrinsics/_pages/LOG_GAMMA.md:27
#: ../../source/learn/intrinsics/_pages/MASKL.md:38
#: ../../source/learn/intrinsics/_pages/MASKR.md:39
#: ../../source/learn/intrinsics/_pages/MAXEXPONENT.md:28
#: ../../source/learn/intrinsics/_pages/MINEXPONENT.md:28
#: ../../source/learn/intrinsics/_pages/MOD.md:34
#: ../../source/learn/intrinsics/_pages/MODULO.md:40
#: ../../source/learn/intrinsics/_pages/NEAREST.md:34
#: ../../source/learn/intrinsics/_pages/NEW_LINE.md:48
#: ../../source/learn/intrinsics/_pages/NINT.md:49
#: ../../source/learn/intrinsics/_pages/NORM2.md:44
#: ../../source/learn/intrinsics/_pages/NULL.md:34
#: ../../source/learn/intrinsics/_pages/NUM_IMAGES.md:38
#: ../../source/learn/intrinsics/_pages/PACK.md:52
#: ../../source/learn/intrinsics/_pages/POPCNT.md:28
#: ../../source/learn/intrinsics/_pages/POPPAR.md:31
#: ../../source/learn/intrinsics/_pages/PRECISION.md:28
#: ../../source/learn/intrinsics/_pages/PRESENT.md:33
#: ../../source/learn/intrinsics/_pages/PRODUCT.md:50
#: ../../source/learn/intrinsics/_pages/RADIX.md:28
#: ../../source/learn/intrinsics/_pages/RANDOM_NUMBER.md:24
#: ../../source/learn/intrinsics/_pages/RANDOM_SEED.md:39
#: ../../source/learn/intrinsics/_pages/RANGE.md:34
#: ../../source/learn/intrinsics/_pages/RANK.md:28
#: ../../source/learn/intrinsics/_pages/REAL.md:40
#: ../../source/learn/intrinsics/_pages/REPEAT.md:36
#: ../../source/learn/intrinsics/_pages/RESHAPE.md:42
#: ../../source/learn/intrinsics/_pages/SCALE.md:34
#: ../../source/learn/intrinsics/_pages/SCAN.md:43
#: ../../source/learn/intrinsics/_pages/SELECTED_CHAR_KIND.md:27
#: ../../source/learn/intrinsics/_pages/SELECTED_INT_KIND.md:26
#: ../../source/learn/intrinsics/_pages/SELECTED_REAL_KIND.md:59
#: ../../source/learn/intrinsics/_pages/SET_EXPONENT.md:33
#: ../../source/learn/intrinsics/_pages/SHAPE.md:36
#: ../../source/learn/intrinsics/_pages/SIN.md:38
#: ../../source/learn/intrinsics/_pages/SIN.md:83
#: ../../source/learn/intrinsics/_pages/SINH.md:39
#: ../../source/learn/intrinsics/_pages/SIZE.md:38
#: ../../source/learn/intrinsics/_pages/SPACING.md:28
#: ../../source/learn/intrinsics/_pages/SPREAD.md:47
#: ../../source/learn/intrinsics/_pages/SQRT.md:54
#: ../../source/learn/intrinsics/_pages/SUM.md:42
#: ../../source/learn/intrinsics/_pages/SYSTEM_CLOCK.md:62
#: ../../source/learn/intrinsics/_pages/TAN.md:27
#: ../../source/learn/intrinsics/_pages/TANH.md:32
#: ../../source/learn/intrinsics/_pages/THIS_IMAGE.md:46
#: ../../source/learn/intrinsics/_pages/TINY.md:34
#: ../../source/learn/intrinsics/_pages/TRAILZ.md:28
#: ../../source/learn/intrinsics/_pages/TRANSFER.md:53
#: ../../source/learn/intrinsics/_pages/TRANSPOSE.md:29
#: ../../source/learn/intrinsics/_pages/TRIM.md:28
#: ../../source/learn/intrinsics/_pages/UNPACK.md:35
msgid "Sample program:"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ABS.md:103
#: ../../source/learn/intrinsics/_pages/ACHAR.md:92
#: ../../source/learn/intrinsics/_pages/ACOS.md:51
#: ../../source/learn/intrinsics/_pages/ACOSH.md:48
#: ../../source/learn/intrinsics/_pages/ADJUSTL.md:52
#: ../../source/learn/intrinsics/_pages/ADJUSTR.md:62
#: ../../source/learn/intrinsics/_pages/AIMAG.md:51
#: ../../source/learn/intrinsics/_pages/AINT.md:70
#: ../../source/learn/intrinsics/_pages/ALL.md:90
#: ../../source/learn/intrinsics/_pages/ALLOCATED.md:70
#: ../../source/learn/intrinsics/_pages/ANINT.md:59
#: ../../source/learn/intrinsics/_pages/ANY.md:63
#: ../../source/learn/intrinsics/_pages/ASIN.md:71
#: ../../source/learn/intrinsics/_pages/ASINH.md:47
#: ../../source/learn/intrinsics/_pages/ATAN.md:63
#: ../../source/learn/intrinsics/_pages/ATAN2.md:56
#: ../../source/learn/intrinsics/_pages/ATANH.md:41
#: ../../source/learn/intrinsics/_pages/BESSEL_J0.md:41
#: ../../source/learn/intrinsics/_pages/BESSEL_J1.md:41
#: ../../source/learn/intrinsics/_pages/BESSEL_JN.md:56
#: ../../source/learn/intrinsics/_pages/BESSEL_Y0.md:40
#: ../../source/learn/intrinsics/_pages/BESSEL_YN.md:55
#: ../../source/learn/intrinsics/_pages/BTEST.md:83
#: ../../source/learn/intrinsics/_pages/CEILING.md:55
#: ../../source/learn/intrinsics/_pages/CHAR.md:46
#: ../../source/learn/intrinsics/_pages/COMPILER_OPTIONS.md:41
#: ../../source/learn/intrinsics/_pages/COMPILER_VERSION.md:43
#: ../../source/learn/intrinsics/_pages/CONJG.md:78
#: ../../source/learn/intrinsics/_pages/COS.md:55
#: ../../source/learn/intrinsics/_pages/CO_MAX.md:55
#: ../../source/learn/intrinsics/_pages/CO_SUM.md:56
#: ../../source/learn/intrinsics/_pages/CPU_TIME.md:61
#: ../../source/learn/intrinsics/_pages/CSHIFT.md:57
#: ../../source/learn/intrinsics/_pages/C_SIZEOF.md:44
#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:85
#: ../../source/learn/intrinsics/_pages/DBLE.md:46
#: ../../source/learn/intrinsics/_pages/DIM.md:54
#: ../../source/learn/intrinsics/_pages/DOT_PRODUCT.md:55
#: ../../source/learn/intrinsics/_pages/DPROD.md:75
#: ../../source/learn/intrinsics/_pages/EOSHIFT.md:70
#: ../../source/learn/intrinsics/_pages/EPSILON.md:94
#: ../../source/learn/intrinsics/_pages/ERF.md:42
#: ../../source/learn/intrinsics/_pages/ERFC.md:60
#: ../../source/learn/intrinsics/_pages/ERFC_SCALED.md:43
#: ../../source/learn/intrinsics/_pages/EXP.md:73
#: ../../source/learn/intrinsics/_pages/EXPONENT.md:40
#: ../../source/learn/intrinsics/_pages/FLOOR.md:64
#: ../../source/learn/intrinsics/_pages/FRACTION.md:41
#: ../../source/learn/intrinsics/_pages/GAMMA.md:86
#: ../../source/learn/intrinsics/_pages/GET_COMMAND.md:64
#: ../../source/learn/intrinsics/_pages/GET_COMMAND_ARGUMENT.md:107
#: ../../source/learn/intrinsics/_pages/HUGE.md:65
#: ../../source/learn/intrinsics/_pages/HYPOT.md:73
#: ../../source/learn/intrinsics/_pages/IACHAR.md:60
#: ../../source/learn/intrinsics/_pages/IALL.md:61
#: ../../source/learn/intrinsics/_pages/IAND.md:41
#: ../../source/learn/intrinsics/_pages/IANY.md:58
#: ../../source/learn/intrinsics/_pages/ICHAR.md:95
#: ../../source/learn/intrinsics/_pages/INT.md:96
#: ../../source/learn/intrinsics/_pages/IOR.md:46
#: ../../source/learn/intrinsics/_pages/IPARITY.md:57
#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:106
#: ../../source/learn/intrinsics/_pages/KIND.md:41
#: ../../source/learn/intrinsics/_pages/LBOUND.md:99
#: ../../source/learn/intrinsics/_pages/LEADZ.md:50
#: ../../source/learn/intrinsics/_pages/LEN.md:105
#: ../../source/learn/intrinsics/_pages/LEN_TRIM.md:59
#: ../../source/learn/intrinsics/_pages/LLE.md:70
#: ../../source/learn/intrinsics/_pages/LOG.md:42
#: ../../source/learn/intrinsics/_pages/LOG10.md:49
#: ../../source/learn/intrinsics/_pages/LOGICAL.md:51
#: ../../source/learn/intrinsics/_pages/LOG_GAMMA.md:36
#: ../../source/learn/intrinsics/_pages/MASKL.md:49
#: ../../source/learn/intrinsics/_pages/MASKR.md:54
#: ../../source/learn/intrinsics/_pages/MAX.md:100
#: ../../source/learn/intrinsics/_pages/MAXEXPONENT.md:41
#: ../../source/learn/intrinsics/_pages/MAXLOC.md:81
#: ../../source/learn/intrinsics/_pages/MAXVAL.md:69
#: ../../source/learn/intrinsics/_pages/MERGE_BITS.md:103
#: ../../source/learn/intrinsics/_pages/MIN.md:40
#: ../../source/learn/intrinsics/_pages/MINLOC.md:72
#: ../../source/learn/intrinsics/_pages/MINVAL.md:107
#: ../../source/learn/intrinsics/_pages/MOD.md:55
#: ../../source/learn/intrinsics/_pages/MODULO.md:55
#: ../../source/learn/intrinsics/_pages/MOVE_ALLOC.md:59
#: ../../source/learn/intrinsics/_pages/NEAREST.md:57
#: ../../source/learn/intrinsics/_pages/NEW_LINE.md:64
#: ../../source/learn/intrinsics/_pages/NINT.md:91
#: ../../source/learn/intrinsics/_pages/NORM2.md:68
#: ../../source/learn/intrinsics/_pages/NOT.md:39
#: ../../source/learn/intrinsics/_pages/NULL.md:103
#: ../../source/learn/intrinsics/_pages/PACK.md:93
#: ../../source/learn/intrinsics/_pages/PARITY.md:55
#: ../../source/learn/intrinsics/_pages/POPCNT.md:43
#: ../../source/learn/intrinsics/_pages/POPPAR.md:45
#: ../../source/learn/intrinsics/_pages/PRECISION.md:41
#: ../../source/learn/intrinsics/_pages/PRESENT.md:52
#: ../../source/learn/intrinsics/_pages/PRODUCT.md:160
#: ../../source/learn/intrinsics/_pages/RADIX.md:38
#: ../../source/learn/intrinsics/_pages/RANDOM_NUMBER.md:68
#: ../../source/learn/intrinsics/_pages/RANDOM_SEED.md:54
#: ../../source/learn/intrinsics/_pages/RANGE.md:46
#: ../../source/learn/intrinsics/_pages/RANK.md:39
#: ../../source/learn/intrinsics/_pages/REAL.md:57
#: ../../source/learn/intrinsics/_pages/REPEAT.md:52
#: ../../source/learn/intrinsics/_pages/RESHAPE.md:61
#: ../../source/learn/intrinsics/_pages/SCALE.md:45
#: ../../source/learn/intrinsics/_pages/SCAN.md:53
#: ../../source/learn/intrinsics/_pages/SELECTED_CHAR_KIND.md:50
#: ../../source/learn/intrinsics/_pages/SELECTED_INT_KIND.md:43
#: ../../source/learn/intrinsics/_pages/SELECTED_REAL_KIND.md:76
#: ../../source/learn/intrinsics/_pages/SET_EXPONENT.md:43
#: ../../source/learn/intrinsics/_pages/SHAPE.md:50
#: ../../source/learn/intrinsics/_pages/SIGN.md:64
#: ../../source/learn/intrinsics/_pages/SIN.md:115
#: ../../source/learn/intrinsics/_pages/SINH.md:72
#: ../../source/learn/intrinsics/_pages/SIZE.md:135
#: ../../source/learn/intrinsics/_pages/SPACING.md:40
#: ../../source/learn/intrinsics/_pages/SQRT.md:78
#: ../../source/learn/intrinsics/_pages/STORAGE_SIZE.md:45
#: ../../source/learn/intrinsics/_pages/SUM.md:73
#: ../../source/learn/intrinsics/_pages/TAN.md:38
#: ../../source/learn/intrinsics/_pages/TANH.md:43
#: ../../source/learn/intrinsics/_pages/THIS_IMAGE.md:62
#: ../../source/learn/intrinsics/_pages/TINY.md:43
#: ../../source/learn/intrinsics/_pages/TRAILZ.md:63
#: ../../source/learn/intrinsics/_pages/TRANSFER.md:73
#: ../../source/learn/intrinsics/_pages/TRANSPOSE.md:68
#: ../../source/learn/intrinsics/_pages/TRIM.md:43
#: ../../source/learn/intrinsics/_pages/UBOUND.md:99
#: ../../source/learn/intrinsics/_pages/UNPACK.md:50
#: ../../source/learn/intrinsics/_pages/VERIFY.md:125
#: ../../source/learn/intrinsics/_pages/VERIFY.md:181
#: ../../source/learn/intrinsics/_pages/VERIFY.md:236
msgid "Results:"
msgstr "Resultados:"

#: ../../source/learn/intrinsics/_pages/PACK.md:106
msgid ""
"[__unpack__(3)](UNPACK), [__merge__(3)](MERGE), [__pack__(3)](PACK), "
"[__spread__(3)](SPREAD), [__unpack__(3)](UNPACK)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SPREAD.md:2
#, fuzzy
msgid "spread"
msgstr "spread"

#: ../../source/learn/intrinsics/_pages/SPREAD.md:5
msgid "__spread__(3) - \\[ARRAY CONSTRUCTION\\] Add a dimension to an array"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SPREAD.md:20
msgid ""
"Replicates a __source__ array __ncopies__ times along a specified "
"dimension __dim__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SPREAD.md:23
msgid ""
"If SOURCE is scalar, the shape of the result is (MAX (NCOPIES, 0)). and "
"each element of the result has a value equal to SOURCE."
msgstr ""

#: ../../source/learn/intrinsics/_pages/RESHAPE.md:20
#: ../../source/learn/intrinsics/_pages/SHAPE.md:18
#: ../../source/learn/intrinsics/_pages/SPREAD.md:28
#: ../../source/learn/intrinsics/_pages/TRANSFER.md:23
#, fuzzy
msgid "__source__"
msgstr "__source__"

#: ../../source/learn/intrinsics/_pages/SPREAD.md:29
msgid "Shall be a scalar or an array of any type and a rank less than fifteen."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ALL.md:25
#: ../../source/learn/intrinsics/_pages/ANY.md:23
#: ../../source/learn/intrinsics/_pages/COUNT.md:24
#: ../../source/learn/intrinsics/_pages/CO_LBOUND.md:22
#: ../../source/learn/intrinsics/_pages/CO_UBOUND.md:22
#: ../../source/learn/intrinsics/_pages/CSHIFT.md:31
#: ../../source/learn/intrinsics/_pages/EOSHIFT.md:44
#: ../../source/learn/intrinsics/_pages/FINDLOC.md:43
#: ../../source/learn/intrinsics/_pages/IALL.md:26
#: ../../source/learn/intrinsics/_pages/IANY.md:26
#: ../../source/learn/intrinsics/_pages/IPARITY.md:26
#: ../../source/learn/intrinsics/_pages/LBOUND.md:26
#: ../../source/learn/intrinsics/_pages/MAXLOC.md:30
#: ../../source/learn/intrinsics/_pages/MAXVAL.md:31
#: ../../source/learn/intrinsics/_pages/MINLOC.md:34
#: ../../source/learn/intrinsics/_pages/MINVAL.md:29
#: ../../source/learn/intrinsics/_pages/NORM2.md:27
#: ../../source/learn/intrinsics/_pages/PRODUCT.md:35
#: ../../source/learn/intrinsics/_pages/SIZE.md:23
#: ../../source/learn/intrinsics/_pages/SPREAD.md:32
#: ../../source/learn/intrinsics/_pages/SUM.md:23
#: ../../source/learn/intrinsics/_pages/THIS_IMAGE.md:26
#: ../../source/learn/intrinsics/_pages/UBOUND.md:21
msgid "__dim__"
msgstr "__dim__"

#: ../../source/learn/intrinsics/_pages/SPREAD.md:33
msgid ""
"Shall be a scalar of type _integer_ with a value in the range from __1__ "
"to __n+1__, where __n__ equals the rank of __source__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/REPEAT.md:26
#: ../../source/learn/intrinsics/_pages/SPREAD.md:36
msgid "__ncopies__"
msgstr "__ncopies__"

#: ../../source/learn/intrinsics/_pages/SPREAD.md:37
msgid "Shall be a scalar of type _integer_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SPREAD.md:41
msgid ""
"The result is an array of the same type as __source__ and has rank "
"__n+1__ where __n__ equals the rank of __source__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SPREAD.md:122
msgid ""
"[__pack__(3)](PACK), [__unpack__(3)](UNPACK), [__merge__(3)](MERGE), "
"[__pack__(3)](PACK), [__unpack__(3)](UNPACK)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/AIMAG.md:64
#: ../../source/learn/intrinsics/_pages/AINT.md:92
#: ../../source/learn/intrinsics/_pages/ALL.md:128
#: ../../source/learn/intrinsics/_pages/ALLOCATED.md:87
#: ../../source/learn/intrinsics/_pages/ANINT.md:82
#: ../../source/learn/intrinsics/_pages/ANY.md:73
#: ../../source/learn/intrinsics/_pages/ASINH.md:61
#: ../../source/learn/intrinsics/_pages/ASSOCIATED.md:88
#: ../../source/learn/intrinsics/_pages/ATAN2.md:65
#: ../../source/learn/intrinsics/_pages/ATANH.md:55
#: ../../source/learn/intrinsics/_pages/ATOMIC_ADD.md:60
#: ../../source/learn/intrinsics/_pages/ATOMIC_AND.md:62
#: ../../source/learn/intrinsics/_pages/ATOMIC_CAS.md:67
#: ../../source/learn/intrinsics/_pages/ATOMIC_DEFINE.md:67
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_ADD.md:67
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_AND.md:67
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_OR.md:67
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_XOR.md:67
#: ../../source/learn/intrinsics/_pages/ATOMIC_OR.md:63
#: ../../source/learn/intrinsics/_pages/ATOMIC_REF.md:71
#: ../../source/learn/intrinsics/_pages/ATOMIC_XOR.md:61
#: ../../source/learn/intrinsics/_pages/BESSEL_J0.md:58
#: ../../source/learn/intrinsics/_pages/BESSEL_J1.md:57
#: ../../source/learn/intrinsics/_pages/BESSEL_JN.md:73
#: ../../source/learn/intrinsics/_pages/BESSEL_Y0.md:57
#: ../../source/learn/intrinsics/_pages/BESSEL_Y1.md:52
#: ../../source/learn/intrinsics/_pages/BESSEL_YN.md:71
#: ../../source/learn/intrinsics/_pages/BGE.md:39
#: ../../source/learn/intrinsics/_pages/BGT.md:41
#: ../../source/learn/intrinsics/_pages/BLE.md:38
#: ../../source/learn/intrinsics/_pages/BLT.md:38
#: ../../source/learn/intrinsics/_pages/CEILING.md:78
#: ../../source/learn/intrinsics/_pages/CHAR.md:78
#: ../../source/learn/intrinsics/_pages/CMPLX.md:165
#: ../../source/learn/intrinsics/_pages/COMPILER_OPTIONS.md:59
#: ../../source/learn/intrinsics/_pages/COMPILER_VERSION.md:62
#: ../../source/learn/intrinsics/_pages/COS.md:76
#: ../../source/learn/intrinsics/_pages/COSH.md:59
#: ../../source/learn/intrinsics/_pages/COUNT.md:88
#: ../../source/learn/intrinsics/_pages/CO_BROADCAST.md:61
#: ../../source/learn/intrinsics/_pages/CO_LBOUND.md:46
#: ../../source/learn/intrinsics/_pages/CO_MAX.md:71
#: ../../source/learn/intrinsics/_pages/CO_MIN.md:67
#: ../../source/learn/intrinsics/_pages/CO_REDUCE.md:101
#: ../../source/learn/intrinsics/_pages/CO_SUM.md:72
#: ../../source/learn/intrinsics/_pages/CO_UBOUND.md:47
#: ../../source/learn/intrinsics/_pages/CSHIFT.md:71
#: ../../source/learn/intrinsics/_pages/C_ASSOCIATED.md:63
#: ../../source/learn/intrinsics/_pages/C_FUNLOC.md:70
#: ../../source/learn/intrinsics/_pages/C_F_POINTER.md:61
#: ../../source/learn/intrinsics/_pages/C_F_PROCPOINTER.md:63
#: ../../source/learn/intrinsics/_pages/C_LOC.md:57
#: ../../source/learn/intrinsics/_pages/C_SIZEOF.md:59
#: ../../source/learn/intrinsics/_pages/DOT_PRODUCT.md:67
#: ../../source/learn/intrinsics/_pages/DPROD.md:86
#: ../../source/learn/intrinsics/_pages/DSHIFTL.md:41
#: ../../source/learn/intrinsics/_pages/DSHIFTR.md:41
#: ../../source/learn/intrinsics/_pages/EOSHIFT.md:84
#: ../../source/learn/intrinsics/_pages/ERF.md:56
#: ../../source/learn/intrinsics/_pages/ERFC_SCALED.md:52
#: ../../source/learn/intrinsics/_pages/EVENT_QUERY.md:56
#: ../../source/learn/intrinsics/_pages/EXECUTE_COMMAND_LINE.md:105
#: ../../source/learn/intrinsics/_pages/EXPONENT.md:68
#: ../../source/learn/intrinsics/_pages/EXTENDS_TYPE_OF.md:45
#: ../../source/learn/intrinsics/_pages/FINDLOC.md:194
#: ../../source/learn/intrinsics/_pages/FRACTION.md:68
#: ../../source/learn/intrinsics/_pages/GAMMA.md:128
#: ../../source/learn/intrinsics/_pages/IACHAR.md:91
#: ../../source/learn/intrinsics/_pages/IALL.md:76
#: ../../source/learn/intrinsics/_pages/IAND.md:62
#: ../../source/learn/intrinsics/_pages/IANY.md:74
#: ../../source/learn/intrinsics/_pages/IBCLR.md:48
#: ../../source/learn/intrinsics/_pages/IBITS.md:53
#: ../../source/learn/intrinsics/_pages/IBSET.md:48
#: ../../source/learn/intrinsics/_pages/ICHAR.md:128
#: ../../source/learn/intrinsics/_pages/IEOR.md:46
#: ../../source/learn/intrinsics/_pages/IMAGE_INDEX.md:53
#: ../../source/learn/intrinsics/_pages/INDEX.md:87
#: ../../source/learn/intrinsics/_pages/IOR.md:71
#: ../../source/learn/intrinsics/_pages/IPARITY.md:74
#: ../../source/learn/intrinsics/_pages/ISHFT.md:42
#: ../../source/learn/intrinsics/_pages/ISHFTC.md:46
#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:115
#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_EOR.md:51
#: ../../source/learn/intrinsics/_pages/KIND.md:50
#: ../../source/learn/intrinsics/_pages/LBOUND.md:117
#: ../../source/learn/intrinsics/_pages/LEADZ.md:131
#: ../../source/learn/intrinsics/_pages/LGE.md:64
#: ../../source/learn/intrinsics/_pages/LGT.md:66
#: ../../source/learn/intrinsics/_pages/LLE.md:112
#: ../../source/learn/intrinsics/_pages/LLT.md:61
#: ../../source/learn/intrinsics/_pages/LOG.md:51
#: ../../source/learn/intrinsics/_pages/LOG10.md:59
#: ../../source/learn/intrinsics/_pages/LOGICAL.md:69
#: ../../source/learn/intrinsics/_pages/LOG_GAMMA.md:48
#: ../../source/learn/intrinsics/_pages/MATMUL.md:38
#: ../../source/learn/intrinsics/_pages/MAX.md:119
#: ../../source/learn/intrinsics/_pages/MAXEXPONENT.md:69
#: ../../source/learn/intrinsics/_pages/MAXLOC.md:103
#: ../../source/learn/intrinsics/_pages/MAXVAL.md:87
#: ../../source/learn/intrinsics/_pages/MIN.md:56
#: ../../source/learn/intrinsics/_pages/MINEXPONENT.md:68
#: ../../source/learn/intrinsics/_pages/MINLOC.md:90
#: ../../source/learn/intrinsics/_pages/MOD.md:78
#: ../../source/learn/intrinsics/_pages/MODULO.md:72
#: ../../source/learn/intrinsics/_pages/MOVE_ALLOC.md:72
#: ../../source/learn/intrinsics/_pages/NEAREST.md:84
#: ../../source/learn/intrinsics/_pages/NORM2.md:91
#: ../../source/learn/intrinsics/_pages/NULL.md:118
#: ../../source/learn/intrinsics/_pages/NUM_IMAGES.md:66
#: ../../source/learn/intrinsics/_pages/PARITY.md:63
#: ../../source/learn/intrinsics/_pages/POPCNT.md:62
#: ../../source/learn/intrinsics/_pages/POPPAR.md:63
#: ../../source/learn/intrinsics/_pages/PRECISION.md:69
#: ../../source/learn/intrinsics/_pages/PRESENT.md:61
#: ../../source/learn/intrinsics/_pages/RADIX.md:68
#: ../../source/learn/intrinsics/_pages/RANDOM_NUMBER.md:89
#: ../../source/learn/intrinsics/_pages/RANDOM_SEED.md:68
#: ../../source/learn/intrinsics/_pages/RANGE.md:74
#: ../../source/learn/intrinsics/_pages/RANK.md:47
#: ../../source/learn/intrinsics/_pages/REAL.md:74
#: ../../source/learn/intrinsics/_pages/REPEAT.md:79
#: ../../source/learn/intrinsics/_pages/RESHAPE.md:75
#: ../../source/learn/intrinsics/_pages/RRSPACING.md:50
#: ../../source/learn/intrinsics/_pages/SAME_TYPE_AS.md:39
#: ../../source/learn/intrinsics/_pages/SCALE.md:74
#: ../../source/learn/intrinsics/_pages/SCAN.md:77
#: ../../source/learn/intrinsics/_pages/SELECTED_CHAR_KIND.md:59
#: ../../source/learn/intrinsics/_pages/SELECTED_INT_KIND.md:62
#: ../../source/learn/intrinsics/_pages/SELECTED_REAL_KIND.md:92
#: ../../source/learn/intrinsics/_pages/SET_EXPONENT.md:70
#: ../../source/learn/intrinsics/_pages/SHAPE.md:67
#: ../../source/learn/intrinsics/_pages/SHIFTA.md:42
#: ../../source/learn/intrinsics/_pages/SHIFTL.md:40
#: ../../source/learn/intrinsics/_pages/SHIFTR.md:40
#: ../../source/learn/intrinsics/_pages/SINH.md:90
#: ../../source/learn/intrinsics/_pages/SIZE.md:188
#: ../../source/learn/intrinsics/_pages/SPACING.md:68
#: ../../source/learn/intrinsics/_pages/SPREAD.md:128
#: ../../source/learn/intrinsics/_pages/STORAGE_SIZE.md:61
#: ../../source/learn/intrinsics/_pages/SUM.md:89
#: ../../source/learn/intrinsics/_pages/SYSTEM_CLOCK.md:103
#: ../../source/learn/intrinsics/_pages/TAN.md:52
#: ../../source/learn/intrinsics/_pages/TANH.md:56
#: ../../source/learn/intrinsics/_pages/TINY.md:70
#: ../../source/learn/intrinsics/_pages/TRANSFER.md:105
#: ../../source/learn/intrinsics/_pages/TRANSPOSE.md:87
#: ../../source/learn/intrinsics/_pages/TRIM.md:73
#: ../../source/learn/intrinsics/_pages/UBOUND.md:117
#: ../../source/learn/intrinsics/_pages/UNPACK.md:67
msgid "####### fortran-lang intrinsic descriptions"
msgstr ""

#: ../../source/learn/intrinsics/_pages/UNPACK.md:2
#, fuzzy
msgid "unpack"
msgstr "unpack"

#: ../../source/learn/intrinsics/_pages/UNPACK.md:5
msgid ""
"__unpack__(3) - \\[ARRAY CONSTRUCTION\\] Store the elements of a vector "
"in an array of higher rank"
msgstr ""

#: ../../source/learn/intrinsics/_pages/UNPACK.md:14
msgid "Store the elements of __vector__ in an array of higher rank."
msgstr ""

#: ../../source/learn/intrinsics/_pages/UNPACK.md:19
msgid ""
"Shall be an array of any type and rank one. It shall have at least as "
"many elements as __mask__ has __.true.__ values."
msgstr ""

#: ../../source/learn/intrinsics/_pages/UNPACK.md:23
msgid "Shall be an array of type _logical_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/UNPACK.md:25
msgid "__field__"
msgstr "__field__"

#: ../../source/learn/intrinsics/_pages/UNPACK.md:26
msgid ""
"Shall be of the same type as __vector__ and have the same shape as "
"__mask__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/UNPACK.md:30
msgid ""
"The resulting array corresponds to __field__ with __.true.__ elements of "
"__mask__ replaced by values from __vector__ in array element order."
msgstr ""

#: ../../source/learn/intrinsics/_pages/UNPACK.md:61
msgid ""
"[__pack__(3)](PACK), [__merge__(3)](MERGE), [__pack__(3)](PACK), "
"[__spread__(3)](SPREAD), [__unpack__(3)](UNPACK)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ALLOCATED.md:2
#, fuzzy
msgid "allocated"
msgstr "allocated"

#: ../../source/learn/intrinsics/_pages/ALLOCATED.md:5
msgid "__allocated__(3) - \\[ARRAY INQUIRY\\] Status of an allocatable entity"
msgstr ""

#: ../../source/learn/intrinsics/_pages/AINT.md:16
#: ../../source/learn/intrinsics/_pages/ALLOCATED.md:12
#: ../../source/learn/intrinsics/_pages/MAXVAL.md:12
#: ../../source/learn/intrinsics/_pages/MINLOC.md:12
msgid "or"
msgstr "ou"

#: ../../source/learn/intrinsics/_pages/ALLOCATED.md:18
msgid ""
"__allocated(array)__ and __allocated(scalar)__ check the allocation "
"status of __array__ and __scalar__, respectively."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ALLOCATED.md:24
msgid "the argument shall be an _allocatable_ array."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ALLOCATED.md:26
#, fuzzy
msgid "__scalar__"
msgstr "__scalar__"

#: ../../source/learn/intrinsics/_pages/ALLOCATED.md:27
msgid "the argument shall be an _allocatable_ scalar."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ALLOCATED.md:31
msgid ""
"The return value is a scalar _logical_ with the default logical kind type"
" parameter. If the argument is allocated then the result is .true.; "
"otherwise, it returns .false.."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ALLOCATED.md:80
msgid ""
"Fortran 95 and later. Note, the scalar= keyword and allocatable scalar "
"entities are available in Fortran 2003 and later."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ALLOCATED.md:85
#, fuzzy
msgid "[__move\\_alloc__(3)](MOVE_ALLOC)"
msgstr "[__move\\_alloc__(3)](MOVE_ALLOC)"

#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:2
#, fuzzy
msgid "is\\_contiguous"
msgstr "is\\_contiguous"

#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:5
msgid "__is\\_contiguous__(3) - \\[ARRAY INQUIRY\\] test if object is contiguous"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:14
msgid "True if and only if an object is contiguous."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:16
msgid "An object is contiguous if it is"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:18
msgid "__(1)__ an object with the CONTIGUOUS attribute,"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:21
msgid "__(2)__ a nonpointer whole array that is not assumed-shape,"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:24
msgid ""
"__(3)__ an assumed-shape array that is argument associated with an array "
"that is contiguous,"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:28
msgid "__(4)__ an array allocated by an ALLOCATE statement,"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:31
msgid "__(5)__ a pointer associated with a contiguous target, or"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:34
msgid "__(6)__ a nonzero-sized array section provided that"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:37
msgid "__(a)__ its base object is contiguous,"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:40
msgid "__(b)__ it does not have a vector subscript,"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:43
msgid ""
"__(c)__ the elements of the section, in array element order, are a subset"
" of the base object elements that are consecutive in array element order,"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:48
msgid ""
"__(d)__ if the array is of type character and a substring-range appears, "
"the substring-range specifies all of the characters of the parent-string,"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:53
msgid "__(e)__ only its final part-ref has nonzero rank, and"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:56
msgid "__(f)__ it is not the real or imaginary part of an array of type complex."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:60
msgid "An object is not contiguous if it is an array subobject, and"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:62
msgid "the object has two or more elements,"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:64
msgid ""
"the elements of the object in array element order are not consecutive in "
"the elements of the base object,"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:67
msgid "the object is not of type character with length zero, and"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:69
msgid ""
"the object is not of a derived type that has no ultimate components other"
" than zero-sized arrays and"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:72
msgid "characters with length zero."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:74
msgid "It is processor-dependent whether any other object is contiguous."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ABS.md:36
#: ../../source/learn/intrinsics/_pages/ANINT.md:18
#: ../../source/learn/intrinsics/_pages/CEILING.md:22
#: ../../source/learn/intrinsics/_pages/CO_BROADCAST.md:23
#: ../../source/learn/intrinsics/_pages/CO_MAX.md:25
#: ../../source/learn/intrinsics/_pages/CO_MIN.md:25
#: ../../source/learn/intrinsics/_pages/CO_REDUCE.md:29
#: ../../source/learn/intrinsics/_pages/CO_SUM.md:25
#: ../../source/learn/intrinsics/_pages/DBLE.md:24
#: ../../source/learn/intrinsics/_pages/EXTENDS_TYPE_OF.md:19
#: ../../source/learn/intrinsics/_pages/FLOOR.md:25
#: ../../source/learn/intrinsics/_pages/INT.md:20
#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:78
#: ../../source/learn/intrinsics/_pages/MOD.md:18
#: ../../source/learn/intrinsics/_pages/MODULO.md:18
#: ../../source/learn/intrinsics/_pages/PRESENT.md:21
#: ../../source/learn/intrinsics/_pages/RANK.md:18
#: ../../source/learn/intrinsics/_pages/SAME_TYPE_AS.md:18
#: ../../source/learn/intrinsics/_pages/STORAGE_SIZE.md:18
#, fuzzy
msgid "__a__"
msgstr "__a__"

#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:79
msgid ""
"may be of any type. It shall be an array. If it is a pointer it shall be "
"associated."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:84
msgid "__Result__"
msgstr "__Resultado__"

#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:85
msgid ""
"of type Default logical scalar. The result has the value true if __a__ is"
" contiguous, and false otherwise."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACOSH.md:55
#: ../../source/learn/intrinsics/_pages/ASINH.md:54
#: ../../source/learn/intrinsics/_pages/ATANH.md:48
#: ../../source/learn/intrinsics/_pages/BESSEL_J0.md:48
#: ../../source/learn/intrinsics/_pages/BESSEL_J1.md:47
#: ../../source/learn/intrinsics/_pages/BESSEL_JN.md:63
#: ../../source/learn/intrinsics/_pages/BESSEL_Y0.md:47
#: ../../source/learn/intrinsics/_pages/BESSEL_Y1.md:42
#: ../../source/learn/intrinsics/_pages/BESSEL_YN.md:61
#: ../../source/learn/intrinsics/_pages/BGE.md:31
#: ../../source/learn/intrinsics/_pages/BGT.md:33
#: ../../source/learn/intrinsics/_pages/BLE.md:30
#: ../../source/learn/intrinsics/_pages/BLT.md:30
#: ../../source/learn/intrinsics/_pages/CO_LBOUND.md:39
#: ../../source/learn/intrinsics/_pages/CO_UBOUND.md:39
#: ../../source/learn/intrinsics/_pages/DSHIFTL.md:35
#: ../../source/learn/intrinsics/_pages/DSHIFTR.md:35
#: ../../source/learn/intrinsics/_pages/ERF.md:48
#: ../../source/learn/intrinsics/_pages/ERFC.md:66
#: ../../source/learn/intrinsics/_pages/ERFC_SCALED.md:50
#: ../../source/learn/intrinsics/_pages/EXECUTE_COMMAND_LINE.md:103
#: ../../source/learn/intrinsics/_pages/GAMMA.md:120
#: ../../source/learn/intrinsics/_pages/HYPOT.md:93
#: ../../source/learn/intrinsics/_pages/IALL.md:68
#: ../../source/learn/intrinsics/_pages/IANY.md:66
#: ../../source/learn/intrinsics/_pages/IMAGE_INDEX.md:46
#: ../../source/learn/intrinsics/_pages/IPARITY.md:65
#: ../../source/learn/intrinsics/_pages/IS_CONTIGUOUS.md:113
#: ../../source/learn/intrinsics/_pages/LEADZ.md:122
#: ../../source/learn/intrinsics/_pages/LOG_GAMMA.md:42
#: ../../source/learn/intrinsics/_pages/MASKL.md:89
#: ../../source/learn/intrinsics/_pages/MASKR.md:98
#: ../../source/learn/intrinsics/_pages/MERGE_BITS.md:115
#: ../../source/learn/intrinsics/_pages/NORM2.md:83
#: ../../source/learn/intrinsics/_pages/PARITY.md:61
#: ../../source/learn/intrinsics/_pages/POPCNT.md:54
#: ../../source/learn/intrinsics/_pages/POPPAR.md:55
#: ../../source/learn/intrinsics/_pages/SHIFTA.md:35
#: ../../source/learn/intrinsics/_pages/SHIFTL.md:33
#: ../../source/learn/intrinsics/_pages/SHIFTR.md:33
#: ../../source/learn/intrinsics/_pages/STORAGE_SIZE.md:55
#: ../../source/learn/intrinsics/_pages/TRAILZ.md:106
msgid "Fortran 2008 and later"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LBOUND.md:2
#, fuzzy
msgid "lbound"
msgstr "lbound"

#: ../../source/learn/intrinsics/_pages/LBOUND.md:5
msgid "__lbound__(3) - \\[ARRAY INQUIRY\\] Lower dimension bounds of an array"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LBOUND.md:18
msgid ""
"Returns the lower bounds of an array, or a single lower bound along the "
"__dim__ dimension."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LBOUND.md:24
#: ../../source/learn/intrinsics/_pages/UBOUND.md:19
msgid "Shall be an array, of any type."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LBOUND.md:27
msgid "Shall be a scalar _integer_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACHAR.md:37
#: ../../source/learn/intrinsics/_pages/AINT.md:34
#: ../../source/learn/intrinsics/_pages/ANINT.md:21
#: ../../source/learn/intrinsics/_pages/CEILING.md:25
#: ../../source/learn/intrinsics/_pages/CHAR.md:25
#: ../../source/learn/intrinsics/_pages/COUNT.md:27
#: ../../source/learn/intrinsics/_pages/CO_LBOUND.md:25
#: ../../source/learn/intrinsics/_pages/CO_UBOUND.md:25
#: ../../source/learn/intrinsics/_pages/FINDLOC.md:52
#: ../../source/learn/intrinsics/_pages/FLOOR.md:28
#: ../../source/learn/intrinsics/_pages/IACHAR.md:22
#: ../../source/learn/intrinsics/_pages/ICHAR.md:31
#: ../../source/learn/intrinsics/_pages/INDEX.md:36
#: ../../source/learn/intrinsics/_pages/INT.md:23
#: ../../source/learn/intrinsics/_pages/LBOUND.md:29
#: ../../source/learn/intrinsics/_pages/LEN.md:34
#: ../../source/learn/intrinsics/_pages/LEN_TRIM.md:26
#: ../../source/learn/intrinsics/_pages/LOGICAL.md:26
#: ../../source/learn/intrinsics/_pages/MASKL.md:26
#: ../../source/learn/intrinsics/_pages/MASKR.md:26
#: ../../source/learn/intrinsics/_pages/NINT.md:32
#: ../../source/learn/intrinsics/_pages/REAL.md:20
#: ../../source/learn/intrinsics/_pages/SCAN.md:32
#: ../../source/learn/intrinsics/_pages/SHAPE.md:22
#: ../../source/learn/intrinsics/_pages/SIZE.md:27
#: ../../source/learn/intrinsics/_pages/STORAGE_SIZE.md:21
#: ../../source/learn/intrinsics/_pages/UBOUND.md:24
#: ../../source/learn/intrinsics/_pages/VERIFY.md:51
#, fuzzy
msgid "__kind__"
msgstr "__kind__"

#: ../../source/learn/intrinsics/_pages/CEILING.md:26
#: ../../source/learn/intrinsics/_pages/INDEX.md:37
#: ../../source/learn/intrinsics/_pages/INT.md:24
#: ../../source/learn/intrinsics/_pages/LBOUND.md:30
#: ../../source/learn/intrinsics/_pages/LEN.md:35
#: ../../source/learn/intrinsics/_pages/SIZE.md:28
#: ../../source/learn/intrinsics/_pages/VERIFY.md:52
msgid ""
"An _integer_ initialization expression indicating the kind parameter of "
"the result."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LBOUND.md:35
msgid ""
"The return value is of type _integer_ and of kind __kind__. If __kind__ "
"is absent, the return value is of default integer kind. If __dim__ is "
"absent, the result is an array of the lower bounds of __array__. If "
"__dim__ is present, the result is a scalar corresponding to the lower "
"bound of the array along that dimension. If __array__ is an expression "
"rather than a whole array or array structure component, or if it has a "
"zero extent along the relevant dimension, the lower bound is taken to be "
"1."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LBOUND.md:45
msgid ""
"Note that in my opinion this function should not be used on assumed-size "
"arrays or in any function without an explicit interface. Errors can occur"
" if there is no interface defined."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LBOUND.md:49
#: ../../source/learn/intrinsics/_pages/LEN.md:49
#: ../../source/learn/intrinsics/_pages/LEN_TRIM.md:37
#: ../../source/learn/intrinsics/_pages/MAX.md:39
#: ../../source/learn/intrinsics/_pages/MIN.md:31
#: ../../source/learn/intrinsics/_pages/NOT.md:25
#: ../../source/learn/intrinsics/_pages/STORAGE_SIZE.md:33
#: ../../source/learn/intrinsics/_pages/UBOUND.md:50
msgid "Sample program"
msgstr ""

#: ../../source/learn/intrinsics/_pages/COUNT.md:85
#: ../../source/learn/intrinsics/_pages/IACHAR.md:71
#: ../../source/learn/intrinsics/_pages/LBOUND.md:110
#: ../../source/learn/intrinsics/_pages/SCAN.md:61
msgid "Fortran 95 and later, with KIND argument - Fortran 2003 and later"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LBOUND.md:114
msgid "[__ubound__(3)](UBOUND), [__co\\_lbound__(3)](CO_LBOUND)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/RANK.md:2
#, fuzzy
msgid "rank"
msgstr "rank"

#: ../../source/learn/intrinsics/_pages/RANK.md:5
msgid "__rank__(3) - \\[ARRAY INQUIRY\\] Rank of a data object"
msgstr ""

#: ../../source/learn/intrinsics/_pages/RANK.md:14
msgid "__rank(a)__ returns the rank of a scalar or array data object."
msgstr ""

#: ../../source/learn/intrinsics/_pages/RANK.md:19
msgid "can be of any type"
msgstr ""

#: ../../source/learn/intrinsics/_pages/RANK.md:23
msgid ""
"The return value is of type _integer_ and of the default integer kind. "
"For arrays, their rank is returned; for scalars zero is returned."
msgstr ""

#: ../../source/learn/intrinsics/_pages/RANK.md:45
msgid "TS 29113"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SHAPE.md:2
#, fuzzy
msgid "shape"
msgstr "shape"

#: ../../source/learn/intrinsics/_pages/SHAPE.md:5
msgid "__shape__(3) - \\[ARRAY INQUIRY\\] Determine the shape of an array"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SHAPE.md:14
msgid "Determines the shape of an array."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SHAPE.md:19
msgid ""
"Shall be an array or scalar of any type. If __source__ is a pointer it "
"must be associated and allocatable arrays must be allocated."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CHAR.md:26
#: ../../source/learn/intrinsics/_pages/COUNT.md:28
#: ../../source/learn/intrinsics/_pages/CO_LBOUND.md:26
#: ../../source/learn/intrinsics/_pages/CO_UBOUND.md:26
#: ../../source/learn/intrinsics/_pages/IACHAR.md:23
#: ../../source/learn/intrinsics/_pages/ICHAR.md:32
#: ../../source/learn/intrinsics/_pages/LEN_TRIM.md:27
#: ../../source/learn/intrinsics/_pages/LOGICAL.md:27
#: ../../source/learn/intrinsics/_pages/REAL.md:21
#: ../../source/learn/intrinsics/_pages/SCAN.md:33
#: ../../source/learn/intrinsics/_pages/SHAPE.md:23
#: ../../source/learn/intrinsics/_pages/UBOUND.md:25
msgid ""
"(Optional) An _integer_ initialization expression indicating the kind "
"parameter of the result."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SHAPE.md:28
msgid ""
"An _integer_ array of rank one with as many elements as __source__ has "
"dimensions. The elements of the resulting array correspond to the extend "
"of __source__ along the respective dimensions. If __source__ is a scalar,"
" the result is the rank one array of size zero. If __kind__ is absent, "
"the return value has the default integer kind otherwise the specified "
"kind."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SHAPE.md:60
msgid "Fortran 95 and later; with KIND argument Fortran 2003 and later"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SHAPE.md:64
msgid "[__reshape__(3)](RESHAPE), [__size__(3)](SIZE)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SIZE.md:2
#, fuzzy
msgid "size"
msgstr "size"

#: ../../source/learn/intrinsics/_pages/SIZE.md:5
msgid "__size__(3) - \\[ARRAY INQUIRY\\] Determine the size of an array"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SIZE.md:14
msgid ""
"Determine the extent of __array__ along a specified dimension __dim__, or"
" the total number of elements in __array__ if __dim__ is absent."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SIZE.md:20
msgid ""
"be an array of any type. If __array__ is a pointer it must be associated "
"and allocatable arrays must be allocated."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SIZE.md:24
msgid ""
"shall be a scalar of type _integer_ and its value shall be in the range "
"from 1 to n, where n equals the rank of __array__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ICHAR.md:37
#: ../../source/learn/intrinsics/_pages/LEN_TRIM.md:32
#: ../../source/learn/intrinsics/_pages/SIZE.md:33
msgid ""
"The return value is of type _integer_ and of kind __kind__. If __kind__ "
"is absent, the return value is of default _integer_ kind."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LEN_TRIM.md:69
#: ../../source/learn/intrinsics/_pages/SIZE.md:181
#: ../../source/learn/intrinsics/_pages/VERIFY.md:245
msgid "Fortran 95 and later, with __kind__ argument - Fortran 2003 and later"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SIZE.md:185
msgid "[__shape__(3)](SHAPE), [__reshape__(3)])(RESHAPE)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/UBOUND.md:2
#, fuzzy
msgid "ubound"
msgstr "ubound"

#: ../../source/learn/intrinsics/_pages/UBOUND.md:5
msgid "__ubound__(3) - \\[ARRAY INQUIRY\\] Upper dimension bounds of an array"
msgstr ""

#: ../../source/learn/intrinsics/_pages/UBOUND.md:13
msgid ""
"Returns the upper bounds of an array, or a single upper bound along the "
"__dim__ dimension."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_LBOUND.md:23
#: ../../source/learn/intrinsics/_pages/CO_UBOUND.md:23
#: ../../source/learn/intrinsics/_pages/UBOUND.md:22
msgid "(Optional) Shall be a scalar _integer_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IACHAR.md:28
#: ../../source/learn/intrinsics/_pages/INDEX.md:43
#: ../../source/learn/intrinsics/_pages/LEN.md:40
#: ../../source/learn/intrinsics/_pages/SCAN.md:38
#: ../../source/learn/intrinsics/_pages/UBOUND.md:30
#: ../../source/learn/intrinsics/_pages/VERIFY.md:57
msgid ""
"The return value is of type _integer_ and of kind __kind__. If __kind__ "
"is absent, the return value is of default integer kind."
msgstr ""

#: ../../source/learn/intrinsics/_pages/UBOUND.md:33
msgid ""
"If __dim__ is absent, the result is an array of the upper bounds of "
"__array__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/UBOUND.md:36
msgid ""
"If __dim__ is present, the result is a scalar corresponding to the upper "
"bound of the array along that dimension."
msgstr ""

#: ../../source/learn/intrinsics/_pages/UBOUND.md:39
msgid ""
"If __array__ is an expression rather than a whole array or array "
"structure component, or if it has a zero extent along the relevant "
"dimension, the upper bound is taken to be the number of elements along "
"the relevant dimension."
msgstr ""

#: ../../source/learn/intrinsics/_pages/UBOUND.md:46
msgid ""
"Note this function should not be used on assumed-size arrays or in any "
"function without an explicit interface. Errors can occur if there is no "
"interface defined."
msgstr ""

#: ../../source/learn/intrinsics/_pages/UBOUND.md:108
msgid "Fortran 95 and later, with KIND argument Fortran 2003 and later"
msgstr ""

#: ../../source/learn/intrinsics/_pages/UBOUND.md:113
msgid ""
"[__lbound__(3)](LBOUND), [__co\\_ubound__(3)](CO_UBOUND), "
"[__co\\_lbound__(3)(CO_LBOUND)]"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MAXLOC.md:2
#, fuzzy
msgid "maxloc"
msgstr "maxloc"

#: ../../source/learn/intrinsics/_pages/MAXLOC.md:5
msgid ""
"__maxloc__(3) - \\[ARRAY:LOCATION\\] Location of the maximum value within"
" an array"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MAXLOC.md:14
msgid ""
"Determines the location of the element in the array with the maximum "
"value, or, if the __dim__ argument is supplied, determines the locations "
"of the maximum element along each row of the array in the __dim__ "
"direction. If __mask__ is present, only the elements for which __mask__ "
"is __.true.__ are considered. If more than one element in the array has "
"the maximum value, the location returned is that of the first such "
"element in array element order. If the array has zero size, or all of the"
" elements of __mask__ are .false., then the result is an array of zeroes."
" Similarly, if __dim__ is supplied and all of the elements of __mask__ "
"along a given row are zero, the result value for that row is zero."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MAXLOC.md:28
#: ../../source/learn/intrinsics/_pages/MAXVAL.md:29
#: ../../source/learn/intrinsics/_pages/MINLOC.md:32
#: ../../source/learn/intrinsics/_pages/MINVAL.md:27
msgid "Shall be an array of type _integer_, _real_, or _character_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MAXLOC.md:31
#: ../../source/learn/intrinsics/_pages/MAXVAL.md:32
#: ../../source/learn/intrinsics/_pages/MINLOC.md:35
msgid ""
"(Optional) Shall be a scalar of type _integer_, with a value between one "
"and the rank of __array__, inclusive. It may not be an optional dummy "
"argument."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MAXLOC.md:36
#: ../../source/learn/intrinsics/_pages/MINLOC.md:40
#: ../../source/learn/intrinsics/_pages/MINVAL.md:35
msgid "Shall be an array of type _logical_, and conformable with __array__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MAXLOC.md:40
#: ../../source/learn/intrinsics/_pages/MINLOC.md:44
msgid ""
"If __dim__ is absent, the result is a rank-one array with a length equal "
"to the rank of __array__. If __dim__ is present, the result is an array "
"with a rank one less than the rank of __array__, and a size corresponding"
" to the size of __array__ with the __dim__ dimension removed. If __dim__ "
"is present and __array__ has a rank of one, the result is a scalar. In "
"all cases, the result is of default _integer_ type."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MAXLOC.md:47
msgid ""
"The value returned is reference to the offset from the beginning of the "
"array, not necessarily the subscript value if the array subscripts do not"
" start with one."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MAXLOC.md:53
msgid "sample program"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MAXLOC.md:100
msgid "[__max__(3)](MAX), [__maxval__(3)](MAXVAL)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MINLOC.md:2
#, fuzzy
msgid "minloc"
msgstr "minloc"

#: ../../source/learn/intrinsics/_pages/MINLOC.md:5
msgid ""
"__minloc__(3) - \\[ARRAY:LOCATION\\] Location of the minimum value within"
" an array"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MINLOC.md:18
msgid ""
"Determines the location of the element in the array with the minimum "
"value, or, if the __dim__ argument is supplied, determines the locations "
"of the minimum element along each row of the array in the __dim__ "
"direction. If __mask__ is present, only the elements for which __mask__ "
"is __.true.__ are considered. If more than one element in the array has "
"the minimum value, the location returned is that of the first such "
"element in array element order. If the array has zero size, or all of the"
" elements of __mask__ are .false., then the result is an array of zeroes."
" Similarly, if __dim__ is supplied and all of the elements of __mask__ "
"along a given row are zero, the result value for that row is zero."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MAXVAL.md:50
#: ../../source/learn/intrinsics/_pages/MINLOC.md:53
#: ../../source/learn/intrinsics/_pages/MINVAL.md:48
msgid "sample program:"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MINLOC.md:87
msgid "[__min__(3)](MIN), [__minval__(3)](MINVAL)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:2
#, fuzzy
msgid "findloc"
msgstr "findloc"

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:5
msgid ""
"__findloc__(3) - \\[ARRAY:LOCATION\\] Location of first element of ARRAY "
"identified by MASK along dimension DIM having a value"
msgstr ""

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:18
msgid ""
"Location of the first element of __array__ identified by __mask__ along "
"dimension __dim__ having a value equal to __value__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:21
msgid ""
"If both __array__ and __value__ are of type logical, the comparison is "
"performed with the __.eqv.__ operator; otherwise, the comparison is "
"performed with the == operator. If the value of the comparison is true, "
"that element of __array__ matches __value__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:26
msgid ""
"If only one element matches __value__, that element's subscripts are "
"returned. Otherwise, if more than one element matches __value__ and "
"__back__ is absent or present with the value false, the element whose "
"subscripts are returned is the first such element, taken in array element"
" order. If __back__ is present with the value true, the element whose "
"subscripts are returned is the last such element, taken in array element "
"order."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXTENDS_TYPE_OF.md:17
#: ../../source/learn/intrinsics/_pages/FINDLOC.md:34
#: ../../source/learn/intrinsics/_pages/GET_COMMAND_ARGUMENT.md:27
#: ../../source/learn/intrinsics/_pages/GET_ENVIRONMENT_VARIABLE.md:25
msgid "__Options__"
msgstr "__Opções__"

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:37
msgid "shall be an array of intrinsic type."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_ADD.md:27
#: ../../source/learn/intrinsics/_pages/ATOMIC_AND.md:28
#: ../../source/learn/intrinsics/_pages/ATOMIC_DEFINE.md:34
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_ADD.md:29
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_AND.md:29
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_OR.md:29
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_XOR.md:29
#: ../../source/learn/intrinsics/_pages/ATOMIC_OR.md:28
#: ../../source/learn/intrinsics/_pages/ATOMIC_REF.md:24
#: ../../source/learn/intrinsics/_pages/ATOMIC_XOR.md:28
#: ../../source/learn/intrinsics/_pages/EXTENDS_TYPE_OF.md:32
#: ../../source/learn/intrinsics/_pages/FINDLOC.md:39
#: ../../source/learn/intrinsics/_pages/GET_ENVIRONMENT_VARIABLE.md:34
#, fuzzy
msgid "__value__"
msgstr "__value__"

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:40
msgid ""
"shall be scalar and in type conformance with __array__, as specified in "
"Table 7.3 for relational intrinsic operations 7.1.5.5.2)."
msgstr ""

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:44
msgid ""
"shall be an integer scalar with a value in the range 1 __DIM__ n, where n"
" is the rank of __array__. The corresponding actual argument shall not be"
" an optional dummy argument."
msgstr ""

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:49
msgid ""
"(optional) shall be of type logical and shall be conformable with "
"__array__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:53
msgid "(optional) shall be a scalar integer initialization expression."
msgstr ""

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:55
#: ../../source/learn/intrinsics/_pages/INDEX.md:32
#: ../../source/learn/intrinsics/_pages/SCAN.md:29
#: ../../source/learn/intrinsics/_pages/VERIFY.md:48
#, fuzzy
msgid "__back__"
msgstr "__back__"

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:56
msgid "(optional) shall be a logical scalar."
msgstr ""

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:60
msgid ""
"Result Characteristics. Integer. If __kind__ is present, the kind type "
"parameter is that specified by the value of __kind__; otherwise the kind "
"type parameter is that of default integer type. If __dim__ does not "
"appear, the result is an array of rank one and of size equal to the rank "
"of __array__; otherwise, the result is of rank n - 1 and shape"
msgstr ""

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:70
#, fuzzy
msgid "where"
msgstr "where"

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:76
msgid "is the shape of __array__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:80
msgid ""
"__Case (i):__ The result of __findloc (array, value)__ is a rank-one "
"array whose element values are the values of the subscripts of an element"
" of __array__ whose value matches __value__. If there is such a value, "
"the ith subscript returned lies in the range 1 to ei , where ei is the "
"extent of the ith dimension of __array__. If no elements match __value__ "
"or __array__ has size zero, all elements of the result are zero."
msgstr ""

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:88
msgid ""
"__Case (ii):__ the result of __findloc (array, value, mask = mask)__ is a"
" rank-one array whose element values are the values of the subscripts of "
"an element of __array__, corresponding to a true element of __mask__, "
"whose value matches __value__. If there is such a value, the ith "
"subscript returned lies in the range 1 to ei , where ei is the extent of "
"the ith dimension of __array__. If no elements match __value__, __array__"
" has size zero, or every element of __mask__ has the value false, all "
"elements of the result are zero."
msgstr ""

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:98
msgid "__Case (iii):__ If __array__ has rank one, the result of"
msgstr ""

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:105
msgid "is a scalar whose value is equal to that of the first element of"
msgstr ""

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:111
msgid "Otherwise, the value of element"
msgstr ""

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:117
msgid "of the result is equal to"
msgstr ""

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:126
msgid "__Case (i):__ The value of"
msgstr ""

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:133
msgid "is \\[2\\], and the value of"
msgstr ""

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:139
msgid "is \\[4\\]."
msgstr ""

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:141
msgid "__Case (ii):__ If __a__ has the value"
msgstr ""

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:150
msgid "and __m__ has the value"
msgstr ""

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:160
msgid "has the value \\[1, 4\\] and"
msgstr ""

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:166
msgid ""
"has the value \\[3, 4\\]. This is independent of the declared lower "
"bounds for __a__ ."
msgstr ""

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:169
msgid "__Case (iii):__ The value of"
msgstr ""

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:176
msgid "is 2. If __b__ has the value"
msgstr ""

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:183
msgid "findloc (b, __value__ = 2, dim = 1)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:185
msgid "has the value \\[2, 1, 0\\] and"
msgstr ""

#: ../../source/learn/intrinsics/_pages/FINDLOC.md:191
msgid ""
"has the value \\[2, 1\\]. This is independent of the declared lower "
"bounds for __b__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/TRANSPOSE.md:2
#, fuzzy
msgid "transpose"
msgstr "transpose"

#: ../../source/learn/intrinsics/_pages/TRANSPOSE.md:5
msgid "__transpose__(3) - \\[ARRAY MANIPULATION\\] Transpose an array of rank two"
msgstr ""

#: ../../source/learn/intrinsics/_pages/TRANSPOSE.md:14
msgid ""
"Transpose an array of rank two. Element (i, j) of the result has the "
"value __matrix(j, i)__, for all i, j."
msgstr ""

#: ../../source/learn/intrinsics/_pages/TRANSPOSE.md:19
#, fuzzy
msgid "__matrix__"
msgstr "__matrix__"

#: ../../source/learn/intrinsics/_pages/TRANSPOSE.md:20
msgid "Shall be an array of any type and have a rank of two."
msgstr ""

#: ../../source/learn/intrinsics/_pages/TRANSPOSE.md:24
msgid ""
"The result has the same type as __matrix__, and has shape \\[ m, n \\] if"
" __matrix__ has shape \\[ n, m \\]."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ALL.md:2
#, fuzzy
msgid "all"
msgstr "all"

#: ../../source/learn/intrinsics/_pages/ALL.md:5
msgid "__all__(3) - \\[ARRAY REDUCTION\\] determines if all the values are true"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ALL.md:14
msgid "Logical conjunction of elements of __mask__ along dimension __dim__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ALL.md:16
msgid ""
"\"__all(mask, dim)__\" determines if all the values are true in __mask__ "
"in the array along dimension __dim__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ALL.md:22
msgid ""
"shall be a logical array. That is, the type of the argument shall be "
"_logical_ and it shall not be scalar."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ALL.md:26
msgid ""
"(optional) __dim__ shall be a scalar integer with a value that lies "
"between one and the rank of __mask__. The corresponding actual argument "
"shall not be an optional dummy argument."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ALL.md:32
msgid ""
"\"__all(mask)__\" returns a scalar value of type _logical_ where the kind"
" type parameter is the same as the kind type parameter of __mask__. If "
"__dim__ is present, then __all(mask, dim)__ returns an array with the "
"rank of __mask__ minus 1. The shape is determined from the shape of "
"__mask__ where the __dim__ dimension is elided."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ALL.md:38
msgid ""
"__all(mask)__ is true if all elements of __mask__ are true. It also is "
"true if __mask__ has zero size; otherwise, it is false."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ALL.md:41
msgid ""
"If the rank of __mask__ is one, then __all(mask, dim)__ is equivalent to "
"__all(mask)__. If the rank is greater than one, then __all(mask, dim)__ "
"is determined by applying __all()__ to the array sections."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ALL.md:45
msgid ""
"Result Characteristics. The result is of type _logical_ with the same "
"kind type parameter as __mask__. It is scalar if __dim__ is absent or __n"
" = 1__; otherwise, the result has rank __n - 1__ and shape __\\[d1 , d2 ,"
" . . . , dDIM-1 , dDIM+1 , . . . , dn \\]__ where __\\[d1 , d2 , . . . , "
"dn \\]__ is the shape of __mask__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ALL.md:51
msgid "Result Value."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ALL.md:53
#: ../../source/learn/intrinsics/_pages/ALL.md:96
msgid "Case (i):"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ALL.md:54
msgid ""
"The result of __all(mask)__ has the value true if all elements of "
"__mask__ are true or if __mask__ has size zero, and the result has value "
"false if any element of __mask__ is false."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ALL.md:59
#: ../../source/learn/intrinsics/_pages/ALL.md:102
msgid "Case (ii):"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ALL.md:60
msgid ""
"If __mask__ has rank one, __all(mask,dim)__ is equal to __all(mask)__. "
"Otherwise, the value of element __(s1 , s2 , . . . , sdim-1 , sdim+1 , . "
". . , sn )__ of all __(mask, dim)__ is equal to __all(mask (s1 , s2 , . ."
" . , sdim-1 , :, sdim+1 , . . . , sn ))__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ALL.md:118
msgid "and __all(B /= C, DIM = 2)__ is"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ANY.md:2
#, fuzzy
msgid "any"
msgstr "any"

#: ../../source/learn/intrinsics/_pages/ANY.md:5
msgid ""
"__any__(3) - \\[ARRAY REDUCTION\\] determines if any of the values in the"
" logical array are true."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ANY.md:14
msgid ""
"__any(mask, dim)__ determines if any of the values in the logical array "
"__mask__ along dimension __dim__ are __.true.__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ANY.md:20
msgid "the type of the argument shall be _logical_ and it shall not be scalar."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ANY.md:24
msgid ""
"(optional) dim shall be a scalar integer with a value that lies between "
"one and the rank of mask."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ANY.md:29
msgid ""
"__any(mask)__ returns a scalar value of type _logical_ where the kind "
"type parameter is the same as the kind type parameter of __mask__. If "
"__dim__ is present, then __any(mask, dim)__ returns an array with the "
"rank of __mask__ minus 1. The shape is determined from the shape of "
"__mask__ where the __dim__ dimension is elided."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ANY.md:35
msgid ""
"__any(mask)__ is true if any element of __mask__ is true; otherwise, it "
"is __.false.__. It also is false if __mask__ has zero size."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ANY.md:38
msgid ""
"If the rank of __mask__ is one, then __any(mask, dim)__ is equivalent to "
"__any(mask)__. If the rank is greater than one, then __any(mask, dim)__ "
"is determined by applying __any()__ to the array sections."
msgstr ""

#: ../../source/learn/intrinsics/_pages/COUNT.md:2
#, fuzzy
msgid "count"
msgstr "count"

#: ../../source/learn/intrinsics/_pages/COUNT.md:5
msgid "__count__(3) - \\[ARRAY REDUCTION\\] Count function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/COUNT.md:14
msgid ""
"Counts the number of __.true.__ elements in a logical __mask__, or, if "
"the __dim__ argument is supplied, counts the number of elements along "
"each row of the array in the __dim__ direction. If the array has zero "
"size, or all of the elements of __mask__ are false, then the result is "
"__0__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/COUNT.md:22
#: ../../source/learn/intrinsics/_pages/LOGICAL.md:24
msgid "The type shall be _logical_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/COUNT.md:25
msgid "(Optional) The type shall be _integer_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/COUNT.md:33
msgid ""
"The return value is of type _integer_ and of kind __kind__. If __kind__ "
"is absent, the return value is of default integer kind. If __dim__ is "
"present, the result is an array with a rank one less than the rank of "
"__array__, and a size corresponding to the shape of __array__ with the "
"__dim__ dimension removed."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MAXVAL.md:2
#, fuzzy
msgid "maxval"
msgstr "maxval"

#: ../../source/learn/intrinsics/_pages/MAXVAL.md:5
msgid ""
"__maxval__(3) - \\[ARRAY REDUCTION\\] determines the maximum value in an "
"array or row"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MAXVAL.md:18
msgid ""
"Determines the maximum value of the elements in an array value, or, if "
"the __dim__ argument is supplied, determines the maximum value along each"
" row of the array in the __dim__ direction. If __mask__ is present, only "
"the elements for which __mask__ is __.true.__ are considered. If the "
"array has zero size, or all of the elements of __mask__ are .false., then"
" the result is the most negative number of the type and kind of __array__"
" if __array__ is numeric, or a string of nulls if __array__ is of "
"character type."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MAXVAL.md:37
msgid ""
"(Optional) Shall be an array of type _logical_, and conformable with "
"__array__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MAXVAL.md:42
msgid ""
"If __dim__ is absent, or if __array__ has a rank of one, the result is a "
"scalar. If __dim__ is present, the result is an array with a rank one "
"less than the rank of __array__, and a size corresponding to the size of "
"__array__ with the __dim__ dimension removed. In all cases, the result is"
" of the same type and kind as __array__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MAXVAL.md:84
msgid "[__max__(3)](MAX), [__maxloc__(3)](MAXLOC)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MINVAL.md:2
#, fuzzy
msgid "minval"
msgstr "minval"

#: ../../source/learn/intrinsics/_pages/MINVAL.md:5
msgid "__minval__(3) - \\[ARRAY REDUCTION\\] Minimum value of an array"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MINVAL.md:13
msgid ""
"Determines the minimum value of the elements in an array value, or, if "
"the __dim__ argument is supplied, determines the minimum value along each"
" row of the array in the __dim__ direction."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MINVAL.md:17
msgid ""
"If __mask__ is present, only the elements for which __mask__ is "
"__.true.__ are considered."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MINVAL.md:20
msgid ""
"If the array has zero size, or all of the elements of __mask__ are "
".false., then the result is __huge(array)__ if __array__ is numeric, or a"
" string of __char(len=255)__ characters if __array__ is of character "
"type."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MINVAL.md:30
msgid ""
"(Optional) Shall be a scalar of type _integer_, with a value between one "
"and the rank of ARRAY, inclusive. It may not be an optional dummy "
"argument."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MINVAL.md:39
msgid ""
"If __dim__ is absent, or if __array__ has a rank of one, the result is a "
"scalar."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MINVAL.md:41
msgid ""
"If __dim__ is present, the result is an array with a rank one less than "
"the rank of __array__, and a size corresponding to the size of __array__ "
"with the __dim__ dimension removed. In all cases, the result is of the "
"same type and kind as __array__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MINVAL.md:144
msgid "[__min__(3)](MIN), [__minloc__(3)](MINLOC)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/PRODUCT.md:2
#, fuzzy
msgid "product"
msgstr "product"

#: ../../source/learn/intrinsics/_pages/PRODUCT.md:5
msgid "__product__(3) - \\[ARRAY REDUCTION\\] Product of array elements"
msgstr ""

#: ../../source/learn/intrinsics/_pages/PRODUCT.md:15
msgid "where __NUMERIC__ is any numeric type"
msgstr ""

#: ../../source/learn/intrinsics/_pages/PRODUCT.md:19
msgid ""
"Multiplies together all the selected elements of __array__, or along "
"dimension __dim__ if the corresponding element in __mask__ is __.true.__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/PRODUCT.md:22
msgid ""
"If __dim__ is absent, a scalar with the product of all elements in "
"__array__ is returned. (Note a zero-sized __array__ returns __1__)."
msgstr ""

#: ../../source/learn/intrinsics/_pages/PRODUCT.md:25
msgid ""
"When __dim__ is present, If the masked array has a dimension of one (ie. "
"is a vector) the result is a scalar.  Otherwise, an array of rank "
"__n-1__, where __n__ equals the rank of __array__, and a shape similar to"
" that of __array__ with dimension __dim__ dropped is returned."
msgstr ""

#: ../../source/learn/intrinsics/_pages/PRODUCT.md:33
#: ../../source/learn/intrinsics/_pages/SUM.md:21
msgid "Shall be an array of type _integer_, _real_ or _complex_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/PRODUCT.md:36
msgid ""
"shall be a scalar of type _integer_ with a value in the range from __1 to"
" n__, where __n__ equals the rank of __array__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/PRODUCT.md:40
msgid ""
"shall be of type _logical_ and either be a scalar or an array of the same"
" shape as __array__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IALL.md:36
#: ../../source/learn/intrinsics/_pages/IANY.md:36
#: ../../source/learn/intrinsics/_pages/IPARITY.md:36
#: ../../source/learn/intrinsics/_pages/NORM2.md:33
#: ../../source/learn/intrinsics/_pages/PRODUCT.md:45
msgid "The result is of the same type as __array__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/PRODUCT.md:227
msgid ""
"[__sum__(3)](SUM), note that an element by element multiplication is done"
" directly using the star character."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SUM.md:2
#, fuzzy
msgid "sum"
msgstr "sum"

#: ../../source/learn/intrinsics/_pages/SUM.md:5
msgid "__sum__(3) - \\[ARRAY REDUCTION\\] sum the elements of an array"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SUM.md:15
msgid ""
"Adds the elements of ARRAY along dimension DIM if the corresponding "
"element in MASK is TRUE."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SUM.md:24
msgid ""
"(Optional) shall be a scalar of type _integer_ with a value in the range "
"from 1 to n, where n equals the rank of ARRAY."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SUM.md:28
msgid ""
"(Optional) shall be of type _logical_ and either be a scalar or an array "
"of the same shape as ARRAY."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SUM.md:33
msgid "The result is of the same type as ARRAY."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SUM.md:35
msgid ""
"If __dim__(3) is absent, a scalar with the sum of all elements in ARRAY "
"is returned. Otherwise, an array of rank n-1, where n equals the rank of "
"ARRAY, and a shape similar to that of ARRAY with dimension DIM dropped is"
" returned."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SUM.md:52
msgid "Demonstrate Fortran 90 SUM function with MASK option"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SUM.md:87
msgid "intrinsics"
msgstr ""

#: ../../source/learn/intrinsics/_pages/RESHAPE.md:2
#, fuzzy
msgid "reshape"
msgstr "reshape"

#: ../../source/learn/intrinsics/_pages/RESHAPE.md:5
msgid "__reshape__(3) - \\[ARRAY RESHAPE\\] Function to reshape an array"
msgstr ""

#: ../../source/learn/intrinsics/_pages/RESHAPE.md:14
msgid ""
"Reshapes array __source__ to correspond to __shape__. If necessary, the "
"new array may be padded with elements from __pad__ or permuted as defined"
" by __order__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/RESHAPE.md:21
msgid "an array of any type."
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_F_POINTER.md:25
#: ../../source/learn/intrinsics/_pages/RESHAPE.md:23
#, fuzzy
msgid "__shape__"
msgstr "__shape__"

#: ../../source/learn/intrinsics/_pages/RESHAPE.md:24
msgid ""
"an array of rank one and type _integer_. Its values must be positive or "
"zero."
msgstr ""

#: ../../source/learn/intrinsics/_pages/RESHAPE.md:27
#, fuzzy
msgid "__pad__"
msgstr "__pad__"

#: ../../source/learn/intrinsics/_pages/RESHAPE.md:28
msgid "(Optional) an array of the same type as __source__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/RESHAPE.md:30
#, fuzzy
msgid "__order__"
msgstr "__order__"

#: ../../source/learn/intrinsics/_pages/RESHAPE.md:31
msgid ""
"(Optional) an array of type _integer_ and the same shape as __shape__. "
"Its values shall be a permutation of the numbers from 1 to n, where n is "
"the size of __shape__. If __order__ is absent, the natural ordering shall"
" be assumed."
msgstr ""

#: ../../source/learn/intrinsics/_pages/RESHAPE.md:38
msgid ""
"The result is an array of shape __shape__ with the same type as "
"__source__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/RESHAPE.md:73
msgid "[__shape__(3)](SHAPE)"
msgstr ""

#: ../../source/learn/intrinsics/bit/index.md:1
msgid "Bit-level inquiry and manipulation"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BGE.md:2
msgid "bge"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BGE.md:5
msgid "__bge__(3) - \\[BIT:COMPARE\\] Bitwise greater than or equal to"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BGE.md:14
msgid "Determines whether an integer is bitwise greater than or equal to another."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACHAR.md:33
#: ../../source/learn/intrinsics/_pages/BGE.md:19
#: ../../source/learn/intrinsics/_pages/BGT.md:18
#: ../../source/learn/intrinsics/_pages/BIT_SIZE.md:24
#: ../../source/learn/intrinsics/_pages/BLE.md:18
#: ../../source/learn/intrinsics/_pages/BLT.md:18
#: ../../source/learn/intrinsics/_pages/BTEST.md:23
#: ../../source/learn/intrinsics/_pages/CHAR.md:22
#: ../../source/learn/intrinsics/_pages/DSHIFTL.md:20
#: ../../source/learn/intrinsics/_pages/DSHIFTR.md:20
#: ../../source/learn/intrinsics/_pages/IAND.md:18
#: ../../source/learn/intrinsics/_pages/IBCLR.md:18
#: ../../source/learn/intrinsics/_pages/IBITS.md:21
#: ../../source/learn/intrinsics/_pages/IBSET.md:18
#: ../../source/learn/intrinsics/_pages/IEOR.md:18
#: ../../source/learn/intrinsics/_pages/IOR.md:20
#: ../../source/learn/intrinsics/_pages/ISHFT.md:24
#: ../../source/learn/intrinsics/_pages/ISHFTC.md:24
#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_END.md:25
#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_EOR.md:21
#: ../../source/learn/intrinsics/_pages/LEADZ.md:18
#: ../../source/learn/intrinsics/_pages/MASKL.md:21
#: ../../source/learn/intrinsics/_pages/MASKR.md:21
#: ../../source/learn/intrinsics/_pages/NOT.md:16
#: ../../source/learn/intrinsics/_pages/POPCNT.md:19
#: ../../source/learn/intrinsics/_pages/POPPAR.md:19
#: ../../source/learn/intrinsics/_pages/SCALE.md:24
#: ../../source/learn/intrinsics/_pages/SET_EXPONENT.md:22
#: ../../source/learn/intrinsics/_pages/SHIFTA.md:23
#: ../../source/learn/intrinsics/_pages/SHIFTL.md:21
#: ../../source/learn/intrinsics/_pages/SHIFTR.md:21
#: ../../source/learn/intrinsics/_pages/TRAILZ.md:18
msgid "__i__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BGE.md:20
#: ../../source/learn/intrinsics/_pages/BLE.md:19
#: ../../source/learn/intrinsics/_pages/BLT.md:19
msgid "Shall be of _integer_ type."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BGE.md:22
#: ../../source/learn/intrinsics/_pages/BGT.md:21
#: ../../source/learn/intrinsics/_pages/BLE.md:21
#: ../../source/learn/intrinsics/_pages/BLT.md:21
#: ../../source/learn/intrinsics/_pages/DSHIFTL.md:23
#: ../../source/learn/intrinsics/_pages/DSHIFTR.md:23
#: ../../source/learn/intrinsics/_pages/IAND.md:21
#: ../../source/learn/intrinsics/_pages/IEOR.md:21
#: ../../source/learn/intrinsics/_pages/IOR.md:23
msgid "__j__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BGE.md:23
#: ../../source/learn/intrinsics/_pages/BLE.md:22
#: ../../source/learn/intrinsics/_pages/BLT.md:22
msgid "Shall be of _integer_ type, and of the same kind as __i__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BGE.md:27
#: ../../source/learn/intrinsics/_pages/BLE.md:26
#: ../../source/learn/intrinsics/_pages/BLT.md:26
msgid "The return value is of type _logical_ and of the default kind."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BGE.md:35
msgid "[__bgt__(3)](BGT), [__ble__(3)](BLE), [__blt__(3)](BIT)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BGT.md:2
msgid "bgt"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BGT.md:5
msgid "__bgt__(3) - \\[BIT:COMPARE\\] Bitwise greater than"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BGT.md:14
msgid "Determines whether an integer is bitwise greater than another."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BGT.md:19
msgid "Shall be of _integer_ type or a BOZ literal constant."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BGT.md:22
msgid ""
"Shall be of _integer_ type, and of the same kind as __i__; or a BOZ "
"literal constant."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BGT.md:27
msgid ""
"The return value is of type _logical_ and of the default kind. The result"
" is true if the sequence of bits represented by _i_ is greater than the "
"sequence of bits represented by _j_, otherwise the result is false."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BGT.md:37
msgid "[__bge__(3),](BGE), [__ble__(3),](BLE), [__blt__(3)](BLT)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BLE.md:2
msgid "ble"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BLE.md:5
msgid "__ble__(3) - \\[BIT:COMPARE\\] Bitwise less than or equal to"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BLE.md:14
msgid "Determines whether an integer is bitwise less than or equal to another."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BLE.md:34
msgid "[__bge__(3),](BGE), [__bgt__(3),](BGT), [__blt__(3)](BLT)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BLT.md:2
msgid "blt"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BLT.md:5
msgid "__blt__(3) - \\[BIT:COMPARE\\] Bitwise less than"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BLT.md:14
msgid "Determines whether an integer is bitwise less than another."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BLT.md:34
msgid "[__bge__(3)](BGE), [__bgt__(3)](BGT), [__ble__(3)](BLE)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BIT_SIZE.md:2
msgid "bit\\_size"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BIT_SIZE.md:5
msgid "__bit\\_size__(3) - \\[BIT:INQUIRY\\] Bit size inquiry function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BIT_SIZE.md:16
msgid ""
"__bit\\_size(i)__ returns the number of bits (integer precision plus sign"
" bit) represented by the type of the _integer_ __i__.  __i__ can be a "
"scalar or an array."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BIT_SIZE.md:25
msgid ""
"An _integer_ value of any kind to determine the size of in bits. Because "
"only the type of the argument is examined, the argument need not be "
"defined."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BIT_SIZE.md:54
#: ../../source/learn/intrinsics/_pages/CMPLX.md:143
#: ../../source/learn/intrinsics/_pages/DIGITS.md:49
#: ../../source/learn/intrinsics/_pages/GET_ENVIRONMENT_VARIABLE.md:117
msgid "Typical Results:"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BIT_SIZE.md:68
#: ../../source/learn/intrinsics/_pages/MERGE_BITS.md:117
#: ../../source/learn/intrinsics/_pages/MVBITS.md:145
msgid "####### fortran-lang intrinsic descriptions (license MIT) @urbanjost"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BTEST.md:2
msgid "btest"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BTEST.md:5
msgid "__btest__(3) - \\[BIT:INQUIRY\\] Tests a bit of an _integer_ value."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BTEST.md:15
msgid ""
"where __KIND__ is any _integer_ kind supported by the programming "
"environment."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BTEST.md:19
msgid ""
"__btest(i,pos)__ returns logical __.true.__ if the bit at __pos__ in "
"__i__ is set."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BTEST.md:24
#: ../../source/learn/intrinsics/_pages/CHAR.md:23
#: ../../source/learn/intrinsics/_pages/CSHIFT.md:29
#: ../../source/learn/intrinsics/_pages/CSHIFT.md:32
#: ../../source/learn/intrinsics/_pages/EOSHIFT.md:39
#: ../../source/learn/intrinsics/_pages/EOSHIFT.md:45
#: ../../source/learn/intrinsics/_pages/IAND.md:19
#: ../../source/learn/intrinsics/_pages/IBCLR.md:19
#: ../../source/learn/intrinsics/_pages/IBITS.md:22
#: ../../source/learn/intrinsics/_pages/IBITS.md:29
#: ../../source/learn/intrinsics/_pages/IBSET.md:19
#: ../../source/learn/intrinsics/_pages/IEOR.md:19
#: ../../source/learn/intrinsics/_pages/ISHFT.md:25
#: ../../source/learn/intrinsics/_pages/ISHFT.md:28
#: ../../source/learn/intrinsics/_pages/ISHFTC.md:25
#: ../../source/learn/intrinsics/_pages/ISHFTC.md:28
#: ../../source/learn/intrinsics/_pages/NOT.md:17
#: ../../source/learn/intrinsics/_pages/SHIFTA.md:24
#: ../../source/learn/intrinsics/_pages/SHIFTA.md:27
#: ../../source/learn/intrinsics/_pages/SHIFTL.md:22
#: ../../source/learn/intrinsics/_pages/SHIFTL.md:25
#: ../../source/learn/intrinsics/_pages/SHIFTR.md:22
#: ../../source/learn/intrinsics/_pages/SHIFTR.md:25
msgid "The type shall be _integer_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BTEST.md:26
#: ../../source/learn/intrinsics/_pages/IBCLR.md:21
#: ../../source/learn/intrinsics/_pages/IBITS.md:24
#: ../../source/learn/intrinsics/_pages/IBSET.md:21
msgid "__pos__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BTEST.md:27
msgid ""
"The bit position to query. it must be a valid position for the value "
"__i__; ie.  __0 <= pos <= bit_size(i)__ ."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BTEST.md:30
msgid "A value of zero refers to the least significant bit."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BTEST.md:34
msgid ""
"The result is a _logical_ that has the value __.true.__ if bit    "
"position __pos__ of __i__ has the value __1__ and the value    "
"__.false.__ if bit __pos__ of __i__ has the value __0__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BTEST.md:120
msgid ""
"[__ieor__(3)](IEOR), [__ibclr__(3)](IBCLR), [__not__(3)](NOT), "
"[__ibclr__(3)](IBCLR), [__ibits__(3)](IBITS), [__ibset__(3)](IBSET), "
"[__iand__(3)](IAND), [__ior__(3)](IOR), [__ieor__(3)](IEOR), "
"[__mvbits__(3)](MVBITS)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/STORAGE_SIZE.md:2
msgid "storage\\_size"
msgstr ""

#: ../../source/learn/intrinsics/_pages/STORAGE_SIZE.md:5
msgid "__storage\\_size__(3) - \\[BIT:INQUIRY\\] Storage size in bits"
msgstr ""

#: ../../source/learn/intrinsics/_pages/STORAGE_SIZE.md:14
msgid "Returns the storage size of argument __a__ in bits."
msgstr ""

#: ../../source/learn/intrinsics/_pages/STORAGE_SIZE.md:19
msgid "Shall be a scalar or array of any type."
msgstr ""

#: ../../source/learn/intrinsics/_pages/STORAGE_SIZE.md:22
msgid "(Optional) shall be a scalar integer constant expression."
msgstr ""

#: ../../source/learn/intrinsics/_pages/STORAGE_SIZE.md:26
msgid ""
"The result is a scalar integer with the kind type parameter specified by "
"__kind__ (or default integer type if __kind__ is missing). The result "
"value is the size expressed in bits for an element of an array that has "
"the dynamic type and type parameters of __a__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/STORAGE_SIZE.md:59
msgid "[__c\\_sizeof__(3)](C_SIZEOF)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LEADZ.md:2
msgid "leadz"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LEADZ.md:5
msgid "__leadz__(3) - \\[BIT:COUNT\\] Number of leading zero bits of an integer"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LEADZ.md:14
msgid "__leadz__ returns the number of leading zero bits of an integer."
msgstr ""

#: ../../source/learn/intrinsics/_pages/DSHIFTL.md:21
#: ../../source/learn/intrinsics/_pages/DSHIFTL.md:27
#: ../../source/learn/intrinsics/_pages/DSHIFTR.md:21
#: ../../source/learn/intrinsics/_pages/DSHIFTR.md:27
#: ../../source/learn/intrinsics/_pages/LEADZ.md:19
#: ../../source/learn/intrinsics/_pages/POPCNT.md:20
#: ../../source/learn/intrinsics/_pages/POPPAR.md:20
#: ../../source/learn/intrinsics/_pages/SET_EXPONENT.md:23
#: ../../source/learn/intrinsics/_pages/TRAILZ.md:19
msgid "Shall be of type _integer_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LEADZ.md:23
msgid ""
"The type of the return value is the same as a default _integer_. If all "
"the bits of __i__ are zero, the result value is __bit\\_size(i)__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LEADZ.md:126
msgid ""
"[__bit\\_size__(3)](BIT_SIZE), [__popcnt__(3)](POPCNT), "
"[__poppar__(3)](POPPAR), [__trailz__(3)](TRAILZ)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/POPCNT.md:2
msgid "popcnt"
msgstr ""

#: ../../source/learn/intrinsics/_pages/POPCNT.md:5
msgid "__popcnt__(3) - \\[BIT:COUNT\\] Number of bits set"
msgstr ""

#: ../../source/learn/intrinsics/_pages/POPCNT.md:14
msgid ""
"Returns the number of bits set in the binary representation of an "
"_integer_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MAXEXPONENT.md:24
#: ../../source/learn/intrinsics/_pages/MINEXPONENT.md:24
#: ../../source/learn/intrinsics/_pages/POPCNT.md:24
#: ../../source/learn/intrinsics/_pages/PRECISION.md:24
#: ../../source/learn/intrinsics/_pages/RANGE.md:30
msgid "The return value is of type _integer_ and of the default integer kind."
msgstr ""

#: ../../source/learn/intrinsics/_pages/POPCNT.md:58
msgid "[__poppar__(3)](POPPAR), [__leadz__(3)](LEADZ), [__trailz__(3)](TRAILZ)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/POPPAR.md:2
msgid "poppar"
msgstr ""

#: ../../source/learn/intrinsics/_pages/POPPAR.md:5
msgid "__poppar__(3) - \\[BIT:COUNT\\] Parity of the number of bits set"
msgstr ""

#: ../../source/learn/intrinsics/_pages/POPPAR.md:14
msgid ""
"Returns the parity of an integer's binary representation (i.e., the "
"parity of the number of bits set)."
msgstr ""

#: ../../source/learn/intrinsics/_pages/POPPAR.md:24
msgid ""
"The return value is equal to __0__ if __i__ has an even number of bits "
"set and 1 if an odd number of bits are set."
msgstr ""

#: ../../source/learn/intrinsics/_pages/POPPAR.md:27
msgid "It is of type _integer_ and of the default _integer_ kind."
msgstr ""

#: ../../source/learn/intrinsics/_pages/POPPAR.md:59
msgid "[__popcnt__(3)](POPCNT), [__leadz__(3)](LEADZ), [__trailz__(3)](TRAILZ)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/TRAILZ.md:2
msgid "trailz"
msgstr ""

#: ../../source/learn/intrinsics/_pages/TRAILZ.md:5
msgid "__trailz__(3) - \\[BIT:COUNT\\] Number of trailing zero bits of an integer"
msgstr ""

#: ../../source/learn/intrinsics/_pages/TRAILZ.md:14
msgid ""
"__trailz(3)__ returns the number of trailing zero bits of an _integer_ "
"value"
msgstr ""

#: ../../source/learn/intrinsics/_pages/TRAILZ.md:23
msgid ""
"The type of the return value is the default _integer_. If all the bits of"
" I are zero, the result value is __bit\\_size(i)__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/TRAILZ.md:110
msgid ""
"[__bit\\_size__(3)](BIT_SIZE), [__popcnt__(3)](POPCNT), "
"[__poppar__(3)](POPPAR), [__leadz__(3)](LEADZ)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DSHIFTL.md:2
msgid "dshiftl"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DSHIFTL.md:5
msgid "__dshiftl__(3) - \\[BIT:COPY\\] combines bits of arguments __i__ and __j__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DSHIFTL.md:14
msgid ""
"__dshiftl(i, j, shift)__ combines bits of __i__ and __j__. The rightmost "
"__shift__ bits of the result are the leftmost __shift__ bits of __j__, "
"and the remaining bits are the rightmost bits of __i__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/DSHIFTL.md:24
#: ../../source/learn/intrinsics/_pages/DSHIFTR.md:24
msgid "Shall be of type _integer_, and of the same kind as __i__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CSHIFT.md:28
#: ../../source/learn/intrinsics/_pages/DSHIFTL.md:26
#: ../../source/learn/intrinsics/_pages/DSHIFTR.md:26
#: ../../source/learn/intrinsics/_pages/EOSHIFT.md:38
#: ../../source/learn/intrinsics/_pages/ISHFT.md:27
#: ../../source/learn/intrinsics/_pages/ISHFTC.md:27
#: ../../source/learn/intrinsics/_pages/SHIFTA.md:26
#: ../../source/learn/intrinsics/_pages/SHIFTL.md:24
#: ../../source/learn/intrinsics/_pages/SHIFTR.md:24
msgid "__shift__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DSHIFTL.md:31
#: ../../source/learn/intrinsics/_pages/DSHIFTR.md:31
msgid "The return value has same type and kind as __i__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/DSHIFTL.md:39
msgid "[__dshiftr__(3)](DSHIFTR)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DSHIFTR.md:2
msgid "dshiftr"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DSHIFTR.md:5
msgid "__dshiftr__(3) - \\[BIT:COPY\\] combines bits of arguments __i__ and __j__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DSHIFTR.md:14
msgid ""
"__dshiftr(i, j, shift)__ combines bits of __i__ and __j__. The leftmost "
"__shift__ bits of the result are the rightmost __shift__ bits of __i__, "
"and the remaining bits are the leftmost bits of __j__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/DSHIFTR.md:39
msgid "[__dshiftl__(3)](DSHIFTL)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MERGE_BITS.md:2
msgid "merge\\_bits"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MERGE_BITS.md:5
msgid "__merge\\_bits__(3) - \\[BIT:COPY\\] Merge bits using a mask"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MERGE_BITS.md:15
msgid ""
"where the result and all input values have the same _integer_ type and "
"KIND with the exception that the mask and either __i__ or __j__ may be a "
"BOZ constant."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MERGE_BITS.md:21
msgid ""
"A common graphics operation in Ternary Raster Operations is to combine "
"bits from two different sources, generally referred to as bit-blending. "
"__merge\\_bits__ performs a masked bit-blend of __i__ and __j__ using the"
" bits of the __mask__ value to determine which of the input values to "
"copy bits from."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MERGE_BITS.md:27
msgid ""
"Specifically, The k-th bit of the result is equal to the k-th bit of "
"__i__ if the k-th bit of __mask__ is __1__; it is equal to the k-th bit "
"of __j__ otherwise (so all three input values must have the same number "
"of bits)."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MERGE_BITS.md:32
msgid "The resulting value is the same as would result from"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MERGE_BITS.md:36
msgid ""
"An exception to all values being of the same _integer_ type is that __i__"
" or __j__ and/or the mask may be a BOZ constant (A BOZ constant means it "
"is either a Binary, Octal, or Hexadecimal literal constant).  The BOZ "
"values are converted to the _integer_ type of the non-BOZ value(s) as if "
"called by the intrinsic function __int()__ with the kind of the non-BOZ "
"value(s), so the BOZ values must be in the range of the type of the "
"result."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MERGE_BITS.md:45
msgid ""
"__i__  : value to select bits from when the associated bit in the mask is"
" __1__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MERGE_BITS.md:48
msgid ""
"__j__ : value to select bits from when the associated bit in the mask is "
"__0__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MERGE_BITS.md:51
msgid ""
"__mask__ : a value whose bits are used as a mask to select bits from "
"__i__ and __j__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MERGE_BITS.md:56
msgid ""
"The bits blended from __i__ and __j__ using the mask __mask__. It is the "
"same type as __i__ if __i__ is of type _integer_, otherwise the same type"
" as __j__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MASKR.md:37
#: ../../source/learn/intrinsics/_pages/MERGE_BITS.md:60
#: ../../source/learn/intrinsics/_pages/MVBITS.md:54
msgid "__Example__"
msgstr "__Exemplo__"

#: ../../source/learn/intrinsics/_pages/MVBITS.md:2
msgid "mvbits"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MVBITS.md:5
msgid ""
"__mvbits__(3) - \\[BIT:COPY\\] reproduce bit patterns found in one "
"integer in another"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MVBITS.md:14
msgid ""
"__mvbits(3f)__ copies a bit pattern found in a range of adjacent bits in "
"the _integer_ __from__ to a specified position in another integer __to__ "
"(which is of the same kind as __from__).  It otherwise leaves the bits in"
" __to__ as-is."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MVBITS.md:19
msgid ""
"The bit positions copied must exist within the value of __from__. That "
"is, the values of __frompos+len-1__ and __topos+len-1__ must be "
"nonnegative and less than __bit\\_size__(from)."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MVBITS.md:23
msgid "The bits are numbered __0__ to __bit_size(i)-1__, from right to left."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MVBITS.md:27
msgid "__from__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MVBITS.md:28
msgid "An _integer_ to read bits from."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MVBITS.md:29
msgid "__frompos__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MVBITS.md:30
msgid ""
"__frompos__ is the position of the first bit to copy. It is a nonnegative"
" _integer_ value < __bit_size(from)__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IBITS.md:28
#: ../../source/learn/intrinsics/_pages/MVBITS.md:32
msgid "__len__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MVBITS.md:33
msgid ""
"A nonnegative _integer_ value that indicates how many bits to copy from "
"__from__. It must not specify copying bits past the end of __from__. That"
" is, __frompos + len__ must be less than or equal to __bit_size(from)__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MVBITS.md:37
#: ../../source/learn/intrinsics/_pages/MVBITS.md:42
msgid "__to__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MVBITS.md:38
msgid ""
"The _integer_ variable to place the copied bits into. It must be of the "
"same kind as __from__ and may even be the same variable as __from__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MVBITS.md:43
msgid ""
"is set by copying the sequence of bits of length __len__, starting at "
"position __frompos__ of __from__ to position __topos__ of __to__. No "
"other bits of __to__ are altered. On return, the __len__ bits of __to__ "
"starting at __topos__ are equal to the value that the __len__ bits of "
"__from__ starting at __frompos__ had on entry."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MVBITS.md:49
msgid "__topos__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MVBITS.md:50
msgid ""
"A nonnegative _integer_ value indicating the starting location in __to__ "
"to place the specified copy of bits from __from__.  __topos + len__ must "
"be less than or equal to __bit_size(to)__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MVBITS.md:55
msgid ""
"Sample program that populates a new 32-bit integer with its bytes in   "
"reverse order (ie. changes the Endian of the integer)."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MVBITS.md:134
msgid ""
"[__ieor__(3)](IEOR),  [__ibclr__(3)](IBCLR), [__not__(3)](NOT), "
"[__btest__(3)](BTEST), [__ibclr__(3)](IBCLR), [__ibits__(3)](IBITS), "
"[__ibset__(3)](IBSET), [__iand__(3)](IAND), [__ior__(3)](IOR), "
"[__ieor__(3)](IEOR)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IBITS.md:2
msgid "ibits"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IBITS.md:5
msgid "__ibits__(3) - \\[BIT:COPY\\] Bit extraction"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IBITS.md:14
msgid ""
"__ibits__ extracts a field of length __len__ from __i__, starting from "
"bit position __pos__ and extending left for __len__ bits. The result is "
"right-justified and the remaining bits are zeroed. The value of pos+len "
"must be less than or equal to the value __bit\\_size(i)__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IBITS.md:25
msgid ""
"The type shall be _integer_. A value of zero refers to the least "
"significant bit."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IBCLR.md:29
#: ../../source/learn/intrinsics/_pages/IBITS.md:33
#: ../../source/learn/intrinsics/_pages/IBSET.md:29
#: ../../source/learn/intrinsics/_pages/ISHFT.md:32
#: ../../source/learn/intrinsics/_pages/ISHFTC.md:36
#: ../../source/learn/intrinsics/_pages/SHIFTA.md:31
#: ../../source/learn/intrinsics/_pages/SHIFTL.md:29
#: ../../source/learn/intrinsics/_pages/SHIFTR.md:29
msgid "The return value is of type _integer_ and of the same kind as __i__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IBITS.md:41
msgid ""
"[__ieor__(3)](IEOR),  [__ibclr__(3)](IBCLR), [__not__(3)](NOT), "
"[__btest__(3)](BTEST), [__ibclr__(3)](IBCLR), [__ibset__(3)](IBSET), "
"[__iand__(3)](IAND), [__ior__(3)](IOR), [__ieor__(3)](IEOR), "
"[__mvbits__(3)](MVBITS)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IBCLR.md:2
msgid "ibclr"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IBCLR.md:5
msgid "__ibclr__(3) - \\[BIT:SET\\] Clear bit"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IBCLR.md:14
msgid ""
"__ibclr__ returns the value of __i__ with the bit at position __pos__ set"
" to zero."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IBCLR.md:22
msgid ""
"The type shall be _integer_. A value of zero refers to the least "
"significant bit. __pos__ is an __intent(in)__ scalar or array of type "
"_integer_. The value of __pos__ must be within the range zero to "
"__(bit\\_size(i)-1__)."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IBCLR.md:37
msgid ""
"[__ieor__(3)](IEOR),  [__not__(3)](NOT), [__btest__(3)](BTEST), "
"[__ibclr__(3)](IBCLR), [__ibits__(3)](IBITS), [__ibset__(3)](IBSET), "
"[__iand__(3)](IAND), [__ior__(3)](IOR), [__ieor__(3)](IEOR), "
"[__mvbits__(3)](MVBITS)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IBSET.md:2
msgid "ibset"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IBSET.md:5
msgid "__ibset__(3) - \\[BIT:SET\\] Set bit"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IBSET.md:14
msgid ""
"__ibset__ returns the value of __i__ with the bit at position __pos__ set"
" to one."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IBSET.md:22
msgid ""
"The type shall be _integer_. A value of zero refers to the least "
"significant bit. pos is an __intent(in)__ scalar or array of type "
"_integer_. The value of pos must be within the range zero to "
"__(bit\\_size(i)-1__)."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IBSET.md:37
msgid ""
"[__ieor__(3)](IEOR),  [__ibclr__(3)](IBCLR), [__not__(3)](NOT), "
"[__btest__(3)](BTEST), [__ibclr__(3)](IBCLR), [__ibits__(3)](IBITS), "
"[__iand__(3)](IAND), [__ior__(3)](IOR), [__ieor__(3)](IEOR), "
"[__mvbits__(3)](MVBITS)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MASKL.md:2
msgid "maskl"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MASKL.md:5
msgid "__maskl__(3) - \\[BIT:SET\\] Generates a left justified mask"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MASKL.md:16
msgid ""
"__maskl(i\\[, *kind*\\])__ has its leftmost __i__ bits set to __1__, and "
"the remaining bits set to __0__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MASKL.md:22
#: ../../source/learn/intrinsics/_pages/MASKR.md:22
msgid ""
"Shall be of type _integer_. Its value must be non-negative, and less than"
" or equal to the number of bits for the kind of the result."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MASKL.md:27
#: ../../source/learn/intrinsics/_pages/MASKR.md:27
msgid "Shall be a scalar constant expression of type _integer_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MASKL.md:31
#: ../../source/learn/intrinsics/_pages/MASKR.md:31
msgid ""
"The return value is of type _integer_. If __kind__ is present, it "
"specifies the kind value of the return type; otherwise, it is of the "
"default integer kind."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MASKL.md:35
msgid "The leftmost __i__ bits are set to 1 and the other bits are set to 0."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MASKL.md:93
msgid "[__maskr__(3)](MASKR)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MASKR.md:2
msgid "maskr"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MASKR.md:5
msgid "__maskr__(3) - \\[BIT:SET\\] Generates a right-justified mask"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MASKR.md:16
msgid ""
"__maskr(i\\[, kind\\])__ has its rightmost __i__ bits set to 1, and the "
"remaining bits set to 0."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MASKR.md:35
msgid "It has its rightmost __i__ bits set to 1, and the remaining bits set to 0."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MASKR.md:102
msgid "[__maskl__(3)](MASKL)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IPARITY.md:2
msgid "iparity"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IPARITY.md:5
msgid "__iparity__(3) - \\[BIT:LOGICAL\\] Bitwise exclusive or of array elements"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IPARITY.md:18
msgid ""
"Reduces with bitwise _xor_ (exclusive _or_) the elements of __array__ "
"along dimension __dim__ if the corresponding element in __mask__ is "
"__.true.__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IALL.md:24
#: ../../source/learn/intrinsics/_pages/IANY.md:24
#: ../../source/learn/intrinsics/_pages/IPARITY.md:24
msgid "Shall be an array of type _integer_"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IPARITY.md:27
msgid ""
"(Optional) shall be a scalar of type _integer_ with a value in the range "
"from __\"1\" to \"n\"__, where __\"n\"__ equals the rank of __array__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IALL.md:31
#: ../../source/learn/intrinsics/_pages/IANY.md:31
#: ../../source/learn/intrinsics/_pages/IPARITY.md:31
msgid ""
"(Optional) shall be of type _logical_ and either be a scalar or an array "
"of the same shape as __array__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IPARITY.md:38
msgid ""
"If __dim__ is absent, a scalar with the bitwise _xor_ of all elements in "
"__array__ is returned. Otherwise, an array of rank __n-1__, where __n__ "
"equals the rank of __array__, and a shape similar to that of __array__ "
"with dimension __dim__ dropped is returned."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IPARITY.md:69
msgid ""
"[__iany__(3)](IANY), [__iall__(3)](IALL), [__ieor__(3)](IEOR), "
"[__parity__(3)](PARITY)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IALL.md:2
msgid "iall"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IALL.md:5
msgid "__iall__(3) - \\[BIT:LOGICAL\\] Bitwise and of array elements"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IALL.md:18
msgid ""
"Reduces with bitwise _and_ the elements of __array__ along dimension "
"__dim__ if the corresponding element in __mask__ is __.true.__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IALL.md:27
#: ../../source/learn/intrinsics/_pages/IANY.md:27
msgid ""
"(Optional) shall be a scalar of type _integer_ with a value in the range "
"from __1 to n__, where __n__ equals the rank of __array__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IALL.md:38
msgid ""
"If __dim__ is absent, a scalar with the bitwise _all_ of all elements in "
"__array__ is returned. Otherwise, an array of rank __n-1__, where __n__ "
"equals the rank of __array__, and a shape similar to that of __array__ "
"with dimension __dim__ dropped is returned."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IALL.md:72
msgid "[__iany__(3)](IANY), [__iparity__(3)](IPARITY), [__iand__(3)](IAND)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IAND.md:2
msgid "iand"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IAND.md:5
msgid "__iand__(3) - \\[BIT:LOGICAL\\] Bitwise logical and"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IAND.md:14
msgid "Bitwise logical __and__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IAND.md:22
#: ../../source/learn/intrinsics/_pages/IEOR.md:22
msgid "The type shall be _integer_, of the same kind as __i__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IAND.md:26
#: ../../source/learn/intrinsics/_pages/IEOR.md:26
#: ../../source/learn/intrinsics/_pages/IOR.md:28
msgid ""
"The return type is _integer_, of the same kind as the arguments. (If the "
"argument kinds differ, it is of the same kind as the larger argument.)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IAND.md:51
msgid ""
"[__ieor__(3)](IEOR),  [__ibclr__(3)](IBCLR), [__not__(3)](NOT), "
"[__btest__(3)](BTEST), [__ibclr__(3)](IBCLR), [__ibits__(3)](IBITS), "
"[__ibset__(3)](IBSET), [__ior__(3)](IOR), [__ieor__(3)](IEOR), "
"[__mvbits__(3)](MVBITS)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IANY.md:2
msgid "iany"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IANY.md:5
msgid "__iany__(3) - \\[BIT:LOGICAL\\] Bitwise or of array elements"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IANY.md:18
msgid ""
"Reduces with bitwise or (inclusive or) the elements of __array__ along "
"dimension __dim__ if the corresponding element in __mask__ is __.true.__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IANY.md:38
msgid ""
"If __dim__ is absent, a scalar with the bitwise _or_ of all elements in "
"__array__ is returned. Otherwise, an array of rank __n-1__, where __n__ "
"equals the rank of __array__, and a shape similar to that of __array__ "
"with dimension __dim__ dropped is returned."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IANY.md:70
msgid "[__iparity__(3)](IPARITY), [__iall__(3)](IALL), [__ior__(3)](IOR)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IEOR.md:2
msgid "ieor"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IEOR.md:5
msgid "__ieor__(3) - \\[BIT:LOGICAL\\] Bitwise logical exclusive or"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IEOR.md:14
msgid "__ieor__ returns the bitwise Boolean exclusive-__or__ of __i__ and __j__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IEOR.md:35
msgid ""
"[__ieor__(3)](IEOR),  [__ibclr__(3)](IBCLR), [__not__(3)](NOT), "
"[__btest__(3)](BTEST), [__ibclr__(3)](IBCLR), [__ibits__(3)](IBITS), "
"[__ibset__(3)](IBSET), [__iand__(3)](IAND), [__ior__(3)](IOR), "
"[__mvbits__(3)](MVBITS)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IOR.md:2
msgid "ior"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IOR.md:5
msgid "__ior__(3) - \\[BIT:LOGICAL\\] Bitwise logical inclusive or"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IOR.md:16
msgid "__ior__ returns the bit-wise Boolean inclusive-__or__ of __i__ and __j__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IOR.md:21
msgid "an _integer_ scalar or array."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IOR.md:24
msgid "_integer_ scalar or array, of the same kind as __i__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IOR.md:60
msgid ""
"[__ieor__(3)](IEOR),  [__ibclr__(3)](IBCLR), [__not__(3)](NOT), "
"[__btest__(3)](BTEST), [__ibclr__(3)](IBCLR), [__ibits__(3)](IBITS), "
"[__ibset__(3)](IBSET), [__iand__(3)](IAND), [__ieor__(3)](IEOR), "
"[__mvbits__(3)](MVBITS)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NOT.md:2
msgid "not"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NOT.md:4
msgid "__not__(3) - \\[BIT:LOGICAL\\] Logical negation"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NOT.md:12
msgid "NOT returns the bitwise Boolean inverse of I."
msgstr ""

#: ../../source/learn/intrinsics/_pages/NOT.md:21
msgid "The return type is _integer_, of the same kind as the argument."
msgstr ""

#: ../../source/learn/intrinsics/_pages/NOT.md:52
msgid ""
"[__iand__(3)](IAND), [__ior__(3)](IOR), [__ieor__(3)](IEOR), "
"[__ibits__(3)](IBITS), [__ibset__(3)](IBSET),"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NOT.md:58
msgid "[__ibclr__(3)](IBCLR)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ISHFTC.md:2
msgid "ishftc"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ISHFTC.md:5
msgid "__ishftc__(3) - \\[BIT:SHIFT\\] Shift bits circularly"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ISHFTC.md:14
msgid ""
"__ishftc__(3) returns a value corresponding to __i__ with the rightmost "
"__size__ bits shifted circularly __shift__ places; that is, bits shifted "
"out one end are shifted into the opposite end. A value of __shift__ "
"greater than zero corresponds to a left shift, a value of zero "
"corresponds to no shift, and a value less than zero corresponds to a "
"right shift. The absolute value of __shift__ must be less than __size__. "
"If the __size__ argument is omitted, it is taken to be equivalent to "
"__bit\\_size(i)__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ISHFTC.md:30
#: ../../source/learn/intrinsics/_pages/RANDOM_SEED.md:22
#: ../../source/learn/intrinsics/_pages/TRANSFER.md:29
msgid "__size__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ISHFTC.md:31
msgid ""
"(Optional) The type shall be _integer_; the value must be greater than "
"zero and less than or equal to __bit\\_size__(i)."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ISHFTC.md:44
msgid "[__ishft__(3)](ISHFT)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ISHFT.md:2
msgid "ishft"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ISHFT.md:5
msgid "__ishft__(3) - \\[BIT:SHIFT\\] Shift bits"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ISHFT.md:14
msgid ""
"__ishft__(3) returns a value corresponding to __i__ with all of the bits "
"shifted __shift__ places. A value of __shift__ greater than zero "
"corresponds to a left shift, a value of zero corresponds to no shift, and"
" a value less than zero corresponds to a right shift. If the absolute "
"value of __shift__ is greater than __bit\\_size(i)__, the value is "
"undefined. Bits shifted out from the left end or right end are lost; "
"zeros are shifted in from the opposite end."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ISHFT.md:40
msgid "[__ishftc__(3)](ISHFTC)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SHIFTA.md:2
msgid "shifta"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SHIFTA.md:5
msgid "__shifta__(3) - \\[BIT:SHIFT\\] shift bits right with fill"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SHIFTA.md:14
msgid ""
"Returns a value corresponding to __i__ with all of the bits shifted right"
" by __shift__ places. If the absolute value of __shift__ is greater than "
"__bit\\_size(i)__, the value is undefined. Bits shifted out from the "
"right end are lost. The fill is arithmetic: the bits shifted in from the "
"left end are equal to the leftmost bit, which in two's complement "
"representation is the sign bit."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SHIFTA.md:39
msgid "[__shiftl__(3)](SHIFTL), [__shiftr__(3)](SHIFTR)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SHIFTL.md:2
msgid "shiftl"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SHIFTL.md:5
msgid "__shiftl__(3) - \\[BIT:SHIFT\\] shift bits left"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SHIFTL.md:14
msgid ""
"Returns a value corresponding to __i__ with all of the bits shifted left "
"by __shift__ places. If the absolute value of __shift__ is greater than "
"__bit\\_size(i)__, the value is undefined. Bits shifted out from the left"
" end are lost, and bits shifted in from the right end are set to __0__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SHIFTL.md:37
msgid "[__shifta__(3)](SHIFTA), [__shiftr__(3)](SHIFTR)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SHIFTR.md:2
msgid "shiftr"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SHIFTR.md:5
msgid "__shiftr__(3) - \\[BIT:SHIFT\\] shift bits right"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SHIFTR.md:14
msgid ""
"Returns a value corresponding to __i__ with all of the bits shifted right"
" by __shift__ places. If the absolute value of __shift__ is greater than "
"__bit\\_size(i)__, the value is undefined. Bits shifted out from the "
"right end are lost, and bits shifted in from the left end are set to 0."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SHIFTR.md:37
msgid "[__shifta__(3)](SHIFTA), [__shiftl__(3)](SHIFTL)"
msgstr ""

#: ../../source/learn/intrinsics/cfi/index.md:1
msgid "Procedures for binding to C interfaces"
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_ASSOCIATED.md:2
msgid "c\\_associated"
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_ASSOCIATED.md:5
msgid "__c\\_associated__(3) - \\[ISO\\_C\\_BINDING\\] Status of a C pointer"
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_ASSOCIATED.md:14
msgid ""
"__c\\_associated(c\\_prt\\_1\\[, c\\_ptr\\_2\\])__ determines the status "
"of the C pointer c\\_ptr\\_1 or if c\\_ptr\\_1 is associated with the "
"target c\\_ptr\\_2."
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_ASSOCIATED.md:20
msgid "__c\\_ptr\\_1__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_ASSOCIATED.md:21
msgid "Scalar of the type c\\_ptr or c\\_funptr."
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_ASSOCIATED.md:23
msgid "__c\\_ptr\\_2__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_ASSOCIATED.md:24
msgid "(Optional) Scalar of the same type as c\\_ptr\\_1."
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_ASSOCIATED.md:28
msgid ""
"The return value is of type _logical_; it is .false. if either "
"c\\_ptr\\_1 is a C NULL pointer or if c\\_ptr1 and c\\_ptr\\_2 point to "
"different addresses."
msgstr ""

#: ../../source/learn/intrinsics/_pages/COMMAND_ARGUMENT_COUNT.md:56
#: ../../source/learn/intrinsics/_pages/C_ASSOCIATED.md:55
#: ../../source/learn/intrinsics/_pages/C_FUNLOC.md:59
#: ../../source/learn/intrinsics/_pages/C_F_POINTER.md:53
#: ../../source/learn/intrinsics/_pages/C_F_PROCPOINTER.md:55
#: ../../source/learn/intrinsics/_pages/C_LOC.md:46
#: ../../source/learn/intrinsics/_pages/GET_COMMAND.md:79
#: ../../source/learn/intrinsics/_pages/GET_COMMAND_ARGUMENT.md:121
#: ../../source/learn/intrinsics/_pages/GET_ENVIRONMENT_VARIABLE.md:125
#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_END.md:61
#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_EOR.md:49
#: ../../source/learn/intrinsics/_pages/MOVE_ALLOC.md:66
#: ../../source/learn/intrinsics/_pages/NEW_LINE.md:74
#: ../../source/learn/intrinsics/_pages/SAME_TYPE_AS.md:33
#: ../../source/learn/intrinsics/_pages/SELECTED_CHAR_KIND.md:57
msgid "Fortran 2003 and later"
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_ASSOCIATED.md:59
msgid ""
"[__c\\_loc__(3)](C_LOC), [__c\\_funloc__(3)](C_FUNLOC), "
"__iso\\_c\\_binding__(3)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_F_POINTER.md:2
msgid "c\\_f\\_pointer"
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_F_POINTER.md:5
msgid ""
"__c\\_f\\_pointer__(3) - \\[ISO\\_C\\_BINDING\\] Convert C into Fortran "
"pointer"
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_F_POINTER.md:14
msgid ""
"__c\\_f\\_pointer(cptr, fptr\\[, shape\\])__ Assign the target, the C "
"pointer, __cptr__ to the Fortran pointer __fptr__ and specify its shape."
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_F_POINTER.md:19
#: ../../source/learn/intrinsics/_pages/C_F_PROCPOINTER.md:19
msgid "__cptr__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_F_POINTER.md:20
msgid "scalar of the type c\\_ptr. It is __intent(in)__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_F_POINTER.md:22
#: ../../source/learn/intrinsics/_pages/C_F_PROCPOINTER.md:22
msgid "__fptr__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_F_POINTER.md:23
msgid "pointer interoperable with __cptr__. it is __intent(out)__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_F_POINTER.md:26
msgid ""
"(Optional) Rank-one array of type _integer_ with __intent(in)__ . It "
"shall be present if and only if __fptr__ is an array. The size must be "
"equal to the rank of __fptr__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_F_POINTER.md:57
msgid ""
"[__c\\_loc__(3)](C_LOC), [__c\\_f\\_procpointer__(3)](C_F_PROCPOINTER), "
"__iso\\_c\\_binding__(3)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_F_PROCPOINTER.md:2
msgid "c\\_f\\_procpointer"
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_F_PROCPOINTER.md:5
msgid ""
"__c\\_f\\_procpointer__(3) - \\[ISO\\_C\\_BINDING\\] Convert C into "
"Fortran procedure pointer"
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_F_PROCPOINTER.md:14
msgid ""
"__c\\_f\\_procpointer(cptr, fptr)__ assigns the target of the C function "
"pointer __cptr__ to the Fortran procedure pointer __fptr__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_F_PROCPOINTER.md:20
msgid "scalar of the type c\\_funptr. It is __intent(in)__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_F_PROCPOINTER.md:23
msgid "procedure pointer interoperable with __cptr__. It is __intent(out)__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_F_PROCPOINTER.md:59
msgid ""
"[__c\\_loc__(3)](C_LOC), [__c\\_f\\_pointer__(3)](C_F_POINTER), "
"__iso\\_c\\_binding__(3)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_FUNLOC.md:2
msgid "c\\_funloc"
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_FUNLOC.md:5
msgid ""
"__c\\_funloc__(3) - \\[ISO\\_C\\_BINDING\\] Obtain the C address of a "
"procedure"
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_FUNLOC.md:14
msgid "__c\\_funloc(x)__ determines the C address of the argument."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACOS.md:23
#: ../../source/learn/intrinsics/_pages/ACOSH.md:24
#: ../../source/learn/intrinsics/_pages/AINT.md:31
#: ../../source/learn/intrinsics/_pages/ASIN.md:27
#: ../../source/learn/intrinsics/_pages/ASINH.md:24
#: ../../source/learn/intrinsics/_pages/ATAN.md:24
#: ../../source/learn/intrinsics/_pages/ATAN2.md:28
#: ../../source/learn/intrinsics/_pages/ATANH.md:18
#: ../../source/learn/intrinsics/_pages/BESSEL_J0.md:19
#: ../../source/learn/intrinsics/_pages/BESSEL_J1.md:19
#: ../../source/learn/intrinsics/_pages/BESSEL_JN.md:34
#: ../../source/learn/intrinsics/_pages/BESSEL_Y0.md:19
#: ../../source/learn/intrinsics/_pages/BESSEL_Y1.md:19
#: ../../source/learn/intrinsics/_pages/BESSEL_YN.md:34
#: ../../source/learn/intrinsics/_pages/COS.md:27
#: ../../source/learn/intrinsics/_pages/COSH.md:25
#: ../../source/learn/intrinsics/_pages/C_FUNLOC.md:18
#: ../../source/learn/intrinsics/_pages/C_LOC.md:18
#: ../../source/learn/intrinsics/_pages/C_SIZEOF.md:19
#: ../../source/learn/intrinsics/_pages/DIGITS.md:26
#: ../../source/learn/intrinsics/_pages/DIM.md:24
#: ../../source/learn/intrinsics/_pages/DPROD.md:22
#: ../../source/learn/intrinsics/_pages/DPROD.md:33
#: ../../source/learn/intrinsics/_pages/EPSILON.md:32
#: ../../source/learn/intrinsics/_pages/ERF.md:21
#: ../../source/learn/intrinsics/_pages/ERFC.md:37
#: ../../source/learn/intrinsics/_pages/ERFC_SCALED.md:24
#: ../../source/learn/intrinsics/_pages/EXP.md:29
#: ../../source/learn/intrinsics/_pages/EXPONENT.md:19
#: ../../source/learn/intrinsics/_pages/FRACTION.md:20
#: ../../source/learn/intrinsics/_pages/GAMMA.md:25
#: ../../source/learn/intrinsics/_pages/HUGE.md:25
#: ../../source/learn/intrinsics/_pages/HYPOT.md:28
#: ../../source/learn/intrinsics/_pages/KIND.md:18
#: ../../source/learn/intrinsics/_pages/LOG.md:19
#: ../../source/learn/intrinsics/_pages/LOG10.md:21
#: ../../source/learn/intrinsics/_pages/LOG_GAMMA.md:18
#: ../../source/learn/intrinsics/_pages/MAXEXPONENT.md:19
#: ../../source/learn/intrinsics/_pages/MINEXPONENT.md:19
#: ../../source/learn/intrinsics/_pages/NEAREST.md:19
#: ../../source/learn/intrinsics/_pages/NINT.md:29
#: ../../source/learn/intrinsics/_pages/PRECISION.md:19
#: ../../source/learn/intrinsics/_pages/RADIX.md:18
#: ../../source/learn/intrinsics/_pages/RANGE.md:25
#: ../../source/learn/intrinsics/_pages/REAL.md:17
#: ../../source/learn/intrinsics/_pages/RRSPACING.md:19
#: ../../source/learn/intrinsics/_pages/SCALE.md:21
#: ../../source/learn/intrinsics/_pages/SET_EXPONENT.md:19
#: ../../source/learn/intrinsics/_pages/SIN.md:28
#: ../../source/learn/intrinsics/_pages/SINH.md:30
#: ../../source/learn/intrinsics/_pages/SPACING.md:19
#: ../../source/learn/intrinsics/_pages/SQRT.md:43
#: ../../source/learn/intrinsics/_pages/TAN.md:18
#: ../../source/learn/intrinsics/_pages/TANH.md:18
#: ../../source/learn/intrinsics/_pages/TINY.md:23
msgid "__x__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_FUNLOC.md:19
msgid "Interoperable function or pointer to such function."
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_FUNLOC.md:23
msgid ""
"The return value is of type c\\_funptr and contains the C address of the "
"argument."
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_FUNLOC.md:63
msgid ""
"[__c\\_associated__(3)](C_ASSOCIATED), [__c\\_loc__(3)](C_LOC), "
"[__c\\_f\\_pointer__(3)](C_F_POINTER),"
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_FUNLOC.md:67
#: ../../source/learn/intrinsics/_pages/C_LOC.md:54
msgid "[__c\\_f\\_procpointer__(3)](C_F_PROCPOINTER), __iso\\_c\\_binding__(3)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_LOC.md:2
msgid "c\\_loc"
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_LOC.md:5
msgid "__c\\_loc__(3) - \\[ISO\\_C\\_BINDING\\] Obtain the C address of an object"
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_LOC.md:14
msgid "__c\\_loc(x)__ determines the C address of the argument."
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_LOC.md:19
msgid ""
"Shall have either the _pointer_ or _target_ attribute. It shall not be a "
"coindexed object. It shall either be a variable with interoperable type "
"and kind type parameters, or be a scalar, nonpolymorphic variable with no"
" length type parameters."
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_LOC.md:26
msgid ""
"The return value is of type c\\_ptr and contains the C address of the "
"argument."
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_LOC.md:50
msgid ""
"[__c\\_associated__(3)](C_ASSOCIATED), [__c\\_funloc__(3)](C_FUNLOC), "
"[__c\\_f\\_pointer__(3)](C_F_POINTER),"
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_SIZEOF.md:2
msgid "c\\_sizeof"
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_SIZEOF.md:5
msgid "__c\\_sizeof__(3) - \\[ISO\\_C\\_BINDING\\] Size in bytes of an expression"
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_SIZEOF.md:14
msgid ""
"__c\\_sizeof(x)__ calculates the number of bytes of storage the "
"expression __x__ occupies."
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_SIZEOF.md:20
msgid "The argument shall be an interoperable data entity."
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_SIZEOF.md:24
msgid ""
"The return value is of type integer and of the system-dependent kind "
"c\\_size\\_t (from the *iso\\_c\\_binding* module). Its value is the "
"number of bytes occupied by the argument. If the argument has the "
"_pointer_ attribute, the number of bytes of the storage area pointed to "
"is returned. If the argument is of a derived type with _pointer_ or "
"_allocatable_ components, the return value does not account for the sizes"
" of the data pointed to by these components."
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_SIZEOF.md:48
msgid ""
"The example will print .true. unless you are using a platform where "
"default _real_ variables are unusually padded."
msgstr ""

#: ../../source/learn/intrinsics/_pages/COMPILER_OPTIONS.md:52
#: ../../source/learn/intrinsics/_pages/COMPILER_VERSION.md:55
#: ../../source/learn/intrinsics/_pages/C_SIZEOF.md:53
msgid "Fortran 2008"
msgstr ""

#: ../../source/learn/intrinsics/_pages/C_SIZEOF.md:57
msgid "[__storage\\_size__(3)](STORAGE_SIZE)"
msgstr ""

#: ../../source/learn/intrinsics/character/index.md:1
msgid "Basic procedures for manipulating _character_ variables"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LEN.md:2
msgid "len"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LEN.md:5
msgid "__len__(3) - \\[CHARACTER\\] Length of a character entity"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LEN.md:16
msgid ""
"where the returned value is the same kind as the __KIND__, or of the "
"default kind if __KIND__ is not specified."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LEN.md:21
msgid "__len(3)__ Returns the length of a _character_ string."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LEN.md:23
msgid ""
"If __string__ is an array, the length of an element of __string__ is "
"returned."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LEN.md:26
msgid ""
"Note that __string__ need not be defined when this intrinsic is invoked, "
"as only the length (not the content) of __string__ is needed."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ADJUSTL.md:22
#: ../../source/learn/intrinsics/_pages/ADJUSTR.md:23
#: ../../source/learn/intrinsics/_pages/INDEX.md:26
#: ../../source/learn/intrinsics/_pages/LEN.md:31
#: ../../source/learn/intrinsics/_pages/LEN_TRIM.md:22
#: ../../source/learn/intrinsics/_pages/REPEAT.md:22
#: ../../source/learn/intrinsics/_pages/SCAN.md:23
#: ../../source/learn/intrinsics/_pages/TRIM.md:18
#: ../../source/learn/intrinsics/_pages/VERIFY.md:42
msgid "__string__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LEN.md:32
msgid "Shall be a scalar or array of type _character_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LEN.md:45
msgid "FORTRAN 77 and later; with __kind__ argument - Fortran 2003 and later"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LEN.md:110
msgid ""
"len_trim(3), adjustr(3), trim(3), and adjustl(3) are related routines "
"that allow you to deal with leading and trailing blanks."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CHAR.md:66
#: ../../source/learn/intrinsics/_pages/IACHAR.md:79
#: ../../source/learn/intrinsics/_pages/ICHAR.md:111
#: ../../source/learn/intrinsics/_pages/INDEX.md:75
#: ../../source/learn/intrinsics/_pages/LEN.md:113
#: ../../source/learn/intrinsics/_pages/LEN_TRIM.md:74
#: ../../source/learn/intrinsics/_pages/LGE.md:47
#: ../../source/learn/intrinsics/_pages/LGT.md:49
#: ../../source/learn/intrinsics/_pages/LLE.md:95
#: ../../source/learn/intrinsics/_pages/LLT.md:49
#: ../../source/learn/intrinsics/_pages/SCAN.md:65
#: ../../source/learn/intrinsics/_pages/TRIM.md:56
#: ../../source/learn/intrinsics/_pages/VERIFY.md:249
msgid ""
"Functions that perform operations on character strings, return lengths of"
" arguments, and search for certain arguments:"
msgstr ""

#: ../../source/learn/intrinsics/_pages/INDEX.md:78
#: ../../source/learn/intrinsics/_pages/LEN.md:116
#: ../../source/learn/intrinsics/_pages/LEN_TRIM.md:77
#: ../../source/learn/intrinsics/_pages/LLT.md:52
#: ../../source/learn/intrinsics/_pages/REPEAT.md:66
#: ../../source/learn/intrinsics/_pages/SCAN.md:68
msgid ""
"__Elemental:__ [__adjustl__(3)](ADJUSTL), [__adjustr__(3)](ADJUSTR), "
"[__index__(3)](INDEX), [__scan__(3)](SCAN), [__verify__(3)](VERIFY)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CHAR.md:73
#: ../../source/learn/intrinsics/_pages/IACHAR.md:86
#: ../../source/learn/intrinsics/_pages/ICHAR.md:122
#: ../../source/learn/intrinsics/_pages/INDEX.md:82
#: ../../source/learn/intrinsics/_pages/LEN.md:123
#: ../../source/learn/intrinsics/_pages/LGE.md:58
#: ../../source/learn/intrinsics/_pages/LGT.md:60
#: ../../source/learn/intrinsics/_pages/LLE.md:106
#: ../../source/learn/intrinsics/_pages/LLT.md:56
#: ../../source/learn/intrinsics/_pages/SCAN.md:72
#: ../../source/learn/intrinsics/_pages/TRIM.md:67
msgid ""
"__Nonelemental:__ [__len\\_trim__(3)](LEN_TRIM), [__len__(3)](LEN), "
"[__repeat__(3)](REPEAT), [__trim__(3)](TRIM)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NEW_LINE.md:2
msgid "new\\_line"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NEW_LINE.md:5
msgid "__new\\_line__(3) - \\[CHARACTER\\] new-line character"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NEW_LINE.md:16
msgid "__new\\_line(c)__ returns the new-line character."
msgstr ""

#: ../../source/learn/intrinsics/_pages/NEW_LINE.md:18
msgid "Case (i)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NEW_LINE.md:19
msgid ""
"If __a__ is default _character_ and the character in position __10__ of "
"the ASCII collating sequence is representable in the default character "
"set, then the result is __achar(10)__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/NEW_LINE.md:23
msgid "Case (ii)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NEW_LINE.md:24
msgid ""
"If __a__ is an ASCII character or an ISO 10646 character, then the result"
" is __char(10, kind (a))__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/NEW_LINE.md:27
msgid "Case (iii)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NEW_LINE.md:28
msgid ""
"Otherwise, the result is a processor-dependent character that represents "
"a newline in output to files connected for formatted stream output if "
"there is such a character."
msgstr ""

#: ../../source/learn/intrinsics/_pages/NEW_LINE.md:32
msgid "Case (iv)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NEW_LINE.md:33
msgid "Otherwise, the result is the blank character."
msgstr ""

#: ../../source/learn/intrinsics/_pages/NEW_LINE.md:37
msgid "__C__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NEW_LINE.md:38
msgid "The argument shall be a scalar or array of the type _character_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/NEW_LINE.md:42
msgid ""
"Returns a _character_ scalar of length one with the new-line character of"
" the same kind as parameter __c__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/REPEAT.md:2
msgid "repeat"
msgstr ""

#: ../../source/learn/intrinsics/_pages/REPEAT.md:5
msgid "__repeat__(3) - \\[CHARACTER\\] Repeated string concatenation"
msgstr ""

#: ../../source/learn/intrinsics/_pages/REPEAT.md:18
msgid "Concatenates __ncopies__ copies of a string."
msgstr ""

#: ../../source/learn/intrinsics/_pages/REPEAT.md:23
msgid ""
"The input string to repeatedly generate. Shall be scalar and of type "
"_character_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/REPEAT.md:27
msgid ""
"Number of copies to make of _string_, greater than or equal to zero (0). "
"Shall be scalar and of type _integer_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/REPEAT.md:32
msgid ""
"A new scalar of type _character_ built up from __ncopies__ copies of "
"__string__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/REPEAT.md:64
msgid "Functions that perform operations on character strings:"
msgstr ""

#: ../../source/learn/intrinsics/_pages/REPEAT.md:73
msgid ""
"__Non-elemental:__ [__len\\_trim__(3)](LEN_TRIM), [__len__(3)](LEN), "
"[__repeat__(3)](REPEAT), [__trim__(3)](TRIM)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACHAR.md:2
msgid "achar"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACHAR.md:5
msgid ""
"__achar__(3) - \\[CHARACTER:CONVERSION\\] returns a character in a "
"specified position in the ASCII collating sequence"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACHAR.md:16
msgid "where KIND may be any supported kind value for _integer_ types."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACHAR.md:20
msgid ""
"__achar(i)__ returns the character located at position __i__ (commonly "
"called the _ADE_ or ASCII Decimal Equivalent) in the ASCII collating "
"sequence."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACHAR.md:23
msgid ""
"The __achar__(3) function is often used for generating in-band escape "
"sequences to control terminal attributes."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACHAR.md:28
msgid "will clear the screen on an ANSI-compatible terminal display, for example."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACHAR.md:34
msgid ""
"the _integer_ value to convert to an ASCII character, in the range 0 to "
"127."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACHAR.md:38
#: ../../source/learn/intrinsics/_pages/AINT.md:35
#: ../../source/learn/intrinsics/_pages/ANINT.md:22
msgid ""
"(optional) an _integer_ initialization expression indicating the kind "
"parameter of the result."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACHAR.md:43
msgid ""
"The return value is the requested character of type _character_ with a "
"length of one. If the __kind__ argument is present, the return value is "
"of the specified kind and of the default kind otherwise."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACHAR.md:124
#: ../../source/learn/intrinsics/_pages/CHAR.md:51
#: ../../source/learn/intrinsics/_pages/CO_REDUCE.md:83
#: ../../source/learn/intrinsics/_pages/EXECUTE_COMMAND_LINE.md:92
#: ../../source/learn/intrinsics/_pages/IACHAR.md:64
#: ../../source/learn/intrinsics/_pages/ICHAR.md:72
msgid "__Note__"
msgstr "__Nota__"

#: ../../source/learn/intrinsics/_pages/ACHAR.md:126
msgid "The ADEs (ASCII Decimal Equivalents) for ASCII are"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACHAR.md:151
#: ../../source/learn/intrinsics/_pages/INDEX.md:70
msgid "FORTRAN 77 and later, with KIND argument Fortran 2003 and later"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACHAR.md:155
msgid "[__char__(3)](CHAR), [__iachar__(3)](IACHAR), [__ichar__(3)](ICHAR)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACHAR.md:159
#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:106
msgid "__Resources__"
msgstr "__Recursos__"

#: ../../source/learn/intrinsics/_pages/ACHAR.md:161
msgid "[ANSI escape sequences](https://en.wikipedia.org/wiki/ANSI_escape_code)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACHAR.md:162
msgid ""
"[M_attr module](https://github.com/urbanjost/M_attr) for controlling "
"ANSI-compatible terminals"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CHAR.md:2
msgid "char"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CHAR.md:5
msgid "__char__(3) - \\[CHARACTER\\] Character conversion function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CHAR.md:18
msgid "__char(i, kind)__ returns the character represented by the integer __i__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CHAR.md:31
msgid "The return value is of type _character_"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CHAR.md:53
msgid ""
"See [__ichar__(3)](CHAR) for a discussion of converting between numerical"
" values and formatted string representations."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ABS.md:123
#: ../../source/learn/intrinsics/_pages/AIMAG.md:62
#: ../../source/learn/intrinsics/_pages/AINT.md:81
#: ../../source/learn/intrinsics/_pages/ANINT.md:71
#: ../../source/learn/intrinsics/_pages/ATAN2.md:63
#: ../../source/learn/intrinsics/_pages/CHAR.md:58
#: ../../source/learn/intrinsics/_pages/CMPLX.md:163
#: ../../source/learn/intrinsics/_pages/CONJG.md:98
#: ../../source/learn/intrinsics/_pages/COS.md:67
#: ../../source/learn/intrinsics/_pages/DBLE.md:52
#: ../../source/learn/intrinsics/_pages/DIM.md:64
#: ../../source/learn/intrinsics/_pages/DPROD.md:84
#: ../../source/learn/intrinsics/_pages/EXP.md:84
#: ../../source/learn/intrinsics/_pages/INT.md:114
#: ../../source/learn/intrinsics/_pages/LGE.md:41
#: ../../source/learn/intrinsics/_pages/LGT.md:41
#: ../../source/learn/intrinsics/_pages/LLE.md:87
#: ../../source/learn/intrinsics/_pages/LLT.md:41
#: ../../source/learn/intrinsics/_pages/LOG.md:49
#: ../../source/learn/intrinsics/_pages/LOG10.md:57
#: ../../source/learn/intrinsics/_pages/MAX.md:111
#: ../../source/learn/intrinsics/_pages/MIN.md:48
#: ../../source/learn/intrinsics/_pages/MOD.md:72
#: ../../source/learn/intrinsics/_pages/REAL.md:67
#: ../../source/learn/intrinsics/_pages/SIGN.md:74
#: ../../source/learn/intrinsics/_pages/SIN.md:123
#: ../../source/learn/intrinsics/_pages/SQRT.md:87
msgid "FORTRAN 77 and later"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CHAR.md:62
msgid "[__achar__(3)](ACHAR), [__iachar__(3)](IACHAR), [__ichar__(3)](ICHAR)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CHAR.md:69
#: ../../source/learn/intrinsics/_pages/IACHAR.md:82
msgid ""
"__Elemental:__ [__adjustl__(3)](ADJUSTL), [__adjustr__(3)](ADJUSTR), "
"[__index__(3)](INDEX),  [__scan__(3)](SCAN), [__verify__(3)](VERIFY)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IACHAR.md:2
msgid "iachar"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IACHAR.md:5
msgid ""
"__iachar__(3) - \\[CHARACTER:CONVERSION\\] Code in ASCII collating "
"sequence"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IACHAR.md:14
msgid ""
"__iachar__(c) returns the code for the ASCII character in the first "
"character position of C."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IACHAR.md:19
#: ../../source/learn/intrinsics/_pages/ICHAR.md:28
msgid "__c__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IACHAR.md:20
msgid "Shall be a scalar _character_, with _intent(in)_"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IACHAR.md:66
msgid ""
"See [__ichar__(3)](ICHAR) for a discussion of converting between "
"numerical values and formatted string representations."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IACHAR.md:75
msgid "[__achar__(3)](ACHAR), [__char__(3)](CHAR), [__ichar__(3)](ICHAR)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ICHAR.md:2
msgid "ichar"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ICHAR.md:5
msgid ""
"__ichar__(3) - \\[CHARACTER:CONVERSION\\] Character-to-integer conversion"
" function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ICHAR.md:17
msgid ""
"__ichar(c)__ returns the code for the character in the system's native "
"character set. The correspondence between characters and their codes is "
"not necessarily the same across different Fortran implementations. For "
"example, a platform using EBCDIC would return different values than an "
"ASCII platform."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ICHAR.md:23
msgid "See __iachar__(3) for specifically working with the ASCII character set."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ICHAR.md:29
msgid "Shall be a scalar _character_, with __intent(in)__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ICHAR.md:74
msgid ""
"No intrinsic exists to convert between a numeric value and a formatted "
"character string representation -- for instance, given the _character_ "
"value '154', obtaining an _integer_ or _real_ value with the value 154, "
"or vice versa. Instead, this functionality is provided by internal-file "
"I/O, as in the following example:"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ICHAR.md:103
msgid "Fortran 95 and later, with KIND argument -Fortran 2003 and later"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ICHAR.md:107
msgid "[__achar__(3)](ACHAR), [__char__(3)](CHAR), [__iachar__(3)](IACHAR)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ICHAR.md:114
#: ../../source/learn/intrinsics/_pages/LGE.md:50
#: ../../source/learn/intrinsics/_pages/LGT.md:52
#: ../../source/learn/intrinsics/_pages/LLE.md:98
#: ../../source/learn/intrinsics/_pages/TRIM.md:59
msgid ""
"__Elemental:__ [__adjustl__(3)](ADJUSTL), [__adjustr__(3)](ADJUSTR), "
"[__index__(3)](INDEX),"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ICHAR.md:119
#: ../../source/learn/intrinsics/_pages/LGE.md:55
#: ../../source/learn/intrinsics/_pages/LLE.md:103
#: ../../source/learn/intrinsics/_pages/TRIM.md:64
msgid "[__scan__(3)](SCAN),  [__verify__(3)](VERIFY)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/INDEX.md:2
msgid "index"
msgstr ""

#: ../../source/learn/intrinsics/_pages/INDEX.md:5
msgid ""
"__index__(3) - \\[CHARACTER:SEARCH\\] Position of a substring within a "
"string"
msgstr ""

#: ../../source/learn/intrinsics/_pages/INDEX.md:20
msgid ""
"Returns the position of the start of the leftmost or rightmost occurrence"
" of string __substring__ in __string__, counting from one. If "
"__substring__ is not present in __string__, zero is returned."
msgstr ""

#: ../../source/learn/intrinsics/_pages/INDEX.md:27
msgid "string to be searched"
msgstr ""

#: ../../source/learn/intrinsics/_pages/INDEX.md:29
msgid "__substring__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/INDEX.md:30
msgid "string to attempt to locate in __string__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/INDEX.md:33
msgid ""
"If the __back__ argument is present and true, the return value is the "
"start of the rightmost occurrence rather than the leftmost."
msgstr ""

#: ../../source/learn/intrinsics/_pages/INDEX.md:42
msgid "__START__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/INDEX.md:48
msgid "Example program"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SCAN.md:2
msgid "scan"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SCAN.md:5
msgid ""
"__scan__(3) - \\[CHARACTER:SEARCH\\] Scan a string for the presence of a "
"set of characters"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SCAN.md:14
msgid "Scans a __string__ for any of the characters in a __set__ of characters."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SCAN.md:16
msgid ""
"If __back__ is either absent or equals __.false.__, this function returns"
" the position of the leftmost character of __STRING__ that is in __set__."
" If __back__ equals __.true.__, the rightmost position is returned. If no"
" character of __set__ is found in __string__, the result is zero."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SCAN.md:24
#: ../../source/learn/intrinsics/_pages/SCAN.md:27
#: ../../source/learn/intrinsics/_pages/VERIFY.md:43
#: ../../source/learn/intrinsics/_pages/VERIFY.md:46
msgid "Shall be of type _character_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SCAN.md:26
#: ../../source/learn/intrinsics/_pages/VERIFY.md:45
msgid "__set__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SCAN.md:30
msgid "(Optional) shall be of type _logical_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/VERIFY.md:2
msgid "verify"
msgstr ""

#: ../../source/learn/intrinsics/_pages/VERIFY.md:5
msgid ""
"__verify__(3) - \\[CHARACTER:SEARCH\\] Scan a string for the absence of a"
" set of characters"
msgstr ""

#: ../../source/learn/intrinsics/_pages/VERIFY.md:20
msgid ""
"Verifies that all the characters in __string__ belong to the set of "
"characters in __set__ by identifying the first character in the string(s)"
" that is not in the set(s)."
msgstr ""

#: ../../source/learn/intrinsics/_pages/VERIFY.md:24
msgid ""
"If __back__ is either absent or equals __.false.__, this function returns"
" the position of the leftmost character of __string__ that is not in "
"__set__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/VERIFY.md:28
msgid "If __back__ equals __.true.__, the rightmost position is returned."
msgstr ""

#: ../../source/learn/intrinsics/_pages/VERIFY.md:30
msgid "If all characters of __string__ are found in __set__, the result is zero."
msgstr ""

#: ../../source/learn/intrinsics/_pages/VERIFY.md:32
msgid ""
"This makes it easy to verify strings are all uppercase or lowercase,  "
"follow a basic syntax, only contain printable characters, and many of the"
" conditions tested for with the C routines __isalnum__(3c), "
"__isalpha__(3c), __isascii__(3c), __isblank__(3c), __iscntrl__(3c), "
"__isdigit__(3c), __isgraph__(3c), __islower__(3c), __isprint__(3c), "
"__ispunct__(3c), __isspace__(3c), __isupper__(3c), and __isxdigit__(3c); "
"but for a string as well an an array of characters."
msgstr ""

#: ../../source/learn/intrinsics/_pages/VERIFY.md:49
msgid "shall be of type _logical_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/VERIFY.md:62
msgid "Sample program I:"
msgstr ""

#: ../../source/learn/intrinsics/_pages/VERIFY.md:137
msgid "Sample program II:"
msgstr ""

#: ../../source/learn/intrinsics/_pages/VERIFY.md:139
msgid "Determine if strings are valid integer representations"
msgstr ""

#: ../../source/learn/intrinsics/_pages/VERIFY.md:187
msgid "Sample program III:"
msgstr ""

#: ../../source/learn/intrinsics/_pages/VERIFY.md:189
msgid "Determine if strings represent valid Fortran symbol names"
msgstr ""

#: ../../source/learn/intrinsics/_pages/VERIFY.md:252
msgid ""
"__Elemental:__ [__adjustl__(3)](ADJUSTL), [__adjustr__(3)](ADJUSTR), "
"[__index__(3)](INDEX), [__scan__(3)](SCAN),  [__verify__(3)](VERIFY)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/VERIFY.md:259
msgid ""
"__Nonelemental:__ [__len\\_trim__(3)](LEN_TRIM), [__len__(3)](LEN), "
"[__repeat__(3)](REPEAT),  [__trim__(3)](TRIM)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LGE.md:2
msgid "lge"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LGE.md:5
msgid "__lge__(3) - \\[CHARACTER:COMPARE\\] Lexical greater than or equal"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LGE.md:14
msgid ""
"Determines whether one string is lexically greater than or equal to "
"another string, where the two strings are interpreted as containing ASCII"
" character codes. If the String __a__ and String __b__ are not the same "
"length, the shorter is compared as if spaces were appended to it to form "
"a value that has the same length as the longer."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LGE.md:20
msgid ""
"In general, the lexical comparison intrinsics __lge__(3), __lgt__(3), "
"__lle__(3), and __llt__(3) differ from the corresponding intrinsic "
"operators .ge., .gt., .le., and .lt., in that the latter use the "
"processor's character ordering (which is not ASCII on some targets), "
"whereas the former always use the ASCII ordering."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LGE.md:28
#: ../../source/learn/intrinsics/_pages/LGT.md:28
#: ../../source/learn/intrinsics/_pages/LLT.md:28
msgid "__string\\_a__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LGE.md:29
#: ../../source/learn/intrinsics/_pages/LGE.md:32
#: ../../source/learn/intrinsics/_pages/LGT.md:29
#: ../../source/learn/intrinsics/_pages/LGT.md:32
#: ../../source/learn/intrinsics/_pages/LLT.md:29
#: ../../source/learn/intrinsics/_pages/LLT.md:32
msgid "Shall be of default _character_ type."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LGE.md:31
#: ../../source/learn/intrinsics/_pages/LGT.md:31
#: ../../source/learn/intrinsics/_pages/LLT.md:31
msgid "__string\\_b__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LGE.md:36
msgid ""
"Returns .true. if string\\_a \\>= string\\_b, and .false. otherwise, "
"based on the ASCII ordering."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LGE.md:45
msgid "__\\[\\[lgt__(3), __\\[\\[lle__(3), __\\[\\[llt__(3)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LGT.md:2
msgid "lgt"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LGT.md:5
msgid "__lgt__(3) - \\[CHARACTER:COMPARE\\] Lexical greater than"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LGT.md:14
msgid ""
"Determines whether one string is lexically greater than another string, "
"where the two strings are interpreted as containing ASCII character "
"codes. If the String __a__ and String __b__ are not the same length, the "
"shorter is compared as if spaces were appended to it to form a value that"
" has the same length as the longer."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LGT.md:20
#: ../../source/learn/intrinsics/_pages/LLE.md:26
#: ../../source/learn/intrinsics/_pages/LLT.md:20
msgid ""
"In general, the lexical comparison intrinsics LGE, LGT, LLE, and LLT "
"differ from the corresponding intrinsic operators .ge., .gt., .le., and "
".lt., in that the latter use the processor's character ordering (which is"
" not ASCII on some targets), whereas the former always use the ASCII "
"ordering."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LGT.md:36
msgid ""
"Returns .true. if string\\_a \\> string\\_b, and .false. otherwise, based"
" on the ASCII ordering."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LGT.md:45
msgid "[__lge__(3)](LGE), [__lle__(3)](LLE), [__llt__(3)](LLT)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LGT.md:57
msgid "[__scan__(3)](SCAN), [__verify__(3)](VERIFY)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LLE.md:2
msgid "lle"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LLE.md:5
msgid "__lle__(3) - \\[CHARACTER:COMPARE\\] Lexical less than or equal"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LLE.md:20
msgid ""
"Determines whether one string is lexically less than or equal to another "
"string, where the two strings are interpreted as containing ASCII "
"character codes. if the __string\\_a__ and __string\\_b__ are not the "
"same length, the shorter is compared as if spaces were appended to it to "
"form a value that has the same length as the longer. Leading spaces are "
"significant."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LLE.md:34
msgid "__str\\_a__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LLE.md:35
#: ../../source/learn/intrinsics/_pages/LLE.md:38
msgid "variable or array of default _character_ type."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LLE.md:37
msgid "__str\\_b__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LLE.md:40
msgid "if __str_a__ and __str_b__ are both arrays they must be of the same shape."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LLE.md:45
msgid ""
"__result__ Returns __.true.__ if __STR\\_A \\<= STR\\_B__, and "
"__.false.__ otherwise, based on the ASCII ordering."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LLE.md:91
msgid "[__lge__(3)](LGE), [__lgt__(3),](LGT), [__llt__(3)](LLT)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LLT.md:2
msgid "llt"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LLT.md:5
msgid "__llt__(3) - \\[CHARACTER:COMPARE\\] Lexical less than"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LLT.md:14
msgid ""
"Determines whether one string is lexically less than another string, "
"where the two strings are interpreted as containing ASCII character "
"codes. If the __string\\_a__ and __string\\_b__ are not the same length, "
"the shorter is compared as if spaces were appended to it to form a value "
"that has the same length as the longer."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LLT.md:36
msgid ""
"Returns .true. if string\\_a \\<= string\\_b, and .false. otherwise, "
"based on the ASCII ordering."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LLT.md:45
msgid "[__lge__(3)](LGE), [__lgt__(3)](LGT), [__lle__(3](LLE))"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ADJUSTL.md:2
msgid "adjustl"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ADJUSTL.md:5
msgid "__adjustl__(3) - \\[CHARACTER:WHITESPACE\\] Left-adjust a string"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ADJUSTL.md:17
msgid ""
"__adjustl(string)__ will left-adjust a string by removing leading spaces."
" Spaces are inserted at the end of the string as needed."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ADJUSTL.md:23
#: ../../source/learn/intrinsics/_pages/ADJUSTR.md:24
msgid "the type shall be _character_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ADJUSTL.md:27
msgid ""
"The return value is of type _character_ and of the same kind as "
"__string__ where leading spaces are removed and the same number of spaces"
" are inserted on the end of __string__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ADJUSTL.md:64
msgid "[__adjustr__(3)](ADJUSTR)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ADJUSTR.md:2
msgid "adjustr"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ADJUSTR.md:5
msgid "__adjustr__(3) - \\[CHARACTER:WHITESPACE\\] Right-adjust a string"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ADJUSTR.md:17
msgid ""
"__adjustr(string)__ right-adjusts a string by removing trailing spaces. "
"Spaces are inserted at the start of the string as needed to retain the "
"original length."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ADJUSTR.md:28
msgid ""
"The return value is of type _character_ and of the same kind as "
"__string__ where trailing spaces are removed and the same number of "
"spaces are inserted at the start of __string__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ADJUSTR.md:77
msgid "[__adjustl__(3)](ADJUSTL)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LEN_TRIM.md:2
msgid "len\\_trim"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LEN_TRIM.md:5
msgid ""
"__len\\_trim__(3) - \\[CHARACTER:WHITESPACE\\] Length of a character "
"entity without trailing blank characters"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LEN_TRIM.md:18
msgid "Returns the length of a character string, ignoring any trailing blanks."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LEN_TRIM.md:23
msgid ""
"The input string whose length is to be measured. Shall be a scalar of "
"type _character_"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LEN_TRIM.md:84
msgid ""
"__Nonelemental:__ [__repeat__(3)](REPEAT), [__len__(3)](LEN), "
"[__trim__(3)](TRIM)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/TRIM.md:2
msgid "trim"
msgstr ""

#: ../../source/learn/intrinsics/_pages/TRIM.md:5
msgid ""
"__trim__(3) - \\[CHARACTER:WHITESPACE\\] Remove trailing blank characters"
" of a string"
msgstr ""

#: ../../source/learn/intrinsics/_pages/TRIM.md:14
msgid "Removes trailing blank characters of a string."
msgstr ""

#: ../../source/learn/intrinsics/_pages/TRIM.md:19
msgid "Shall be a scalar of type _character_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/TRIM.md:23
msgid ""
"A scalar of type _character_ which length is that of __string__ less the "
"number of trailing blanks."
msgstr ""

#: ../../source/learn/intrinsics/compiler/index.md:1
msgid "Information about compiler and compiler options used for building"
msgstr ""

#: ../../source/learn/intrinsics/_pages/COMPILER_OPTIONS.md:2
msgid "compiler\\_options"
msgstr ""

#: ../../source/learn/intrinsics/_pages/COMPILER_OPTIONS.md:5
msgid ""
"__compiler\\_options__(3) - \\[COMPILER INQUIRY\\] Options passed to the "
"compiler"
msgstr ""

#: ../../source/learn/intrinsics/_pages/COMPILER_OPTIONS.md:14
msgid "compiler\\_options returns a string with the options used for compiling."
msgstr ""

#: ../../source/learn/intrinsics/_pages/COMPILER_OPTIONS.md:18
#: ../../source/learn/intrinsics/_pages/COMPILER_VERSION.md:21
msgid "None."
msgstr "Nenhum."

#: ../../source/learn/intrinsics/_pages/COMPILER_OPTIONS.md:22
msgid ""
"The return value is a default-kind string with system-dependent length. "
"It contains the compiler flags used to compile the file, which called the"
" compiler\\_options intrinsic."
msgstr ""

#: ../../source/learn/intrinsics/_pages/COMPILER_OPTIONS.md:56
msgid "[__compiler\\_version__(3)](COMPILER_VERSION), __iso\\_fortran\\_env__(7)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/COMPILER_VERSION.md:2
msgid "compiler\\_version"
msgstr ""

#: ../../source/learn/intrinsics/_pages/COMPILER_VERSION.md:5
msgid "__compiler\\_version__(3) - \\[COMPILER INQUIRY\\] Compiler version string"
msgstr ""

#: ../../source/learn/intrinsics/_pages/COMPILER_VERSION.md:16
msgid ""
"__compiler\\_version__(3) returns a string containing the name and "
"version of the compiler."
msgstr ""

#: ../../source/learn/intrinsics/_pages/COMPILER_VERSION.md:25
msgid ""
"The return value is a default-kind string with system-dependent length. "
"It contains the name of the compiler and its version number."
msgstr ""

#: ../../source/learn/intrinsics/_pages/COMPILER_VERSION.md:59
msgid "[__compiler\\_options__(3)](COMPILER_OPTIONS), __iso\\_fortran\\_env__(7)"
msgstr ""

#: ../../source/learn/intrinsics/index.md:1
msgid "Fortran Intrinsics"
msgstr ""

#: ../../source/learn/intrinsics/index.md:3
msgid ""
"This is a collection of extended descriptions of the Fortran intrinsics "
"based on the reference document \"[Current F2018 Working Document as of "
"April "
"2018](http://isotc.iso.org/livelink/livelink?func=ll&objId=19442438&objAction=Open)\"."
" Vendor-specific extensions are not included."
msgstr ""

#: ../../source/learn/intrinsics/index.md
msgid "Intrinsics"
msgstr "Funções intrínsecas"

#: ../../source/learn/intrinsics/index.md:29
msgid "Overview"
msgstr "Visão Geral"

#: ../../source/learn/intrinsics/index.md:30
msgid ""
"The standard documents and most vendor-supplied descriptions of the "
"intrinsics are often very brief and concise to the point of the "
"functionality of the intrinsics being obscure, particularly to someone "
"unfamiliar with  the procedure."
msgstr ""

#: ../../source/learn/intrinsics/index.md:35
msgid "By describing the procedures here"
msgstr ""

#: ../../source/learn/intrinsics/index.md:36
msgid "in greater detail"
msgstr ""

#: ../../source/learn/intrinsics/index.md:37
msgid "with a working example"
msgstr ""

#: ../../source/learn/intrinsics/index.md:38
msgid ""
"providing links to additional resources (including additional documents "
"at fortran-lang.org and related discussions in Fortran Discourse)"
msgstr ""

#: ../../source/learn/intrinsics/index.md:42
msgid "these documents strive to be a valuable asset for Fortran programmers."
msgstr ""

#: ../../source/learn/intrinsics/index.md:44
msgid ""
"This is a community-driven resource and everyone is encouraged to "
"contribute to the documents. For contribution guidelines see "
"{ref}``minibooks`` and the following Copyright guidelines."
msgstr ""

#: ../../source/learn/intrinsics/index.md:48
msgid "See Also"
msgstr ""

#: ../../source/learn/intrinsics/index.md:50
msgid "The [Fortran stdlib](https://stdlib.fortran-lang.org/) project"
msgstr ""

#: ../../source/learn/intrinsics/index.md:51
msgid ""
"[fpm(1)](https://fortran-lang.org/packages/fpm) packages, many of which "
"are general-purpose libraries/modules"
msgstr ""

#: ../../source/learn/intrinsics/index.md:53
msgid "Experimental"
msgstr "Experimental"

#: ../../source/learn/intrinsics/index.md:55
msgid ""
"[review by procedure "
"](http://www.urbanjost.altervista.org/SUPPLEMENTS/slidy_byprocedure.html)"
msgstr ""

#: ../../source/learn/intrinsics/index.md:57
msgid ""
"[review by header "
"](http://www.urbanjost.altervista.org/SUPPLEMENTS/slidy_byheader.html)"
msgstr ""

#: ../../source/learn/intrinsics/index.md:59
msgid ""
"[fman(1)](http://www.urbanjost.altervista.org/SUPPLEMENTS/fman.f90) A "
"self-contained Fortran program that lets you view the non-graphical plain"
" ASCII portions of the documentation from a terminal interface. Compile "
"the program and enter \"./fman --help\" for directions."
msgstr ""

#: ../../source/learn/intrinsics/index.md:64
msgid ""
"[man pages](http://www.urbanjost.altervista.org/SUPPLEMENTS/fortran.tgz) "
"A gzipped tar(1) file containing early versions of man-pages derived from"
" the markdown documents."
msgstr ""

#: ../../source/learn/intrinsics/index.md:67
msgid ""
"Typical installation on a Linux platform as an administrator ( but it "
"varies) :"
msgstr ""

#: ../../source/learn/intrinsics/index.md:76
msgid "then anyone on that plaform can enter commands like"
msgstr ""

#: ../../source/learn/intrinsics/index.md:82
msgid "See man(1) (ie. enter \"man man\") for more information."
msgstr ""

#: ../../source/learn/intrinsics/index.md:84
msgid "If you can only install the pages on your own ID, try"
msgstr ""

#: ../../source/learn/intrinsics/index.md:96
msgid ""
"Still debating whether having to keep the document limited to ANSI "
"characters is worth-while so these formats can be generated, and still "
"having issues converting the markdown to the proper formats."
msgstr ""

#: ../../source/learn/intrinsics/index.md:100
msgid "Text Content Copyrights"
msgstr ""

#: ../../source/learn/intrinsics/index.md:102
msgid ""
"Many of the documents presented here are modified versions of man-pages "
"from the [Fortran Wiki](https://fortranwiki.org) and as such are "
"available under the terms of the GNU Free Documentation License "
"[__GFDL__](GNU_Free_Documentation_License.md) with no invariant sections,"
" front-cover texts, or back-cover texts."
msgstr ""

#: ../../source/learn/intrinsics/index.md:108
msgid ""
"If you contribute to this site by modifying the files marked as GFDL, you"
" thereby agree to license the contributed material to the public under "
"the GFDL (version 1.2 or any later version published by the Free Software"
" Foundation, with no invariant sections, front-cover texts, or back-cover"
" texts)."
msgstr ""

#: ../../source/learn/intrinsics/index.md:114
msgid ""
"If you contribute new material you thereby agree to release it under the "
"MIT license, and should indicate this by placing MIT on the specially-"
"formatted last line. For example, change"
msgstr ""

#: ../../source/learn/intrinsics/index.md:120
msgid "to"
msgstr "para"

#: ../../source/learn/intrinsics/index.md:125
msgid "Written in [Myst-Markdown](https://myst-parser.readthedocs.io/en/latest/)"
msgstr ""

#: ../../source/learn/intrinsics/math/index.md:1
msgid "General mathematical functions"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACOS.md:2
msgid "acos"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACOS.md:4
msgid ""
"__acos__(3) - \\[MATHEMATICS:TRIGONOMETRIC\\] arccosine (inverse cosine) "
"function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACOS.md:14
msgid ""
"where __TYPE__ may be _real_ or _complex_ and __KIND__ may be any "
"__KIND__ supported by the associated type."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACOS.md:19
msgid "__acos(x)__ computes the arccosine of __x__ (inverse of __cos(x)__)."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACOS.md:24
msgid ""
"Must be type _real_ or _complex_. If the type is _real_, the value must "
"satisfy |__x__| <= 1."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACOS.md:29
#, python-format
msgid ""
"The return value is of the same type and kind as __x__. The _real_ part "
"of the result is in radians and lies in the range __0 \\<= acos(x%re) "
"\\<= PI__ ."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACOS.md:60
msgid "FORTRAN 77 and later; for a _complex_ argument - Fortran 2008 and later"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACOS.md:64
#: ../../source/learn/intrinsics/_pages/ASIN.md:94
#: ../../source/learn/intrinsics/_pages/ATAN.md:78
msgid ""
"[wikipedia: inverse trigonometric "
"functions](https://en.wikipedia.org/wiki/Inverse_trigonometric_functions)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACOS.md:66
msgid "Inverse function: [__cos__(3](COS))"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACOSH.md:2
msgid "acosh"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACOSH.md:5
msgid ""
"__acosh__(3) - \\[MATHEMATICS:TRIGONOMETRIC\\] Inverse hyperbolic cosine "
"function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACOSH.md:15
#: ../../source/learn/intrinsics/_pages/COS.md:14
msgid ""
"where TYPE may be _real_ or _complex_ and KIND may be any KIND supported "
"by the associated type."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACOSH.md:20
msgid "__acosh(x)__ computes the inverse hyperbolic cosine of __x__ in radians."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACOSH.md:25
msgid "the type shall be _real_ or _complex_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACOSH.md:29
#: ../../source/learn/intrinsics/_pages/EXP.md:36
#: ../../source/learn/intrinsics/_pages/SIN.md:34
#: ../../source/learn/intrinsics/_pages/TAN.md:23
msgid "The return value has the same type and kind as __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACOSH.md:31
msgid ""
"If __x__ is _complex_, the imaginary part of the result is in radians and"
" lies between"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACOSH.md:34
msgid "__0 \\<= aimag(acosh(x)) \\<= PI__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACOSH.md:58
#: ../../source/learn/intrinsics/_pages/ASINH.md:57
#: ../../source/learn/intrinsics/_pages/ATANH.md:51
#: ../../source/learn/intrinsics/_pages/COSH.md:55
#: ../../source/learn/intrinsics/_pages/SINH.md:86
#: ../../source/learn/intrinsics/_pages/TANH.md:52
msgid ""
"[Wikipedia:hyperbolic "
"functions](https://en.wikipedia.org/wiki/Hyperbolic_functions)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ACOSH.md:60
msgid "Inverse function: [__cosh__(3)](COSH)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASIN.md:2
msgid "asin"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASIN.md:5
msgid "__asin__(3) - \\[MATHEMATICS:TRIGONOMETRIC\\] Arcsine function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASIN.md:14
msgid ""
"where the returned value has the kind of the input value  and TYPE may be"
" _real_ or _complex_"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASIN.md:19
msgid "__asin(x)__ computes the arcsine of its argument __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASIN.md:21
msgid ""
"The arcsine is the inverse function of the sine function. It is commonly "
"used in trigonometry when trying to find the angle when the lengths of "
"the hypotenuse and the opposite side of a right triangle are known."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASIN.md:28
msgid ""
"The type shall be either _real_ and a magnitude that is less than or "
"equal to one; or be _complex_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASIN.md:33
#: ../../source/learn/intrinsics/_pages/EXTENDS_TYPE_OF.md:29
#: ../../source/learn/intrinsics/_pages/SIN.md:33
msgid "__result__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASIN.md:34
msgid ""
"The return value is of the same type and kind as __x__. The real part of "
"the result is in radians and lies in the range __-PI/2 \\<= asin(x) \\<= "
"PI/2__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASIN.md:40
msgid ""
"The arcsine will allow you to find the measure of a right angle when you "
"know the ratio of the side opposite the angle to the hypotenuse."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASIN.md:43
msgid ""
"So if you knew that a train track rose 1.25 vertical miles on a track "
"that was 50 miles long, you could determine the average angle of incline "
"of the track using the arcsine. Given"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASIN.md:77
msgid ""
"The percentage grade is the slope, written as a percent. To calculate the"
" slope you divide the rise by the run. In the example the rise is 1.25 "
"mile over a run of 50 miles so the slope is 1.25/50 = 0.025. Written as a"
" percent this is 2.5 %."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASIN.md:82
msgid ""
"For the US, two and 1/2 percent is generally thought of as the upper "
"limit. This means a rise of 2.5 feet when going 100 feet forward. In the "
"US this was the maximum grade on the first major US railroad, the "
"Baltimore and Ohio. Note curves increase the frictional drag on a train "
"reducing the allowable grade."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASIN.md:90
#: ../../source/learn/intrinsics/_pages/TANH.md:49
msgid "FORTRAN 77 and later, for a complex argument Fortran 2008 or later"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASIN.md:96
msgid "Inverse function: [__sin__(3)](SIN)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASINH.md:2
msgid "asinh"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASINH.md:5
msgid ""
"__asinh__(3) - \\[MATHEMATICS:TRIGONOMETRIC\\] Inverse hyperbolic sine "
"function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASINH.md:15
#: ../../source/learn/intrinsics/_pages/SINH.md:14
msgid ""
"Where the returned value has the kind of the input value  and TYPE may be"
" _real_ or _complex_"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASINH.md:20
msgid "__asinh(x)__ computes the inverse hyperbolic sine of __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASINH.md:25
#: ../../source/learn/intrinsics/_pages/ATANH.md:19
#: ../../source/learn/intrinsics/_pages/COSH.md:26
#: ../../source/learn/intrinsics/_pages/EXP.md:30
#: ../../source/learn/intrinsics/_pages/LOG.md:20
#: ../../source/learn/intrinsics/_pages/SINH.md:31
#: ../../source/learn/intrinsics/_pages/TAN.md:19
#: ../../source/learn/intrinsics/_pages/TANH.md:19
msgid "The type shall be _real_ or _complex_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASINH.md:29
msgid ""
"The return value is of the same type and kind as __x__. If __x__ is "
"_complex_, the imaginary part of the result is in radians and lies "
"between  __-PI/2 \\<= aimag(asinh(x)) \\<= PI/2__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASINH.md:59
msgid "Inverse function: [__sinh__(3)](SINH)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATAN.md:2
msgid "atan"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATAN.md:5
msgid "__atan__(3) - \\[MATHEMATICS:TRIGONOMETRIC\\] Arctangent function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATAN.md:15
msgid ""
"where __TYPE__ may be _real_ or _complex_ and __KIND__ may be any "
"__KIND__ supported by the associated type. If __y__ is present __x__ is "
"_real`."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATAN.md:20
msgid "__atan(x)__ computes the arctangent of __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATAN.md:25
msgid ""
"The type shall be _real_ or _complex_; if __y__ is present, __x__ shall "
"be _real_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATAN.md:28
#: ../../source/learn/intrinsics/_pages/ATAN2.md:25
#: ../../source/learn/intrinsics/_pages/DIM.md:27
#: ../../source/learn/intrinsics/_pages/DPROD.md:25
#: ../../source/learn/intrinsics/_pages/DPROD.md:36
#: ../../source/learn/intrinsics/_pages/HYPOT.md:31
msgid "__y__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATAN.md:29
msgid ""
"Shall be of the same type and kind as __x__. If __x__ is zero, __y__  "
"must not be zero."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATAN.md:34
msgid ""
"The returned value is of the same type and kind as __x__. If __y__ is "
"present, the result is identical to __atan2(y,x)__. Otherwise, it is the "
"arc tangent of __x__, where the real part of the result is in radians and"
" lies in the range __-PI/2 \\<= atan(x) \\<= PI/2__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATAN.md:73
msgid ""
"FORTRAN 77 and later for a complex argument; and for two arguments "
"Fortran 2008 or later"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATAN.md:80
msgid "[__atan2__(3)](ATAN2), [__tan__(3)](TAN)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATAN2.md:2
msgid "atan2"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATAN2.md:5
msgid "__atan2__(3) - \\[MATHEMATICS:TRIGONOMETRIC\\] Arctangent function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATAN2.md:13
msgid ""
"__atan2(y, x)__ computes the arctangent of the complex number ( __x__ + i"
" __y__ ) ."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATAN2.md:16
msgid ""
"This function can be used to transform from Cartesian into polar "
"coordinates and allows to determine the angle in the correct quadrant. To"
" convert from Cartesian Coordinates __(x,y)__ to polar coordinates"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATAN2.md:20
msgid ""
"(r,theta): $$ \\begin{aligned} r &= \\sqrt{x**2 + y**2} \\\\ \\theta &= "
"\\tan**{__-1__}(y / x) \\end{aligned} $$"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATAN2.md:26
#: ../../source/learn/intrinsics/_pages/BESSEL_J0.md:20
#: ../../source/learn/intrinsics/_pages/BESSEL_J1.md:20
#: ../../source/learn/intrinsics/_pages/BESSEL_Y0.md:20
#: ../../source/learn/intrinsics/_pages/BESSEL_Y1.md:20
#: ../../source/learn/intrinsics/_pages/CEILING.md:23
#: ../../source/learn/intrinsics/_pages/EPSILON.md:33
#: ../../source/learn/intrinsics/_pages/ERF.md:22
#: ../../source/learn/intrinsics/_pages/ERFC.md:38
#: ../../source/learn/intrinsics/_pages/ERFC_SCALED.md:25
#: ../../source/learn/intrinsics/_pages/EXPONENT.md:20
#: ../../source/learn/intrinsics/_pages/FLOOR.md:26
#: ../../source/learn/intrinsics/_pages/HYPOT.md:29
msgid "The type shall be _real_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATAN2.md:29
msgid ""
"The type and kind type parameter shall be the same as __y__. If __y__ is "
"zero, then __x__ must be nonzero."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATAN2.md:34
msgid ""
"The return value has the same type and kind type parameter as __y__. It "
"is the principal value of the complex number __(x + i, y)__. If x is "
"nonzero, then it lies in the range __-PI \\<= atan(x) \\<= PI__. The sign"
" is positive if __y__ is positive. If __y__ is zero, then the return "
"value is zero if __x__ is strictly positive, __PI__ if __x__ is negative "
"and __y__ is positive zero (or the processor does not handle signed "
"zeros), and __-PI__ if __x__ is negative and __Y__ is negative zero. "
"Finally, if __x__ is zero, then the magnitude of the result is __PI/2__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATANH.md:2
msgid "atanh"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATANH.md:5
msgid ""
"__atanh__(3) - \\[MATHEMATICS:TRIGONOMETRIC\\] Inverse hyperbolic tangent"
" function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATANH.md:14
msgid "__atanh(x)__ computes the inverse hyperbolic tangent of __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATANH.md:23
msgid ""
"The return value has same type and kind as __x__. If __x__ is _complex_, "
"the imaginary part of the result is in radians and lies between"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATANH.md:26
msgid "__-PI/2 \\<= aimag(atanh(x)) \\<= PI/2__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATANH.md:53
msgid "Inverse function: [__tanh__(3)](TANH)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/COS.md:2
msgid "cos"
msgstr ""

#: ../../source/learn/intrinsics/_pages/COS.md:5
msgid "__cos__(3) - \\[MATHEMATICS:TRIGONOMETRIC\\] Cosine function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/COS.md:19
msgid ""
"__cos(x)__ computes the cosine of an angle __x__ given the size of the "
"angle in radians."
msgstr ""

#: ../../source/learn/intrinsics/_pages/COS.md:22
msgid ""
"The cosine of a _real_ value is the ratio of the adjacent side to the "
"hypotenuse of a right-angled triangle."
msgstr ""

#: ../../source/learn/intrinsics/_pages/COS.md:28
msgid "The type shall be _real_ or _complex_. __x__ is assumed to be in radians."
msgstr ""

#: ../../source/learn/intrinsics/_pages/COS.md:33
#: ../../source/learn/intrinsics/_pages/TINY.md:30
msgid "The return value is of the same type and kind as __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/COS.md:35
msgid ""
"If __x__ is of the type _real_, the return value lies in the range __-1 "
"\\<= cos(x) \\<= 1__ ."
msgstr ""

#: ../../source/learn/intrinsics/_pages/COS.md:70
#: ../../source/learn/intrinsics/_pages/SIN.md:126
msgid "[Wikipedia:sine and cosine](https://en.wikipedia.org/wiki/Sine_and_cosine)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/COS.md:72
msgid "[__acos__(3)](ACOS), [__sin__(3)](SIN), [__tan__(3)](TAN)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/COSH.md:2
msgid "cosh"
msgstr ""

#: ../../source/learn/intrinsics/_pages/COSH.md:5
msgid "__cosh__(3) - \\[MATHEMATICS:TRIGONOMETRIC\\] Hyperbolic cosine function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/COSH.md:15
msgid ""
"where TYPE may be _real_ or _complex_ and KIND may be any  supported kind"
" for the associated type. The returned __value__ will be the same type "
"and kind as the input value __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/COSH.md:21
msgid "__cosh(x)__ computes the hyperbolic cosine of __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/COSH.md:30
msgid ""
"The return value has same type and kind as __x__. If __x__ is _complex_, "
"the imaginary part of the result is in radians."
msgstr ""

#: ../../source/learn/intrinsics/_pages/COSH.md:33
msgid ""
"If __x__ is _real_, the return value has a lower bound of one,  __cosh(x)"
" \\>= 1__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/COSH.md:52
msgid "FORTRAN 77 and later, for a complex argument - Fortran 2008 or later"
msgstr ""

#: ../../source/learn/intrinsics/_pages/COSH.md:57
msgid "Inverse function: [__acosh__(3)](ACOSH)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SIN.md:2
msgid "sin"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SIN.md:5
msgid "__sin__(3) - \\[MATHEMATICS:TRIGONOMETRIC\\] Sine function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SIN.md:14
msgid ""
"Where the returned value has the kind of the input value and TYPE may be "
"_real_ or _complex_"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SIN.md:19
msgid ""
"__sin(x)__ computes the sine of an angle given the size of the angle in "
"radians."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SIN.md:22
msgid ""
"The sine of an angle in a right-angled triangle is the ratio of the "
"length of the side opposite the given angle divided by the length of the "
"hypotenuse."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SIN.md:29
msgid "The type shall be _real_ or _complex_ in radians."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SIN.md:48
msgid "__Haversine Formula__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SIN.md:50
msgid "From the article on \"Haversine formula\" in Wikipedia:"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SIN.md:58
msgid ""
"So to show the great-circle distance between the Nashville International "
"Airport (BNA) in TN, USA, and the Los Angeles International Airport (LAX)"
" in CA, USA you would start with their latitude and longitude, commonly "
"given as"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SIN.md:68
msgid "which converted to floating-point values in degrees is:"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SIN.md:80
msgid ""
"And then use the haversine formula to roughly calculate the distance "
"along the surface of the Earth between the locations:"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SIN.md:128
msgid "[__asin__(3)](ASIN), [__cos__(3)](COS), [__tan__(3)](TAN)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SINH.md:2
msgid "sinh"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SINH.md:5
msgid "__sinh__(3) - \\[MATHEMATICS:TRIGONOMETRIC\\] Hyperbolic sine function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SINH.md:19
msgid "__sinh(x)__ computes the hyperbolic sine of __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SINH.md:21
msgid "The hyperbolic sine of x is defined mathematically as:"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SINH.md:23
msgid "__sinh(x) = (exp(x) - exp(-x)) / 2.0__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SINH.md:25
msgid ""
"If __x__ is of type _complex_ its imaginary part is regarded as a value "
"in radians."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SINH.md:35
msgid "The return value has same type and kind as __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SINH.md:83
msgid "Fortran 95 and later, for a complex argument Fortran 2008 or later"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SINH.md:88
msgid "[__asinh__(3)](ASINH)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/TAN.md:2
msgid "tan"
msgstr ""

#: ../../source/learn/intrinsics/_pages/TAN.md:5
msgid "__tan__(3) - \\[MATHEMATICS:TRIGONOMETRIC\\] Tangent function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/TAN.md:14
msgid "__tan(x)__ computes the tangent of __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/TAN.md:44
msgid "FORTRAN 77 and later. For a complex argument, Fortran 2008 or later."
msgstr ""

#: ../../source/learn/intrinsics/_pages/TAN.md:48
msgid "[__atan__(3)](ATAN), [__cos__(3)](COS), [__sin__(3)](SIN)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/TANH.md:2
msgid "tanh"
msgstr ""

#: ../../source/learn/intrinsics/_pages/TANH.md:5
msgid "__tanh__(3) - \\[MATHEMATICS:TRIGONOMETRIC\\] Hyperbolic tangent function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/TANH.md:14
msgid "__tanh(x)__ computes the hyperbolic tangent of __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/TANH.md:23
msgid ""
"The return value has same type and kind as __x__. If __x__ is complex, "
"the imaginary part of the result is in radians. If __x__ is _real_, the "
"return value lies in the range"
msgstr ""

#: ../../source/learn/intrinsics/_pages/TANH.md:54
msgid "[__atanh__(3)](ATANH)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/RANDOM_NUMBER.md:2
msgid "random\\_number"
msgstr ""

#: ../../source/learn/intrinsics/_pages/RANDOM_NUMBER.md:5
msgid "__random\\_number__(3) - \\[MATHEMATICS:RANDOM\\] Pseudo-random number"
msgstr ""

#: ../../source/learn/intrinsics/_pages/RANDOM_NUMBER.md:14
msgid ""
"Returns a single pseudorandom number or an array of pseudorandom numbers "
"from the uniform distribution over the range 0 \\<= x \\< 1."
msgstr ""

#: ../../source/learn/intrinsics/_pages/RANDOM_NUMBER.md:19
msgid "__harvest__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/RANDOM_NUMBER.md:20
msgid "Shall be a scalar or an array of type _real_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/RANDOM_NUMBER.md:87
msgid "[__random\\_seed__(3)](RANDOM_SEED)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/RANDOM_SEED.md:2
msgid "random\\_seed"
msgstr ""

#: ../../source/learn/intrinsics/_pages/RANDOM_SEED.md:5
msgid ""
"__random\\_seed__(3) - \\[MATHEMATICS:RANDOM\\] Initialize a pseudo-"
"random number sequence"
msgstr ""

#: ../../source/learn/intrinsics/_pages/RANDOM_SEED.md:14
msgid ""
"Restarts or queries the state of the pseudorandom number generator used "
"by random\\_number."
msgstr ""

#: ../../source/learn/intrinsics/_pages/RANDOM_SEED.md:17
msgid ""
"If random\\_seed is called without arguments, it is seeded with random "
"data retrieved from the operating system."
msgstr ""

#: ../../source/learn/intrinsics/_pages/RANDOM_SEED.md:23
msgid ""
"(Optional) Shall be a scalar and of type default _integer_, with "
"__intent(out)__. It specifies the minimum size of the arrays used with "
"the __put__ and __get__ arguments."
msgstr ""

#: ../../source/learn/intrinsics/_pages/RANDOM_SEED.md:27
msgid "__put__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/RANDOM_SEED.md:28
msgid ""
"(Optional) Shall be an array of type default _integer_ and rank one. It "
"is __intent(in)__ and the size of the array must be larger than or equal "
"to the number returned by the __size__ argument."
msgstr ""

#: ../../source/learn/intrinsics/_pages/RANDOM_SEED.md:32
msgid "__get__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/RANDOM_SEED.md:33
msgid ""
"(Optional) Shall be an array of type default _integer_ and rank one. It "
"is __intent(out)__ and the size of the array must be larger than or equal"
" to the number returned by the __size__ argument."
msgstr ""

#: ../../source/learn/intrinsics/_pages/RANDOM_SEED.md:66
msgid "[__random\\_number__(3)](RANDOM_NUMBER)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXP.md:2
msgid "exp"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXP.md:5
msgid "__exp__(3) - \\[MATHEMATICS\\] Exponential function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXP.md:13
msgid ""
"__exp__(x) computes the base \"_e_\" exponential of __x__ where \"_e_\" "
"is _Euler's constant_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXP.md:16
msgid ""
"If __x__ is of type _complex_, its imaginary part is regarded as a value "
"in radians such that (see _Euler's formula_):"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXP.md:19
msgid ""
"if       __cx=(re,im)__  then       "
"__exp(cx)=exp(re)*cmplx(cos(im),sin(im),kind=kind(cx))__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXP.md:24
msgid ""
"Since __exp__(3) is the inverse function of __log__(3) the maximum valid "
"magnitude of the _real_ component of __x__ is __log(huge(x))__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXP.md:34
msgid "The value of the result is __e\\*\\*x__ where __e__ is Euler's constant."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXP.md:88
msgid "[__log__(3)](LOG)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXP.md:90
msgid ""
"Wikipedia:[Exponential "
"function](https://en.wikipedia.org/wiki/Exponential_function)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXP.md:92
#, python-format
msgid ""
"Wikipedia:[Euler's "
"formula](https://en.wikipedia.org/wiki/Euler%27s_formula)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LOG.md:2
msgid "log"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LOG.md:5
msgid "__log__(3) - \\[MATHEMATICS\\] Logarithm function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LOG.md:14
msgid ""
"__log(x)__ computes the natural logarithm of __x__, i.e. the logarithm to"
" the base \"e\"."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LOG.md:24
msgid ""
"The return value is of type _real_ or _complex_. The kind type parameter "
"is the same as __x__. If __x__ is _complex_, the imaginary part OMEGA is "
"in the range"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LOG.md:27
msgid "__-PI__ \\< OMEGA \\<= PI."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LOG10.md:2
msgid "log10"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LOG10.md:5
msgid "__log10__(3) - \\[MATHEMATICS\\] Base 10 logarithm function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LOG10.md:16
msgid ""
"__log10(x)__ computes the base 10 logarithm of __x__. This is generally "
"called the \"common logarithm\"."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LOG10.md:22
msgid "A _real_ value > 0 to take the log of."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LOG10.md:26
msgid ""
"The return value is of type _real_ . The kind type parameter is the same "
"as __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SQRT.md:2
msgid "sqrt"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SQRT.md:5
msgid "__sqrt__(3) - \\[MATHEMATICS\\] Square-root function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SQRT.md:15
msgid ""
"Where TYPE may be _real_ or _complex_ and __KIND__ may be any kind valid "
"for the declared type."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SQRT.md:20
msgid "__sqrt(x)__ computes the principal square root of __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SQRT.md:22
msgid ""
"In mathematics, a square root of a number __x__ is a number __y__ such "
"that __y*y = x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SQRT.md:25
msgid ""
"The number whose square root is being considered is known as the "
"_radicand_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SQRT.md:28
msgid ""
"Every nonnegative  number _x_ has two square roots of the same unique "
"magnitude, one positive and one negative. The nonnegative square root is "
"called the principal square root."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SQRT.md:32
msgid ""
"The principal square root of 9 is 3, for example, even though (-3)*(-3) "
"is also 9."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SQRT.md:35
msgid "A _real_, _radicand_ must be positive."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SQRT.md:37
msgid ""
"Square roots of negative numbers are a special case of complex numbers, "
"where the components of the _radicand_ need not be positive in order to "
"have a valid square root."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SQRT.md:44
msgid ""
"If __x__ is real its value must be greater than or equal to zero. The "
"type shall be _real_ or _complex_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SQRT.md:49
msgid ""
"The return value is of type _real_ or _complex_. The kind type parameter "
"is the same as __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/HYPOT.md:2
msgid "hypot"
msgstr ""

#: ../../source/learn/intrinsics/_pages/HYPOT.md:5
msgid ""
"__hypot__(3) - \\[MATHEMATICS\\] returns the distance between the point "
"and the origin."
msgstr ""

#: ../../source/learn/intrinsics/_pages/HYPOT.md:14
msgid "where __x,y,value__ shall all be of the same __kind__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/HYPOT.md:18
msgid ""
"__hypot(x,y)__ is referred to as the Euclidean distance function. It is "
"equal to __sqrt(x**2 + y**2)__, without undue underflow or overflow."
msgstr ""

#: ../../source/learn/intrinsics/_pages/HYPOT.md:21
msgid ""
"In mathematics, the _Euclidean distance_ between two points in Euclidean "
"space is the length of a line segment between two points."
msgstr ""

#: ../../source/learn/intrinsics/_pages/HYPOT.md:24
msgid ""
"__hypot(x,y)__ returns the distance between the point __<x,y>__ and the "
"origin."
msgstr ""

#: ../../source/learn/intrinsics/_pages/HYPOT.md:32
msgid "The type and kind type parameter shall be the same as __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/HYPOT.md:36
msgid "The return value has the same type and kind type parameter as __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/HYPOT.md:38
msgid ""
"The result is the positive magnitude of the distance of the point "
"__<x,y>__ from the origin __<0.0,0.0>__ ."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_J0.md:2
msgid "bessel\\_j0"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_J0.md:5
msgid ""
"__bessel\\_j0__(3) - \\[MATHEMATICS\\] Bessel function of the first kind "
"of order 0"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_J0.md:14
msgid ""
"__bessel\\_j0(x)__ computes the Bessel function of the first kind of "
"order __0__ of __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_J0.md:24
msgid ""
"The return value is of type _real_ and lies in the range  __-0.4027 \\<= "
"bessel(0,x) \\<= 1__. It has the same kind as __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_J0.md:52
msgid ""
"[__bessel\\_j1__(3)](BESSEL_J1), [__bessel\\_jn__(3)](BESSEL_JN),  "
"[__bessel\\_y0__(3)](BESSEL_Y0), [__bessel\\_y1__(3)](BESSEL_Y1),  "
"[__bessel\\_yn__(3)](BESSEL_YN)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_J1.md:2
msgid "bessel\\_j1"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_J1.md:5
msgid ""
"__bessel\\_j1__(3) - \\[MATHEMATICS\\] Bessel function of the first kind "
"of order 1"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_J1.md:14
msgid ""
"__bessel\\_j1(x)__ computes the Bessel function of the first kind of "
"order __1__ of __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_J1.md:24
msgid ""
"The return value is of type _real_ and lies in the range  __-0.5818 \\<= "
"bessel(0,x) \\<= 0.5818__ . It has the same kind as __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_J1.md:51
msgid ""
"[__bessel\\_j0__(3)](BESSEL_J0), [__bessel\\_jn__(3)](BESSEL_JN),  "
"[__bessel\\_y0__(3)](BESSEL_Y0), [__bessel\\_y1__(3)](BESSEL_Y1),  "
"[__bessel\\_yn__(3)](BESSEL_YN)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_JN.md:2
msgid "bessel\\_jn"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_JN.md:5
msgid "__bessel\\_jn__(3) - \\[MATHEMATICS\\] Bessel function of the first kind"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_JN.md:16
msgid ""
"__bessel\\_jn(n, x)__ computes the Bessel function of the first kind of "
"order __n__ of __x__. If __n__ and __x__ are arrays, their ranks and "
"shapes shall conform."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_JN.md:20
msgid ""
"__bessel\\_jn(n1, n2, x)__ returns an array with the Bessel "
"function\\|Bessel functions  of the first kind of the orders __n1__ to "
"__n2__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_JN.md:25
#: ../../source/learn/intrinsics/_pages/BESSEL_YN.md:25
msgid "__n__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_JN.md:26
#: ../../source/learn/intrinsics/_pages/BESSEL_YN.md:26
msgid "Shall be a scalar or an array of type _integer_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_JN.md:28
#: ../../source/learn/intrinsics/_pages/BESSEL_YN.md:28
msgid "__n1__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_JN.md:29
#: ../../source/learn/intrinsics/_pages/BESSEL_JN.md:32
#: ../../source/learn/intrinsics/_pages/BESSEL_YN.md:29
#: ../../source/learn/intrinsics/_pages/BESSEL_YN.md:32
msgid "Shall be a non-negative scalar of type _integer_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_JN.md:31
#: ../../source/learn/intrinsics/_pages/BESSEL_YN.md:31
msgid "__n2__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_JN.md:35
msgid ""
"Shall be a scalar or an array of type _real_. For  __bessel\\_jn(n1, n2, "
"x)__ it shall be scalar."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_JN.md:40
msgid ""
"The return value is a scalar of type _real_. It has the same kind as "
"__x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_JN.md:67
msgid ""
"[__bessel\\_j0__(3)](BESSEL_J0), [__bessel\\_j1__(3)](BESSEL_J1), "
"[__bessel\\_y0__(3)](BESSEL_Y0), [__bessel\\_y1__(3)](BESSEL_Y1),  "
"[__bessel\\_yn__(3)](BESSEL_YN)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_Y0.md:2
msgid "bessel\\_y0"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_Y0.md:5
msgid ""
"__bessel\\_y0__(3) - \\[MATHEMATICS\\] Bessel function of the second kind"
" of order 0"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_Y0.md:14
msgid ""
"__bessel\\_y0(x)__ computes the Bessel function of the second kind of "
"order 0 of __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_Y0.md:24
msgid "The return value is of type _real_. It has the same kind as __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_Y0.md:51
msgid ""
"[__bessel\\_j0__(3)](BESSEL_J0), [__bessel\\_j1__(3)](BESSEL_J1), "
"[__bessel\\_jn__(3)](BESSEL_JN),  [__bessel\\_y1__(3)](BESSEL_Y1),  "
"[__bessel\\_yn__(3)](BESSEL_YN)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_Y1.md:2
msgid "bessel\\_y1"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_Y1.md:5
msgid ""
"__bessel\\_y1__(3) - \\[MATHEMATICS\\] Bessel function of the second kind"
" of order 1"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_Y1.md:14
msgid ""
"__bessel\\_y1(x)__ computes the Bessel function of the second kind of "
"order 1 of __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_Y1.md:24
#: ../../source/learn/intrinsics/_pages/BESSEL_YN.md:40
msgid "The return value is _real_. It has the same kind as __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_Y1.md:46
msgid ""
"[__bessel\\_j0__(3)](BESSEL_J0), [__bessel\\_j1__(3)](BESSEL_J1), "
"[__bessel\\_jn__(3)](BESSEL_JN),  [__bessel\\_y0__(3)](BESSEL_Y0), "
"[__bessel\\_yn__(3)](BESSEL_YN)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_YN.md:2
msgid "bessel\\_yn"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_YN.md:5
msgid "__bessel\\_yn__(3) - \\[MATHEMATICS\\] Bessel function of the second kind"
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_YN.md:16
msgid ""
"__bessel\\_yn(n, x)__ computes the Bessel function of the second kind of "
"order __n__ of __x__. If __n__ and __x__ are arrays, their ranks and "
"shapes shall conform."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_YN.md:20
msgid ""
"__bessel\\_yn(n1, n2, x)__ returns an array with the Bessel "
"function\\|Bessel functions of the first kind of the orders __n1__ to "
"__n2__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_YN.md:35
msgid ""
"Shall be a scalar or an array of type _real_; for  __bessel\\_yn(n1, n2, "
"x)__ it shall be scalar."
msgstr ""

#: ../../source/learn/intrinsics/_pages/BESSEL_YN.md:65
msgid ""
"[__bessel\\_j0__(3)](BESSEL_J0), [__bessel\\_j1__(3)](BESSEL_J1), "
"[__bessel\\_jn__(3)](BESSEL_JN), [__bessel\\_y0__(3)](BESSEL_Y0), "
"[__bessel\\_y1__(3)](BESSEL_Y1)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ERF.md:2
msgid "erf"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ERF.md:5
msgid "__erf__(3) - \\[MATHEMATICS\\] Error function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ERF.md:14
msgid ""
"__erf__(x) computes the error function of __x__, defined as  $$ "
"\\text{erf}(x) = \\frac{2}{\\sqrt{\\pi}} \\int_0^x e^{__-t__^2} dt. $$"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ERF.md:26
msgid ""
"The return value is of type _real_, of the same kind as __x__ and lies in"
" the range __-1__ \\<= __erf__(x) \\<= 1 ."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ERF.md:50
#: ../../source/learn/intrinsics/_pages/ERFC.md:68
msgid "See also"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ERF.md:52
msgid "[__erfc__(3)](ERFC)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ERF.md:54
#: ../../source/learn/intrinsics/_pages/ERFC.md:71
msgid "[Wikipedia:error function](https://en.wikipedia.org/wiki/Error_function)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ERFC.md:2
msgid "erfc"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ERFC.md:5
msgid "__erfc__(3) - \\[MATHEMATICS\\] Complementary error function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ERFC.md:18
msgid ""
"__erfc__(x) computes the complementary error function of __x__.  Simpy "
"put this is equivalent to __1 - erf(x)__, but __erfc__ is provided "
"because of the extreme loss of relative accuracy if __erf(x)__ is called "
"for large __x__ and the result is subtracted from __1__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ERFC.md:23
msgid "__erfc(x)__ is defined as"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ERFC.md:31
msgid ""
"$$ \\text{erfc}(x) = 1 - \\text{erf}(x) = 1 - \\frac{2}{\\sqrt{\\pi}} "
"\\int_x^{\\infty} e^{-t^2} dt. $$"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ERFC.md:42
msgid ""
"The return value is of type _real_ and of the same kind as __x__. It lies"
" in the range"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ERFC.md:45
msgid "0 \\<= __erfc__(x) \\<= 2."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ERFC.md:69
msgid "[__erf__(3)](ERF)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ERFC.md:73
msgid "####### fortran-lang intrinsic descriptions license: MIT) @urbanjost"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ERFC_SCALED.md:2
msgid "erfc\\_scaled"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ERFC_SCALED.md:5
msgid "__erfc\\_scaled__(3) - \\[MATHEMATICS\\] Error function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ERFC_SCALED.md:14
msgid ""
"__erfc\\_scaled__(x) computes the exponentially-scaled complementary "
"error function of __x__:"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ERFC_SCALED.md:17
msgid "$$ e^{x^2} \\frac{2}{\\sqrt{\\pi}} \\int_{x}^{\\infty} e^{-t^2} dt. $$"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ERFC_SCALED.md:29
msgid "The return value is of type _real_ and of the same kind as __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/GAMMA.md:2
msgid "gamma"
msgstr ""

#: ../../source/learn/intrinsics/_pages/GAMMA.md:5
msgid ""
"__gamma__(3) - \\[MATHEMATICS\\] Gamma function, which yields factorials "
"for positive whole numbers"
msgstr ""

#: ../../source/learn/intrinsics/_pages/GAMMA.md:13
msgid ""
"__gamma(x)__ computes Gamma of __x__. For positive whole number values of"
" __n__ the Gamma function can be used to calculate factorials, as  "
"__(n-1)!  == gamma(real(n))__. That is"
msgstr ""

#: ../../source/learn/intrinsics/_pages/GAMMA.md:20
msgid ""
"$$ \\\\__Gamma__(x) = \\\\int\\_0\\*\\*\\\\infty "
"t\\*\\*{x-1}{\\\\mathrm{e}}\\*\\*{__-t__}\\\\,{\\\\mathrm{d}}t $$"
msgstr ""

#: ../../source/learn/intrinsics/_pages/GAMMA.md:26
#: ../../source/learn/intrinsics/_pages/LOG_GAMMA.md:19
msgid "Shall be of type _real_ and neither zero nor a negative integer."
msgstr ""

#: ../../source/learn/intrinsics/_pages/GAMMA.md:30
msgid "The return value is of type _real_ of the same kind as _x_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/GAMMA.md:124
msgid "Logarithm of the Gamma function: [__log\\_gamma__(3)](LOG_GAMMA)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/GAMMA.md:126
msgid "[Wikipedia: Gamma_function](https://en.wikipedia.org/wiki/Gamma_function)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LOG_GAMMA.md:2
msgid "log\\_gamma"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LOG_GAMMA.md:5
msgid "__log\\_gamma__(3) - \\[MATHEMATICS\\] Logarithm of the Gamma function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LOG_GAMMA.md:14
msgid ""
"__log\\_gamma(x)__ computes the natural logarithm of the absolute value "
"of the Gamma function."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LOG_GAMMA.md:23
msgid "The return value is of type _real_ of the same kind as __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LOG_GAMMA.md:46
msgid "Gamma function: [__gamma__(3)](GAMMA)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NORM2.md:2
msgid "norm2"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NORM2.md:5
msgid "__norm2__(3) - \\[MATHEMATICS\\] Euclidean vector norm"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NORM2.md:19
msgid ""
"Calculates the Euclidean vector norm (L\\_2 norm) of __array__ along "
"dimension __dim__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/NORM2.md:25
msgid "Shall be an array of type _real_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/NORM2.md:28
msgid ""
"shall be a scalar of type _integer_ with a value in the range from __1__ "
"to  __rank(array)__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/NORM2.md:35
msgid ""
"If __dim__ is absent, a scalar with the square root of the sum of squares"
" of the elements of __array__ is returned."
msgstr ""

#: ../../source/learn/intrinsics/_pages/NORM2.md:38
msgid ""
"Otherwise, an array of rank __n-1__, where __n__ equals the rank of "
"__array__, and a shape similar to that of __array__ with dimension DIM "
"dropped is returned."
msgstr ""

#: ../../source/learn/intrinsics/_pages/NORM2.md:87
msgid "[__product__(3)](PRODUCT), [__sum__(3)](SUM), [__hypot__(3)](HYPOT)"
msgstr ""

#: ../../source/learn/intrinsics/model/index.md:1
msgid "Controlling and querying the current numeric model"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXPONENT.md:2
msgid "exponent"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXPONENT.md:5
msgid "__exponent__(3) - \\[MODEL\\_COMPONENTS\\] Exponent function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXPONENT.md:14
msgid ""
"__exponent__(x) returns the value of the exponent part of __x__. If __x__"
" is zero the value returned is zero."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXPONENT.md:24
msgid "The return value is of type default _integer_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXPONENT.md:51
msgid ""
"[__digits__(3)](DIGITS), [__epsilon__(3)](EPSILON), "
"[__fraction__(3)](FRACTION), [__huge__(3)](HUGE), "
"[__maxexponent__(3)](MAXEXPONENT), [__minexponent__(3)](MINEXPONENT), "
"[__nearest__(3)](NEAREST), [__precision__(3)](PRECISION), "
"[__radix__(3)](RADIX), [__range__(3)](RANGE), "
"[__rrspacing__(3)](RRSPACING), [__scale__(3)](SCALE), "
"[__set\\_exponent__(3)](SET_EXPONENT), [__spacing__(3)](SPACING), "
"[__tiny__(3)](TINY)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/FRACTION.md:2
msgid "fraction"
msgstr ""

#: ../../source/learn/intrinsics/_pages/FRACTION.md:5
msgid ""
"__fraction__(3) - \\[MODEL\\_COMPONENTS\\] Fractional part of the model "
"representation"
msgstr ""

#: ../../source/learn/intrinsics/_pages/FRACTION.md:14
msgid ""
"__fraction(x)__ returns the fractional part of the model representation "
"of __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/FRACTION.md:21
#: ../../source/learn/intrinsics/_pages/SCALE.md:22
msgid "The type of the argument shall be a _real_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/FRACTION.md:25
msgid ""
"The return value is of the same type and kind as the argument. The "
"fractional part of the model representation of __x__ is returned; it is  "
"__x \\* radix(x)\\*\\*(-exponent(x))__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/FRACTION.md:51
msgid ""
"[__digits__(3)](DIGITS), [__epsilon__(3)](EPSILON), "
"[__exponent__(3)](EXPONENT), [__huge__(3)](HUGE), "
"[__maxexponent__(3)](MAXEXPONENT), [__minexponent__(3)](MINEXPONENT), "
"[__nearest__(3)](NEAREST), [__precision__(3)](PRECISION), "
"[__radix__(3)](RADIX), [__range__(3)](RANGE), "
"[__rrspacing__(3)](RRSPACING), [__scale__(3)](SCALE), "
"[__set\\_exponent__(3)](SET_EXPONENT), [__spacing__(3)](SPACING), "
"[__tiny__(3)](TINY)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NEAREST.md:2
msgid "nearest"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NEAREST.md:5
msgid "__nearest__(3) - \\[MODEL\\_COMPONENTS\\] Nearest representable number"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NEAREST.md:14
msgid ""
"__nearest(x, s)__ returns the processor-representable number nearest to "
"__x__ in the direction indicated by the sign of __s__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MAXEXPONENT.md:20
#: ../../source/learn/intrinsics/_pages/MINEXPONENT.md:20
#: ../../source/learn/intrinsics/_pages/NEAREST.md:20
#: ../../source/learn/intrinsics/_pages/RRSPACING.md:20
#: ../../source/learn/intrinsics/_pages/SET_EXPONENT.md:20
#: ../../source/learn/intrinsics/_pages/SPACING.md:20
#: ../../source/learn/intrinsics/_pages/TINY.md:24
msgid "Shall be of type _real_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/NEAREST.md:22
msgid "__s__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NEAREST.md:23
msgid "Shall be of type _real_ and not equal to zero."
msgstr ""

#: ../../source/learn/intrinsics/_pages/NEAREST.md:27
msgid ""
"The return value is of the same type as __x__. If __s__ is positive, "
"__nearest__ returns the processor-representable number greater than __x__"
" and nearest to it. If __s__ is negative, __nearest__ returns the "
"processor-representable number smaller than __x__ and nearest to it."
msgstr ""

#: ../../source/learn/intrinsics/_pages/NEAREST.md:67
msgid ""
"[__digits__(3)](DIGITS), [__epsilon__(3)](EPSILON), "
"[__exponent__(3)](EXPONENT), [__fraction__(3)](FRACTION), "
"[__huge__(3)](HUGE), [__maxexponent__(3)](MAXEXPONENT), "
"[__minexponent__(3)](MINEXPONENT), [__precision__(3)](PRECISION), "
"[__radix__(3)](RADIX), [__range__(3)](RANGE), "
"[__rrspacing__(3)](RRSPACING), [__scale__(3)](SCALE), "
"[__set\\_exponent__(3)](SET_EXPONENT), [__spacing__(3)](SPACING), "
"[__tiny__(3)](TINY)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/RRSPACING.md:2
msgid "rrspacing"
msgstr ""

#: ../../source/learn/intrinsics/_pages/RRSPACING.md:5
msgid ""
"__rrspacing__(3) - \\[MODEL\\_COMPONENTS\\] Reciprocal of the relative "
"spacing"
msgstr ""

#: ../../source/learn/intrinsics/_pages/RRSPACING.md:14
msgid ""
"__rrspacing(x)__ returns the reciprocal of the relative spacing of model "
"numbers near __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/RRSPACING.md:24
msgid ""
"The return value is of the same type and kind as __x__. The value "
"returned is equal to __abs(fraction(x)) \\* "
"float(radix(x))\\*\\*digits(x)__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/RRSPACING.md:33
msgid ""
"[__digits__(3)](DIGITS), [__epsilon__(3)](EPSILON), "
"[__exponent__(3)](EXPONENT), [__fraction__(3)](FRACTION), "
"[__huge__(3)](HUGE), [__maxexponent__(3)](MAXEXPONENT), "
"[__minexponent__(3)](MINEXPONENT), [__nearest__(3)](NEAREST), "
"[__precision__(3)](PRECISION), [__radix__(3)](RADIX), "
"[__range__(3)](RANGE), [__scale__(3)](SCALE), "
"[__set\\_exponent__(3)](SET_EXPONENT), [__spacing__(3)](SPACING), "
"[__tiny__(3)](TINY)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SCALE.md:2
msgid "scale"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SCALE.md:5
msgid ""
"__scale__(3) - \\[MODEL\\_COMPONENTS\\] Scale a real value by a whole "
"power of the radix"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SCALE.md:17
msgid "__scale(x,i)__ returns x \\* __radix(x)\\*\\*i__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SCALE.md:25
msgid "The type of the argument shall be a _integer_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SCALE.md:29
msgid ""
"The return value is of the same type and kind as __x__. Its value is  __x"
" \\* radix(x)\\*\\*i__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SCALE.md:57
msgid ""
"[__digits__(3)](DIGITS), [__epsilon__(3)](EPSILON), "
"[__exponent__(3)](EXPONENT), [__fraction__(3)](FRACTION), "
"[__huge__(3)](HUGE), [__maxexponent__(3)](MAXEXPONENT), "
"[__minexponent__(3)](MINEXPONENT), [__nearest__(3)](NEAREST), "
"[__precision__(3)](PRECISION), [__radix__(3)](RADIX), "
"[__range__(3)](RANGE), [__rrspacing__(3)](RRSPACING), "
"[__set\\_exponent__(3)](SET_EXPONENT), [__spacing__(3)](SPACING), "
"[__tiny__(3)](TINY)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SET_EXPONENT.md:2
msgid "set\\_exponent"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SET_EXPONENT.md:5
msgid ""
"__set\\_exponent__(3) - \\[MODEL\\_COMPONENTS\\] Set the exponent of the "
"model"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SET_EXPONENT.md:14
msgid ""
"__set\\_exponent(x, i)__ returns the real number whose fractional part is"
" that of __x__ and whose exponent part is __i__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SET_EXPONENT.md:27
msgid ""
"The return value is of the same type and kind as __x__. The real number "
"whose fractional part is that that of __x__ and whose exponent part if "
"__i__ is returned; it is __fraction(x) \\* radix(x)\\*\\*i__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SET_EXPONENT.md:53
msgid ""
"[__digits__(3)](DIGITS), [__epsilon__(3)](EPSILON), "
"[__exponent__(3)](EXPONENT), [__fraction__(3)](FRACTION), "
"[__huge__(3)](HUGE), [__maxexponent__(3)](MAXEXPONENT), "
"[__minexponent__(3)](MINEXPONENT), [__nearest__(3)](NEAREST), "
"[__precision__(3)](PRECISION), [__radix__(3)](RADIX), "
"[__range__(3)](RANGE), [__rrspacing__(3)](RRSPACING), "
"[__scale__(3)](SCALE), [__spacing__(3)](SPACING), [__tiny__(3)](TINY)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SPACING.md:2
msgid "spacing"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SPACING.md:5
msgid ""
"__spacing__(3) - \\[MODEL\\_COMPONENTS\\] Smallest distance between two "
"numbers of a given type"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SPACING.md:14
msgid ""
"Determines the distance between the argument __x__ and the nearest "
"adjacent number of the same type."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SPACING.md:24
msgid "The result is of the same type as the input argument __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SPACING.md:51
msgid ""
"[__digits__(3)](DIGITS), [__epsilon__(3)](EPSILON), "
"[__exponent__(3)](EXPONENT), [__fraction__(3)](FRACTION), "
"[__huge__(3)](HUGE), [__maxexponent__(3)](MAXEXPONENT), "
"[__minexponent__(3)](MINEXPONENT), [__nearest__(3)](NEAREST), "
"[__precision__(3)](PRECISION), [__radix__(3)](RADIX), "
"[__range__(3)](RANGE), [__rrspacing__(3)](RRSPACING), "
"[__scale__(3)](SCALE), [__set\\_exponent__(3)](SET_EXPONENT), "
"[__tiny__(3)](TINY)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DIGITS.md:2
msgid "digits"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DIGITS.md:5
msgid "__digits__(3) - \\[NUMERIC MODEL\\] Significant digits function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DIGITS.md:14
msgid ""
"where TYPE may be _integer_ or _real_ and KIND is any kind supported by "
"TYPE."
msgstr ""

#: ../../source/learn/intrinsics/_pages/DIGITS.md:19
msgid ""
"__digits(x)__ returns the number of significant digits of the internal "
"model representation of __x__. For example, on a system using a 32-bit "
"floating point representation, a default real number would likely return "
"24."
msgstr ""

#: ../../source/learn/intrinsics/_pages/DIGITS.md:27
msgid "The type may be a scalar or array of type _integer_ or _real_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/DIGITS.md:31
msgid "The return value is of type _integer_ of default kind."
msgstr ""

#: ../../source/learn/intrinsics/_pages/DIGITS.md:63
msgid ""
"[__epsilon__(3)](EPSILON), [__exponent__(3)](EXPONENT), "
"[__fraction__(3)](FRACTION), [__huge__(3)](HUGE), "
"[__maxexponent__(3)](MAXEXPONENT), [__minexponent__(3)](MINEXPONENT), "
"[__nearest__(3)](NEAREST), [__precision__(3)](PRECISION), "
"[__radix__(3)](RADIX), [__range__(3)](RANGE), "
"[__rrspacing__(3)](RRSPACING), [__scale__(3)](SCALE), "
"[__set\\_exponent__(3)](SET_EXPONENT), [__spacing__(3)](SPACING), "
"[__tiny__(3)](TINY)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EPSILON.md:2
msgid "epsilon"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EPSILON.md:5
msgid "__epsilon__(3) - \\[NUMERIC MODEL\\] Epsilon function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EPSILON.md:13
msgid ""
"__epsilon(x)__ returns the floating point relative accuracy.  It is the "
"nearly negligible number relative to __1__ such that __1+ little_number__"
" is not equal to __1__; or more precisely"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EPSILON.md:20
msgid ""
"It may be thought of as the distance from 1.0 to the next largest "
"floating point number."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EPSILON.md:23
msgid ""
"One use of __epsilon__(3) is to select a _delta_ value for algorithms "
"that search until the calculation is within _delta_ of an estimate."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EPSILON.md:26
msgid ""
"If _delta_ is too small the algorithm might never halt, as a computation "
"summing values smaller than the decimal resolution of the data type does "
"not change."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EPSILON.md:37
msgid "The return value is of the same type as the argument."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EPSILON.md:112
msgid ""
"[__digits__(3)](DIGITS), [__exponent__(3)](EXPONENT), "
"[__fraction__(3)](FRACTION), [__huge__(3)](HUGE), "
"[__maxexponent__(3)](MAXEXPONENT), [__minexponent__(3)](MINEXPONENT), "
"[__nearest__(3)](NEAREST), [__precision__(3)](PRECISION), "
"[__radix__(3)](RADIX), [__range__(3)](RANGE), "
"[__rrspacing__(3)](RRSPACING), [__scale__(3)](SCALE), "
"[__set\\_exponent__(3)](SET_EXPONENT), [__spacing__(3)](SPACING), "
"[__tiny__(3)](TINY)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/HUGE.md:2
msgid "huge"
msgstr ""

#: ../../source/learn/intrinsics/_pages/HUGE.md:5
msgid "__huge__(3) - \\[NUMERIC MODEL\\] Largest number of a type and kind"
msgstr ""

#: ../../source/learn/intrinsics/_pages/HUGE.md:15
msgid ""
"where __TYPE__ may be _real_ or _integer_ and __KIND__ is any supported"
"    associated _kind_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/HUGE.md:20
msgid ""
"__huge(x)__ returns the largest number that is not an infinity for the "
"kind and type of __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/HUGE.md:26
msgid ""
"Shall be an arbitrary value of type _real_ or _integer_. The value is "
"used merely to determine what _kind_ and _type_ of scalar is being "
"queried."
msgstr ""

#: ../../source/learn/intrinsics/_pages/HUGE.md:32
msgid ""
"The return value is of the same type and kind as _x_ and is the largest "
"value supported by the specified model."
msgstr ""

#: ../../source/learn/intrinsics/_pages/HUGE.md:91
msgid ""
"[__digits__(3)](DIGITS), [__epsilon__(3)](EPSILON), "
"[__exponent__(3)](EXPONENT), [__fraction__(3)](FRACTION), "
"[__maxexponent__(3)](MAXEXPONENT), [__minexponent__(3)](MINEXPONENT), "
"[__nearest__(3)](NEAREST), [__precision__(3)](PRECISION), "
"[__radix__(3)](RADIX), [__range__(3)](RANGE), "
"[__rrspacing__(3)](RRSPACING), [__scale__(3)](SCALE), "
"[__set\\_exponent__(3)](SET_EXPONENT), [__spacing__(3)](SPACING), "
"[__tiny__(3)](TINY)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MAXEXPONENT.md:2
msgid "maxexponent"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MAXEXPONENT.md:5
msgid "__maxexponent__(3) - \\[NUMERIC MODEL\\] Maximum exponent of a real kind"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MAXEXPONENT.md:14
msgid ""
"__maxexponent(x)__ returns the maximum exponent in the model of the type "
"of __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MAXEXPONENT.md:52
msgid ""
"[__digits__(3)](DIGITS), [__epsilon__(3)](EPSILON), "
"[__exponent__(3)](EXPONENT), [__fraction__(3)](FRACTION), "
"[__huge__(3)](HUGE), [__minexponent__(3)](MINEXPONENT), "
"[__nearest__(3)](NEAREST), [__precision__(3)](PRECISION), "
"[__radix__(3)](RADIX), [__range__(3)](RANGE), "
"[__rrspacing__(3)](RRSPACING), [__scale__(3)](SCALE), "
"[__set\\_exponent__(3)](SET_EXPONENT), [__spacing__(3)](SPACING), "
"[__tiny__(3)](TINY)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MINEXPONENT.md:2
msgid "minexponent"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MINEXPONENT.md:5
msgid "__minexponent__(3) - \\[NUMERIC MODEL\\] Minimum exponent of a real kind"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MINEXPONENT.md:14
msgid ""
"__minexponent(x)__ returns the minimum exponent in the model of the type "
"of __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MINEXPONENT.md:52
msgid ""
"[__digits__(3)](DIGITS), [__epsilon__(3)](EPSILON), "
"[__exponent__(3)](EXPONENT), [__fraction__(3)](FRACTION), "
"[__huge__(3)](HUGE), [__maxexponent__(3)](MAXEXPONENT), "
"[__nearest__(3)](NEAREST), [__precision__(3)](PRECISION), "
"[__radix__(3)](RADIX), [__range__(3)](RANGE), "
"[__rrspacing__(3)](RRSPACING), [__scale__(3)](SCALE), "
"[__set\\_exponent__(3)](SET_EXPONENT), [__spacing__(3)](SPACING), "
"[__tiny__(3)](TINY)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/PRECISION.md:2
msgid "precision"
msgstr ""

#: ../../source/learn/intrinsics/_pages/PRECISION.md:5
msgid "__precision__(3) - \\[NUMERIC MODEL\\] Decimal precision of a real kind"
msgstr ""

#: ../../source/learn/intrinsics/_pages/PRECISION.md:14
msgid ""
"__precision(x)__ returns the decimal precision in the model of the type "
"of __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/PRECISION.md:20
#: ../../source/learn/intrinsics/_pages/RANGE.md:26
msgid "Shall be of type _real_ or _complex_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/PRECISION.md:52
msgid ""
"[__digits__(3)](DIGITS), [__epsilon__(3)](EPSILON), "
"[__exponent__(3)](EXPONENT), [__fraction__(3)](FRACTION), "
"[__huge__(3)](HUGE), [__maxexponent__(3)](MAXEXPONENT), "
"[__minexponent__(3)](MINEXPONENT), [__nearest__(3)](NEAREST), "
"[__radix__(3)](RADIX), [__range__(3)](RANGE), "
"[__rrspacing__(3)](RRSPACING), [__scale__(3)](SCALE), "
"[__set\\_exponent__(3)](SET_EXPONENT), [__spacing__(3)](SPACING), "
"[__tiny__(3)](TINY)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/RADIX.md:2
msgid "radix"
msgstr ""

#: ../../source/learn/intrinsics/_pages/RADIX.md:5
msgid "__radix__(3) - \\[NUMERIC MODEL\\] Base of a model number"
msgstr ""

#: ../../source/learn/intrinsics/_pages/RADIX.md:14
msgid "__radix(x)__ returns the base of the model representing the entity __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/RADIX.md:19
msgid "Shall be of type _integer_ or _real_"
msgstr ""

#: ../../source/learn/intrinsics/_pages/KIND.md:23
#: ../../source/learn/intrinsics/_pages/RADIX.md:23
msgid ""
"The return value is a scalar of type _integer_ and of the default integer"
" kind."
msgstr ""

#: ../../source/learn/intrinsics/_pages/RADIX.md:51
msgid ""
"[__digits__(3)](DIGITS), [__epsilon__(3)](EPSILON), "
"[__exponent__(3)](EXPONENT), [__fraction__(3)](FRACTION), "
"[__huge__(3)](HUGE), [__maxexponent__(3)](MAXEXPONENT), "
"[__minexponent__(3)](MINEXPONENT), [__nearest__(3)](NEAREST), "
"[__precision__(3)](PRECISION), [__range__(3)](RANGE), "
"[__rrspacing__(3)](RRSPACING), [__scale__(3)](SCALE), "
"[__set\\_exponent__(3)](SET_EXPONENT), [__spacing__(3)](SPACING), "
"[__tiny__(3)](TINY)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/RANGE.md:2
msgid "range"
msgstr ""

#: ../../source/learn/intrinsics/_pages/RANGE.md:5
msgid "__range__(3) - \\[NUMERIC MODEL\\] Decimal exponent range of a real kind"
msgstr ""

#: ../../source/learn/intrinsics/_pages/RANGE.md:16
msgid ""
"where TYPE is _real_ or _complex_ and KIND is any kind supported by     "
"TYPE."
msgstr ""

#: ../../source/learn/intrinsics/_pages/RANGE.md:20
msgid ""
"__range(x)__ returns the decimal exponent range in the model of the type "
"of __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/RANGE.md:58
msgid ""
"[__digits__(3)](DIGITS), [__epsilon__(3)](EPSILON), "
"[__exponent__(3)](EXPONENT), [__fraction__(3)](FRACTION), "
"[__huge__(3)](HUGE), [__maxexponent__(3)](MAXEXPONENT), "
"[__minexponent__(3)](MINEXPONENT), [__nearest__(3)](NEAREST), "
"[__precision__(3)](PRECISION), [__radix__(3)](RADIX), "
"[__rrspacing__(3)](RRSPACING), [__scale__(3)](SCALE), "
"[__set\\_exponent__(3)](SET_EXPONENT), [__spacing__(3)](SPACING), "
"[__tiny__(3)](TINY)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/TINY.md:2
msgid "tiny"
msgstr ""

#: ../../source/learn/intrinsics/_pages/TINY.md:5
msgid "__tiny__(3) - \\[NUMERIC MODEL\\] Smallest positive number of a real kind"
msgstr ""

#: ../../source/learn/intrinsics/_pages/TINY.md:14
msgid "where KIND may be any kind supported by type _real_"
msgstr ""

#: ../../source/learn/intrinsics/_pages/TINY.md:18
msgid ""
"__tiny(x)__ returns the smallest positive (non zero) number of the type "
"and kind of __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/TINY.md:28
msgid "The smallest positive value for the _real_ type of the specified kind."
msgstr ""

#: ../../source/learn/intrinsics/_pages/TINY.md:54
msgid ""
"[__digits__(3)](DIGITS), [__epsilon__(3)](EPSILON), "
"[__exponent__(3)](EXPONENT), [__fraction__(3)](FRACTION), "
"[__huge__(3)](HUGE), [__maxexponent__(3)](MAXEXPONENT), "
"[__minexponent__(3)](MINEXPONENT), [__nearest__(3)](NEAREST), "
"[__precision__(3)](PRECISION), [__radix__(3)](RADIX), "
"[__range__(3)](RANGE), [__rrspacing__(3)](RRSPACING), "
"[__scale__(3)](SCALE), [__set_exponent__(3)](SET_EXPONENT), "
"[__spacing__(3)](SPACING)"
msgstr ""

#: ../../source/learn/intrinsics/numeric/index.md:1
msgid "Manipulation and properties of numeric values"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ABS.md:2
msgid "abs"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ABS.md:5
msgid "__abs__(3) - \\[NUMERIC\\] Absolute value"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ABS.md:15
msgid ""
"where the TYPE and KIND is determined by the type and type attributes of "
"__a__, which may be any _real_, _integer_, or _complex_ value."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ABS.md:18
msgid ""
"If the type of __a__ is _cmplx_ the type returned will be _real_ with the"
" same kind as the _real_ part of the input value."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ABS.md:21
msgid "Otherwise the returned type will be the same type as __a__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ABS.md:25
msgid "__abs(a)__ computes the absolute value of numeric argument __a__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ABS.md:27
msgid ""
"In mathematics, the absolute value or modulus of a real number __x__, "
"denoted __|x|__, is the magnitude of __x__ without regard to its sign."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ABS.md:30
msgid ""
"The absolute value of a number may be thought of as its distance from "
"zero, which is the definition used by __abs__(3) when dealing with "
"_complex_ values (_see below_)."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ABS.md:37
msgid ""
"the type of the argument shall be an _integer_, _real_, or _complex_ "
"scalar or array."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ABS.md:42
msgid ""
"If __a__ is of type _integer_ or _real_, the value of the result is "
"__|a|__ and of the same type and kind as the input argument."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ABS.md:45
msgid ""
"(Take particular note) if __a__ is _complex_ with value __(x, y)__, the "
"result is a _real_ equal to a processor-dependent approximation to "
"__sqrt(x\\*\\*2 + y\\*\\*2)__ computed without undue overflow or "
"underflow."
msgstr ""

#: ../../source/learn/intrinsics/_pages/AINT.md:2
msgid "aint"
msgstr ""

#: ../../source/learn/intrinsics/_pages/AINT.md:5
msgid "__aint__(3) - \\[NUMERIC\\] Truncate to a whole number"
msgstr ""

#: ../../source/learn/intrinsics/_pages/AINT.md:27
msgid "__aint(x, kind)__ truncates its argument to a whole number."
msgstr ""

#: ../../source/learn/intrinsics/_pages/AINT.md:32
#: ../../source/learn/intrinsics/_pages/ANINT.md:19
msgid "the type of the argument shall be _real_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/AINT.md:40
msgid ""
"The return value is of type _real_ with the kind type parameter of the "
"argument if the optional __kind__ is absent; otherwise, the kind type "
"parameter will be given by __kind__. If the magnitude of __x__ is less "
"than one, __aint(x)__ returns zero. If the magnitude is equal to or "
"greater than one then it returns the largest whole number that does not "
"exceed its magnitude. The sign is the same as the sign of __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/AINT.md:85
msgid ""
"[__anint__(3)](ANINT), [__int__(3)](INT), [__nint__(3)](NINT), "
"[__selected_int_kind__(3)](SELECTED_INT_KIND), [__ceiling__(3)](CEILING),"
" [__floor__(3)](FLOOR)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ANINT.md:2
msgid "anint"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ANINT.md:5
msgid "__anint__(3) - \\[NUMERIC\\] Nearest whole number"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ANINT.md:14
msgid "__anint(a \\[, kind\\])__ rounds its argument to the nearest whole number."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ANINT.md:27
msgid ""
"The return value is of type real with the kind type parameter of the "
"argument if the optional __kind__ is absent; otherwise, the kind type "
"parameter will be given by __kind__. If __a__ is greater than zero, "
"__anint(a)__ returns __aint(a + 0.5)__. If __a__ is less than or equal to"
" zero then it returns __aint(a - 0.5)__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ANINT.md:75
msgid ""
"[__aint__(3)](AINT), [__int__(3)](INT), [__nint__(3)](NINT), "
"[__selected_int_kind__(3)](SELECTED_INT_KIND), [__ceiling__(3)](CEILING),"
" [__floor__(3)](FLOOR)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CEILING.md:2
msgid "ceiling"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CEILING.md:5
msgid "__ceiling__(3) - \\[NUMERIC\\] Integer ceiling function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CEILING.md:18
msgid "__ceiling(a)__ returns the least integer greater than or equal to __a__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CEILING.md:31
msgid ""
"The return value is of type __integer__(kind) if __kind__ is present and "
"a default-kind _integer_ otherwise."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CEILING.md:34
#: ../../source/learn/intrinsics/_pages/FLOOR.md:37
#: ../../source/learn/intrinsics/_pages/INT.md:49
#: ../../source/learn/intrinsics/_pages/NINT.md:44
msgid ""
"The result is undefined if it cannot be represented in the specified "
"integer type."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CEILING.md:69
msgid "[__floor__(3)](FLOOR), [__nint__(3)](NINT)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CEILING.md:73
#: ../../source/learn/intrinsics/_pages/FLOOR.md:85
msgid ""
"[__aint__(3)](AINT), [__anint__(3)](ANINT), [__int__(3)](INT), "
"[__selected_int_kind__(3)](SELECTED_INT_KIND)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CONJG.md:2
msgid "conjg"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CONJG.md:5
msgid "__conjg__(3) - \\[NUMERIC\\] Complex conjugate of a complex value"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CONJG.md:14
msgid "where __K__ is the kind of the parameter __z__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CONJG.md:18
msgid "__conjg(z)__ returns the complex conjugate of the _complex_ value __z__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CONJG.md:20
msgid ""
"In mathematics, the complex conjugate of a complex_ number is the number "
"with an equal real part and an imaginary part equal in magnitude but "
"opposite in sign."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CONJG.md:24
msgid "That is, If __z__ is __(x, y)__ then the result is __(x, -y)__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CONJG.md:26
msgid ""
"For matrices of complex numbers, __conjg(array)__ represents the element-"
"by-element conjugation of __array__; not the conjugate transpose of "
"__array__ ."
msgstr ""

#: ../../source/learn/intrinsics/_pages/AIMAG.md:22
#: ../../source/learn/intrinsics/_pages/CONJG.md:32
msgid "__z__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CONJG.md:33
msgid "The type shall be _complex_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CONJG.md:37
msgid "The return value is of type _complex_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/DIM.md:2
msgid "dim"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DIM.md:5
msgid "__dim__(3) - \\[NUMERIC\\] Positive difference"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DIM.md:16
#: ../../source/learn/intrinsics/_pages/SIGN.md:16
msgid ""
"where TYPE may be _real_ or _integer_ and KIND is any supported kind for "
"the type."
msgstr ""

#: ../../source/learn/intrinsics/_pages/DIM.md:19
msgid ""
"__dim(x,y)__ returns the difference __x - y__ if the result is positive; "
"otherwise it returns zero."
msgstr ""

#: ../../source/learn/intrinsics/_pages/DIM.md:25
msgid "The type shall be _integer_ or _real_"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DIM.md:28
msgid "The type shall be the same type and kind as __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/DIM.md:32
msgid ""
"The return value is the same type and kind as the input arguments __x__ "
"and __y__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/DPROD.md:2
msgid "dprod"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DPROD.md:5
msgid "__dprod__(3) - \\[NUMERIC\\] Double product function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DPROD.md:14
msgid ""
"__dprod(x,y)__ produces a higher _doubleprecision_ product of default "
"_real_ numbers __x__ and __y__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/DPROD.md:17
msgid ""
"The result has a value equal to a processor-dependent approximation to "
"the product of __x__ and __y__. It is recommended that the processor "
"compute the product in double precision, rather than in single precision "
"and then converted to double precision."
msgstr ""

#: ../../source/learn/intrinsics/_pages/DPROD.md:23
#: ../../source/learn/intrinsics/_pages/DPROD.md:26
msgid "shall be default real."
msgstr ""

#: ../../source/learn/intrinsics/_pages/DPROD.md:28
msgid ""
"The setting of compiler options specifying _real_ size can affect this "
"function."
msgstr ""

#: ../../source/learn/intrinsics/_pages/DPROD.md:34
msgid "Must be of default _real(kind=kind(0.0))_ type"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DPROD.md:37
msgid "Must have the same type and kind parameters as __x__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DPROD.md:41
msgid "The return value is of type _real(kind=kind(0.0d0))_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/FLOOR.md:2
msgid "floor"
msgstr ""

#: ../../source/learn/intrinsics/_pages/FLOOR.md:5
msgid ""
"__floor__(3) - \\[NUMERIC\\] function to return largest integral value "
"not greater than argument"
msgstr ""

#: ../../source/learn/intrinsics/_pages/FLOOR.md:19
msgid ""
"__floor(a)__ returns the greatest integer less than or equal to __a__. "
"That is, it picks the whole number at or to the left of the value on the "
"scale __-huge(int(a,kind=KIND))-1__ to __huge(int(a),kind=KIND)__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/FLOOR.md:29
msgid ""
"(Optional) A scalar _integer_ constant initialization expression "
"indicating the kind parameter of the result."
msgstr ""

#: ../../source/learn/intrinsics/_pages/FLOOR.md:34
msgid ""
"The return value is of type _integer(kind)_ if __kind__ is present and of"
" default-kind _integer_ otherwise."
msgstr ""

#: ../../source/learn/intrinsics/_pages/FLOOR.md:81
msgid "[__ceiling__(3)](CEILING), [__nint__(3)](NINT)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MAX.md:2
msgid "max"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MAX.md:5
msgid "__max__(3) - \\[NUMERIC\\] Maximum value of an argument list"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MAX.md:13
msgid "Returns the argument with the largest (most positive) value."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MAX.md:17
#: ../../source/learn/intrinsics/_pages/MIN.md:18
msgid "__a1__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MAX.md:18
#: ../../source/learn/intrinsics/_pages/MIN.md:19
msgid "The type shall be _integer_ or _real_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MAX.md:20
msgid "__a2,a3,...__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MAX.md:21
msgid "An expression of the same type and kind as __a1__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MAX.md:25
msgid ""
"The return value corresponds to the maximum value among the arguments, "
"and has the same type and kind as the first argument."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MAX.md:28
msgid ""
"The function is both elemental and allows for an arbitrary number of "
"arguments. This means if some elements are scalar and some are arrays "
"that all the arrays must be of the same size, and the returned value will"
" be an array that is the result as if multiple calls were made with all "
"scalar values with a single element of each array used in each call. If "
"called with all arrays the returned array is the same as if multiple "
"calls were made with __max(arr1(1),arr2(1), ...)__ to "
"__max(arr1(N),arr2(N))__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MAX.md:115
msgid "[__maxloc__(3)](MAXLOC), [__maxval__(3)](MAXVAL), [__min__(3)](MIN)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MIN.md:2
msgid "min"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MIN.md:5
msgid "__min__(3) - \\[NUMERIC\\] Minimum value of an argument list"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MIN.md:14
msgid "Returns the argument with the smallest (most negative) value."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MIN.md:21
msgid "__a2, a3, \\`\\`\\`__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MIN.md:22
msgid "An expression of the same type and kind as __A1__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MIN.md:26
msgid ""
"The return value corresponds to the minimum value among the arguments, "
"and has the same type and kind as the first argument."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MIN.md:52
msgid "[__max__(3)](MAX), [__minloc__(3)](MINLOC), [__minval__(3)](MINVAL)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MOD.md:2
msgid "mod"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MOD.md:5
msgid "__mod__(3) - \\[NUMERIC\\] Remainder function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MOD.md:14
msgid "__mod__(a,p) computes the remainder of the division of __a__ by __p__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MOD.md:19
#: ../../source/learn/intrinsics/_pages/MODULO.md:19
msgid "Shall be a scalar of type _integer_ or _real_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MOD.md:21
#: ../../source/learn/intrinsics/_pages/MODULO.md:21
#: ../../source/learn/intrinsics/_pages/SELECTED_REAL_KIND.md:20
msgid "__p__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MOD.md:22
msgid ""
"Shall be a scalar of the same type and kind as __a__ and not equal to "
"zero."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MOD.md:27
msgid ""
"The return value is the result of __a - (int(a/p) \\* p)__. The type and "
"kind of the return value is the same as that of the arguments. The "
"returned value has the same sign as __a__ and a magnitude less than the "
"magnitude of __p__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MOD.md:76
msgid "[__modulo__(3)](MODULO)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MODULO.md:2
msgid "modulo"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MODULO.md:5
msgid "__modulo__(3) - \\[NUMERIC\\] Modulo function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MODULO.md:14
msgid "__modulo(a,p)__ computes the __a__ modulo __p__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MODULO.md:22
msgid ""
"Shall be a scalar of the same type and kind as __a__. It shall not be "
"zero."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MODULO.md:27
msgid "The type and kind of the result are those of the arguments."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MODULO.md:29
msgid ""
"If __a__ and __p__ are of type _integer_: __modulo(a,p)__ has the value "
"of  __a - floor (real(a) / real(p)) \\* p__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MODULO.md:32
msgid ""
"If __a__ and __p__ are of type _real_: __modulo(a,p)__ has the value of  "
"__a - floor (a / p) \\* p__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MODULO.md:35
msgid ""
"The returned value has the same sign as __p__ and a magnitude less than "
"the magnitude of __p__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MODULO.md:70
msgid "[__mod__(3)](MOD)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SIGN.md:2
msgid "sign"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SIGN.md:5
msgid "__sign__(3) - \\[NUMERIC\\] Sign copying function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SIGN.md:76
msgid "####### fortran-lang intrinsic descriptions (license: MIT)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CSHIFT.md:2
msgid "cshift"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CSHIFT.md:5
msgid "__cshift__(3) - \\[TRANSFORMATIONAL\\] Circular shift elements of an array"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CSHIFT.md:14
msgid ""
"__cshift(array, shift \\[, dim\\])__ performs a circular shift on "
"elements of __array__ along the dimension of __dim__. If __dim__ is "
"omitted it is taken to be __1__. __dim__ is a scalar of type _integer_ in"
" the range of __1 \\<= dim \\<= n__, where \"n\" is the rank of "
"__array__. If the rank of __array__ is one, then all elements of "
"__array__ are shifted by __shift__ places. If rank is greater than one, "
"then all complete rank one sections of __array__ along the given "
"dimension are shifted. Elements shifted out one end of each rank one "
"section are shifted back in the other end."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CSHIFT.md:36
#: ../../source/learn/intrinsics/_pages/EOSHIFT.md:49
msgid "Returns an array of same type and rank as the __array__ argument."
msgstr ""

#: ../../source/learn/intrinsics/_pages/DOT_PRODUCT.md:2
msgid "dot\\_product"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DOT_PRODUCT.md:5
msgid "__dot\\_product__(3) - \\[TRANSFORMATIONAL\\] Dot product function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DOT_PRODUCT.md:14
msgid ""
"__dot\\_product(vector\\_a, vector\\_b)__ computes the dot product "
"multiplication of two vectors vector\\_a and vector\\_b. The two vectors "
"may be either numeric or logical and must be arrays of rank one and of "
"equal size. If the vectors are _integer_ or _real_, the result is "
"__sum(vector\\_a\\*vector\\_b)__. If the vectors are _complex_, the "
"result is __sum(conjg(vector\\_a)\\*vector\\_b)__. If the vectors are "
"_logical_, the result is __any(vector\\_a .and. vector\\_b)__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/DOT_PRODUCT.md:24
msgid "__vector\\_a__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DOT_PRODUCT.md:25
msgid "The type shall be numeric or _logical_, rank 1."
msgstr ""

#: ../../source/learn/intrinsics/_pages/DOT_PRODUCT.md:27
msgid "__vector\\_b__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DOT_PRODUCT.md:28
msgid ""
"The type shall be numeric if vector\\_a is of numeric type or _logical_ "
"if vector\\_a is of type _logical_. vector\\_b shall be a rank-one array."
msgstr ""

#: ../../source/learn/intrinsics/_pages/DOT_PRODUCT.md:34
msgid ""
"If the arguments are numeric, the return value is a scalar of numeric "
"type, _integer_, _real_, or _complex_. If the arguments are _logical_, "
"the return value is .true. or .false.."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EOSHIFT.md:2
msgid "eoshift"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EOSHIFT.md:5
msgid "__eoshift__(3) - \\[TRANSFORMATIONAL\\] End-off shift elements of an array"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EOSHIFT.md:14
msgid ""
"__eoshift(array, shift\\[, boundary, dim\\])__ performs an end-off shift "
"on elements of __array__ along the dimension of __dim__. If __dim__ is "
"omitted it is taken to be __1__. __dim__ is a scalar of type _integer_ in"
" the range of __1 \\<= DIM \\<= n__ where __\"n\"__ is the rank of "
"__array__. If the rank of __array__ is one, then all elements of "
"__array__ are shifted by __shift__ places. If rank is greater than one, "
"then all complete rank one sections of __array__ along the given "
"dimension are shifted. Elements shifted out one end of each rank one "
"section are dropped. If __boundary__ is present then the corresponding "
"value of from __boundary__ is copied back in the other end. If "
"__boundary__ is not present then the following are copied in depending on"
" the type of __array__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EOSHIFT.md:25
msgid "\\*Array Type\\* - \\*Boundary Value\\*"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EOSHIFT.md:27
msgid "Numeric 0 of the type and kind of __array__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EOSHIFT.md:29
msgid "Logical .false."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EOSHIFT.md:31
msgid "__Character(len)__ LEN blanks"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EOSHIFT.md:36
msgid "May be any type, not scalar."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EOSHIFT.md:41
msgid "__boundary__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EOSHIFT.md:42
msgid "Same type as ARRAY."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MATMUL.md:2
msgid "matmul"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MATMUL.md:5
msgid "__matmul__(3) - \\[TRANSFORMATIONAL\\] matrix multiplication"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MATMUL.md:14
msgid "Performs a matrix multiplication on numeric or logical arguments."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MATMUL.md:18
msgid "__matrix\\_a__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MATMUL.md:19
msgid ""
"An array of _integer_, _real_, _complex_, or _logical_ type, with a rank "
"of one or two."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MATMUL.md:22
msgid "__matrix\\_b__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MATMUL.md:23
msgid ""
"An array of _integer_, _real_, or _complex_ type if __matrix\\_a__ is of "
"a numeric type; otherwise, an array of _logical_ type. The rank shall be "
"one or two, and the first (or only) dimension of __matrix\\_b__ shall be "
"equal to the last (or only) dimension of __matrix\\_a__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MATMUL.md:30
msgid ""
"The matrix product of __matrix\\_a__ and __matrix\\_b__. The type and "
"kind of the result follow the usual type and kind promotion rules, as for"
" the \\* or .and. operators."
msgstr ""

#: ../../source/learn/intrinsics/_pages/PARITY.md:2
msgid "parity"
msgstr ""

#: ../../source/learn/intrinsics/_pages/PARITY.md:5
msgid "__parity__(3) - \\[TRANSFORMATIONAL\\] Reduction with exclusive __OR__()"
msgstr ""

#: ../../source/learn/intrinsics/_pages/PARITY.md:17
msgid "where KIND and LKIND are any supported kind for the type."
msgstr ""

#: ../../source/learn/intrinsics/_pages/NULL.md:2
msgid "null"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NULL.md:5
msgid ""
"__null__(3) - \\[TRANSFORMATIONAL\\] Function that returns a "
"disassociated pointer"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NULL.md:15
msgid "Returns a disassociated pointer."
msgstr ""

#: ../../source/learn/intrinsics/_pages/NULL.md:17
msgid ""
"If __mold__ is present, a disassociated pointer of the same type is "
"returned, otherwise the type is determined by context."
msgstr ""

#: ../../source/learn/intrinsics/_pages/NULL.md:20
msgid ""
"In _Fortran 95_, __mold__ is optional. Please note that _Fortran 2003_ "
"includes cases where it is required."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXTENDS_TYPE_OF.md:23
#: ../../source/learn/intrinsics/_pages/NULL.md:24
#: ../../source/learn/intrinsics/_pages/TRANSFER.md:26
#, fuzzy
msgid "__mold__"
msgstr "__mold__"

#: ../../source/learn/intrinsics/_pages/NULL.md:25
msgid "(Optional) shall be a pointer of any association status and of any type."
msgstr ""

#: ../../source/learn/intrinsics/_pages/NULL.md:30
msgid "A disassociated pointer or an unallocated allocatable entity."
msgstr ""

#: ../../source/learn/intrinsics/_pages/NULL.md:116
msgid "[__associated__(3)](ASSOCIATED)"
msgstr ""

#: ../../source/learn/intrinsics/parallel/index.md:1
msgid "Parallel programming using co\\_arrays and co\\_indexed arrays"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_BROADCAST.md:2
msgid "co\\_broadcast"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_BROADCAST.md:5
msgid ""
"__co\\_broadcast__(3) - \\[COLLECTIVE\\] Copy a value to all images the "
"current set of images"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_BROADCAST.md:14
msgid ""
"__co\\_broadcast(3)__ copies the value of argument __a__ on the image "
"with image index source\\_image to all images in the current team. __a__ "
"becomes defined as if by intrinsic assignment. If the execution was "
"successful and __stat__ is present, it is assigned the value zero. If the"
" execution failed, __stat__ gets assigned a nonzero value and, if "
"present, __errmsg__ gets assigned a value describing the occurred error."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_BROADCAST.md:24
msgid ""
"__intent(inout)__ argument; shall have the same dynamic type and type "
"parameters on all images of the current team. If it is an array, it shall"
" have the same shape on all images."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_BROADCAST.md:28
msgid "__source\\_image__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_BROADCAST.md:29
msgid ""
"a scalar integer expression. It shall have the same the same value on all"
" images and refer to an image of the current team."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_ADD.md:31
#: ../../source/learn/intrinsics/_pages/ATOMIC_AND.md:32
#: ../../source/learn/intrinsics/_pages/ATOMIC_CAS.md:41
#: ../../source/learn/intrinsics/_pages/ATOMIC_DEFINE.md:38
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_ADD.md:36
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_AND.md:36
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_OR.md:36
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_XOR.md:36
#: ../../source/learn/intrinsics/_pages/ATOMIC_OR.md:32
#: ../../source/learn/intrinsics/_pages/ATOMIC_REF.md:33
#: ../../source/learn/intrinsics/_pages/ATOMIC_XOR.md:32
#: ../../source/learn/intrinsics/_pages/CO_BROADCAST.md:32
#: ../../source/learn/intrinsics/_pages/CO_MAX.md:34
#: ../../source/learn/intrinsics/_pages/CO_MIN.md:34
#: ../../source/learn/intrinsics/_pages/CO_REDUCE.md:51
#: ../../source/learn/intrinsics/_pages/CO_SUM.md:34
#: ../../source/learn/intrinsics/_pages/EVENT_QUERY.md:30
msgid "__stat__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_BROADCAST.md:33
#: ../../source/learn/intrinsics/_pages/CO_MAX.md:35
#: ../../source/learn/intrinsics/_pages/CO_MIN.md:35
#: ../../source/learn/intrinsics/_pages/CO_REDUCE.md:52
#: ../../source/learn/intrinsics/_pages/CO_SUM.md:35
msgid "(optional) a scalar integer variable"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_BROADCAST.md:35
#: ../../source/learn/intrinsics/_pages/CO_MAX.md:37
#: ../../source/learn/intrinsics/_pages/CO_MIN.md:37
#: ../../source/learn/intrinsics/_pages/CO_REDUCE.md:54
#: ../../source/learn/intrinsics/_pages/CO_SUM.md:37
msgid "__errmsg__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_BROADCAST.md:36
#: ../../source/learn/intrinsics/_pages/CO_MAX.md:38
#: ../../source/learn/intrinsics/_pages/CO_MIN.md:38
#: ../../source/learn/intrinsics/_pages/CO_REDUCE.md:55
#: ../../source/learn/intrinsics/_pages/CO_SUM.md:38
msgid "(optional) a scalar character variable"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_BROADCAST.md:56
msgid ""
"[__co\\_max__(3)](CO_MAX), [__co\\_min__(3)](CO_MIN), "
"[__co\\_sum__(3)](CO_SUM), [__co\\_reduce__(3)](CO_REDUCE)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_LBOUND.md:2
msgid "co\\_lbound"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_LBOUND.md:5
msgid "__co\\_lbound__(3) - \\[COLLECTIVE\\] Lower codimension bounds of an array"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_LBOUND.md:14
msgid ""
"Returns the lower bounds of a coarray, or a single lower cobound along "
"the __dim__ codimension."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_LBOUND.md:20
#: ../../source/learn/intrinsics/_pages/CO_UBOUND.md:20
msgid "Shall be an coarray, of any type."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_LBOUND.md:31
#: ../../source/learn/intrinsics/_pages/CO_UBOUND.md:31
msgid ""
"The return value is of type _integer_ and of kind __kind__. If __kind__ "
"is absent, the return value is of default integer kind. If __dim__ is "
"absent, the result is an array of the lower cobounds of __coarray__. If "
"__dim__ is present, the result is a scalar corresponding to the lower "
"cobound of the array along that codimension."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_LBOUND.md:43
msgid "[__co\\_ubound__(3)](CO_UBOUND), [__lbound__(3)](LBOUND)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_MAX.md:2
msgid "co\\_max"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_MAX.md:5
msgid ""
"__co\\_max__(3) - \\[COLLECTIVE\\] Maximal value on the current set of "
"images"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_MAX.md:14
msgid ""
"co\\_max determines element-wise the maximal value of __a__ on all images"
" of the current team. If result\\_image is present, the maximum values "
"are returned in __a__ on the specified image only and the value of __a__ "
"on the other images become undefined. If result\\_image is not present, "
"the value is returned on all images. If the execution was successful and "
"__stat__ is present, it is assigned the value zero. If the execution "
"failed, __stat__ gets assigned a nonzero value and, if present, "
"__errmsg__ gets assigned a value describing the occurred error."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_MAX.md:26
#: ../../source/learn/intrinsics/_pages/CO_MIN.md:26
msgid ""
"shall be an integer, real or character variable, which has the same type "
"and type parameters on all images of the team."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_MAX.md:29
#: ../../source/learn/intrinsics/_pages/CO_MIN.md:29
#: ../../source/learn/intrinsics/_pages/CO_SUM.md:29
msgid "__result\\_image__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_MAX.md:30
#: ../../source/learn/intrinsics/_pages/CO_MIN.md:30
#: ../../source/learn/intrinsics/_pages/CO_REDUCE.md:47
#: ../../source/learn/intrinsics/_pages/CO_SUM.md:30
msgid ""
"(optional) a scalar integer expression; if present, it shall have the "
"same the same value on all images and refer to an image of the current "
"team."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_ADD.md:49
#: ../../source/learn/intrinsics/_pages/ATOMIC_AND.md:49
#: ../../source/learn/intrinsics/_pages/ATOMIC_CAS.md:59
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_ADD.md:54
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_AND.md:54
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_OR.md:54
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_XOR.md:54
#: ../../source/learn/intrinsics/_pages/ATOMIC_OR.md:50
#: ../../source/learn/intrinsics/_pages/ATOMIC_XOR.md:50
#: ../../source/learn/intrinsics/_pages/CO_MAX.md:62
#: ../../source/learn/intrinsics/_pages/CO_MIN.md:58
#: ../../source/learn/intrinsics/_pages/CO_REDUCE.md:92
#: ../../source/learn/intrinsics/_pages/CO_SUM.md:63
#: ../../source/learn/intrinsics/_pages/EVENT_QUERY.md:54
msgid "TS 18508 or later"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_MAX.md:66
msgid ""
"[__co\\_min__(3)](CO_MIN), [__co\\_sum__(3)](CO_SUM), "
"[__co\\_reduce__(3)](CO_REDUCE), [__co\\_broadcast__(3)](CO_BROADCAST)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_MIN.md:2
msgid "co\\_min"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_MIN.md:5
msgid ""
"__co\\_min__(3) - \\[COLLECTIVE\\] Minimal value on the current set of "
"images"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_MIN.md:14
msgid ""
"co\\_min determines element-wise the minimal value of __a__ on all images"
" of the current team. If result\\_image is present, the minimal values "
"are returned in __a__ on the specified image only and the value of __a__ "
"on the other images become undefined. If result\\_image is not present, "
"the value is returned on all images. If the execution was successful and "
"__stat__ is present, it is assigned the value zero. If the execution "
"failed, __stat__ gets assigned a nonzero value and, if present, "
"__errmsg__ gets assigned a value describing the occurred error."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_MIN.md:62
msgid ""
"[__co\\_max__(3)](CO_MAX), [__co\\_sum__(3)](CO_SUM), "
"[__co\\_reduce__(3)](CO_REDUCE), [__co\\_broadcast__(3)](CO_BROADCAST)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_REDUCE.md:2
msgid "co\\_reduce"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_REDUCE.md:5
msgid ""
"__co\\_reduce__(3) - \\[COLLECTIVE\\] Reduction of values on the current "
"set of images"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_REDUCE.md:14
msgid ""
"co\\_reduce determines element-wise the reduction of the value of __a__ "
"on all images of the current team. The pure function passed as "
"__operation__ is used to pairwise reduce the values of __a__ by passing "
"either the value of __a__ of different images or the result values of "
"such a reduction as argument. If __a__ is an array, the reduction is done"
" element wise. If result\\_image is present, the result values are "
"returned in __a__ on the specified image only and the value of __a__ on "
"the other images become undefined. If result\\_image is not present, the "
"value is returned on all images. If the execution was successful and "
"__stat__ is present, it is assigned the value zero. If the execution "
"failed, __stat__ gets assigned a nonzero value and, if present, "
"__errmsg__ gets assigned a value describing the occurred error."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_REDUCE.md:30
msgid ""
"is an __intent(inout)__ argument and shall be nonpolymorphic. If it is "
"allocatable, it shall be allocated; if it is a pointer, it shall be "
"associated. __a__ shall have the same type and type parameters on all "
"images of the team; if it is an array, it shall have the same shape on "
"all images."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_REDUCE.md:36
msgid "__operation__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_REDUCE.md:37
msgid ""
"pure function with two scalar nonallocatable arguments, which shall be "
"nonpolymorphic and have the same type and type parameters as __a__. The "
"function shall return a nonallocatable scalar of the same type and type "
"parameters as __a__. The function shall be the same on all images and "
"with regards to the arguments mathematically commutative and associative."
" Note that OPERATION may not be an elemental"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_REDUCE.md:44
msgid "__function, unless it is an intrinsic function.__ result\\_image"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_REDUCE.md:85
msgid ""
"While the rules permit in principle an intrinsic function, none of the "
"intrinsics in the standard fulfill the criteria of having a specific "
"function, which takes two arguments of the same type and returning that "
"type as a result."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_REDUCE.md:96
msgid ""
"[__co\\_min__(3)](CO_MIN), [__co\\_max__(3)](CO_MAX), "
"[__co\\_sum__(3)](CO_SUM), [__co\\_broadcast__(3)](CO_BROADCAST)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_SUM.md:2
msgid "co\\_sum"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_SUM.md:5
msgid ""
"__co\\_sum__(3) - \\[COLLECTIVE\\] Sum of values on the current set of "
"images"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_SUM.md:14
msgid ""
"co\\_sum sums up the values of each element of __a__ on all images of the"
" current team. If result\\_image is present, the summed-up values are "
"returned in __a__ on the specified image only and the value of __a__ on "
"the other images become undefined. If result\\_image is not present, the "
"value is returned on all images. If the execution was successful and "
"__stat__ is present, it is assigned the value zero. If the execution "
"failed, __stat__ gets assigned a nonzero value and, if present, "
"__errmsg__ gets assigned a value describing the occurred error."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_SUM.md:26
msgid ""
"shall be an integer, real or complex variable, which has the same type "
"and type parameters on all images of the team."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_SUM.md:67
msgid ""
"[__co\\_max__(3)](CO_MAX), [__co\\_min__(3)](CO_MIN), "
"[__co\\_reduce__(3)](CO_REDUCE), [__co\\_broadcast__(3)](CO_BROADCAST)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_UBOUND.md:2
msgid "co\\_ubound"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_UBOUND.md:5
msgid "__co\\_ubound__(3) - \\[COLLECTIVE\\] Upper codimension bounds of an array"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_UBOUND.md:14
msgid ""
"Returns the upper cobounds of a coarray, or a single upper cobound along "
"the __dim__ codimension."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CO_UBOUND.md:43
msgid ""
"[__co\\_lbound__(3)](CO_LBOUND), [__lbound__(3)](LBOUND), "
"[__ubound__(3)](UBOUND)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EVENT_QUERY.md:2
msgid "event\\_query"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EVENT_QUERY.md:5
msgid ""
"__event\\_query__(3) - \\[COLLECTIVE\\] Query whether a coarray event has"
" occurred"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EVENT_QUERY.md:14
msgid ""
"__event\\_query__ assigns the number of events to __count__ which have "
"been posted to the __event__ variable and not yet been removed by calling"
" __event\\_wait__. When __stat__ is present and the invocation was "
"successful, it is assigned the value __0__. If it is present and the "
"invocation has failed, it is assigned a positive value and __count__ is "
"assigned the value __-1__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EVENT_QUERY.md:22
msgid "__event__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EVENT_QUERY.md:23
msgid ""
"(intent(in)) Scalar of type event\\_type, defined in iso\\_fortran\\_env;"
" shall not be coindexed."
msgstr ""

#: ../../source/learn/intrinsics/_pages/COMMAND_ARGUMENT_COUNT.md:25
#: ../../source/learn/intrinsics/_pages/EVENT_QUERY.md:26
#: ../../source/learn/intrinsics/_pages/SYSTEM_CLOCK.md:42
msgid "__count__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EVENT_QUERY.md:27
msgid ""
"(intent(out))Scalar integer with at least the precision of default "
"_integer_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EVENT_QUERY.md:31
msgid "(OPTIONAL) Scalar default-kind _integer_ variable."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IMAGE_INDEX.md:2
msgid "image\\_index"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IMAGE_INDEX.md:5
msgid ""
"__image\\_index__(3) - \\[COLLECTIVE\\] Cosubscript to image index "
"conversion"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IMAGE_INDEX.md:14
msgid "Returns the image index belonging to a cosubscript."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IMAGE_INDEX.md:18
#: ../../source/learn/intrinsics/_pages/THIS_IMAGE.md:23
msgid "__coarray__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IMAGE_INDEX.md:19
msgid "Coarray of any type."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IMAGE_INDEX.md:21
msgid "__sub__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IMAGE_INDEX.md:22
msgid "default integer rank-1 array of a size equal to the corank of __coarray__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IMAGE_INDEX.md:27
msgid ""
"Scalar default integer with the value of the image index which "
"corresponds to the cosubscripts. For invalid cosubscripts the result is "
"zero."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IMAGE_INDEX.md:50
msgid "[__this\\_image__(3)](THIS_IMAGE), [__num\\_images__(3)](NUM_IMAGES)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NUM_IMAGES.md:2
msgid "num\\_images"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NUM_IMAGES.md:5
msgid "__num\\_images__(3) - \\[COLLECTIVE\\] Number of images"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NUM_IMAGES.md:14
msgid "Returns the number of images."
msgstr ""

#: ../../source/learn/intrinsics/_pages/NUM_IMAGES.md:18
#: ../../source/learn/intrinsics/_pages/THIS_IMAGE.md:19
msgid "__distance__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NUM_IMAGES.md:19
msgid "(optional, __intent(in)__) Nonnegative scalar integer"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NUM_IMAGES.md:21
msgid "__failed__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NUM_IMAGES.md:22
msgid "(optional, __intent(in)__) Scalar logical expression"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NUM_IMAGES.md:26
msgid ""
"Scalar default-kind _integer_. If __distance__ is not present or has "
"value 0, the number of images in the current team is returned. For values"
" smaller or equal distance to the initial team, it returns the number of "
"images index on the ancestor team which has a distance of __distance__ "
"from the invoking team. If __distance__ is larger than the distance to "
"the initial team, the number of images of the initial team is returned. "
"If __failed__ is not present the total number of images is returned; if "
"it has the value .true., the number of failed images is returned, "
"otherwise, the number of images which do have not the failed status."
msgstr ""

#: ../../source/learn/intrinsics/_pages/NUM_IMAGES.md:59
msgid ""
"Fortran 2008 and later. With DISTANCE or FAILED argument, TS 18508 or "
"later"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NUM_IMAGES.md:63
msgid "[__this\\_image__(3)](THIS_IMAGE), [__image\\_index__(3)](THIS_INDEX)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/THIS_IMAGE.md:2
msgid "this\\_image"
msgstr ""

#: ../../source/learn/intrinsics/_pages/THIS_IMAGE.md:5
msgid "__this\\_image__(3) - \\[COLLECTIVE\\] Cosubscript index of this image"
msgstr ""

#: ../../source/learn/intrinsics/_pages/THIS_IMAGE.md:15
msgid "Returns the cosubscript for this image."
msgstr ""

#: ../../source/learn/intrinsics/_pages/THIS_IMAGE.md:20
msgid ""
"(optional, __intent(in)__) Nonnegative scalar integer (not permitted "
"together with __coarray__)."
msgstr ""

#: ../../source/learn/intrinsics/_pages/THIS_IMAGE.md:24
msgid "Coarray of any type (optional; if __dim__ present, required)."
msgstr ""

#: ../../source/learn/intrinsics/_pages/THIS_IMAGE.md:27
msgid ""
"default integer scalar (optional). If present, __dim__ shall be between "
"one and the corank of __coarray__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/THIS_IMAGE.md:32
msgid ""
"Default integer. If __coarray__ is not present, it is scalar; if "
"__distance__ is not present or has value __0__, its value is the image "
"index on the invoking image for the current team, for values smaller or "
"equal distance to the initial team, it returns the image index on the "
"ancestor team which has a distance of __distance__ from the invoking "
"team. If __distance__ is larger than the distance to the initial team, "
"the image index of the initial team is returned. Otherwise when the "
"__coarray__ is present, if __dim__ is not present, a rank-1 array with "
"corank elements is returned, containing the cosubscripts for __coarray__ "
"specifying the invoking image. If __dim__ is present, a scalar is "
"returned, with the value of the __dim__ element of "
"__this\\_image(coarray)__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/THIS_IMAGE.md:66
msgid ""
"! ! Check whether the current image is the initial image if "
"(this_image(huge(1)) /= this_image()) error stop \"something is rotten "
"here\""
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_AND.md:2
msgid "atomic\\_and"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_AND.md:5
msgid ""
"__atomic\\_and__(3) - \\[ATOMIC:BIT MANIPULATION\\] Atomic bitwise AND "
"operation"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_AND.md:14
msgid ""
"__atomic\\_and(atom, value)__ atomically defines __atom__ with the "
"bitwise __and__ between the values of __atom__ and __value__. When "
"__stat__ is present and the invocation was successful, it is assigned the"
" value 0. If it is present and the invocation has failed, it is assigned "
"a positive value; in particular, for a coindexed __atom__, if the remote "
"image has stopped, it is assigned the value of iso\\_fortran\\_env's "
"stat\\_stopped\\_image and if the remote image has failed, the value "
"stat\\_failed\\_image."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_ADD.md:23
#: ../../source/learn/intrinsics/_pages/ATOMIC_AND.md:24
#: ../../source/learn/intrinsics/_pages/ATOMIC_CAS.md:26
#: ../../source/learn/intrinsics/_pages/ATOMIC_DEFINE.md:29
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_ADD.md:25
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_AND.md:25
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_OR.md:25
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_XOR.md:25
#: ../../source/learn/intrinsics/_pages/ATOMIC_OR.md:24
#: ../../source/learn/intrinsics/_pages/ATOMIC_REF.md:28
#: ../../source/learn/intrinsics/_pages/ATOMIC_XOR.md:24
msgid "__atom__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_ADD.md:24
#: ../../source/learn/intrinsics/_pages/ATOMIC_AND.md:25
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_AND.md:26
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_OR.md:26
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_XOR.md:26
#: ../../source/learn/intrinsics/_pages/ATOMIC_OR.md:25
#: ../../source/learn/intrinsics/_pages/ATOMIC_XOR.md:25
msgid ""
"Scalar coarray or coindexed variable of integer type with "
"atomic\\_int\\_kind kind."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_ADD.md:28
#: ../../source/learn/intrinsics/_pages/ATOMIC_AND.md:29
#: ../../source/learn/intrinsics/_pages/ATOMIC_DEFINE.md:35
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_ADD.md:30
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_AND.md:30
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_OR.md:30
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_XOR.md:30
#: ../../source/learn/intrinsics/_pages/ATOMIC_OR.md:29
#: ../../source/learn/intrinsics/_pages/ATOMIC_REF.md:25
#: ../../source/learn/intrinsics/_pages/ATOMIC_XOR.md:29
msgid ""
"Scalar of the same type as __atom__. If the kind is different, the value "
"is converted to the kind of __atom__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_ADD.md:32
#: ../../source/learn/intrinsics/_pages/ATOMIC_AND.md:33
#: ../../source/learn/intrinsics/_pages/ATOMIC_CAS.md:42
#: ../../source/learn/intrinsics/_pages/ATOMIC_DEFINE.md:39
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_ADD.md:37
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_AND.md:37
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_OR.md:37
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_XOR.md:37
#: ../../source/learn/intrinsics/_pages/ATOMIC_OR.md:33
#: ../../source/learn/intrinsics/_pages/ATOMIC_REF.md:34
#: ../../source/learn/intrinsics/_pages/ATOMIC_XOR.md:33
msgid "(optional) Scalar default-kind integer variable."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_AND.md:53
msgid ""
"[__atomic\\_fetch\\_and__(3)](ATOMIC_FETCH_AND), "
"[__atomic\\_define__(3)](ATOMIC_DEFINE), "
"[__atomic\\_ref__(3)](ATOMIC_REF), [__atomic\\_cas__(3)](ATOMIC_CAS), "
"__iso\\_fortran\\_env__(3), [__atomic\\_add__(3)](ATOMIC_ADD), "
"[__atomic\\_or__(3)](ATOMIC_OR), [__atomic\\_xor__(3)](ATOMIC_XOR)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_AND.md:2
msgid "atomic\\_fetch\\_and"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_AND.md:5
msgid ""
"__atomic\\_fetch\\_and__(3) - \\[ATOMIC:BIT MANIPULATION\\] Atomic "
"bitwise AND operation with prior fetch"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_AND.md:14
msgid ""
"__atomic\\_fetch\\_and(atom, value, old)__ atomically stores the value of"
" __atom__ in __old__ and defines __atom__ with the bitwise AND between "
"the values of __atom__ and __value__. When __stat__ is present and the "
"invocation was successful, it is assigned the value __0__. If it is "
"present and the invocation has failed, it is assigned a positive value; "
"in particular, for a coindexed __atom__, if the remote image has stopped,"
" it is assigned the value of iso\\_fortran\\_env's stat\\_stopped\\_image"
" and if the remote image has failed, the value stat\\_failed\\_image."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_CAS.md:31
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_ADD.md:33
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_AND.md:33
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_OR.md:33
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_XOR.md:33
msgid "__old__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_CAS.md:32
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_ADD.md:34
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_AND.md:34
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_OR.md:34
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_XOR.md:34
msgid "Scalar of the same type and kind as __atom__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_AND.md:58
msgid ""
"[__atomic\\_define__(3)](ATOMIC_DEFINE), "
"[__atomic\\_and__(3)](ATOMIC_AND), [__iso\\_fortran\\_env__(3)](),"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_AND.md:62
msgid ""
"[__atomic\\_fetch\\_add__(3)](ATOMIC_FETCH_ADD), "
"[__atomic\\_fetch\\_or__(3)](ATOMIC_FETCH_OR),"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_ADD.md:65
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_AND.md:65
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_OR.md:65
msgid "[__atomic\\_fetch\\_xor__(3)](ATOMIC_FETCH_XOR)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_OR.md:2
msgid "atomic\\_fetch\\_or"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_OR.md:5
msgid ""
"__atomic\\_fetch\\_or__(3) - \\[ATOMIC:BIT MANIPULATION\\] Atomic bitwise"
" OR operation with prior fetch"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_OR.md:14
msgid ""
"__atomic\\_fetch\\_or(atom, value, old)__ atomically stores the value of "
"__atom__ in __old__ and defines __atom__ with the bitwise OR between the "
"values of __atom__ and __value__. When __stat__ is present and the "
"invocation was successful, it is assigned the value __0__. If it is "
"present and the invocation has failed, it is assigned a positive value; "
"in particular, for a coindexed __atom__, if the remote image has stopped,"
" it is assigned the value of iso\\_fortran\\_env's stat\\_stopped\\_image"
" and if the remote image has failed, the value stat\\_failed\\_image."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_OR.md:58
msgid ""
"[__atomic\\_define__(3)](ATOMIC_DEFINE), [__atomic\\_or__(3)](ATOMIC_OR),"
" [__iso\\_fortran\\_env__(3)](),"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_OR.md:62
#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_XOR.md:62
msgid ""
"[__atomic\\_fetch\\_add__(3)](ATOMIC_FETCH_ADD), "
"[__atomic\\_fetch\\_and__(3)](ATOMIC_FETCH_AND),"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_XOR.md:2
msgid "atomic\\_fetch\\_xor"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_XOR.md:5
msgid ""
"__atomic\\_fetch\\_xor__(3) - \\[ATOMIC:BIT MANIPULATION\\] Atomic "
"bitwise XOR operation with prior fetch"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_XOR.md:14
msgid ""
"__atomic\\_fetch\\_xor(atom, value, old)__ atomically stores the value of"
" __atom__ in __old__ and defines __atom__ with the bitwise __xor__ "
"between the values of __atom__ and __value__. When __stat__ is present "
"and the invocation was successful, it is assigned the value __0__. If it "
"is present and the invocation has failed, it is assigned a positive "
"value; in particular, for a coindexed __atom__, if the remote image has "
"stopped, it is assigned the value of iso\\_fortran\\_env's "
"stat\\_stopped\\_image and if the remote image has failed, the value "
"stat\\_failed\\_image."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_XOR.md:58
msgid ""
"[__atomic\\_define__(3)](ATOMIC_DEFINE), "
"[__atomic\\_xor__(3)](ATOMIC_XOR), [__iso\\_fortran\\_env__(3)](),"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_XOR.md:65
msgid "[__atomic\\_fetch\\_or__(3)](ATOMIC_FETCH_OR)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_OR.md:2
msgid "atomic\\_or"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_OR.md:5
msgid ""
"__atomic\\_or__(3) - \\[ATOMIC:BIT MANIPULATION\\] Atomic bitwise OR "
"operation"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_OR.md:14
msgid ""
"__atomic\\_or(atom, value)__ atomically defines __atom__ with the bitwise"
" __or__ between the values of __atom__ and __value__. When __stat__ is "
"present and the invocation was successful, it is assigned the value "
"__0__. If it is present and the invocation has failed, it is assigned a "
"positive value; in particular, for a coindexed __atom__, if the remote "
"image has stopped, it is assigned the value of iso\\_fortran\\_env's "
"stat\\_stopped\\_image and if the remote image has failed, the value "
"stat\\_failed\\_image."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_OR.md:54
msgid ""
"[__atomic\\_define__(3)](ATOMIC_DEFINE), "
"[__atomic\\_fetch\\_or__(3)](ATOMIC_FETCH),"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_OR.md:57
msgid ""
"[__iso\\_fortran\\_env__(3)](), [__atomic\\_add__(3)](ATOMIC_ADD), "
"[__atomic\\_or__(3)](ATOMIC_OR),"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_OR.md:61
msgid "[__atomic\\_xor__(3)](ATOMIC_XOR)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_XOR.md:2
msgid "atomic\\_xor"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_XOR.md:5
msgid ""
"__atomic\\_xor__(3) - \\[ATOMIC:BIT MANIPULATION\\] Atomic bitwise OR "
"operation"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_XOR.md:14
msgid ""
"__atomic\\_xor(atom, value)__ atomically defines __atom__ with the "
"bitwise __xor__ between the values of __atom__ and __value__. When "
"__stat__ is present and the invocation was successful, it is assigned the"
" value __0__. If it is present and the invocation has failed, it is "
"assigned a positive value; in particular, for a coindexed __atom__, if "
"the remote image has stopped, it is assigned the value of "
"iso\\_fortran\\_env's stat\\_stopped\\_image and if the remote image has "
"failed, the value stat\\_failed\\_image."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_XOR.md:54
msgid ""
"[__atomic\\_define__(3)](ATOMIC_DEFINE), "
"[__atomic\\_fetch\\_xor__(3)](ATOMIC_FETCH), "
"[__iso\\_fortran\\_env__(3)](), [__atomic\\_add__(3)](ATOMIC_ADD), "
"[__atomic\\_or__(3)](ATOMIC_OR), [__atomic\\_xor__(3)](ATOMIC_XOR)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_ADD.md:2
msgid "atomic\\_add"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_ADD.md:5
msgid "__atomic\\_add__(3) - \\[ATOMIC\\] Atomic ADD operation"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_ADD.md:13
msgid ""
"__atomic\\_ad(atom, value)__ atomically adds the value of VAR to the "
"variable __atom__. When __stat__ is present and the invocation was "
"successful, it is assigned the value 0. If it is present and the "
"invocation has failed, it is assigned a positive value; in particular, "
"for a coindexed ATOM, if the remote image has stopped, it is assigned the"
" value of iso\\_fortran\\_env's stat\\_stopped\\_image and if the remote "
"image has failed, the value stat\\_failed\\_image."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_ADD.md:53
msgid ""
"[__atomic\\_define__(3)](ATOMIC_DEFINE), "
"[__atomic\\_fetch\\_add__(3)](ATOMIC_FETCH), "
"[__atomic\\_and__(3)](ATOMIC_AND), [__atomic\\_or__(3)](ATOMIC_OR), "
"[__atomic\\_xor__(3)](ATOMIC_XOR) __iso\\_fortran\\_env__(3),"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_CAS.md:2
msgid "atomic\\_cas"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_CAS.md:5
msgid "__atomic\\_cas__(3) - \\[ATOMIC\\] Atomic compare and swap"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_CAS.md:14
msgid ""
"atomic\\_cas compares the variable __atom__ with the value of "
"__compare__; if the value is the same, __atom__ is set to the value of "
"__new__. Additionally, __old__ is set to the value of __atom__ that was "
"used for the comparison. When __stat__ is present and the invocation was "
"successful, it is assigned the value 0. If it is present and the "
"invocation has failed, it is assigned a positive value; in particular, "
"for a coindexed __atom__, if the remote image has stopped, it is assigned"
" the value of iso\\_fortran\\_env's stat\\_stopped\\_image and if the "
"remote image has failed, the value stat\\_failed\\_image."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_CAS.md:27
#: ../../source/learn/intrinsics/_pages/ATOMIC_DEFINE.md:30
#: ../../source/learn/intrinsics/_pages/ATOMIC_REF.md:29
msgid ""
"Scalar coarray or coindexed variable of either integer type with "
"atomic\\_int\\_kind kind or logical type with atomic\\_logical\\_kind "
"kind."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_CAS.md:34
msgid "__compare__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_CAS.md:35
msgid "Scalar variable of the same type and kind as __atom__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_CAS.md:37
msgid "__new__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_CAS.md:38
msgid ""
"Scalar variable of the same type as __atom__. If kind is different, the "
"value is converted to the kind of __atom__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_CAS.md:63
msgid ""
"[__atomic\\_define__(3)](ATOMIC_DEFINE), "
"[__atomic\\_ref__(3)](ATOMIC_REF), [__iso\\_fortran\\_env__(3)]()"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_DEFINE.md:2
msgid "atomic\\_define"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_DEFINE.md:5
msgid "__atomic\\_define__(3) - \\[ATOMIC\\] Setting a variable atomically"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_DEFINE.md:19
msgid ""
"__atomic\\_define(atom, value)__ defines the variable __atom__ with the "
"value __value__ atomically. When __stat__ is present and the invocation "
"was successful, it is assigned the value __0__. If it is present and the "
"invocation has failed, it is assigned a positive value; in particular, "
"for a coindexed __atom__, if the remote image has stopped, it is assigned"
" the value of iso\\_fortran\\_env's stat\\_stopped\\_image and if the "
"remote image has failed, the value stat\\_failed\\_image."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_DEFINE.md:55
msgid "Fortran 2008 and later; with __stat__, TS 18508 or later"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_DEFINE.md:59
msgid ""
"[__atomic\\_ref__(3)](ATOMIC_REF), [__atomic\\_cas__(3)](ATOMIC_CAS), "
"__iso\\_fortran\\_env__(3), [__atomic\\_add__(3)](ATOMIC_ADD), "
"[__atomic\\_and__(3)](ATOMIC_AND), [__atomic\\_or__(3)](ATOMIC_OR), "
"[__atomic\\_xor__(3)](ATOMIC_XOR)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_ADD.md:2
msgid "atomic\\_fetch\\_add"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_ADD.md:5
msgid ""
"__atomic\\_fetch\\_add__(3) - \\[ATOMIC\\] Atomic ADD operation with "
"prior fetch"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_ADD.md:14
msgid ""
"__atomic\\_fetch\\_add(atom, value, old)__ atomically stores the value of"
" __atom__ in __old__ and adds the value of __var__ to the variable "
"__atom__. When __stat__ is present and the invocation was successful, it "
"is assigned the value __0__. If it is present and the invocation has "
"failed, it is assigned a positive value; in particular, for a coindexed "
"__atom__, if the remote image has stopped, it is assigned the value of "
"iso\\_fortran\\_env's stat\\_stopped\\_image and if the remote image has "
"failed, the value stat\\_failed\\_image."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_ADD.md:26
msgid ""
"Scalar coarray or coindexed variable of integer type with "
"atomic\\_int\\_kind kind. atomic\\_logical\\_kind kind."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_ADD.md:58
msgid ""
"[__atomic\\_define__(3)](ATOMIC_DEFINE), "
"[__atomic\\_add__(3)](ATOMIC_ADD), __iso\\_fortran\\_env__(3),"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_FETCH_ADD.md:62
msgid ""
"[__atomic\\_fetch\\_and__(3)](ATOMIC_FETCH_AND), "
"[__atomic\\_fetch\\_or__(3)](ATOMIC_FETCH_OR),"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_REF.md:2
msgid "atomic\\_ref"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_REF.md:5
msgid ""
"__atomic\\_ref__(3) - \\[ATOMIC\\] Obtaining the value of a variable "
"atomically"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_REF.md:14
msgid ""
"__atomic\\_ref(value, atom)__ atomically assigns the value of the "
"variable __atom__ to __value__. When __stat__ is present and the "
"invocation was successful, it is assigned the value __0__. If it is "
"present and the invocation has failed, it is assigned a positive value; "
"in particular, for a coindexed __atom__, if the remote image has stopped,"
" it is assigned the value of iso\\_fortran\\_env's "
"__stat\\_stopped\\_image__ and if the remote image has failed, the value "
"__stat\\_failed\\_image__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_REF.md:57
msgid "Fortran 2008 and later; with STAT, TS 18508 or later"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_REF.md:61
msgid ""
"[__atomic\\_define__(3)](ATOMIC_DEFINE), "
"[__atomic\\_cas__(3)](ATOMIC_CAS), [__iso\\_fortran\\_env__(3)](),"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_REF.md:65
msgid ""
"[__atomic\\_fetch\\_add__(3)](ATOMIC_ADD), "
"[__atomic\\_fetch\\_and__(3)](ATOMIC_AND),"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ATOMIC_REF.md:68
msgid ""
"[__atomic\\_fetch\\_or__(3)](ATOMIC_OR), "
"[__atomic\\_fetch\\_xor__(3)](ATOMIC_XOR)"
msgstr ""

#: ../../source/learn/intrinsics/state/index.md:1
msgid "General and miscellaneous intrinsics"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASSOCIATED.md:2
msgid "associated"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASSOCIATED.md:5
msgid "__associated__(3) - \\[STATE\\] Status of a pointer or pointer/target pair"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASSOCIATED.md:14
msgid ""
"__associated(pointer \\[, target\\])__ determines the status of the "
"pointer __pointer__ or if __pointer__ is associated with the target "
"__target__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASSOCIATED.md:19
msgid "__pointer__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASSOCIATED.md:20
msgid "__pointer__ shall have the _pointer_ attribute and it can be of any type."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASSOCIATED.md:22
msgid "__target__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASSOCIATED.md:23
msgid ""
"(Optional) __target__ shall be a pointer or a target. It must have the "
"same type, kind type parameter, and array rank as __pointer__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASSOCIATED.md:26
msgid ""
"The association status of neither __pointer__ nor __target__ shall be "
"undefined."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASSOCIATED.md:30
msgid ""
"__associated(pointer)__ returns a scalar value of type _logical_. There "
"are several cases:"
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASSOCIATED.md:33
msgid ""
"When the optional __target__ is not present then __associated(pointer)__ "
"is true if __pointer__ is associated with a target; otherwise, it returns"
" false."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASSOCIATED.md:37
msgid ""
"If __target__ is present and a scalar target, the result is true if "
"__target__ is not a zero-sized storage sequence and the target associated"
" with __pointer__ occupies the same storage units. If __pointer__ is "
"disassociated, the result is false."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASSOCIATED.md:42
msgid ""
"If __target__ is present and an array target, the result is true if "
"__target__ and __pointer__ have the same shape, are not zero-sized "
"arrays, are arrays whose elements are not zero-sized storage sequences, "
"and __target__ and __pointer__ occupy the same storage units in array "
"element order."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASSOCIATED.md:48
msgid "As in case 2, the result is false, if __pointer__ is disassociated."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASSOCIATED.md:50
msgid ""
"If __target__ is present and an scalar pointer, the result is true if "
"__target__ is associated with __pointer__, the target associated with "
"__target__ are not zero-sized storage sequences and occupy the same "
"storage units."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASSOCIATED.md:55
msgid ""
"The result is __.false.__, if either __target__ or __pointer__ is "
"disassociated."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASSOCIATED.md:57
msgid ""
"If __target__ is present and an array pointer, the result is true if "
"target associated with __pointer__ and the target associated with "
"__target__ have the same shape, are not zero-sized arrays, are arrays "
"whose elements are not zero-sized storage sequences, and __target__ and "
"__pointer__ occupy the same storage units in array element order. The "
"result is false, if either __target__ or __pointer__ is disassociated."
msgstr ""

#: ../../source/learn/intrinsics/_pages/ASSOCIATED.md:86
msgid "[__null__(3)](NULL)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXTENDS_TYPE_OF.md:2
msgid "extends\\_type\\_of"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXTENDS_TYPE_OF.md:5
msgid ""
"__extends\\_type\\_of__(3) - \\[STATE\\] determine if the dynamic type of"
" __a__ is an extension of the dynamic type of __mold__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXTENDS_TYPE_OF.md:14
msgid ""
"__extends\\_type\\_of__(3) is __.true.__ if and only if the dynamic type "
"of __a__ is an extension of the dynamic type of __mold__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXTENDS_TYPE_OF.md:20
#: ../../source/learn/intrinsics/_pages/EXTENDS_TYPE_OF.md:24
msgid ""
"shall be an object of extensible type. If it is a pointer, it shall not "
"have an undefined association status."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXTENDS_TYPE_OF.md:30
msgid "Default logical scalar."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXTENDS_TYPE_OF.md:33
msgid ""
"If __mold__ is unlimited polymorphic and is either a disassociated "
"pointer or unallocated allocatable variable, the result is true; "
"otherwise if __a__ is unlimited polymorphic and is either a disassociated"
" pointer or unallocated allocatable variable, the result is false; "
"otherwise the result is true if and only if the dynamic type of __a__ is "
"an extension type of the dynamic type of __mold__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXTENDS_TYPE_OF.md:40
msgid ""
"The dynamic type of a disassociated pointer or unallocated allocatable "
"variable is its declared type."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_END.md:2
msgid "is\\_iostat\\_end"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_END.md:5
msgid "__is\\_iostat\\_end__(3) - \\[STATE\\] Test for end-of-file value"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_END.md:17
msgid ""
"is\\_iostat\\_end(3) tests whether a variable (assumed returned as a "
"status from an I/O statement) has the \"end of file\" I/O status value."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_END.md:20
msgid ""
"The function is equivalent to comparing the variable with the "
"__iostat\\_end__ parameter of the intrinsic module "
"__iso\\_fortran\\_env__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_END.md:26
msgid "An _integer_ status value to test if indicating end of file."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_END.md:30
msgid ""
"Returns a _logical_ of the default kind, __.true.__ if __i__ has the "
"value which indicates an end of file condition for __iostat=__ "
"specifiers, and is __.false.__ otherwise."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_EOR.md:2
msgid "is\\_iostat\\_eor"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_EOR.md:5
msgid "__is\\_iostat\\_eor__(3) - \\[STATE\\] Test for end-of-record value"
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_EOR.md:14
msgid ""
"is\\_iostat\\_eor tests whether an variable has the value of the I/O "
"status \"end of record\". The function is equivalent to comparing the "
"variable with the iostat\\_eor parameter of the intrinsic module "
"__iso\\_fortran\\_env__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_EOR.md:22
msgid "Shall be of the type _integer_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/IS_IOSTAT_EOR.md:26
msgid ""
"Returns a _logical_ of the default kind, which .true. if __i__ has the "
"value which indicates an end of file condition for iostat= specifiers, "
"and is .false. otherwise."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MOVE_ALLOC.md:2
msgid "move\\_alloc"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MOVE_ALLOC.md:5
msgid "__move\\_alloc__(3) - \\[\\] Move allocation from one object to another"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MOVE_ALLOC.md:14
msgid ""
"__move\\_alloc(src, dest)__ moves the allocation from SRC to DEST. SRC "
"will become deallocated in the process."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MOVE_ALLOC.md:19
msgid "__src__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MOVE_ALLOC.md:20
msgid "allocatable, __intent(inout)__, may be of any type and kind."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MOVE_ALLOC.md:22
msgid "__dest__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MOVE_ALLOC.md:23
msgid ""
"allocatable, __intent(out)__, shall be of the same type, kind and rank as"
" SRC."
msgstr ""

#: ../../source/learn/intrinsics/_pages/MOVE_ALLOC.md:28
msgid "Basic Sample program to allocate a bigger grid"
msgstr ""

#: ../../source/learn/intrinsics/_pages/MOVE_ALLOC.md:70
msgid "[__allocated__(3)](ALLOCATED)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/PRESENT.md:2
msgid "present"
msgstr ""

#: ../../source/learn/intrinsics/_pages/PRESENT.md:5
msgid ""
"__present__(3) - [STATE\\] Determine whether an optional dummy argument"
"                  is specified"
msgstr ""

#: ../../source/learn/intrinsics/_pages/PRESENT.md:17
msgid "Determines whether an optional dummy argument is present."
msgstr ""

#: ../../source/learn/intrinsics/_pages/PRESENT.md:22
msgid ""
"May be of any type and may be a pointer, scalar or array value, or a "
"dummy procedure. It shall be the name of an optional dummy argument "
"accessible within the current subroutine or function."
msgstr ""

#: ../../source/learn/intrinsics/_pages/PRESENT.md:28
msgid ""
"Returns either __.true.__ if the optional argument __a__ is present, or "
"__.false.__ otherwise."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SAME_TYPE_AS.md:2
msgid "same\\_type\\_as"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SAME_TYPE_AS.md:5
msgid "__same\\_type\\_as__(3) - \\[STATE\\] Query dynamic types for equality"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SAME_TYPE_AS.md:14
msgid "Query dynamic types for equality."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SAME_TYPE_AS.md:19
#: ../../source/learn/intrinsics/_pages/SAME_TYPE_AS.md:23
msgid "Shall be an object of extensible declared type or unlimited polymorphic."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SAME_TYPE_AS.md:22
msgid "__b__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SAME_TYPE_AS.md:28
msgid ""
"The return value is a scalar of type default logical. It is true if and "
"only if the dynamic type of __a__ is the same as the dynamic type of "
"__b__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SAME_TYPE_AS.md:37
msgid "[__extends\\_type\\_of__(3)](EXTENDS_TYPE_OF)"
msgstr ""

#: ../../source/learn/intrinsics/system/index.md:1
msgid "Accessing external system information"
msgstr ""

#: ../../source/learn/intrinsics/_pages/COMMAND_ARGUMENT_COUNT.md:2
msgid "command\\_argument\\_count"
msgstr ""

#: ../../source/learn/intrinsics/_pages/COMMAND_ARGUMENT_COUNT.md:5
msgid ""
"__command\\_argument\\_count__(3) - \\[SYSTEM:COMMAND LINE\\] Get number "
"of command line arguments"
msgstr ""

#: ../../source/learn/intrinsics/_pages/COMMAND_ARGUMENT_COUNT.md:16
msgid ""
"__command\\_argument\\_count()__ returns the number of arguments passed"
"    on the command line when the containing program was invoked."
msgstr ""

#: ../../source/learn/intrinsics/_pages/COMMAND_ARGUMENT_COUNT.md:21
msgid "None"
msgstr ""

#: ../../source/learn/intrinsics/_pages/COMMAND_ARGUMENT_COUNT.md:26
msgid ""
"The return value is of type default _integer_. It is the number of "
"arguments passed on the command line when the program was invoked."
msgstr ""

#: ../../source/learn/intrinsics/_pages/COMMAND_ARGUMENT_COUNT.md:42
msgid "Sample output:"
msgstr ""

#: ../../source/learn/intrinsics/_pages/COMMAND_ARGUMENT_COUNT.md:60
msgid ""
"[__get\\_command__(3)](GET_COMMAND), "
"[__get\\_command\\_argument__(3)](GET_COMMAND_ARGUMENT)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_COMMAND.md:2
msgid "get\\_command"
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_COMMAND.md:5
msgid ""
"__get\\_command__(3) - \\[SYSTEM:COMMAND LINE\\] Get the entire command "
"line"
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_COMMAND.md:18
msgid "Retrieve the entire command line that was used to invoke the program."
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_COMMAND.md:20
msgid ""
"Note that what is typed on the command line is often processed by a "
"shell. The shell typically processes special characters and white space "
"before passing it to the program. The processing can typically be turned "
"off by turning off globbing or quoting the command line arguments and/or "
"changing the default field separators, but this should rarely be "
"necessary."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXECUTE_COMMAND_LINE.md:42
#: ../../source/learn/intrinsics/_pages/GET_COMMAND.md:29
msgid "__command__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_COMMAND.md:30
msgid ""
"Shall be of type _character_ and of default kind. If __command__ is "
"present, stores the entire command line that was used to invoke the "
"program in __command__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_COMMAND.md:34
#: ../../source/learn/intrinsics/_pages/GET_ENVIRONMENT_VARIABLE.md:42
msgid "__length__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_COMMAND.md:35
msgid ""
"Shall be of type _integer_ and of default kind. If __length__ is present,"
" it is assigned the length of the command line."
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_COMMAND.md:38
#: ../../source/learn/intrinsics/_pages/GET_ENVIRONMENT_VARIABLE.md:48
msgid "__status__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_COMMAND.md:39
msgid ""
"Shall be of type _integer_ and of default kind. If __status__ is present,"
" it is assigned 0 upon success of the command, __-1__ if __command__ is "
"too short to store the command line, or a positive value in case of an "
"error."
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_COMMAND.md:83
msgid ""
"[__get\\_command\\_argument__(3)](GET_COMMAND_ARGUMENT), "
"[__command\\_argument\\_count__(3)](COMMAND_ARGUMENT_COUNT)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_COMMAND_ARGUMENT.md:2
msgid "get\\_command\\_argument"
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_COMMAND_ARGUMENT.md:5
msgid ""
"__get\\_command\\_argument__(3) - \\[SYSTEM:COMMAND LINE\\] Get command "
"line arguments"
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_COMMAND_ARGUMENT.md:19
msgid ""
"Retrieve the __number__-th argument that was passed on the command line "
"when the containing program was invoked."
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_COMMAND_ARGUMENT.md:22
msgid ""
"There is not anything specifically stated about what an argument is but "
"in practice the arguments are split on whitespace unless the arguments "
"are quoted and IFS values (Internal Field Separators) used by common "
"shells are ignored."
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_COMMAND_ARGUMENT.md:29
msgid "__number__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_COMMAND_ARGUMENT.md:30
msgid ""
"Shall be a scalar of type __integer__, __number \\>= 0__. If __number = "
"0__, __value__ is set to the name of the program (on systems that support"
" this feature)."
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_COMMAND_ARGUMENT.md:36
msgid ""
"__value__ :Shall be a scalar of type _character_ and of default kind. "
"After get\\_command\\_argument returns, the __value__ argument holds the "
"__number__-th command line argument. If __value__ can not hold the "
"argument, it is truncated to fit the length of __value__. If there are "
"less than __number__ arguments specified at the command line, __value__ "
"will be filled with blanks."
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_COMMAND_ARGUMENT.md:44
msgid ""
"__length__ :(Optional) Shall be a scalar of type _integer_. The "
"__length__ argument contains the length of the __number__-th command line"
" argument."
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_COMMAND_ARGUMENT.md:48
msgid ""
"__status__ :(Optional) Shall be a scalar of type _integer_. If the "
"argument retrieval fails, __status__ is a positive number; if __value__ "
"contains a truncated command line argument, __status__ is __-1__; and "
"otherwise the __status__ is zero."
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_COMMAND_ARGUMENT.md:125
msgid ""
"[__get\\_command__(3)](GET_COMMAND), "
"[__command\\_argument\\_count__(3)](COMMAND_ARGUMENT_COUNT)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CPU_TIME.md:2
msgid "cpu\\_time"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CPU_TIME.md:5
msgid "__cpu\\_time__(3) - \\[SYSTEM:TIME\\] return CPU processor time in seconds"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CPU_TIME.md:14
msgid ""
"Returns a _real_ value representing the elapsed CPU time in seconds. This"
" is useful for testing segments of code to determine execution time."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CPU_TIME.md:17
msgid ""
"The exact definition of time is left imprecise because of the variability"
" in what different processors are able to provide."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CPU_TIME.md:20
msgid "If no time source is available, TIME is set to a negative value."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CPU_TIME.md:22
msgid ""
"Note that TIME may contain a system dependent, arbitrary offset and may "
"not start with 0.0. For cpu\\_time the absolute value is meaningless. "
"Only differences between subsequent calls, as shown in the example below,"
" should be used."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CPU_TIME.md:27
msgid ""
"A processor for which a single result is inadequate (for example, a "
"parallel processor) might choose to provide an additional version for "
"which time is an array."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CPU_TIME.md:33
msgid "__TIME__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CPU_TIME.md:34
msgid ""
"The type shall be _real_ with __intent(out)__. It is assigned a "
"processor-dependent approximation to the processor time in seconds. If "
"the processor cannot return a meaningful time, a processor-dependent "
"negative value"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CPU_TIME.md:39
msgid ""
"__is returned.__ The start time is left imprecise because the purpose is "
"to time sections of code, as in the example. This might or might not "
"include system overhead time."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CPU_TIME.md:71
msgid ""
"[__system\\_clock__(3)](SYSTEM_CLOCK), "
"[__date\\_and\\_time__(3)](DATE_AND_TIME)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:2
msgid "date\\_and\\_time"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:5
msgid "__date\\_and\\_time__(3) - \\[SYSTEM:TIME\\] gets current time"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:18
msgid ""
"__date\\_and\\_time(date, time, zone, values)__ gets the corresponding "
"date and time information from the real-time system clock."
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:21
msgid "Unavailable time and date _character_ parameters return blanks."
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:25
msgid "__date__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:26
msgid ""
"A character string of default kind of the form CCYYMMDD, of length 8 or "
"larger."
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:28
msgid "__time__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:29
msgid ""
"A character string of default kind of the form HHMMSS.SSS, of length 10 "
"or larger."
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:31
msgid "__zone__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:32
msgid ""
"A character string of default kind of the form (+-)HHMM, of length 5 or "
"larger, representing the difference with respect to Coordinated Universal"
" Time (UTC)."
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:35
msgid "__values__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:36
msgid "An _integer_ array of eight elements that contains:"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:38
msgid "__values__(1)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:39
msgid ": The year"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:40
msgid "__values__(2)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:41
msgid ": The month"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:42
msgid "__values__(3)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:43
msgid ": The day of the month"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:44
msgid "__values__(4)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:45
msgid ": Time difference with UTC in minutes"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:46
msgid "__values__(5)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:47
msgid ": The hour of the day"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:48
msgid "__values__(6)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:49
msgid ": The minutes of the hour"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:50
msgid "__values__(7)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:51
msgid ": The seconds of the minute"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:52
msgid "__values__(8)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:53
msgid ": The milliseconds of the second"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:103
msgid "[__cpu\\_time__(3)](CPU_TIME), [__system\\_clock__(3)](SYSTEM_CLOCK)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:107
msgid "date and time conversion, formatting and computation"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:109
#: ../../source/packages/data-types.md:113
msgid "[M_time](https://github.com/urbanjost/M_time)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:110
msgid "[datetime](https://github.com/wavebitscientific/datetime-fortran)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DATE_AND_TIME.md:111
#: ../../source/packages/data-types.md:29
msgid "[datetime-fortran](https://github.com/wavebitscientific/datetime-fortran)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SYSTEM_CLOCK.md:2
msgid "system_clock"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SYSTEM_CLOCK.md:5
msgid ""
"__system\\_clock__(3) - \\[SYSTEM:TIME\\] Return numeric data from a "
"real-time clock."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SYSTEM_CLOCK.md:20
msgid ""
"__system\\_clock__ lets you measure durations of time with the precision "
"of the smallest time increment generally available on a system by "
"returning processor-dependent values based on the current value of the "
"processor clock. The __clock__ value is incremented by one for each clock"
" count until the value __count\\_max__ is reached and is then reset to "
"zero at the next count. __clock__ therefore is a modulo value that lies "
"in the range __0 to count\\_max__. __count\\_rate__ and __count\\_max__ "
"are assumed constant (even though CPU rates can vary on a single "
"platform)."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SYSTEM_CLOCK.md:29
msgid ""
"__count\\_rate__ is system dependent and can vary depending on the kind "
"of the arguments."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SYSTEM_CLOCK.md:32
msgid ""
"If there is no clock, or querying the clock fails, __count__ is set to "
"__-huge(count)__, and __count\\_rate__ and __count\\_max__ are set to "
"zero."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SYSTEM_CLOCK.md:35
msgid ""
"__system\\_clock__ is typically used to measure short time intervals "
"(system clocks may be 24-hour clocks or measure processor clock ticks "
"since boot, for example). It is most often used for measuring or tracking"
" the time spent in code blocks in lieu of using profiling tools."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SYSTEM_CLOCK.md:43
msgid ""
"(optional) shall be an _integer_ scalar. It is assigned a processor-"
"dependent value based on the current value of the processor clock, or "
"__-huge(count)__ if there is no clock. The processor-dependent value is "
"incremented by one for each clock count until the value __count\\_max__ "
"is reached and is reset to zero at the next count. It lies in the range "
"__0__ to __count\\_max__ if there is a clock."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SYSTEM_CLOCK.md:51
msgid "__count\\_rate__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SYSTEM_CLOCK.md:52
msgid ""
"(optional) shall be an _integer_ or _real_ scalar. It is assigned a "
"processor-dependent approximation to the number of processor clock counts"
" per second, or zero if there is no clock."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SYSTEM_CLOCK.md:56
msgid "__count\\_max__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SYSTEM_CLOCK.md:57
msgid ""
"(optional) shall be an _integer_ scalar. It is assigned the maximum value"
" that __COUNT__ can have, or zero if there is no clock."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SYSTEM_CLOCK.md:82
msgid ""
"If the processor clock is a 24-hour clock that registers time at "
"approximately 18.20648193 ticks per second, at 11:30 A.M. the reference"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SYSTEM_CLOCK.md:87
msgid "defines"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SYSTEM_CLOCK.md:100
msgid "[__date\\_and\\_time__(3)](DATE_AND_TIME), [__cpu\\_time__(3)](CPU_TIME)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXECUTE_COMMAND_LINE.md:2
msgid "execute\\_command\\_line"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXECUTE_COMMAND_LINE.md:5
msgid ""
"__execute\\_command\\_line__(3) - \\[SYSTEM:PROCESSES\\] Execute a shell "
"command"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXECUTE_COMMAND_LINE.md:20
msgid ""
"The __command__ argument is passed to the shell and executed. (The shell "
"is generally __sh__(1) on Unix systems, and cmd.exe on Windows.) If "
"__wait__ is present and has the value __.false.__, the execution of the "
"command is asynchronous if the system supports it; otherwise, the command"
" is executed synchronously."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXECUTE_COMMAND_LINE.md:26
msgid ""
"The three last arguments allow the user to get status information. After "
"synchronous execution, __exitstat__ contains the integer exit code of the"
" command, as returned by __system__. __cmdstat__ is set to zero if the "
"command line was executed (whatever its exit status was). __cmdmsg__ is "
"assigned an error message if an error has occurred."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXECUTE_COMMAND_LINE.md:32
msgid ""
"Note that the system call need not be thread-safe. It is the "
"responsibility of the user to ensure that the system is not called "
"concurrently if required."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXECUTE_COMMAND_LINE.md:36
msgid ""
"When the command is executed synchronously, __execute\\_command\\_line__ "
"returns after the command line has completed execution. Otherwise, "
"__execute\\_command\\_line__ returns without waiting."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXECUTE_COMMAND_LINE.md:43
msgid ""
"a default _character_ scalar containing the command line to be executed. "
"The interpretation is programming-environment dependent."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXECUTE_COMMAND_LINE.md:46
msgid "__wait__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXECUTE_COMMAND_LINE.md:47
msgid ""
"(Optional) a default _logical_ scalar. If __wait__ is present with the "
"value .false., and the processor supports asynchronous execution of the "
"command, the command is executed asynchronously; otherwise it is executed"
" synchronously."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXECUTE_COMMAND_LINE.md:52
msgid "__exitstat__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXECUTE_COMMAND_LINE.md:53
msgid ""
"(Optional) an _integer_ of the default kind with __intent(inout)__. If "
"the command is executed synchronously, it is assigned the value of the "
"processor-dependent exit status. Otherwise, the value of __exitstat__ is "
"unchanged."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXECUTE_COMMAND_LINE.md:58
msgid "__cmdstat__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXECUTE_COMMAND_LINE.md:59
msgid ""
"(Optional) an _integer_ of default kind with __intent(inout)__. If an "
"error condition occurs and __cmdstat__ is not present, error termination "
"of execution of the image is initiated."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXECUTE_COMMAND_LINE.md:63
msgid ""
"It is assigned the value __-1__ if the processor does not support command"
" line execution, a processor-dependent positive value if an error "
"condition occurs, or the value __-2__ if no error condition occurs but "
"__wait__ is present with the value false and the processor does not "
"support asynchronous execution. Otherwise it is assigned the value 0."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXECUTE_COMMAND_LINE.md:70
msgid "__cmdmsg__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXECUTE_COMMAND_LINE.md:71
msgid ""
"(Optional) a _character_ scalar of the default kind. It is an __intent "
"(inout)__ argument.If an error condition occurs, it is assigned a "
"processor-dependent explanatory message.Otherwise, it is unchanged."
msgstr ""

#: ../../source/learn/intrinsics/_pages/EXECUTE_COMMAND_LINE.md:94
msgid ""
"Because this intrinsic is making a system call, it is very system "
"dependent. Its behavior with respect to signaling is processor dependent."
" In particular, on POSIX-compliant systems, the SIGINT and SIGQUIT "
"signals will be ignored, and the SIGCHLD will be blocked. As such, if the"
" parent process is terminated, the child process might not be terminated "
"alongside."
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_ENVIRONMENT_VARIABLE.md:2
msgid "get\\_environment"
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_ENVIRONMENT_VARIABLE.md:5
msgid ""
"__get\\_environment\\_variable__(3) - \\[SYSTEM:ENVIRONMENT\\] Get an "
"environmental variable"
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_ENVIRONMENT_VARIABLE.md:19
msgid "Get the __value__ of the environmental variable __name__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_ENVIRONMENT_VARIABLE.md:21
msgid ""
"Note that __get\\_environment\\_variable__(3) need not be thread-safe. It"
" is the responsibility of the user to ensure that the environment is not "
"being updated concurrently."
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_ENVIRONMENT_VARIABLE.md:27
#: ../../source/learn/intrinsics/_pages/SELECTED_CHAR_KIND.md:22
msgid "__name__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_ENVIRONMENT_VARIABLE.md:28
msgid "The name of the environment variable to query."
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_ENVIRONMENT_VARIABLE.md:30
msgid "Shall be a scalar of type _character_ and of default kind."
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_ENVIRONMENT_VARIABLE.md:35
msgid "The value of the environment variable being queried."
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_ENVIRONMENT_VARIABLE.md:37
msgid ""
"Shall be a scalar of type _character_ and of default kind. The value of "
"__name__ is stored in __value__. If __value__ is not large enough to hold"
" the data, it is truncated. If __name__ is not set, __value__ will be "
"filled with blanks."
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_ENVIRONMENT_VARIABLE.md:43
msgid ""
"Argument __length__ contains the length needed for storing the "
"environment variable __name__ or zero if it is not present."
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_ENVIRONMENT_VARIABLE.md:46
#: ../../source/learn/intrinsics/_pages/GET_ENVIRONMENT_VARIABLE.md:54
msgid "Shall be a scalar of type _integer_ and of default kind."
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_ENVIRONMENT_VARIABLE.md:49
msgid ""
"__status__ is __-1__ if __value__ is present but too short for the "
"environment variable; it is __1__ if the environment variable does not "
"exist and __2__ if the processor does not support environment variables; "
"in all other cases __status__ is zero."
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_ENVIRONMENT_VARIABLE.md:56
msgid "__trim\\_name__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_ENVIRONMENT_VARIABLE.md:57
msgid ""
"If __trim\\_name__ is present with the value __.false.__, the trailing "
"blanks in __name__ are significant; otherwise they are not part of the "
"environment variable name."
msgstr ""

#: ../../source/learn/intrinsics/_pages/GET_ENVIRONMENT_VARIABLE.md:61
msgid "Shall be a scalar of type _logical_ and of default kind."
msgstr ""

#: ../../source/learn/intrinsics/transform/index.md:1
msgid "Matrix multiplication, dot product, and array shifts"
msgstr ""

#: ../../source/learn/intrinsics/type/index.md:1
msgid "Types and kinds"
msgstr ""

#: ../../source/learn/intrinsics/type/index.md:3
msgid ""
"These intrinsics allow for explicitly casting one type of variable to "
"another or can be used to conditionally execute code blocks based on "
"variable types when working with polymorphic variables."
msgstr ""

#: ../../source/learn/intrinsics/type/index.md:7
msgid "Fortran Data Types"
msgstr ""

#: ../../source/learn/intrinsics/type/index.md:9
msgid "Fortran provides five basic intrinsic data types:"
msgstr "Fortran possui cinco tipos básicos de dados:"

#: ../../source/learn/intrinsics/type/index.md:11
msgid "Integer type"
msgstr ""

#: ../../source/learn/intrinsics/type/index.md:12
msgid "The integer types can hold only whole number values."
msgstr ""

#: ../../source/learn/intrinsics/type/index.md:13
msgid "Real type"
msgstr ""

#: ../../source/learn/intrinsics/type/index.md:14
msgid "Stores floating point numbers, such as 2.0, 3.1415, -100.876, etc."
msgstr ""

#: ../../source/learn/intrinsics/type/index.md:15
msgid "Complex type"
msgstr ""

#: ../../source/learn/intrinsics/type/index.md:16
msgid ""
"A complex number has two parts, the real part and the imaginary part. Two"
" consecutive floating point storage units store the two parts."
msgstr ""

#: ../../source/learn/intrinsics/type/index.md:19
msgid "Logical type"
msgstr ""

#: ../../source/learn/intrinsics/type/index.md:20
msgid "There are only two logical values: .true. and .false."
msgstr ""

#: ../../source/learn/intrinsics/type/index.md:21
msgid "Character type"
msgstr ""

#: ../../source/learn/intrinsics/type/index.md:22
msgid ""
"The character type stores strings. The length of the string can be "
"specified by the __len__ specifier. If no length is specified, it is 1."
msgstr ""

#: ../../source/learn/intrinsics/type/index.md:25
msgid ""
"These \"types\" can be of many \"kinds\". Often different numeric kinds "
"take up different storage sizes and therefore can represent different "
"ranges; but a different kind can have other meanings. A _character_ "
"variable might represent ASCII characters or UTF-8 or Unicode characters,"
" for example."
msgstr ""

#: ../../source/learn/intrinsics/type/index.md:31
msgid "You can derive your own data types from these fundamental types as well."
msgstr ""

#: ../../source/learn/intrinsics/type/index.md:33
msgid "Implicit Typing"
msgstr ""

#: ../../source/learn/intrinsics/type/index.md:35
msgid ""
"Fortran allows a feature called implicit typing, i.e., you do not have to"
" declare some variables before use. By default if a variable is not "
"declared, then the first letter of its name will determine its type:"
msgstr ""

#: ../../source/learn/intrinsics/type/index.md:39
msgid ""
"Variable names starting with __i-n__ (the first two letters of "
"\"integer\") specify _integer_ variables."
msgstr ""

#: ../../source/learn/intrinsics/type/index.md:42
msgid "All other variable names default to _real_."
msgstr "Todos os outros nomes de variáveis por padrão são do tipo _real_."

#: ../../source/learn/intrinsics/type/index.md:45
msgid ""
"However, in most circles it is considered good programming practice to "
"declare all the variables. For that to be enforced, you start your "
"variable declaration section with  a statement that turns off implicit "
"typing: the statement"
msgstr ""

#: ../../source/learn/intrinsics/type/index.md:52
msgid "For more information refer to the __implicit__ statement."
msgstr ""

#: ../../source/learn/intrinsics/_pages/AIMAG.md:2
msgid "aimag"
msgstr ""

#: ../../source/learn/intrinsics/_pages/AIMAG.md:5
msgid "__aimag__(3) - \\[TYPE:NUMERIC\\] Imaginary part of complex number"
msgstr ""

#: ../../source/learn/intrinsics/_pages/AIMAG.md:18
msgid "__aimag(z)__ yields the imaginary part of complex argument __z__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/AIMAG.md:23
msgid "The type of the argument shall be _complex_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/AIMAG.md:27
msgid ""
"The return value is of type _real_ with the kind type parameter of the "
"argument."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CMPLX.md:2
msgid "cmplx"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CMPLX.md:5
msgid "__cmplx__(3) - \\[TYPE:NUMERIC\\] Complex conversion function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CMPLX.md:19
msgid ""
"To convert numeric variables to complex, use the __cmplx__(3) function. "
"Constants can be used to define a complex variable using the syntax"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CMPLX.md:26
msgid ""
"but this will not work for variables. You must use the __cmplx__(3) "
"function."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CMPLX.md:28
msgid ""
"__cmplx(x \\[, y \\[, kind\\]\\])__ returns a complex number where __x__ "
"is converted to the _real_ component. If __x__ is _complex_ then __y__ "
"must not be present. If __y__ is present it is converted to the imaginary"
" component. If __y__ is not present then the imaginary component is set "
"to __0.0__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CMPLX.md:33
msgid "__cmplx(3) and double precision__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CMPLX.md:35
msgid ""
"The Fortran 90 language defines __cmplx__(3) as always returning a result"
" that is type __complex(kind=KIND(0.0))__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CMPLX.md:38
msgid ""
"This means \\`__cmplx(d1,d2)__', where __\\`d1'__ and __\\`d2'__ are "
"_doubleprecision_, is treated as: fortran"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CMPLX.md:45
msgid "_doubleprecision complex_ numbers require specifying a precision."
msgstr ""
"números do tipo _doubleprecision complex_ precisam que se especifique a "
"precisão."

#: ../../source/learn/intrinsics/_pages/CMPLX.md:47
msgid ""
"It was necessary for Fortran 90 to specify this behavior for "
"_doubleprecision_ arguments, since that is the behavior mandated by "
"FORTRAN 77."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CMPLX.md:51
msgid ""
"So Fortran 90 extends the __cmplx__(3) intrinsic by adding an extra "
"argument used to specify the desired kind of complex result."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CMPLX.md:75
msgid ""
"F2018 COMPONENT SYNTAX The real and imaginary parts of a complex entity "
"can be accessed independently with a component-like syntax in f2018:"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CMPLX.md:78
msgid "A complex-part-designator is"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CMPLX.md:80
msgid "``fortran       designator % RE       or       designator % IM."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CMPLX.md:103
msgid "__x__ The type may be _integer_, _real_, or _complex_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CMPLX.md:106
msgid ""
"__y__ (Optional; only allowed if __x__ is not _complex_.). May be "
"_integer_ or _real_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CMPLX.md:110
msgid ""
"__kind__ (Optional) An _integer_ initialization expression indicating the"
" kind parameter of the result."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CMPLX.md:116
msgid ""
"The return value is of _complex_ type, with a kind equal to __kind__ if "
"it is specified. If __kind__ is not specified, the result is of the "
"default _complex_ kind, regardless of the kinds of __x__ and __y__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/CMPLX.md:153
msgid "[__aimag__(3)](AIMAG) - Imaginary part of complex number"
msgstr "[__aimag__(3)](AIMAG) - Parte imaginária de um número complexo"

#: ../../source/learn/intrinsics/_pages/CMPLX.md:155
msgid "[__cmplx__(3)](CMPLX) - Complex conversion function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CMPLX.md:157
msgid "[__conjg__(3)](CONJG) - Complex conjugate function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/CMPLX.md:159
msgid "[__real__(3)](REAL) - Convert to real type"
msgstr ""

#: ../../source/learn/intrinsics/_pages/INT.md:2
msgid "int"
msgstr ""

#: ../../source/learn/intrinsics/_pages/INT.md:4
msgid ""
"__int__(3) - \\[TYPE:NUMERIC\\] Convert to integer type by truncating "
"towards zero"
msgstr ""

#: ../../source/learn/intrinsics/_pages/INT.md:16
msgid "Convert to integer type by truncating towards zero."
msgstr ""

#: ../../source/learn/intrinsics/_pages/INT.md:21
msgid ""
"Shall be of type _integer_, _real_, or _complex_ or a BOZ-literal-"
"constant."
msgstr ""

#: ../../source/learn/intrinsics/_pages/INT.md:27
msgid "If not present the returned type is that of default integer type."
msgstr ""

#: ../../source/learn/intrinsics/_pages/INT.md:31
msgid "returns an _integer_ variable or array applying the following rules:"
msgstr ""

#: ../../source/learn/intrinsics/_pages/INT.md:33
msgid "__Case__:"
msgstr ""

#: ../../source/learn/intrinsics/_pages/INT.md:35
msgid "If __a__ is of type _integer_, __int__(a) = a"
msgstr ""

#: ../../source/learn/intrinsics/_pages/INT.md:37
msgid ""
"If __a__ is of type _real_ and __|a| \\< 1, int(a)__ equals __0__. If "
"__|a| \\>= 1__, then __int(a)__ equals the integer whose magnitude does "
"not exceed __a__ and whose sign is the same as the sign of __a__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/INT.md:41
msgid ""
"If __a__ is of type _complex_, rule 2 is applied to the _real_ part of "
"__a__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/INT.md:43
msgid ""
"If _a_ is a boz-literal constant, it is treated as an _integer_ with the "
"_kind_ specified."
msgstr ""

#: ../../source/learn/intrinsics/_pages/INT.md:46
msgid ""
"The interpretation of a bit sequence whose most significant bit is __1__ "
"is processor dependent."
msgstr ""

#: ../../source/learn/intrinsics/_pages/INT.md:118
msgid ""
"[__aint__(3)](AINT), [__anint__(3)](ANINT), [__nint__(3)](NINT), "
"[__selected_int_kind__(3)](SELECTED_INT_KIND), [__ceiling__(3)](CEILING),"
" [__floor__(3)](FLOOR)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NINT.md:2
msgid "nint"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NINT.md:5
msgid "__nint__(3) - \\[TYPE:NUMERIC\\] Nearest whole number"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NINT.md:15
msgid ""
"__nint(x)__ rounds its argument to the nearest whole number with its sign"
" preserved."
msgstr ""

#: ../../source/learn/intrinsics/_pages/NINT.md:18
msgid ""
"The user must ensure the value is a valid value for the range of the "
"__kind__ returned. If the processor cannot represent the result in the "
"kind specified, the result is undefined."
msgstr ""

#: ../../source/learn/intrinsics/_pages/NINT.md:22
msgid "If __x__ is greater than zero, __nint(x)__ has the value __int(x+0.5)__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/NINT.md:24
msgid ""
"If __x__ is less than or equal to zero, __nint(x)__ has the value "
"__int(a-0.5)__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/NINT.md:30
msgid "The type of the argument shall be _real_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/NINT.md:33
msgid ""
"(Optional) A constant _integer_ expression indicating the kind parameter "
"of the result. Otherwise, the kind type parameter is that of default "
"_integer_ type."
msgstr ""

#: ../../source/learn/intrinsics/_pages/NINT.md:39
msgid "__answer__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NINT.md:40
msgid ""
"The result is the integer nearest __x__, or if there are two integers "
"equally near __x__, the result is whichever such _integer_ has the "
"greater magnitude."
msgstr ""

#: ../../source/learn/intrinsics/_pages/NINT.md:112
msgid "FORTRAN 77 and later, with KIND argument - Fortran 90 and later"
msgstr ""

#: ../../source/learn/intrinsics/_pages/NINT.md:116
msgid ""
"[__aint__(3)](AINT), [__anint__(3)](ANINT), [__int__(3)](INT), "
"[__selected_int_kind__(3)](SELECTED_INT_KIND), [__ceiling__(3)](CEILING),"
" [__floor__(3)](FLOOR)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/REAL.md:2
msgid "real"
msgstr ""

#: ../../source/learn/intrinsics/_pages/REAL.md:4
msgid "__real__(3) - \\[TYPE:NUMERIC\\] Convert to real type"
msgstr "__real__(3) - \\[TYPE:NUMERIC\\] Converte para o tipo real"

#: ../../source/learn/intrinsics/_pages/REAL.md:13
msgid "__real(x, kind)__ converts its argument __x__ to a real type."
msgstr ""

#: ../../source/learn/intrinsics/_pages/REAL.md:18
msgid "Shall be _integer_, _real_, or _complex_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/REAL.md:26
msgid ""
"These functions return a _real_ variable or array under the following "
"rules:"
msgstr ""

#: ../../source/learn/intrinsics/_pages/REAL.md:29
msgid ""
"__real__(x) is converted to a default _real_ type if __x__ is an "
"_integer_ or _real_ variable."
msgstr ""

#: ../../source/learn/intrinsics/_pages/REAL.md:32
msgid ""
"__real__(x) is converted to a real type with the kind type parameter of "
"__x__ if __x__ is a _complex_ variable."
msgstr ""

#: ../../source/learn/intrinsics/_pages/REAL.md:35
msgid ""
"__real(x, kind)__ is converted to a _real_ type with kind type parameter "
"__kind__ if __x__ is a _complex_, _integer_, or _real_ variable."
msgstr ""

#: ../../source/learn/intrinsics/_pages/REAL.md:71
msgid "[__dble__(3)](DBLE), [__float__(3)](FLOAT)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DBLE.md:2
msgid "dble"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DBLE.md:5
msgid "__dble__(3) - \\[TYPE:NUMERIC\\] Double conversion function"
msgstr ""

#: ../../source/learn/intrinsics/_pages/DBLE.md:16
msgid ""
"where TYPE may be _integer_, _real_, or _complex_ and KIND any kind "
"supported by the TYPE."
msgstr ""

#: ../../source/learn/intrinsics/_pages/DBLE.md:20
msgid "__dble(a)__ Converts __a__ to double precision _real_ type."
msgstr ""

#: ../../source/learn/intrinsics/_pages/DBLE.md:25
msgid "The type shall be _integer_, _real_, or _complex_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/DBLE.md:29
msgid ""
"The return value is of type _doubleprecision_. For _complex_ input, the "
"returned value has the magnitude and sign of the real component of the "
"input value."
msgstr ""

#: ../../source/learn/intrinsics/_pages/DBLE.md:56
msgid "[__float__(3)](FLOAT), [__real__(3)](REAL)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/TRANSFER.md:2
msgid "transfer"
msgstr ""

#: ../../source/learn/intrinsics/_pages/TRANSFER.md:5
msgid "__transfer__(3) - \\[TYPE:MOLD\\] Transfer bit patterns"
msgstr ""

#: ../../source/learn/intrinsics/_pages/TRANSFER.md:14
msgid ""
"Interprets the bitwise representation of __source__ in memory as if it is"
" the representation of a variable or array of the same type and type "
"parameters as __mold__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/TRANSFER.md:18
msgid ""
"This is approximately equivalent to the C concept of \\*casting\\* one "
"type to another."
msgstr ""

#: ../../source/learn/intrinsics/_pages/TRANSFER.md:24
#: ../../source/learn/intrinsics/_pages/TRANSFER.md:27
msgid "Shall be a scalar or an array of any type."
msgstr ""

#: ../../source/learn/intrinsics/_pages/TRANSFER.md:30
msgid "(Optional) shall be a scalar of type _integer_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/TRANSFER.md:34
msgid ""
"The result has the same type as __mold__, with the bit level "
"representation of __source__. If __size__ is present, the result is a "
"one-dimensional array of length __size__. If __size__ is absent but "
"__mold__ is an array (of any size or shape), the result is a one-"
"dimensional array of the minimum length needed to contain the entirety of"
" the bitwise representation of __source__. If __size__ is absent and "
"__mold__ is a scalar, the result is a scalar."
msgstr ""

#: ../../source/learn/intrinsics/_pages/TRANSFER.md:41
msgid ""
"If the bitwise representation of the result is longer than that of "
"__source__, then the leading bits of the result correspond to those of "
"__source__ and any trailing bits are filled arbitrarily."
msgstr ""

#: ../../source/learn/intrinsics/_pages/TRANSFER.md:45
msgid ""
"When the resulting bit representation does not correspond to a valid "
"representation of a variable of the same type as __mold__, the results "
"are undefined, and subsequent operations on the result cannot be "
"guaranteed to produce sensible behavior. For example, it is possible to "
"create _logical_ variables for which __var__ and .not. var both appear to"
" be true."
msgstr ""

#: ../../source/learn/intrinsics/_pages/TRANSFER.md:80
msgid "__Comments__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/TRANSFER.md:82
msgid "_Joe Krahn_: Fortran uses __molding__ rather than __casting__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/TRANSFER.md:84
msgid ""
"Casting, as in C, is an in-place reinterpretation. A cast is a device "
"that is built around an object to change its shape."
msgstr ""

#: ../../source/learn/intrinsics/_pages/TRANSFER.md:87
msgid ""
"Fortran TRANSFER reinterprets data out-of-place. It can be considered "
"__molding__ rather than casting. A __mold__ is a device that confers a "
"shape onto an object placed into it."
msgstr ""

#: ../../source/learn/intrinsics/_pages/TRANSFER.md:91
msgid ""
"The advantage of molding is that data is always valid in the context of "
"the variable that holds it. For many cases, a decent compiler should "
"optimize TRANSFER into a simple assignment."
msgstr ""

#: ../../source/learn/intrinsics/_pages/TRANSFER.md:95
msgid ""
"There are disadvantages of this approach. It is problematic to define a "
"union of data types because you must know the largest data object, which "
"can vary by compiler or compile options. In many cases, an EQUIVALENCE "
"would be far more effective, but Fortran Standards committees seem "
"oblivious to the benefits of EQUIVALENCEs when used sparingly."
msgstr ""

#: ../../source/learn/intrinsics/_pages/TRANSFER.md:103
msgid "Fortran 90 and later"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LOGICAL.md:2
msgid "logical"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LOGICAL.md:5
msgid ""
"__logical__(3) - \\[TYPE:LOGICAL\\] Converts one kind of _logical_ "
"variable to another"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LOGICAL.md:18
msgid "Converts one kind of _logical_ variable to another."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LOGICAL.md:23
msgid "__l__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LOGICAL.md:32
msgid ""
"The return value is a _logical_ value equal to __l__, with a kind "
"corresponding to __kind__, or of the default logical kind if __kind__ is "
"not given."
msgstr ""

#: ../../source/learn/intrinsics/_pages/LOGICAL.md:61
msgid "Fortran 95 and later, related ISO_FORTRAN_ENV module - fortran 2009"
msgstr ""

#: ../../source/learn/intrinsics/_pages/LOGICAL.md:65
msgid "[__int__(3)](INT), [__real__(3)](REAL), [__cmplx__(3)](CMPLX)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/KIND.md:2
msgid "kind"
msgstr ""

#: ../../source/learn/intrinsics/_pages/KIND.md:5
msgid "__kind__(3) - \\[KIND INQUIRY\\] Kind of an entity"
msgstr ""

#: ../../source/learn/intrinsics/_pages/KIND.md:14
msgid "__kind(x)__ returns the kind value of the entity __x__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/KIND.md:19
msgid "Shall be of type _logical_, _integer_, _real_, _complex_ or _character_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SELECTED_CHAR_KIND.md:2
msgid "selected\\_char\\_kind"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SELECTED_CHAR_KIND.md:5
msgid ""
"__selected\\_char\\_kind__(3) - \\[KIND\\] Choose character kind such as "
"\"Unicode\""
msgstr ""

#: ../../source/learn/intrinsics/_pages/SELECTED_CHAR_KIND.md:14
msgid ""
"__selected\\_char\\_kind(name)__ returns the kind value for the character"
" set named NAME, if a character set with such a name is supported, or "
"__-1__ otherwise. Currently, supported character sets include \"ASCII\" "
"and \"DEFAULT\" (iwhich are equivalent), and \"ISO\\_10646\" (Universal "
"Character Set, UCS-4) which is commonly known as \"Unicode\"."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SELECTED_CHAR_KIND.md:23
msgid "Shall be a scalar and of the default character type."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SELECTED_INT_KIND.md:2
msgid "selected\\_int\\_kind"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SELECTED_INT_KIND.md:5
msgid "__selected\\_int\\_kind__(3) - \\[KIND\\] Choose integer kind"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SELECTED_INT_KIND.md:14
msgid ""
"__selected\\_int\\_kind(r)__ return the kind value of the smallest "
"integer type that can represent all values ranging from __-10\\*\\*r__ "
"(exclusive) to __10\\*\\*r__ (exclusive). If there is no integer kind "
"that accommodates this range, selected\\_int\\_kind returns __-1__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SELECTED_INT_KIND.md:21
#: ../../source/learn/intrinsics/_pages/SELECTED_REAL_KIND.md:23
msgid "__r__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SELECTED_INT_KIND.md:22
msgid "Shall be a scalar and of type _integer_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SELECTED_INT_KIND.md:55
msgid ""
"[__aint__(3)](AINT), [__anint__(3)](ANINT), [__int__(3)](INT), "
"[__nint__(3)](NINT), [__ceiling__(3)](CEILING), [__floor__(3)](FLOOR)"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SELECTED_REAL_KIND.md:2
msgid "selected\\_real\\_kind"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SELECTED_REAL_KIND.md:5
msgid "__selected\\_real\\_kind__(3) - \\[KIND\\] Choose real kind"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SELECTED_REAL_KIND.md:14
msgid ""
"__selected\\_real\\_kind(p, r, radix)__ return the kind value of a real "
"data type with decimal precision of at least __p__ digits, exponent range"
" of at least __r__, and with a radix of __radix__."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SELECTED_REAL_KIND.md:21
#: ../../source/learn/intrinsics/_pages/SELECTED_REAL_KIND.md:24
#: ../../source/learn/intrinsics/_pages/SELECTED_REAL_KIND.md:27
msgid "(Optional) shall be a scalar and of type _integer_."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SELECTED_REAL_KIND.md:26
msgid "__radix__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SELECTED_REAL_KIND.md:29
msgid ""
"Before __Fortran 2008__, at least one of the arguments __r__ or __p__ "
"shall be present; since __Fortran 2008__, they are assumed to be zero if "
"absent."
msgstr ""

#: ../../source/learn/intrinsics/_pages/SELECTED_REAL_KIND.md:35
msgid ""
"selected\\_real\\_kind returns the value of the kind type parameter of a "
"real data type with decimal precision of at least __p__ digits, a decimal"
" exponent range of at least R, and with the requested __radix__. If the "
"__radix__ parameter is absent, real kinds with any radix can be returned."
" If more than one real data type meet the criteria, the kind of the data "
"type with the smallest decimal precision is returned. If no real data "
"type matches the criteria, the result is"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SELECTED_REAL_KIND.md:43
msgid ""
"__-1__ if the processor does not support a real data type with a "
"precision greater than or equal to __p__, but the __r__ and __radix__ "
"requirements can be fulfilled"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SELECTED_REAL_KIND.md:47
msgid ""
"__-2__ if the processor does not support a real type with an exponent "
"range greater than or equal to __r__, but __p__ and __radix__ are "
"fulfillable"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SELECTED_REAL_KIND.md:51
msgid "__-3__ if __radix__ but not __p__ and __r__ requirements are fulfillable"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SELECTED_REAL_KIND.md:53
msgid "__-4__ if __radix__ and either __p__ or __r__ requirements are fulfillable"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SELECTED_REAL_KIND.md:55
msgid "__-5__ if there is no real type with the given __radix__"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SELECTED_REAL_KIND.md:84
msgid "Fortran 95 and later; with RADIX - Fortran 2008 and later"
msgstr ""

#: ../../source/learn/intrinsics/_pages/SELECTED_REAL_KIND.md:88
msgid ""
"[__precision__(3)](PRECISION), [__range__(3)](RANGE), "
"[__radix__(3)](RADIX)"
msgstr ""

#: ../../source/learn/os_setup/choose_compiler.md:1
#: ../../source/learn/os_setup/index.md:24
msgid "Choosing a compiler"
msgstr ""

#: ../../source/learn/os_setup/choose_compiler.md:3
msgid ""
"A comprehensive list of available compilers is provided "
"[here]({{site.baseurl}}/compilers). In this guide, we will focus only on "
"those that are free to install and use."
msgstr ""

#: ../../source/learn/os_setup/choose_compiler.md:5
msgid ""
"Of those listed at the link above, open source and free are GFortran "
"(with OpenCoarrays), Flang, and LFortran. NVIDIA and Intel offer their "
"compilers for free and as of the latest update of this tutorial, "
"NVFortran (NVIDIA) is available only for Linux systems, while Intel "
"oneAPI is available for Linux, Windows and macOS systems. Both are well "
"documented and readers can find detailed information about installing and"
" using them on their websites respectively."
msgstr ""

#: ../../source/learn/os_setup/choose_compiler.md:7
msgid ""
"In the next chapter, we use GFortran for the tutorial as it is a mature "
"open source compiler. We encourage users to also try other open source "
"and commercial compilers."
msgstr ""

#: ../../source/learn/os_setup/ides.md:1
#: ../../source/learn/os_setup/index.md:24
msgid "IDEs"
msgstr ""

#: ../../source/learn/os_setup/ides.md:3
msgid ""
"An IDE (Integrated Development Environment) refers to a complete software"
" development environment, where, all those packages that come as external"
" plug-ins in Text-Editors, are already integrated within the software. An"
" IDE is usually optimized towards a specific set of languages. For "
"example it is very common for IDEs to advertise themselves towards either"
" compiled or interpreted languages, or even towards a single language, or"
" depending on the application developed, like scientific or web "
"development.  IDEs are recommended for beginner programmers, since it is "
"possible to start coding with minimum effort after installation. However,"
" it is quite common, in professional environments, individual developers "
"and teams alike, to choose an IDE for large projects because of some "
"unique features that they may offer over a Text-Editor."
msgstr ""

#: ../../source/learn/os_setup/ides.md:6
msgid ""
"A list of popular IDEs that provide good Fortran support is provided in "
"alphabetical order:"
msgstr ""

#: ../../source/learn/os_setup/ides.md:7
msgid ""
"[AbsoftTools](https://www.absoft.com/technology/absofttools-fortran-"
"ide/): commercial product, cross-platform, comes with Absoft's own "
"Fortran compiler."
msgstr ""

#: ../../source/learn/os_setup/ides.md:8
msgid ""
"[Code::Blocks](http://www.codeblocks.org/): free product, cross-platform "
"and supports multiple compilers. Plenty of tutorials online on how to "
"install it and add a Fortran Compiler. As well as a recent presentation, "
"[here](https://www.youtube.com/watch?v=M1RwVGGSAgE&ab_channel=FortranCon),"
" of its capabilities and future prospects at the International Fortran "
"Conference 2020 by its main developer."
msgstr ""

#: ../../source/learn/os_setup/ides.md:9
msgid ""
"[Eclipse-Photran](https://marketplace.eclipse.org/content/photran-"
"fortran-ide-eclipse) *Photran is an IDE and refactoring tool for Fortran "
"based on Eclipse and the C/C++ Development Tools*. A free product, cross-"
"platform and supports multiple compilers."
msgstr ""

#: ../../source/learn/os_setup/ides.md:10
msgid ""
"[Geany](https://www.geany.org/): a free product, cross platform and "
"supports multiple compilers."
msgstr ""

#: ../../source/learn/os_setup/ides.md:11
msgid ""
"[NAG Fortran Builder](https://www.nag.com/content/nag-fortran-builder-0) "
"is a commercial product, available in Windows and MacOS and supports "
"NAG's own Fortran Compiler."
msgstr ""

#: ../../source/learn/os_setup/ides.md:12
msgid ""
"[Plato](https://www.silverfrost.com/16/ftn95/plato.aspx) is a commercial "
"product, cross-platform, comes with Silverfrost's Fortran FTN95 own "
"Fortran compiler."
msgstr ""

#: ../../source/learn/os_setup/ides.md:13
msgid ""
"[SimplyFortran](https://simplyfortran.com/) is a commercial product, "
"cross-platform with support of the GNU Fortran compiler."
msgstr ""

#: ../../source/learn/os_setup/ides.md:14
msgid ""
"[Visual Studio](https://visualstudio.microsoft.com/) its *Community "
"Edition 2019* is a free product, available in Windows and macOS and "
"supports only Intel's Fortran compiler, now bundled with many other free-"
"to-use HPC tools under *Intel oneAPI*."
msgstr ""

#: ../../source/learn/os_setup/index.md:24
#: ../../source/learn/os_setup/install_gfortran.md:1
msgid "Installing GFortran"
msgstr ""

#: ../../source/learn/os_setup/index.md:24
#: ../../source/learn/os_setup/text_editors.md:1
msgid "Text Editors"
msgstr ""

#: ../../source/learn/os_setup/index.md:24
#: ../../source/learn/os_setup/tips.md:1
msgid "Smart Tips"
msgstr ""

#: ../../source/learn/os_setup/index.md:1
msgid "<br/><br/>"
msgstr ""

#: ../../source/learn/os_setup/index.md:6
msgid ""
"<span style=\"color:grey; font-size:0.8em\">*Authors: Stavros Meskos, "
"Laurence Kedward, Arjen Markus, Ondřej Čertík, Milan Curcic*</span>"
msgstr ""

#: ../../source/learn/os_setup/index.md:8
msgid ""
"<span style=\"color:grey; font-size:0.8em\">*Last update: "
"16-Feb-2021*</span>"
msgstr ""

#: ../../source/learn/os_setup/index.md:12
msgid "Setting up your OS"
msgstr ""

#: ../../source/learn/os_setup/index.md:14
msgid ""
"In this mini-book we address the very first problem that many new Fortran"
" programmers encounter. Before everything, you will need to choose a "
"compiler and install it. Then you will need a text editor or perhaps an "
"IDE (Integrated Development Environment). There are many options, most of"
" them available in all major OSs (operating systems). However, the "
"process to install and configure them greatly differs between Windows, "
"Linux, and macOS. There are several Fortran compilers. Here, we pick "
"those that meet certain criteria and provide a guide on how to install "
"them in all the aforementioned OSs. A list of popular text editors and "
"IDEs and information on how to choose between them is presented as well."
msgstr ""

#: ../../source/learn/os_setup/index.md:18
msgid ""
"If you have already set up your environment, you may skip this tutorial "
"and move forward with the Quickstart Fortran Tutorial to start coding "
"your first `Hello World` program or with the Building programs mini-book "
"to understand how a compiler works."
msgstr ""

#: ../../source/learn/os_setup/index.md:22
msgid ""
"*The choice of text editors and IDEs has been controversial among the "
"developers. What you choose is a matter of personal taste. Every solution"
" comes with its own pros and cons. For that reason, in this guide, we "
"will not push the reader towards one or another direction. We will, "
"however, present a list of the most popular tools.*"
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:3
msgid ""
"GFortran is the name of the [GNU Fortran "
"project](https://gcc.gnu.org/fortran/). The main "
"[wiki](https://gcc.gnu.org/wiki/GFortran) page offers many helpful links "
"about GFortran, as well as Fortran in general. In this guide, the "
"installation process for GFortran on Windows, Linux, macOS and OpenBSD is"
" presented in a beginner-friendly format based on the information from "
"[GFortranBinaries](https://gcc.gnu.org/wiki/GFortranBinaries)."
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:5
msgid "Windows"
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:8
msgid ""
"Three sources provide quick and easy way to install GFortran compiler on "
"Windows:"
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:9
msgid ""
"[http://www.equation.com](http://www.equation.com/servlet/equation.cmd?fa=fortran),"
" provides 32 and 64-bit x86 executables of the latest (10.2) gcc-version."
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:11
msgid ""
"[TDM GCC](https://jmeubank.github.io/tdm-"
"gcc/articles/2020-03/9.2.0-release), provides 32 and 64-bit x86 "
"executables of the 9.2 gcc-version."
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:12
msgid ""
"[MinGW-w64](http://mingw-w64.org/doku.php/download/mingw-builds) provides"
" a 64-bit x86 executable of the 8.1.0 gcc-version."
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:14
msgid ""
"In all the above choices, the process is straightforward—just download "
"the installer and follow the installation wizard."
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:16
msgid "Unix-like development on Windows"
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:17
msgid ""
"For those familiar with a unix-like development environment, several "
"emulation options are available on Windows each of which provide packages"
" for gfortran:"
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:19
msgid ""
"__Cygwin:__ A runtime environment that provides POSIX compatibility to "
"Windows;"
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:20
msgid ""
"__MSYS2:__ A collection of Unix-like development tools, based on modern "
"Cygwin and MinGW-w64;"
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:21
msgid ""
"__Windows Subsystem for Linux (WSL):__ An official compatibility layer "
"for running Linux binary executables on Windows. With [Windows Subsystem "
"for Linux GUI](https://github.com/microsoft/wslg) one can run text "
"editors and other graphical programs."
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:23
msgid ""
"All of the above approaches provide access to common shells such as bash "
"and development tools including GNU coreutils, Make, CMake, autotools, "
"git, grep, sed, awk, ssh, etc."
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:25
msgid ""
"We recommend the WSL environment for those looking for a Unix-like "
"development environment on Windows."
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:27
msgid "Linux"
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:30
msgid "Debian-based (Debian, Ubuntu, Mint, etc...)"
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:31
msgid "Check whether you have gfortran already installed"
msgstr "Confirma se você já possui o gfortran instalado"

#: ../../source/learn/os_setup/install_gfortran.md:35
msgid ""
"If nothing is returned then gfortran is not installed. To install "
"gfortran type:"
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:40
msgid "to check what version was installed type:"
msgstr "para descobrir qual versão foi instalada, digite:"

#: ../../source/learn/os_setup/install_gfortran.md:44
msgid ""
"You can install multiple versions up to version 9 by typing the version "
"number immediately after \"gfortran\", e.g.:"
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:48
msgid ""
"To install the latest version 10 you need first to add / update the "
"following repository and then install:"
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:54
#, python-format
msgid ""
"Finally, you can switch between different versions or set the default one"
" with the **update-alternatives** ([see "
"manpage](https://manpages.ubuntu.com/manpages/trusty/man8/update-"
"alternatives.8.html#:~:text=update%2Dalternatives%20creates%2C%20removes%2C,system%20at%20the%20same%20time.))."
" There are many online tutorials on how to use this feature. A well "
"structured one using as an example C and C++ can be found "
"[here](https://linuxconfig.org/how-to-switch-between-multiple-gcc-and-g"
"-compiler-versions-on-ubuntu-20-04-lts-focal-fossa), you can apply the "
"same logic by replacing either `gcc` or `g++` with `gfortran`."
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:56
msgid "RPM-based (Red Hat Linux, CentOS, Fedora, openSuse, Mandrake Linux)"
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:61
msgid "Since Fedora 22, `dnf` is the default package manager for Fedora:"
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:66
msgid "Arch-based (Arch Linux, Antergos, Manjaro, etc...)"
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:71
msgid "macOS"
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:72
msgid "Xcode"
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:73
msgid "If you have Xcode installed, open a terminal window and type:"
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:77
msgid "Binaries"
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:78
msgid ""
"Go to [fxcoudert/gfortran-for-macOS](https://github.com/fxcoudert"
"/gfortran-for-macOS/releases) to directly install binaries."
msgstr ""
"Navegue até [fxcoudert/gfortran-for-macOS](https://github.com/fxcoudert"
"/gfortran-for-macOS/releases) para instalar diretamente os binários."

#: ../../source/learn/os_setup/install_gfortran.md:79
msgid "Homebrew"
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:83
msgid "Fink"
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:84
msgid ""
"GNU-gcc Package "
"[link](https://pdb.finkproject.org/pdb/browse.php?summary=GNU+Compiler+Collection+Version)"
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:85
msgid "MacPorts"
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:86
msgid "Search for available gcc versions:"
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:90
msgid "Install a gcc version:"
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:95
msgid "OpenBSD"
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:100
msgid ""
"On OpenBSD, the GFortran executable is named `egfortran`. To test it, "
"type:"
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:106
msgid "OpenCoarrays"
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:108
msgid ""
"[OpenCoarrays](http://www.opencoarrays.org/) is an open-source software "
"project that produces an application binary interface (ABI) used by the "
"GNU Compiler Collection (GCC) Fortran front-end to build executable "
"programs that leverage the parallel programming features of Fortran 2018."
" Since OpenCoarrays is not a separate compiler, we include it here, under"
" gfortran."
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:110
msgid ""
"While with gfortran you can compile perfectly valid code using coarrays, "
"the generated binaries will only run in a single image (_image_ is a "
"Fortran term for a parallel process), that is, in serial mode. "
"OpenCoarrays allows running code in parallel on shared- and distributed-"
"memory machines, similar to MPI:"
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:115
msgid ""
"The process of installation is provided in a clear and comprehensive "
"manner on the official site."
msgstr ""

#: ../../source/learn/os_setup/install_gfortran.md:117
msgid ""
"We emphasize that native installation on Windows is not possible. It is "
"only possible through WSL."
msgstr ""

#: ../../source/learn/os_setup/text_editors.md:3
msgid ""
"After you have installed your compiler, you will need a text editor to "
"write your code. Any text editor can serve this purpose, even the built-"
"in Notepad on Windows. However, there are specialized editors for "
"programming languages. These editors come with many useful features like "
"auto-complete, syntax-highlighting, auto-indentation, brace-matching, and"
" many more, with few of them pre-installed and the majority in form of "
"external plug-ins. This means that by default these features are not "
"installed in the editor, but it's up to you to search for them through a "
"package manager and install and configure them manually."
msgstr ""

#: ../../source/learn/os_setup/text_editors.md:5
msgid ""
"Here's a list of the most popular text editors that support Fortran "
"syntax, in alphabetical order:"
msgstr ""

#: ../../source/learn/os_setup/text_editors.md:6
msgid "[Atom](https://atom.io/)"
msgstr ""

#: ../../source/learn/os_setup/text_editors.md:7
msgid "[Emacs](https://www.gnu.org/software/emacs/)"
msgstr ""

#: ../../source/learn/os_setup/text_editors.md:8
msgid "[NotePad++](https://notepad-plus-plus.org/)"
msgstr ""

#: ../../source/learn/os_setup/text_editors.md:9
msgid "[SublimeText](https://www.sublimetext.com/)"
msgstr ""

#: ../../source/learn/os_setup/text_editors.md:10
msgid "[Vim](https://www.vim.org/) and [Neovim](https://neovim.io/)"
msgstr ""

#: ../../source/learn/os_setup/text_editors.md:11
msgid "[Visual Studio Code](https://code.visualstudio.com/)"
msgstr ""

#: ../../source/learn/os_setup/text_editors.md:13
msgid ""
"A comprehensive list with more choices is provided in "
"[fortranwiki.org](http://fortranwiki.org/fortran/show/Source+code+editors)."
msgstr ""

#: ../../source/learn/os_setup/text_editors.md:15
msgid "Things to consider before choosing a text editor:"
msgstr ""

#: ../../source/learn/os_setup/text_editors.md:16
msgid ""
"**Ergonomics:** This is purely subjective and concerns how easy, "
"uninterrupted the UI (User Interface) feels to the developer while using "
"the editor."
msgstr ""

#: ../../source/learn/os_setup/text_editors.md:17
msgid ""
"**Extensibility:** As mentioned above, text editors come with many "
"features as external packages. The variety, the installation process, the"
" documentation, and user-friendliness of the packages all fall under this"
" category."
msgstr ""

#: ../../source/learn/os_setup/text_editors.md:18
msgid ""
"**Speed:** With how powerful modern hardware can be, the speed of editors"
" is becoming of minor importance. However, for the less powerful systems,"
" you may want to consider this as well. Heavyweight editors may impact "
"the writing performance. For example, you can expect Atom and VSCode to "
"run slower than the lightweight editors like Vim or Emacs."
msgstr ""

#: ../../source/learn/os_setup/text_editors.md:19
msgid ""
"**Learning curve:** Last but not least, new users should consider how "
"easy it is to get used to a new editor. Vim and Emacs have a steep "
"learning curve and are notoriously difficult for newcomers. They offer a "
"uniquely different experience than any other editor by forcing you to use"
" the keyboard for all editing tasks."
msgstr ""

#: ../../source/learn/os_setup/text_editors.md:21
msgid "Configuring VS Code"
msgstr ""

#: ../../source/learn/os_setup/text_editors.md:23
msgid ""
"With the editor opened, at the main UI, at the buttoned-column on the "
"left, there is a *four-square-shaped* icon to open the Marketplace for "
"extensions.  Install [Modern "
"Fortran](https://marketplace.visualstudio.com/items?itemName=krvajalm"
".linter-gfortran) for syntax highlighting, linting and Language Server "
"support and formatting."
msgstr ""

#: ../../source/learn/os_setup/text_editors.md:26
msgid "Additional Tools"
msgstr ""

#: ../../source/learn/os_setup/text_editors.md:28
msgid ""
"The following extensions are not essential but most users might find them"
" useful:"
msgstr ""

#: ../../source/learn/os_setup/text_editors.md:30
msgid ""
"[GitLens](https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens)"
" for advanced Git visualization and operations."
msgstr ""
"[GitLens](https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens)"
" para operações e visualizações avançadas no Git."

#: ../../source/learn/os_setup/text_editors.md:31
msgid ""
"[CMake](https://marketplace.visualstudio.com/items?itemName=ms-vscode"
".cmake-tools) for full-featured CMake integration in VS Code."
msgstr ""

#: ../../source/learn/os_setup/text_editors.md:32
msgid ""
"[Remote Development](https://marketplace.visualstudio.com/items?itemName"
"=ms-vscode-remote.vscode-remote-extensionpack) for working with "
"containers, on a remote machines, or in the Windows Subsystem for Linux "
"(WSL)."
msgstr ""

#: ../../source/learn/os_setup/text_editors.md:33
msgid ""
"[Even Better TOML by "
"tamasfe](https://marketplace.visualstudio.com/items?itemName=tamasfe"
".even-better-toml). For Fortran developers that are using the new "
"[fpm](https://github.com/fortran-lang/fpm) *Fortran Package Manager*, a "
"TOML language support might come in handy."
msgstr ""

#: ../../source/learn/os_setup/text_editors.md:35
msgid "Configuring SublimeText"
msgstr ""

#: ../../source/learn/os_setup/text_editors.md:37
msgid ""
"A well structured gist that provides instructions on how to set up "
"SublimeText for Fortran developement is given "
"[here](https://gist.github.com/sestelo/6b01e1405c1d0fa7f0ecdc951caaa995)."
msgstr ""

#: ../../source/learn/os_setup/text_editors.md:39
msgid "Configuring Atom"
msgstr ""

#: ../../source/learn/os_setup/text_editors.md:41
msgid ""
"Atom's configuration process is similar to VSCode one. At the main "
"interface, if the *Welcome Guide* page is already opened for you, just "
"click the **Install a Package** option, otherwise you can find the same "
"option through the navigation bar at the top by clicking *Packages*. In "
"doing so a new page under *Settings* opens where you can just start "
"typing the package you want to install."
msgstr ""

#: ../../source/learn/os_setup/text_editors.md:43
msgid ""
"One package that includes many Fortran features is [IDE-FORTRAN by "
"hansec](https://atom.io/packages/ide-fortran). It needs the following "
"packages to be installed:"
msgstr ""

#: ../../source/learn/os_setup/text_editors.md:44
msgid "[atom-ide ui by facebook-atom](https://atom.io/packages/atom-ide-ui)"
msgstr ""

#: ../../source/learn/os_setup/text_editors.md:45
msgid "[language-fortran by dparkins](https://atom.io/packages/language-fortran)"
msgstr ""

#: ../../source/learn/os_setup/text_editors.md:47
msgid ""
"Additionally just like in VSCode it needs "
"[Python](https://www.python.org/) and [Fortran Language "
"Server](https://github.com/hansec/fortran-language-server) to be "
"installed."
msgstr ""

#: ../../source/learn/os_setup/text_editors.md:49
msgid ""
"For version control a very popular package is [Git-Plus by "
"akonwi](https://atom.io/packages/git-plus)."
msgstr ""

#: ../../source/learn/os_setup/tips.md:3
msgid ""
"To conclude, we give a few tips that may help you to choose a compiler "
"and an editor or an IDE."
msgstr ""

#: ../../source/learn/os_setup/tips.md:5
msgid ""
"Check [this site](https://www.fortran.uk/fortran-compiler-comparisons/) "
"for a comprehensive comparison of Fortran compilers."
msgstr ""

#: ../../source/learn/os_setup/tips.md:6
msgid ""
"Since NVFortran version 17.1, the support for compute capability 2.0 "
"(Fermi) and lower has been removed. This is important because, at any "
"time, only the latest compiler version is free to download. Users with "
"older GPUs will not be able to run CUDA Fortran with the current (20.7) "
"or future versions. Read [this "
"wiki](https://www.wikiwand.com/en/CUDA#/GPUs_supported) to find your "
"GPU's compute capability and cross-check with the latest CUDA SDK that "
"supports it."
msgstr ""

#: ../../source/learn/os_setup/tips.md:7
msgid ""
"There are many online Fortran compilers. These are websites that offer a "
"basic text editor and allow you to compile and run your code on a remote "
"server. They are particularly useful for quick prototyping and testing. "
"Although we promised neutrality, we recommend that you check out the "
"open-source and free [Compiler Explorer](https://godbolt.org/), an "
"amazing tool with unique features."
msgstr ""

#: ../../source/learn/os_setup/tips.md:8
msgid ""
"Arguably the most popular text editor, according to recent online "
"surveys, is the Visual Studio Code, developed by Microsoft."
msgstr ""

#: ../../source/learn/os_setup/tips.md:9
msgid ""
"The most popular free IDEs are the Code::Blocks and Geany. Many "
"commercial IDEs give up to 30 days of free trial. Keep in mind that the "
"prices of commercial IDEs may vary, and some may be quite affordable. "
"Finally, if you are a student, an open-source developer, or a …hobbyist "
"*Fortraner* do not hesitate to contact those companies and request a "
"discount. There have been cases, e.g., in r/fortran, where "
"representatives, from at least one company, have offered discount codes "
"to individuals looking for affordable complete solutions (IDE + "
"compiler)."
msgstr ""

#: ../../source/learn/os_setup/tips.md:10
msgid ""
"Finally, please join us on [Fortran Discourse](https://fortran-"
"lang.discourse.group/) and do not hesitate to post your questions and "
"request for further information."
msgstr ""

#: ../../source/learn/quickstart/arrays_strings.md:1
#: ../../source/learn/quickstart/index.md:11
msgid "Arrays and strings"
msgstr ""

#: ../../source/learn/quickstart/arrays_strings.md:3
msgid ""
"More often than not, we need to store and operate on long lists of "
"numbers as opposed to just the single scalar variables that we have been "
"using so far; in computer programming such lists are called  _arrays_."
msgstr ""

#: ../../source/learn/quickstart/arrays_strings.md:6
msgid ""
"Arrays are _multidimensional_ variables that contain more than one value "
"where each value is accessed using one or more indices."
msgstr ""

#: ../../source/learn/quickstart/arrays_strings.md:9
msgid ""
"Arrays in Fortran are _one-based_ by default; this means that the first "
"element along any dimension is at index 1."
msgstr ""

#: ../../source/learn/quickstart/arrays_strings.md:13
msgid "Array declaration"
msgstr ""

#: ../../source/learn/quickstart/arrays_strings.md:15
msgid ""
"We can declare arrays of any type. There are two common notations for "
"declaring array variables: using the `dimension` attribute or by "
"appending the array dimensions in parentheses to the variable name."
msgstr ""

#: ../../source/learn/quickstart/arrays_strings.md:18
msgid "__Example:__ static array declaration"
msgstr ""

#: ../../source/learn/quickstart/arrays_strings.md:39
msgid "Array slicing"
msgstr ""

#: ../../source/learn/quickstart/arrays_strings.md:41
msgid ""
"A powerful feature of the Fortran language is its built-in support for "
"array operations; we can perform operations on all or part of an array "
"using array _slicing_ notation:"
msgstr ""

#: ../../source/learn/quickstart/arrays_strings.md:44
msgid "__Example:__ array slicing"
msgstr ""

#: ../../source/learn/quickstart/arrays_strings.md:66
msgid ""
"Fortran arrays are stored in _column-major_ order; the first index varies"
" fastest."
msgstr ""

#: ../../source/learn/quickstart/arrays_strings.md:69
msgid "Allocatable (dynamic) arrays"
msgstr ""

#: ../../source/learn/quickstart/arrays_strings.md:71
msgid ""
"So far we have specified the size of our array in our program code---this"
" type of array is known as a _static_ array since its size is fixed when "
"we compile our program."
msgstr ""

#: ../../source/learn/quickstart/arrays_strings.md:75
msgid ""
"Quite often, we do not know how big our array needs to be until we run "
"our program, for example, if we are reading data from a file of unknown "
"size."
msgstr ""

#: ../../source/learn/quickstart/arrays_strings.md:77
msgid ""
"For this problem, we need `allocatable` arrays. These are _allocated_ "
"while the program is running once we know how big the array needs to be."
msgstr ""

#: ../../source/learn/quickstart/arrays_strings.md:80
msgid "__Example:__ allocatable arrays"
msgstr ""

#: ../../source/learn/quickstart/arrays_strings.md:99
msgid ""
"Allocatable local arrays are deallocated automatically when they go out "
"of scope."
msgstr ""

#: ../../source/learn/quickstart/arrays_strings.md:103
msgid "Character strings"
msgstr ""

#: ../../source/learn/quickstart/arrays_strings.md:106
msgid "__Example:__ static character string"
msgstr ""

#: ../../source/learn/quickstart/arrays_strings.md:126
msgid "__Example:__ allocatable character string"
msgstr ""

#: ../../source/learn/quickstart/arrays_strings.md:147
msgid "Array of strings"
msgstr ""

#: ../../source/learn/quickstart/arrays_strings.md:149
msgid ""
"An array of strings can be expressed in Fortran as an array of "
"`character` variables. All elements in a `character` array have equal "
"length. However, strings of varying lengths can be provided as input to "
"the array constructor, as shown in the example below. They will be "
"truncated or right-padded with spaces if they are longer or shorter, "
"respectively, than the declared length of the `character` array. Finally,"
" we use the intrinsic function `trim` to remove any excess spaces when "
"printing the values to the standard output."
msgstr ""

#: ../../source/learn/quickstart/arrays_strings.md:156
msgid "__Example:__ string array"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:1
#: ../../source/learn/quickstart/index.md:11
msgid "Derived Types"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:3
msgid ""
"As discussed previously in [Variables](variables), there are five built-"
"in data types in Fortran. A _derived type_ is a special form of data type"
" that can encapsulate other built-in types as well as other derived "
"types. It could be considered equivalent to _struct_ in the C and C++ "
"programming languages."
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:5
msgid "A quick take on derived types"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:7
msgid "Here's an example of a basic derived type:"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:16
msgid ""
"The syntax to create a variable of type `t_pair` and access its members "
"is:"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:25
msgid "The percentage symbol `%` is used to access the members of a derived type."
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:27
msgid ""
"In the above snippet, we declared an instance of a derived type and "
"initialized its members explicitly. You can also initialize derived type "
"members by invoking the derived type constructor."
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:31
msgid "Example using the derived type constructor:"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:38
msgid "Example with default initialization:"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:51
msgid "Derived types in detail"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:53
msgid ""
"The full syntax of a derived type with all optional properties is "
"presented below:"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:65
msgid "Options to declare a derived type"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:67
msgid "`attribute-list` may refer to the following:"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:69
msgid "_access-type_ that is either `public` or `private`"
msgstr "_access-type_ ou é `public` ou é `private`"

#: ../../source/learn/quickstart/derived_types.md:70
msgid "`bind(c)` offers interoperability with C programming language"
msgstr "`bind(c)` oferece interoperabilidade com a linguagem de programação C"

#: ../../source/learn/quickstart/derived_types.md:71
msgid ""
"`extends(`_parent_`)`, where _parent_ is the name of a previously "
"declared derived type from which the current derived type will inherit "
"all its members and functionality"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:72
msgid ""
"`abstract` -- an object oriented feature that is covered in the advanced "
"programming tutorial"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:74
msgid ""
"If the attribute `bind(c)` or the statement `sequence` is used, then a "
"derived type cannot have the attribute `extends` and vice versa."
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:76
msgid ""
"The `sequence` attribute may be used only to declare that the following  "
"members should be accessed in the same order as they are defined within "
"the derived type."
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:78
msgid "Example with `sequence`:"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:89
msgid ""
"The use of the statement `sequence` presupposes that the data types "
"defined below are neither of `allocatable` nor of `pointer` type. "
"Furthermore, it does not imply that these data types will be stored in "
"memory in any particular form, i.e., there is no relation to the "
"`contiguous` attribute."
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:91
msgid ""
"The _access-type_ attributes `public` and `private`, if used, declare "
"that all member-variables declared below will be automatically assigned "
"the attribute accordingly."
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:93
msgid ""
"The attribute `bind(c)` is used to achieve compatibility between "
"Fortran's derived type and C's struct."
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:95
msgid "Example with `bind(c)`:"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:107
msgid "matches the following C struct type:"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:113
msgid ""
"A fortran derived type with the attribute `bind(c)` cannot have the "
"`sequence` and `extends` attributes. Furthermore it cannot contain any "
"Fortran `pointer` or `allocatable` types."
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:115
msgid ""
"`parameterized-declaration-list` is an optional feature. If used, then "
"the parameters must be listed in place of `[parameterized-definition-"
"statements]` and must be either `len` or `kind` parameters or both."
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:117
msgid ""
"Example of a derived type with `parameterized-declaration-list` and with "
"the attribute `public`:"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:139
msgid ""
"In this example the parameter `k` has already been assigned a default "
"value of `kind(0.0)` (single-precision floating-point). Therefore, it can"
" be omitted, as is the case here in the declaration inside the main "
"program."
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:141
msgid ""
"By default, derived types and their members are public. However, in this "
"example, the attribute `private` is used at the beginning of the module. "
"Therefore, everything within the module will be by default `private` "
"unless explicitly declared as `public`. If the type `t_matrix` was not "
"given the attribute `public` in the above example, then the compiler "
"would throw an error inside `program test`."
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:143
msgid ""
"The attribute `extends` was added in the F2003 standard and introduces an"
" important feature of the object oriented paradigm (OOP), namely "
"inheritance. It allows code reusability by letting child types derive "
"from extensible parent types: `type, extends(parent) :: child`. Here, "
"`child` inherits all the members and functionality from `type :: parent`."
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:145
msgid "Example with the attribute `extends`:"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:205
msgid "Options to declare members of a derived type"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:207
msgid ""
"`[member-variables]` refers to the declaration of all the member data "
"types. These data types can be of any built-in data type, and/or of other"
" derived types, as already showcased in the above examples. However, "
"member-variables can have their own extensive syntax, in form of: `type "
"[,member-attributes] :: name[attr-dependent-spec][init]`"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:210
msgid "`type`: any built-in type or other derived type"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:212
msgid "`member-attributes` (optional):"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:214
msgid "`public` or `private` access attributes"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:215
msgid "`protected` access attribute"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:216
msgid "`allocatable` with or without `dimension` to specify a dynamic array"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:217
msgid "`pointer`, `codimension`, `contiguous`, `volatile`, `asynchronous`"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:219
msgid "Examples of common cases:"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:241
msgid ""
"The following attributes: `pointer`, `codimension`, `contiguous`, "
"`volatile`, `asynchronous` are advanced features that will not be "
"addressed in the *Quickstart* tutorial. However, they are presented here,"
" in order for the readers to know that these features do exist and be "
"able to recognize them. These features will be covered in detail in the "
"upcoming *Advanced programing* mini-book."
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:243
msgid "Type-bound procedures"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:245
msgid ""
"A derived type can contain functions or subroutines that are *bound* to "
"it. We'll refer to them as _type-bound procedures_. Type-bound procedures"
" follow the `contains` statement that, in turn, follows all member "
"variable declarations."
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:247
msgid ""
"It is impossible to describe type-bound procedures in full without "
"delving into OOP features of modern Fortran. For now we'll focus on a "
"simple example to show their basic use."
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:249
msgid "Here's an example of a derived type with a basic type-bound procedure:"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:292
msgid "What is new:"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:294
msgid ""
"`self` is an arbitrary name that we chose to represent the instance of "
"the derived type `t_square` inside the type-bound function. This allows "
"us to access its members and to automatically pass it as an argument when"
" we invoke a type-bound procedure."
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:295
msgid ""
"We now use `class(t_square)` instead of `type(t_square)` in the interface"
" of the `area` function. This allows us to invoke the `area` function "
"with any derived type that extends `t_square`. The keyword `class` "
"introduces the OOP feature polymorphism."
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:297
msgid ""
"In the above example, the type-bound procedure `area` is defined as a "
"function and can be invoked only in an expression, for example `x = "
"sq%area()` or `print *, sq%area()`. If you define it instead as a "
"subroutine, you can invoke it from its own `call` statement:"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:315
msgid ""
"In contrast to the example with the type-bound function, we now have two "
"arguments:"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:317
msgid ""
"`class(t_square), intent(in) :: self` -- the instance of the derived type"
" itself"
msgstr ""

#: ../../source/learn/quickstart/derived_types.md:318
msgid ""
"`real, intent(out) :: x` -- used to store the calculated area and return "
"to the caller"
msgstr ""

#: ../../source/learn/quickstart/hello_world.md:1
#: ../../source/learn/quickstart/hello_world.md:39
#: ../../source/learn/quickstart/index.md:11
msgid "Hello world"
msgstr ""

#: ../../source/learn/quickstart/hello_world.md:3
msgid ""
"In this part of the tutorial, we will write our first Fortran program: "
"the ubiquitous [\"Hello, "
"World!\"](https://en.wikipedia.org/wiki/%22Hello,_World!%22_program) "
"example."
msgstr ""

#: ../../source/learn/quickstart/hello_world.md:6
msgid ""
"However, before we can write our program, we need to ensure that we have "
"a Fortran compiler set up."
msgstr ""

#: ../../source/learn/quickstart/hello_world.md:9
msgid ""
"Fortran is a *compiled language*, which means that, once written, the "
"source code must be passed through a compiler to produce a machine "
"executable that can be run."
msgstr ""

#: ../../source/learn/quickstart/hello_world.md:13
msgid "Compiler setup"
msgstr ""

#: ../../source/learn/quickstart/hello_world.md:15
msgid ""
"In this tutorial, we'll work with the free and open source  [GNU Fortran "
"compiler (gfortran)](https://gcc.gnu.org/fortran/),  which is part of the"
"  [GNU Compiler Collection (GCC)](https://gcc.gnu.org/)."
msgstr ""

#: ../../source/learn/quickstart/hello_world.md:20
msgid ""
"To install gfortran on Linux, use your system package manager. On macOS, "
"you can install gfortran using [Homebrew](https://brew.sh/) or "
"[MacPorts](https://www.macports.org/). On Windows, you can get native "
"binaries [here](http://www.equation.com/servlet/equation.cmd?fa=fortran)."
msgstr ""

#: ../../source/learn/quickstart/hello_world.md:24
msgid ""
"To check if you have _gfortran_ setup correctly, open a terminal and run "
"the following command:"
msgstr ""

#: ../../source/learn/quickstart/hello_world.md:30
msgid "this should output something like:"
msgstr ""

#: ../../source/learn/quickstart/hello_world.md:41
msgid ""
"Once you have set up your compiler, open a new file in your favourite "
"code editor and enter the following:"
msgstr ""

#: ../../source/learn/quickstart/hello_world.md:50
msgid ""
"Having saved your program to `hello.f90`, compile at the command line "
"with:"
msgstr ""

#: ../../source/learn/quickstart/hello_world.md:55
msgid ""
"`.f90` is the standard file extension for modern Fortran source files. "
"The 90 refers to the first modern Fortran standard in 1990."
msgstr ""

#: ../../source/learn/quickstart/hello_world.md:58
msgid "To run your compiled program:"
msgstr ""

#: ../../source/learn/quickstart/hello_world.md:64
msgid ""
"Congratulations, you've written, compiled and run your first Fortran "
"program! In the next part of this tutorial, we will introduce variables "
"for storing data."
msgstr ""

#: ../../source/learn/quickstart/index.md:11
#: ../../source/learn/quickstart/operators_control_flow.md:1
msgid "Operators and flow control"
msgstr ""

#: ../../source/learn/quickstart/index.md:11
#: ../../source/learn/quickstart/organising_code.md:1
msgid "Organising code structure"
msgstr ""

#: ../../source/learn/quickstart/index.md:11
#: ../../source/learn/quickstart/variables.md:1
msgid "Variables"
msgstr ""

#: ../../source/learn/quickstart/index.md:1
msgid "Quickstart tutorial"
msgstr ""

#: ../../source/learn/quickstart/index.md:3
msgid ""
"This quickstart tutorial gives an overview of the Fortran programming "
"language and its syntax for common structured programming concepts "
"including: types, variables, arrays, control flow and functions."
msgstr ""

#: ../../source/learn/quickstart/index.md:7
msgid ""
"The contents of this tutorial are shown in the navigation bar on the left"
" with the current page highlighted bold."
msgstr ""

#: ../../source/learn/quickstart/index.md:9
msgid ""
"Use the _Next_ button at the bottom to start the tutorial with a _Hello "
"World_ example."
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:3
msgid ""
"One of the powerful advantages of computer algorithms, compared to simple"
" mathematical formulae, comes in the form of program _branching_ whereby "
"the program can decide which instructions to execute next based on a "
"logical condition."
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:7
msgid "There are two main forms of controlling program flow:"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:9
msgid ""
"_Conditional_ (if): choose program path based on a boolean (true or "
"false) value"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:11
msgid "_Loop_: repeat a portion of code multiple times"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:15
msgid "Logical operators"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:16
msgid ""
"Before we use a conditional branching operator, we need to be able to "
"form a logical expression."
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:19
msgid ""
"To form a logical expression, the following set of relational operators "
"are available:"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md
#: ../../source/learn/quickstart/variables.md
msgid "Operator &nbsp;"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md
msgid "Alternative &nbsp;"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md
#: ../../source/learn/quickstart/variables.md
msgid "Description"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md
msgid "`==`"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md
msgid "`.eq.`"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md
msgid "Tests for equality of two operands"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md
msgid "`/=`"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md
msgid "`.ne.`"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md
msgid "Test for inequality of two operands"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md
msgid "`> `"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md
msgid "`.gt.`"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md
msgid "Tests if left operand is strictly greater than right operand"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md
msgid "`< `"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md
msgid "`.lt.`"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md
msgid "Tests if left operand is strictly less than right operand"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md
msgid "`>=`"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md
msgid "`.ge.`"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md
msgid "Tests if left operand is greater than or equal to right operand"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md
msgid "`<=`"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md
msgid "`.le.`"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md
msgid "Tests if left operand is less than or equal to right operand"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:32
msgid "as well as the following logical operators:"
msgstr "bem como os operadores lógicos a seguir:"

#: ../../source/learn/quickstart/operators_control_flow.md
msgid "`.and.`"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md
msgid "TRUE if both left and right operands are TRUE"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md
msgid "`.or.`"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md
msgid "TRUE if either left or right or both operands are TRUE"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md
msgid "`.not.`"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md
msgid "TRUE if right operand is FALSE"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md
msgid "`.eqv.`"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md
msgid "TRUE if left operand has same logical value as right operand"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md
msgid "`.neqv.`"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md
msgid "TRUE if left operand has the opposite logical value as right operand"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:45
msgid "Conditional construct (`if`)"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:47
msgid ""
"In the following examples, a conditional `if` construct is used to print "
"out a message to describe the nature of the `angle` variable:"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:50
msgid "__Example:__ single branch `if`"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:58
msgid ""
"In this first example, the code within the `if` construct is _only "
"executed if_ the test expression (`angle < 90.0`) is true."
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:62
msgid ""
"It is good practice to indent code within constructs such as `if` and "
"`do` to make code more readable."
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:66
#, python-format
msgid ""
"{% include tip.html content=\"It is good practice to indent code within "
"constructs such as `if` and `do` to make code more readable.\" %}"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:69
msgid ""
"We can add an alternative branch to the construct using the `else` "
"keyword:"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:71
msgid "__Example:__ two-branch `if`-`else`"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:81
msgid ""
"Now there are two _branches_ in the `if` construct, but _only one branch "
"is executed_ depending on the logical expression following the `if` "
"keyword."
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:84
msgid ""
"We can actually add any number of branches using `else if` to specify "
"more conditions:"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:86
msgid "__Example:__ multi-branch  `if`-`else if`-`else`"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:97
msgid ""
"When multiple conditional expressions are used, each conditional "
"expression is tested only if none of the previous expressions have "
"evaluated to true."
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:100
msgid "Loop constructs (`do`)"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:102
msgid ""
"In the following example, a `do` loop construct is used to print out the "
"numbers in a sequence. The `do` loop has an integer _counter_ variable "
"which is used to track which iteration of the loop is currently "
"executing. In this example we use a common name for this counter "
"variable: `i`."
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:107
msgid ""
"When we define the start of the `do` loop, we use our counter variable "
"name followed by an equals (`=`) sign to specify the start value and "
"final value of our counting variable."
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:110
msgid "__Example:__ `do` loop"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:120
msgid "__Example:__ `do` loop with skip"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:130
msgid "Conditional loop (`do while`)"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:132
msgid ""
"A condition may be added to a `do` loop with the `while` keyword. The "
"loop will be executed while the condition given in `while()` evaluates to"
" `.true.`."
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:135
msgid "__Example:__ `do while()` loop"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:148
msgid "Loop control statements (`exit` and `cycle`)"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:150
msgid ""
"Most often than not, loops need to be stopped if a condition is met. "
"Fortran provides two executable statements to deal with such cases."
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:153
msgid ""
"`exit` is used to quit the loop prematurely. It is usually enclosed "
"inside an `if`."
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:155
msgid "__Example:__ loop with `exit`"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:169
msgid ""
"On the other hand, `cycle` skips whatever is left of the loop and goes "
"into the next cycle."
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:171
msgid "__Example:__ loop with `cycle`"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:185
msgid ""
"When used within nested loops, the `cycle` and `exit` statements operate "
"on the innermost loop."
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:188
msgid "Nested loop control: tags"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:190
msgid ""
"A recurring case in any programming language is the use of nested loops. "
"Nested loops refer to loops that exist within another loop. Fortran "
"allows the programmer to _tag_ or _name_ each loop. If loops are tagged, "
"there are two potential benefits:"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:191
msgid ""
"The readability of the code may be improved (when the naming is "
"meaningful)."
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:192
msgid ""
"`exit` and `cycle` may be used with tags, which allows for very fine-"
"grained control of the loops."
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:194
msgid "__Example:__ tagged nested loops"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:209
msgid "Parallelizable loop (`do concurrent`)"
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:211
msgid ""
"The `do concurrent` loop is used to explicitly specify that the _inside "
"of the loop has no interdependencies_; this informs the compiler that it "
"may use parallelization/_SIMD_ to speed up execution of the loop and "
"conveys programmer intention more clearly. More specifically, this means "
"that any given loop iteration does not depend on the prior execution of "
"other loop iterations. It is also necessary that any state changes that "
"may occur must only happen within each `do concurrent` loop. These "
"requirements place restrictions on what can be placed within the loop "
"body."
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:217
msgid ""
"Simply replacing a `do` loop with a `do concurrent` does not guarantee "
"parallel execution. The explanation given above does not detail all the "
"requirements that need to be met in order to write a correct `do "
"concurrent` loop. Compilers are also free to do as they see fit, meaning "
"they may not optimize the loop (e.g., a small number of iterations doing "
"a simple calculation, like the >below example). In general, compiler "
"flags are required to activate possible parallelization for `do "
"concurrent` loops."
msgstr ""

#: ../../source/learn/quickstart/operators_control_flow.md:223
msgid "__Example:__ `do concurrent()` loop"
msgstr ""

#: ../../source/learn/quickstart/organising_code.md:3
msgid ""
"Most programming languages allow you to collect commonly-used code into "
"_procedures_ that can be reused by _calling_ them from other sections of "
"code."
msgstr ""

#: ../../source/learn/quickstart/organising_code.md:6
msgid "Fortran has two forms of procedure:"
msgstr ""

#: ../../source/learn/quickstart/organising_code.md:8
msgid "__Subroutine__: invoked by a `call` statement"
msgstr ""

#: ../../source/learn/quickstart/organising_code.md:9
msgid ""
"__Function__: invoked within an expression or assignment to which it "
"returns a value"
msgstr ""

#: ../../source/learn/quickstart/organising_code.md:11
msgid ""
"Both subroutines and functions have access to variables in the parent "
"scope by _argument association_; unless the `value` attribute is "
"specified, this is similar to call by reference."
msgstr ""

#: ../../source/learn/quickstart/organising_code.md:14
msgid "Subroutines"
msgstr ""

#: ../../source/learn/quickstart/organising_code.md:16
msgid ""
"The subroutine input arguments, known as _dummy arguments_, are specified"
" in parentheses after the subroutine name; the dummy argument types and "
"attributes are declared within the body of the subroutine just like local"
" variables."
msgstr ""

#: ../../source/learn/quickstart/organising_code.md:19
#: ../../source/learn/quickstart/organising_code.md:113
#: ../../source/learn/quickstart/variables.md:130
msgid "__Example:__"
msgstr ""

#: ../../source/learn/quickstart/organising_code.md:39
msgid ""
"Note the additional `intent` attribute when declaring the dummy "
"arguments; this optional attribute signifies to the compiler whether the "
"argument is ''read-only'' (`intent(in)`) ''write-only'' (`intent(out)`) "
"or ''read-write'' (`intent(inout)`) within the procedure. In this "
"example, the subroutine does not modify its arguments, hence all "
"arguments are `intent(in)`."
msgstr ""

#: ../../source/learn/quickstart/organising_code.md:43
msgid ""
"It is good practice to always specify the `intent` attribute for dummy "
"arguments; this allows the compiler to check for unintentional errors and"
" provides self-documentation."
msgstr ""

#: ../../source/learn/quickstart/organising_code.md:47
msgid "We can call this subroutine from a program using a `call` statement:"
msgstr ""

#: ../../source/learn/quickstart/organising_code.md:61
msgid ""
"This example uses a so-called _explicit-shape_ array argument since we "
"have passed additional variables to describe the dimensions of the array "
"`A`; this will not be necessary if we place our subroutine in a module as"
" described later."
msgstr ""

#: ../../source/learn/quickstart/organising_code.md:65
msgid "Functions"
msgstr ""

#: ../../source/learn/quickstart/organising_code.md:79
msgid "In production code, the intrinsic function `norm2` should be used."
msgstr ""

#: ../../source/learn/quickstart/organising_code.md:81
msgid "To execute this function:"
msgstr ""

#: ../../source/learn/quickstart/organising_code.md:97
msgid ""
"It is good programming practice for functions not to modify their "
"arguments---that is, all function arguments should be `intent(in)`. Such "
"functions are known as `pure` functions. Use subroutines if your "
"procedure needs to modify its arguments."
msgstr ""

#: ../../source/learn/quickstart/organising_code.md:102
msgid "Modules"
msgstr ""

#: ../../source/learn/quickstart/organising_code.md:104
msgid ""
"Fortran modules contain definitions that are made accessible to programs,"
" procedures, and other modules through the `use` statement. They can "
"contain data objects, type definitions, procedures, and interfaces."
msgstr ""

#: ../../source/learn/quickstart/organising_code.md:107
msgid ""
"Modules allow controlled scoping extension whereby entity access is made "
"explicit"
msgstr ""

#: ../../source/learn/quickstart/organising_code.md:108
msgid ""
"Modules automatically generate explicit interfaces required for modern "
"procedures"
msgstr ""

#: ../../source/learn/quickstart/organising_code.md:110
msgid ""
"It is recommended to always place functions and subroutines within "
"modules."
msgstr ""

#: ../../source/learn/quickstart/organising_code.md:142
msgid ""
"Compare this `print_matrix` subroutine with that written outside of a "
"module we no longer have to explicitly pass the matrix dimensions and can"
" instead take advantage of _assumed-shape_ arguments since the module "
"will generate the required explicit interface for us. This results in a "
"much simpler subroutine interface."
msgstr ""

#: ../../source/learn/quickstart/organising_code.md:147
msgid "To `use` the module within a program:"
msgstr "Para usar um módulo dentro de um program, `use`:"

#: ../../source/learn/quickstart/organising_code.md:162
msgid "__Example:__ explicit import list"
msgstr ""

#: ../../source/learn/quickstart/organising_code.md:168
msgid "__Example:__ aliased import"
msgstr ""

#: ../../source/learn/quickstart/organising_code.md:174
msgid ""
"Each module should be written in a separate `.f90` source file. Modules "
"need to be compiled prior to any program units that `use` them."
msgstr ""

#: ../../source/learn/quickstart/variables.md:3
msgid ""
"Variables store information that can be manipulated by the program. "
"Fortran is a _strongly typed_ language, which means that each variable "
"must have a type."
msgstr ""

#: ../../source/learn/quickstart/variables.md:7
msgid "There are 5 built-in data types in Fortran:"
msgstr ""

#: ../../source/learn/quickstart/variables.md:9
msgid "`integer` -- for data that represent whole numbers, positive or negative"
msgstr ""

#: ../../source/learn/quickstart/variables.md:10
msgid "`real` -- for floating-point data (not a whole number)"
msgstr ""

#: ../../source/learn/quickstart/variables.md:11
msgid "`complex` -- pair consisting of a real part and an imaginary part"
msgstr ""

#: ../../source/learn/quickstart/variables.md:12
msgid "`character` -- for text data"
msgstr ""

#: ../../source/learn/quickstart/variables.md:13
msgid "`logical` -- for data that represent boolean (true or false) values"
msgstr ""

#: ../../source/learn/quickstart/variables.md:15
msgid ""
"Before we can use a variable, we must _declare_ it; this tells the "
"compiler the variable type and any other variable attributes."
msgstr ""

#: ../../source/learn/quickstart/variables.md:18
msgid ""
"Fortran is a _statically typed_ language, which means the type of each "
"variable is fixed when the program is compiled---variable types cannot "
"change while the program is running."
msgstr ""

#: ../../source/learn/quickstart/variables.md:21
msgid "Declaring variables"
msgstr ""

#: ../../source/learn/quickstart/variables.md:23
msgid "The syntax for declaring variables is:"
msgstr ""

#: ../../source/learn/quickstart/variables.md:29
msgid ""
"where `<variable_type>` is one of the built-in variable types listed "
"above and `<variable_name>` is the name that you would like to call your "
"variable."
msgstr ""

#: ../../source/learn/quickstart/variables.md:32
msgid ""
"Variable names must start with a letter and can consist of letters, "
"numbers and underscores. In the following example we declare a variable "
"for each of the built-in types."
msgstr ""

#: ../../source/learn/quickstart/variables.md:35
msgid "__Example:__ variable declaration"
msgstr ""

#: ../../source/learn/quickstart/variables.md:50
msgid ""
"Fortran code is __case-insensitive__; you don't have to worry about the "
"capitalisation of your variable names, but it's good practice to keep it "
"consistent."
msgstr ""

#: ../../source/learn/quickstart/variables.md:53
msgid ""
"Note the additional statement at the beginning of the program: `implicit "
"none`. This statement tells the compiler that all variables will be "
"explicitly declared; without  this statement variables will be implicitly"
" typed according to the letter they begin with."
msgstr ""

#: ../../source/learn/quickstart/variables.md:57
msgid ""
"Always use the `implicit none` statement at the beginning of each program"
" and procedure. Implicit typing is considered bad practice in  modern "
"programming since it hides information leading to more program errors."
msgstr ""

#: ../../source/learn/quickstart/variables.md:62
msgid ""
"Once we have declared a variable, we can assign and reassign values to it"
" using the assignment operator `=`."
msgstr ""

#: ../../source/learn/quickstart/variables.md:64
msgid "__Example:__ variable assignment"
msgstr ""

#: ../../source/learn/quickstart/variables.md:74
msgid "Characters are surrounded by either single (`'`) or double quotes (`\"`)."
msgstr ""

#: ../../source/learn/quickstart/variables.md:76
msgid "Logical or boolean values can be either `.true.` or `.false.`."
msgstr ""

#: ../../source/learn/quickstart/variables.md:78
msgid ""
"Watch out\" content=\"for assignment at declaration: `integer :: amount ="
" 1`.  __This is NOT a normal initialisation;__ it implies the `save` "
"attribute which means that the variable retains its value between "
"procedure calls. Good practice is to initialise your variables separately"
" to their declaration."
msgstr ""

#: ../../source/learn/quickstart/variables.md:83
msgid "Standard input / output"
msgstr ""

#: ../../source/learn/quickstart/variables.md:85
msgid ""
"In our _Hello World_ example, we printed text to the command window. This"
" is commonly referred to as writing to `standard output` or `stdout`."
msgstr ""

#: ../../source/learn/quickstart/variables.md:88
msgid ""
"We can use the `print` statement introduced earlier to print variable "
"values to `stdout`:"
msgstr ""

#: ../../source/learn/quickstart/variables.md:98
msgid ""
"In a similar way, we can read values from the command window using the "
"`read` statement:"
msgstr ""

#: ../../source/learn/quickstart/variables.md:114
msgid "This input source is commonly referred to as `standard input` or `stdin`."
msgstr ""

#: ../../source/learn/quickstart/variables.md:117
msgid "Expressions"
msgstr ""

#: ../../source/learn/quickstart/variables.md:118
msgid ""
"The usual set of arithmetic operators are available, listed in order or "
"precedence:"
msgstr ""

#: ../../source/learn/quickstart/variables.md
msgid "`**`"
msgstr ""

#: ../../source/learn/quickstart/variables.md
msgid "Exponent"
msgstr ""

#: ../../source/learn/quickstart/variables.md
msgid "`*`"
msgstr ""

#: ../../source/learn/quickstart/variables.md
msgid "Multiplication"
msgstr ""

#: ../../source/learn/quickstart/variables.md
msgid "`/ `"
msgstr ""

#: ../../source/learn/quickstart/variables.md
msgid "Division"
msgstr ""

#: ../../source/learn/quickstart/variables.md
msgid "`+`"
msgstr ""

#: ../../source/learn/quickstart/variables.md
msgid "Addition"
msgstr ""

#: ../../source/learn/quickstart/variables.md
msgid "`-`"
msgstr ""

#: ../../source/learn/quickstart/variables.md
msgid "Subtraction"
msgstr ""

#: ../../source/learn/quickstart/variables.md:166
msgid "Floating-point precision"
msgstr ""

#: ../../source/learn/quickstart/variables.md:168
msgid ""
"The desired floating-point precision can be explicitly declared using a "
"`kind` parameter. The `iso_fortran_env` intrinsic module provides `kind` "
"parameters for the common 32-bit and 64-bit floating-point types."
msgstr ""

#: ../../source/learn/quickstart/variables.md:171
msgid "__Example:__ explicit real `kind`"
msgstr ""

#: ../../source/learn/quickstart/variables.md:186
msgid "Always use a `kind` suffix for floating-point literal constants."
msgstr ""

#: ../../source/learn/quickstart/variables.md:188
msgid "__Example:__ C-interoperable `kind`s"
msgstr ""

#: ../../source/learn/quickstart/variables.md:200
msgid ""
"In the next part we will learn how to use arrays for storing more than "
"one value in a variable."
msgstr ""

#: ../../source/news.md:1
msgid "News - The Fortran Programming Language"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:7
msgid "J3 February 2020 Meeting"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:9
msgid ""
"The J3 Fortran Committee meeting took place in Las Vegas, NV, on February"
" 24-28, 2020."
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:12
msgid "Attendance"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:14
msgid "The following people / companies attended:"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:16
msgid "Voting members:"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:18
msgid "Intel: Jon Steidel"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:19
msgid "HPE/Cray: Bill Long"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:20
msgid "NVIDIA: Peter Klausler, Gary Klimowicz"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:21
msgid "IBM: Daniel Chen"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:22
msgid "ARM: Srinath Vadlamani"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:23
msgid "NCAR: Dan Nagle, Magne Haveraaen"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:24
msgid "NASA: Tom Clune"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:25
msgid "JPL: Van Sneider"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:26
msgid "LANL: Zach Jibben, Ondřej Čertík"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:27
msgid "ORNL: Reuben Budiardja"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:28
msgid "LBNL: Brian Friesen"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:29
msgid "Sandia: Damian Rouson"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:30
msgid "Lionel: Steven Lionel, Malcolm Cohen, Vipul Parekh"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:31
msgid "Corbett: Bob Corbett"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:33
msgid "Others:"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:35
msgid "AMD: Richard Bleikamp"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:36
msgid "WG23: Stephen Michell (convenor), Erhard Ploedereder (member)"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:37
msgid "Structural Integrity: Brad Richardson"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:39
msgid "Proposals Discussed at Plenary"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:41
msgid "Monday 2/24"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:43
msgid "Tuesday 2/25"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:45
msgid ""
"[#22] : Default values of optional arguments "
"(<https://j3-fortran.org/doc/year/20/20-107.txt>)"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:47
msgid "Wednesday 2/26"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:49
msgid ""
"[#157] : Rank-agnostic array element and section denotation "
"(<https://j3-fortran.org/doc/year/20/20-113.txt>, "
"<https://j3-fortran.org/doc/year/20/20-115.txt>)"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:50
msgid ""
"[#158] : TYPEOF and CLASSOF "
"(<https://j3-fortran.org/doc/year/20/20-114.txt>)"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:51
msgid ""
"[#1] : Namespace for modules "
"(<https://j3-fortran.org/doc/year/20/20-108.txt>)"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:52
msgid ""
"Interpretation: FORM TEAM and failed images "
"(<https://j3-fortran.org/doc/year/20/20-102r1.txt>)"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:53
msgid ""
"Interpretation: Collective subroutines and STAT= "
"(<https://j3-fortran.org/doc/year/20/20-104r1.txt>)"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:55
msgid "Thursday 2/27"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:57
msgid ""
"Interpretation: events that cause variables to become undefined "
"(<https://j3-fortran.org/doc/year/20/20-119.txt>)"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:58
msgid ""
"Edits for SIMPLE procedures "
"(<https://j3-fortran.org/doc/year/20/20-116.txt>)"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:59
msgid "BFLOAT16 (<https://j3-fortran.org/doc/year/20/20-118.txt>)"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:60
msgid ""
"[#146] : Interpretation: allocatable component finalization "
"(<https://j3-fortran.org/doc/year/20/20-117.txt>)"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:62
msgid "Friday 2/28"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:64
msgid ""
"[#157] : Rank-agnostic syntax "
"(<https://j3-fortran.org/doc/year/20/20-120.txt>). Passed unanimously "
"with minor changes."
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:65
msgid ""
"[#156] : Protected components "
"(<https://j3-fortran.org/doc/year/20/20-121.txt>). Withdrawn to address "
"conflicting interests."
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:66
msgid ""
"[#160] : Edits for auto-allocate characters "
"(<https://j3-fortran.org/doc/year/20/20-122.txt>). Passed unanimously "
"with minor changes."
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:67
msgid ""
"Edits for procedure pointer association "
"(<https://j3-fortran.org/doc/year/20/20-123.txt>). Passed unanimously."
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:68
msgid ""
"[#157] : Edits for rank-agnostic bounds "
"(<https://j3-fortran.org/doc/year/20/20-124.txt>). Withdrawn because some"
" edits were missing and need to be added. There were concerns about "
"fitting into the framework of generics later on."
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:69
msgid ""
"[#157] : Edits for rank-agnostic array element and section denotation "
"(<https://j3-fortran.org/doc/year/20/20-125.txt>). Failed (5 v 7). "
"Missing edits, and disagreement on types vs rank-1 integers, the options "
"need to be explored more."
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:70
msgid ""
"[#157] : Edits for rank-agnostic allocation and pointer assignment "
"(<https://j3-fortran.org/doc/year/20/20-126.txt>). Passed unanimously "
"with minor changes."
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:71
msgid ""
"Interpretation: Public namelist and private variable "
"(<https://j3-fortran.org/doc/year/20/20-127.txt>). Straw vote (0 yes, 8 "
"no, 9 undecided). Passed unanimously with \"no\" alternative."
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:72
msgid ""
"Interpretation F18/015 (<https://j3-fortran.org/doc/year/20/20-105.txt>)."
" Passed unanimously."
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:75
msgid "Skipped"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:77
msgid "This was on the plan but we did not get to it:"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:79
msgid ""
"[#5] : US 27 POINTER dummy arguments, INTENT, and target modification "
"(<https://j3-fortran.org/doc/year/18/18-144r1.txt>)"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:80
msgid "[#19] : Short-circuiting proposal"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:82
msgid "More Details"
msgstr ""

#: ../../source/news/2020/02-28-J3-february-meeting.md.md:84
msgid ""
"More details available at [j3-fortran/fortran_proposals "
"#155](https://github.com/j3-fortran/fortran_proposals/issues/155) and at "
"the official [minutes](https://j3-fortran.org/doc/year/20/minutes221.txt)"
" from the meeting."
msgstr ""

#: ../../source/news/2020/04-06-Announcing-FortranCon-2020.md.md:7
msgid "FortranCon 2020"
msgstr ""

#: ../../source/news/2020/04-06-Announcing-FortranCon-2020.md.md:9
msgid ""
"FortranCon 2020, the first international conference targeting the Fortran"
" programming language, will take place on July 2-4, 2020, in Zürich, "
"Switzerland."
msgstr ""

#: ../../source/news/2020/04-06-Announcing-FortranCon-2020.md.md:14
msgid ""
"FortranCon aims to bring together developers of Fortran libraries,  "
"applications, and language itself to share their experience and ideas. "
"The conference is organized in two full days of speaker presentations  on"
" July 2 and 3, and a half-day workshop with lectures and hands-on "
"sessions on July 4. Click "
"[here](https://tcevents.chem.uzh.ch/event/12/abstracts/) to submit an "
"abstract."
msgstr ""

#: ../../source/news/2020/04-06-Announcing-FortranCon-2020.md.md:22
msgid ""
"The keynote presentation will be delivered by Steve Lionel  "
"([@doctorfortran](https://twitter.com/doctorfortran)), convener of the  "
"US Fortran Standards Committee."
msgstr ""

#: ../../source/news/2020/04-06-Announcing-FortranCon-2020.md.md:26
msgid ""
"The [registration](https://tcevents.chem.uzh.ch/event/12/registrations/)"
"  is **free of charge**, with June 1, 2020 as the deadline. Virtual "
"participation will be enabled for speakers and attendees unable to  "
"travel."
msgstr ""

#: ../../source/news/2020/04-06-Announcing-FortranCon-2020.md.md:31
msgid ""
"Read more about FortranCon 2020 "
"[here](https://tcevents.chem.uzh.ch/event/12/)."
msgstr ""

#: ../../source/news/2020/04-18-Fortran-Webinar.md.md:7
msgid "Open Source Directions Fortran webinar"
msgstr ""

#: ../../source/news/2020/04-18-Fortran-Webinar.md.md:9
msgid ""
"Ondřej Čertík ([@ondrejcertik](https://twitter.com/ondrejcertik)) and  "
"Milan Curcic ([@realmilancurcic](https://twitter.com/realmilancurcic)) "
"spoke  yesterday about the future of Fortran in Episode 40 of the Open "
"Source  Directions Webinar. We discussed the current state of the "
"language, how it's currently developed,  and what we can do today to "
"build the Fortran community, ecosystem of packages,  and developer tools."
msgstr ""

#: ../../source/news/2020/04-18-Fortran-Webinar.md.md:17
msgid "Watch the episode now:"
msgstr ""

#: ../../source/news/2020/04-18-Fortran-Webinar.md.md:21
msgid ""
"Special thanks to our hosts Melissa Mendonça  "
"([@melissawm](https://twitter.com/melissawm)) and Madicken Munk  "
"([@munkium](https://twitter.com/munkium)), as well as  "
"[OpenTeams](https://openteams.com) and "
"[QuanSight](https://www.quansight.com/) for having us."
msgstr ""

#: ../../source/news/2020/04-18-Fortran-Webinar.md.md:27
msgid ""
"You can find all previous episodes of the Open Source Directions webinar"
"  [here](https://www.quansight.com/open-source-directions)."
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:7
msgid "Fortran newsletter: May 2020"
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:13
msgid ""
"Welcome to the first monthly Fortran newsletter. It will come out on the "
"first calendar day of every month,  detailing Fortran news from the "
"previous month."
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:17
msgid "This website"
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:19
msgid ""
"If you came to this newsletter from elsewhere, welcome to the new Fortran"
" website. We built this site mid-April and hope for it to be _the_ home "
"of Fortran on the internet, which traditionally there hasn't been any to "
"date. Look around and [let us know](https://github.com/fortran-lang"
"/fortran-lang.github.io/issues)  if you have any suggestions for "
"improvement. Specifically, [Learn](/learn) and [Packages](/packages) are "
"the pages that  we'll be focusing on in the coming months.  Please help "
"us make them better!"
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:28
msgid "Standard Library"
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:30
msgid "Here's what's new in Fortran Standard Library:"
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:32
msgid ""
"[#172](https://github.com/fortran-lang/stdlib/pull/172) New function "
"`cov` in the `stdlib_experimental_stats` module to compute covariance of "
"array elements. Read the full specification [here](https://github.com"
"/fortran-lang/stdlib/blob/HEAD/src/stdlib_experimental_stats.md#cov"
"---covariance-of-array-elements)."
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:36
msgid ""
"[#168](https://github.com/fortran-lang/stdlib/pull/168) Specify "
"recommended order of attributes for dummy arguments in the  [Stdlib style"
" guide](https://github.com/fortran-lang/stdlib/blob/HEAD/STYLE_GUIDE.md)."
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:40
msgid "[#173](https://github.com/fortran-lang/stdlib/pull/173) Minor bug fix."
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:43
msgid ""
"[#170](https://github.com/fortran-lang/stdlib/pull/170) WIP: Addition of "
"`diag`, `eye`, and `trace` functions to make working with  matrices "
"easier."
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:47
#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:68
msgid "Package Manager"
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:49
msgid ""
"In the past month we've seen the first working implementation of the "
"[Fortran Package Manager (FPM)](https://github.com/fortran-lang/fpm). "
"Specifically:"
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:52
msgid "FPM supports three commands:"
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:53
msgid "`fpm build`--compiles and links your application and/or library."
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:54
msgid "`fpm test`--runs tests if your package has any test programs."
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:55
msgid "`fpm run`--runs the application if your package has an executable program."
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:56
msgid "FPM can build an executable program, a library, or a combination of both."
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:57
msgid ""
"Currently only gfortran is supported as the compiler backend. FPM will "
"suport other compilers soon."
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:59
msgid ""
"Read the [FPM packaging guide](https://github.com/fortran-"
"lang/fpm/blob/HEAD/PACKAGING.md) to learn how to build your package with "
"FPM."
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:62
msgid ""
"FPM is still in very early development, and we need as much help as we "
"can get. Here's how you can help today:"
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:65
msgid "Try to use it. Does it work? No? Let us know!"
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:66
#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:83
#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:80
#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:73
#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:56
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:93
#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:91
#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:98
#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:176
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:124
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:117
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:158
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:139
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:121
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:155
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:170
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:141
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:206
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:135
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:150
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:163
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:141
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:122
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:134
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:152
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:137
msgid ""
"Browse the [open issues](https://github.com/fortran-lang/fpm/issues) and "
"see if you can help implement any fixes or features."
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:67
msgid "Adapt your Fortran package for FPM."
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:68
#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:85
#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:82
#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:75
#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:58
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:95
#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:93
#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:100
#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:178
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:126
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:119
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:160
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:141
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:123
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:157
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:172
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:143
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:208
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:137
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:152
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:165
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:143
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:124
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:136
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:154
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:139
msgid "Improve the documentation."
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:70
msgid ""
"The short term goal of FPM is to make development and installation of "
"Fortran packages with dependencies easier. Its long term goal is to build"
" a rich and decentralized ecosystem of Fortran packages and create a "
"healthy  environment in which new open source Fortran projects are "
"created and published with ease."
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:74
msgid "WG5 Convenor candidates"
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:76
msgid ""
"Last month was also the deadline for the [WG5](https://wg5-fortran.org/) "
"convenor candidates to apply for the next 3-year term (2021-2024). There "
"are two candidates:"
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:80
msgid ""
"[Steve Lionel](https://stevelionel.com), who is also the current WG5 "
"convenor, announced running for another term. Read Steve's "
"[post](https://stevelionel.com/drfortran/2020/04/25/doctor-fortran-in-"
"forward) about how he has guided the standardization process over the "
"past three years and his direction for the future."
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:85
msgid ""
"[Ondřej Čertík](https://ondrejcertik.com) has also announced announced to"
" run for the WG5 convenor. Read Ondřej's "
"[announcement](https://ondrejcertik.com/blog/2020/04/running-for-wg5"
"-convenor-announcement/) and "
"[platform](https://github.com/certik/wg5_platform_2020) that detail "
"current issues with Fortran language development and how to overcome them"
" going forward."
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:92
#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:98
#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:88
#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:138
#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:139
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:174
#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:164
#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:159
#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:213
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:172
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:161
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:258
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:213
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:163
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:179
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:205
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:277
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:294
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:229
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:230
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:282
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:247
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:259
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:239
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:367
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:469
msgid "Events"
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:94
msgid ""
"[OpenTeams](https://openteams.com) and [QuanSight](https://quansight.com)"
" hosted Ondřej Čertík and Milan Curcic in the Episode 40 of the Open "
"Source Directions Webinar. They talked about the current state and future"
" of Fortran, as well as about building the Fortran community and "
"developer tools. Read more about it and watch the video "
"[here](/newsletter/2020/04/18/Fortran-Webinar/)."
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:98
msgid ""
"[FortranCon 2020](https://tcevents.chem.uzh.ch/event/12) will take place "
"on July 2-4 in Zurich, Switzerland. Virtual participation is enabled for "
"both attendees and speakers. Registration is free and due by June 1, "
"2020."
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:101
msgid ""
"J3/WG5 joint meeting will take place on October 12-16 in Las Vegas, "
"Nevada. You can submit a proposal for the Standards committee "
"[here](https://github.com/j3-fortran/fortran_proposals). For reference, "
"you can read the [notes from the February "
"meeting](/newsletter/2020/02/28/J3-february-meeting)."
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:105
msgid "Who's hiring?"
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:107
msgid ""
"[Intel Corporation (Santa Clara, CA): Software Engineer, "
"Fortran](https://g.co/kgs/aogdeh)"
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:108
msgid ""
"[Intel Corporation (Hillsboro, OR): Software Engineer, "
"Fortran](https://g.co/kgs/5X3d2Y)"
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:109
msgid "[Pozent (York, PA): Fortran Technical Lead](https://g.co/kgs/yuaohU)"
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:110
msgid ""
"[American Cybersystems, Inc. (Binghamton, NY): Software Engineer "
"(Fortran, C/C++, Ada, C#, Java, Radar)](https://g.co/kgs/VAWjWk)"
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:111
msgid "[BravoTech (Dallas, TX): C++ / Fortran Developer](https://g.co/kgs/eLsn63)"
msgstr ""

#: ../../source/news/2020/05-01-Fortran-Newsletter-May-2020.md.md:112
msgid ""
"[Siemens (Milford, OH): CAE Software Engineer (Fortran or C++) Design and"
" Topology Optimization](https://g.co/kgs/eYftiA)"
msgstr ""

#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:7
msgid "Fortran newsletter: June 2020"
msgstr ""

#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:9
msgid ""
"Welcome to the June 2020 edition of the monthly Fortran newsletter. The "
"newsletter comes out on the first calendar day of every month and details"
" Fortran news from the previous month."
msgstr ""

#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:15
msgid ""
"The Fortran website has been up since mid-April, and we've already got "
"great feedback from the community. In the past month we've updated the "
"[Compilers](/compilers) page which is now comprehensive and includes all "
"major open source and commercial compilers. The [Learn](/learn) page has "
"also seen significant updates—it's been reorganized for easier navigation"
" and currently features a quickstart tutorial, Fortran books, and other "
"online resources."
msgstr ""

#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:23
msgid ""
"If you haven't yet, please explore the website and [let us "
"know](https://github.com/fortran-lang/fortran-lang.org/issues) if you "
"have any suggestions for improvement. Specifically, we'll be focusing on "
"the [Learn](/learn) page and its mini-books in the coming months. Please "
"help us make them better!"
msgstr ""

#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:29
msgid "Here are some specific items that we worked on:"
msgstr ""

#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:31
msgid ""
"[#90](https://github.com/fortran-lang/fortran-lang.org/pull/90) WIP: "
"Mini-book on building programs"
msgstr ""

#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:33
msgid ""
"[#83](https://github.com/fortran-lang/fortran-lang.org/pull/83) Improving"
" the structure and navigation of the [Learn](/learn) pages"
msgstr ""

#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:35
msgid ""
"[#46](https://github.com/fortran-lang/fortran-lang.org/pull/46) Build "
"website previews from pull requests"
msgstr ""

#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:38
msgid "Fortran Discourse"
msgstr ""

#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:40
msgid ""
"On May 4 we launched the [Fortran Discourse](https://fortran-"
"lang.discourse.group), an online discussion board for anything and "
"everything Fortran related. You can use it discuss the Fortran language, "
"ask for help, announce events and/or personal projects, or just lurk "
"around.  There are already quite a few interesting discussions going on. "
"Join us!"
msgstr ""

#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:47
#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:39
#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:38
#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:30
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:30
#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:45
#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:32
#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:45
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:32
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:42
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:43
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:34
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:38
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:42
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:54
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:34
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:62
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:40
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:33
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:42
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:33
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:33
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:39
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:57
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:44
msgid "Fortran Standard Library"
msgstr ""

#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:49
msgid ""
"Recently we launched a [website](https://stdlib.fortran-lang.org) for the"
" API documentation of the Fortran Standard Library.  The "
"[website](https://stdlib.fortran-lang.org) is automaticaly generated by "
"[FORD](https://github.com/Fortran-FOSS-Programmers/ford#readme). [Code of"
" Conduct](https://stdlib.fortran-"
"lang.org/page/contributing/CodeOfConduct.html), [licence](https://stdlib"
".fortran-lang.org/page/License.html), and [workflow](https://stdlib"
".fortran-lang.org/page/contributing/Workflow.html) for contributing to "
"the Fortran Standard Library can also be found on the "
"[website](https://stdlib.fortran-lang.org/)."
msgstr ""

#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:53
msgid "Here's what's new in the Fortran Standard Library:"
msgstr ""

#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:55
msgid ""
"[#191](https://github.com/fortran-lang/stdlib/pull/191) WIP: Function for"
" computing Pearson correlations among elements of an array in the "
"`stdlib_experimental_stats` module"
msgstr ""

#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:58
msgid ""
"[#189](https://github.com/fortran-lang/stdlib/pull/189) WIP: Procedures "
"for sparse matrices operations. Ongoing discussion on the API can be "
"found [here](https://github.com/fortran-lang/stdlib/wiki/Stdlib-Sparse-"
"matrix-API)."
msgstr ""

#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:61
msgid ""
"[#183](https://github.com/fortran-lang/stdlib/pull/183) Automatic API-doc"
" generation and deployment of this [stdlib website](https://stdlib"
".fortran-lang.org)"
msgstr ""

#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:63
msgid ""
"[#170](https://github.com/fortran-lang/stdlib/pull/170) Addition of the "
"new functions `diag`, `eye`, and `trace` functions to make working with "
"matrices easier. Read the full specifications [here](https://stdlib"
".fortran-lang.org/page/specs/stdlib_experimental_linalg.html)."
msgstr ""

#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:70
msgid ""
"In this past month support for dependencies between packages has been "
"added to the [Fortran Package Manager (fpm)](https://github.com/fortran-"
"lang/fpm). You can specify either a path to another folder on your "
"machine with an fpm package, or a git repository (and optionally a "
"specific branch, tag or commit) that contains the package. fpm will then "
"take care of fetching the dependency for you (if necessary) and any "
"packages it depends on, and compiling and linking it into your project. "
"Check out an example [hello world "
"package](https://gitlab.com/everythingfunctional/hello_fpm) that uses "
"this functionality."
msgstr ""

#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:79
#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:76
#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:69
msgid ""
"fpm is still in very early development, and we need as much help as we "
"can get. Here's how you can help today:"
msgstr ""

#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:82
#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:79
#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:72
#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:55
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:92
#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:90
msgid ""
"Try to use it. Does it work? No? Let us know! Read the [fpm packaging "
"guide](https://github.com/fortran-lang/fpm/blob/HEAD/PACKAGING.md) to "
"learn how to build your package with fpm."
msgstr ""

#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:84
#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:81
#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:74
msgid "Adapt your Fortran package for fpm."
msgstr ""

#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:87
#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:84
#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:77
#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:60
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:97
msgid ""
"The short term goal of fpm is to make development and installation of "
"Fortran packages with dependencies easier. Its long term goal is to build"
" a rich and decentralized ecosystem of Fortran packages and create a "
"healthy environment in which new open source Fortran projects are created"
" and published with ease."
msgstr ""

#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:91
msgid "Specific items that are new this month:"
msgstr ""

#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:93
msgid ""
"[#82](https://github.com/fortran-lang/fpm/pull/82) You can now add remote"
" git repositories as Fortran dependencies to your project."
msgstr ""

#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:95
msgid ""
"[#73](https://github.com/fortran-lang/fpm/pull/73) Improved output "
"messages for the user"
msgstr ""

#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:100
msgid ""
"We hosted the very first Fortran Monthly call on May 14. The turnout was "
"astonishing--over 23 people joined. You can read the notes from the call "
"[here](https://fortran-lang.discourse.group/t/fortran-monthly-call-"
"may-2020). We'll have another one this month. Subscribe to the [mailing "
"list](https://groups.io/g/fortran-lang) and/or join the [Discourse](https"
"://fortran-lang.discourse.group) to stay tuned."
msgstr ""

#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:106
msgid ""
"[FortranCon 2020](https://tcevents.chem.uzh.ch/event/12) will take place "
"on July 2-4 in Zurich, Switzerland. Virtual participation is enabled for "
"both attendees and speakers. Registration is free and due by June 1, "
"2020. There are quite a few submissions from the fortran-lang community: "
"A talk on [stdlib](https://github.com/fortran-"
"lang/talks/tree/HEAD/FortranCon2020-stdlib) by Jeremie Vandenplas, one "
"about the [Fortran Package Manager (fpm)](https://github.com/fortran-"
"lang/talks/tree/HEAD/FortranCon2020-fpm) by Brad Richardson, a talk on "
"[LFortran "
"compiler](https://gitlab.com/lfortran/talks/fortrancon-2020-talk) by "
"Ondřej Čertík, as well as one about [building the Fortran "
"community](https://github.com/fortran-"
"lang/talks/tree/HEAD/FortranCon2020-community) by Milan Curcic."
msgstr ""

#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:115
msgid ""
"J3/WG5 joint meeting, originally slated for October 12-16 in Las Vegas, "
"Nevada, has been "
"[cancelled](https://mailman.j3-fortran.org/pipermail/j3/2020-May/012034.html)."
" However, the work on proposals for the Fortran Standard doesn't stop. "
"You can submit a proposal for the Standards committee "
"[here](https://github.com/j3-fortran/fortran_proposals). For reference, "
"you can read the [notes from the February "
"meeting](/newsletter/2020/02/28/J3-february-meeting)."
msgstr ""

#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:120
#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:102
#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:155
#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:149
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:184
#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:177
#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:171
#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:228
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:187
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:186
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:288
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:225
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:184
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:200
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:222
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:294
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:308
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:250
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:245
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:301
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:264
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:280
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:255
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:377
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:484
msgid "Contributors"
msgstr ""

#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:122
msgid ""
"We thank everybody who contributed to fortran-lang in the past month by "
"commenting in any of the four repositories [fortran-"
"lang/stdlib](https://github.com/fortran-lang/stdlib), [fortran-"
"lang/fpm](https://github.com/fortran-lang/fpm), [fortran-lang/fortran-"
"lang.org](https://github.com/fortran-lang/fortran-lang.org), "
"[j3-fortran/fortran_proposals](https://github.com/j3-fortran/fortran_proposals):"
msgstr ""

#: ../../source/news/2020/06-01-Fortran-Newsletter-June-2020.md.md:129
msgid ""
"Ondřej Čertík ([@certik](https://github.com/certik)), Milan Curcic "
"([@milancurcic](https://github.com/milancurcic)), Laurence Kedward "
"([@LKedward](https://github.com/LKedward)), Jeremie Vandenplas "
"([@jvdp1](https://github.com/jvdp1)), Brad Richardson "
"([@everythingfunctional](https://github.com/everythingfunctional)), Izaak"
" \"Zaak\" Beekman ([@zbeekman](https://github.com/zbeekman)), Martin "
"Diehl ([@MarDiehl](https://github.com/MarDiehl)), "
"[@arjenmarkus](https://github.com/arjenmarkus), Van Snyder "
"([@vansnyder](https://github.com/vansnyder)), "
"[@FortranFan](https://github.com/FortranFan), "
"[@epagone](https://github.com/epagone), Ivan ([@ivan-"
"pi](https://github.com/ivan-pi)), Neil Carlson "
"([@nncarlson](https://github.com/nncarlson)), Ashwin Vishnu "
"([@ashwinvis](https://github.com/ashwinvis)), Williams A. Lima "
"([@ghwilliams](https://github.com/ghwilliams)), Peter Klausler "
"([@klausler](https://github.com/klausler)), Chris MacMackin "
"([@cmacmackin](https://github.com/cmacmackin)), Pedro Costa "
"([@p-costa](https://github.com/p-costa)), [@mobius-"
"eng](https://github.com/mobius-eng), Salvatore Filippone "
"([@sfilippone](https://github.com/sfilippone)), "
"[@ShamanTcler](https://github.com/ShamanTcler), Amit Kumar "
"([@aktech](https://github.com/aktech)), Bálint Aradi "
"([@aradi](https://github.com/aradi)), Melissa Weber Mendonça "
"([@melissawm](https://github.com/melissawm)), Jacob Williams "
"([@jacobwilliams](https://github.com/jacobwilliams)), Rohit Goswami "
"([@HaoZeke](https://github.com/HaoZeke)), Amir Shahmoradi "
"([@shahmoradi](https://github.com/shahmoradi)), Bill Long "
"([@longb](https://github.com/longb))."
msgstr ""

#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:7
msgid "Fortran newsletter: July 2020"
msgstr ""

#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:9
msgid ""
"Welcome to the July 2020 edition of the monthly Fortran newsletter. The "
"newsletter comes out on the first calendar day of every month and details"
" Fortran news from the previous month."
msgstr ""

#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:15
msgid ""
"Work has continued on the Fortran-lang website, including a new community"
" page and additional tutorial content:"
msgstr ""

#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:17
msgid ""
"[#98](https://github.com/fortran-lang/fortran-lang.org/pull/98): updated "
"the [Quickstart mini-book](https://fortran-"
"lang.org/learn/quickstart/derived_types) tutorial with a comprehensive "
"overview of derived types;"
msgstr ""

#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:19
msgid ""
"[#99](https://github.com/fortran-lang/fortran-lang.org/pull/99): added a "
"second mini-book tutorial to the [Learn](https://fortran-lang.org/learn) "
"page on building compiled programs and libraries;"
msgstr ""

#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:21
msgid ""
"[#100](https://github.com/fortran-lang/fortran-lang.org/pull/100): added "
"a new top-level web-page for Fortran-lang community projects. The page "
"gives useful information and links for new contributors, as well as "
"acknowledging each of our many existing contributors. Check it out at "
"<https://fortran-lang.org/community>."
msgstr ""

#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:25
#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:25
#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:20
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:20
#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:35
#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:24
#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:33
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:20
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:32
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:33
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:24
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:26
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:28
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:44
msgid "Ongoing work:"
msgstr ""

#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:27
msgid ""
"[#101](https://github.com/fortran-lang/fortran-lang.org/issues/101): Code"
" style for Fortran examples in the tutorials. See the corresponding "
"community poll and discussion on [Discourse](https://fortran-"
"lang.discourse.group/t/should-tutorials-on-fortran-lang-org-follow-a"
"-consistent-style-for-code-listings/134);"
msgstr ""

#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:30
msgid ""
"[#112](https://github.com/fortran-lang/fortran-lang.org/issues/112): Plan"
" for core language tutorials."
msgstr ""

#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:32
#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:34
#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:27
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:27
#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:42
#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:29
#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:42
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:29
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:39
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:40
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:31
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:35
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:39
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:51
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:31
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:56
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:33
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:27
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:36
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:27
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:27
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:33
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:51
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:38
msgid ""
"[Let us know](https://github.com/fortran-lang/fortran-lang.org/issues) if"
" you have any suggestions for the website and its content. We welcome any"
" new contributors to the website and the tutorials page in particular - "
"see the [contributor guide](https://github.com/fortran-lang/fortran-"
"lang.org/blob/HEAD/CONTRIBUTING.md) for how to get started."
msgstr ""

#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:35
msgid ""
"__Did you know__ you don't need to know HTML or any fancy languages to "
"contribute to the website; all of the online tutorials and most of the "
"website content are written in [markdown](https://github.com/adam-p"
"/markdown-here/wiki/Markdown-Cheatsheet), a simple markup language for "
"formatting text - don't worry if you haven't used it before, it's very "
"easy to pick up!"
msgstr ""

#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:41
#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:40
msgid "What's new in the Fortran Standard Library:"
msgstr ""

#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:43
msgid ""
"[#209](https://github.com/fortran-lang/stdlib/pull/209) Implements "
"Simpson's rule for 1-d arrays (`simps` and `simps_weights`) in the "
"quadrature module (`stdlib_experimental_quadrature`)."
msgstr ""

#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:46
msgid ""
"[#205](https://github.com/fortran-lang/stdlib/pull/205) Tests for and "
"improved standard conformance."
msgstr ""

#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:49
msgid "Some miscellaneous fixes and improvements:"
msgstr ""

#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:51
msgid ""
"[#208](https://github.com/fortran-lang/stdlib/pull/208) Fixes to support "
"Intel Fortran compilers"
msgstr ""

#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:53
msgid ""
"[#210](https://github.com/fortran-lang/stdlib/pull/210) Fixes to support "
"NAG compiler"
msgstr ""

#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:55
msgid ""
"[#207](https://github.com/fortran-lang/stdlib/pull/207) "
"[#211](https://github.com/fortran-lang/stdlib/pull/211) Other minor fixes"
" and improvements"
msgstr ""

#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:59
#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:49
#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:45
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:61
#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:65
#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:61
#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:97
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:94
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:79
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:100
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:92
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:92
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:114
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:135
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:106
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:156
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:100
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:106
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:133
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:86
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:80
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:94
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:112
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:103
#: ../../source/packages/programming.md:166
msgid "Fortran Package Manager"
msgstr "Gerenciador de Pacotes Fortran"

#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:61
#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:51
msgid "What's new in fpm:"
msgstr ""

#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:63
msgid ""
"[#99](https://github.com/fortran-lang/fpm/pull/99) fpm now lets you "
"specify a custom build script or a Makefile to use. This will help "
"building packages that use a custom structure and/or external "
"dependencies in other languages."
msgstr ""

#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:67
msgid ""
"[#89](https://github.com/fortran-lang/fpm/pull/89) Allow specifying "
"specific tests or executables to run via command-line arguments."
msgstr ""

#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:69
msgid ""
"[#85](https://github.com/fortran-lang/fpm/pull/85) Enables having "
"specific dependencies for tests and executables."
msgstr ""

#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:71
msgid ""
"[#97](https://github.com/fortran-lang/fpm/pull/97) "
"[#100](https://github.com/fortran-lang/fpm/pull/100) "
"[#101](https://github.com/fortran-lang/fpm/pull/101) Minor improvements "
"to the README."
msgstr ""

#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:90
msgid ""
"We had our second Fortran Monthly call on June 19. You can read watch the"
" recording below:"
msgstr ""

#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:95
#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:151
#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:146
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:181
#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:174
#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:168
#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:220
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:184
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:183
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:285
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:222
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:181
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:197
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:219
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:291
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:305
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:247
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:242
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:298
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:261
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:277
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:252
msgid ""
"As usual, subscribe to the [mailing list](https://groups.io/g/fortran-"
"lang) and/or join the [Discourse](https://fortran-lang.discourse.group) "
"to stay tuned with the future meetings."
msgstr ""

#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:98
msgid ""
"[FortranCon 2020](https://tcevents.chem.uzh.ch/event/12) began today "
"(July 2), with many interesting talks. See the talk schedule "
"[here](https://tcevents.chem.uzh.ch/event/12/timetable/#20200702.detailed)."
msgstr ""

#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:104
#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:157
msgid ""
"We thank everybody who contributed to fortran-lang in the past month by "
"commenting in any of the four repositories:"
msgstr ""

#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:107
#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:160
#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:154
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:189
msgid "[fortran-lang/stdlib](https://github.com/fortran-lang/stdlib),"
msgstr ""

#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:108
#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:161
#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:155
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:190
msgid "[fortran-lang/fpm](https://github.com/fortran-lang/fpm),"
msgstr ""

#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:109
#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:162
#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:157
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:192
msgid ""
"[fortran-lang/fortran-lang.org](https://github.com/fortran-lang/fortran-"
"lang.org),"
msgstr ""

#: ../../source/news/2020/07-01-Fortran-Newsletter-July-2020.md.md:110
#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:163
#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:159
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:194
msgid "[j3-fortran/fortran_proposals](https://github.com/j3-fortran/fortran_proposals):"
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:7
msgid "Fortran newsletter: August 2020"
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:9
msgid ""
"Welcome to the August 2020 edition of the monthly Fortran newsletter. The"
" newsletter comes out on the first calendar day of every month and "
"details Fortran news from the previous month."
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:15
msgid "We continued the work on the Fortran-lang website, including:"
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:17
msgid ""
"[#116](https://github.com/fortran-lang/fortran-lang.org/pull/116): "
"updates to the Quickstart tutorial on loop control and syntax"
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:19
msgid ""
"[#120](https://github.com/fortran-lang/fortran-lang.org/pull/120): "
"updated the [Book section](https://fortran-lang.org/learn/) with a "
"comprehensive list of books about Fortran"
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:23
msgid ""
"[#121](https://github.com/fortran-lang/fortran-lang.org/pull/121), "
"[#122](https://github.com/fortran-lang/fortran-lang.org/pull/122), "
"[#127](https://github.com/fortran-lang/fortran-lang.org/pull/127), "
"[#128](https://github.com/fortran-lang/fortran-lang.org/pull/128): "
"additional packages added to the Fortran-lang.org [packages](https"
"://fortran-lang.org/packages) page"
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:27
#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:22
msgid ""
"[#117](https://github.com/fortran-lang/fortran-lang.org/issues/117): "
"Adding a Benchmarks section, a new dedicated repository was created at "
"https://github.com/fortran-lang/benchmarks and many details have been "
"discussed in [issues](https://github.com/fortran-lang/benchmarks/issues) "
"there"
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:41
msgid ""
"[#223](https://github.com/fortran-lang/stdlib/pull/223): the structure of"
" the Fortran Standard Library has been modified for clarity and ease of "
"use. With these changes, both experimental and stable procedures will "
"reside together in the same modules. The status of the procedures "
"(experimental vs stable) are documented in the code, in the specs, and in"
" the [API docs](https://stdlib.fortran-lang.org/)"
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:43
msgid "Main ongoing discussions:"
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:44
msgid ""
"[#225](https://github.com/fortran-lang/stdlib/issues/225): Name "
"convention for derived types in `stdlib`"
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:45
msgid ""
"[#224](https://github.com/fortran-lang/stdlib/issues/224): Handling and "
"propagating errors inside `stdlib`"
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:46
#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:37
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:53
msgid ""
"[#221](https://github.com/fortran-lang/stdlib/issues/221): API for a "
"bitset data type"
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:47
#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:38
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:54
msgid ""
"[#201](https://github.com/fortran-lang/stdlib/issues/201): API for file "
"system operations"
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:52
msgid ""
"We created the [fpm-registry](https://github.com/fortran-lang/fpm-"
"registry) repository, which serves as a registry of fpm-enabled Fortran "
"packages. Please see the README there to learn how to contribute a "
"package. For now, the registry is simply a list of fpm-enabled Fortran "
"packages that you can use as a dependency in your `fpm.toml` file. Soon, "
"this registry will be used to generate detailed metadata that will be "
"used by fpm to allow you to search for packages from the command-line, "
"e.g. `fpm search <package>` or similar."
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:57
msgid ""
"[#146](https://github.com/fortran-lang/fpm/issues/146): We discussed the "
"design of the new Fortran implementation of fpm in a video call. We "
"agreed on the need for an intermediate package model which will allow for"
" clean separation of fpm frontends (user interface, parsing, and "
"semantics) and fpm backends (fpm itself, CMake, Make, etc.)."
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:58
msgid ""
"[#131](https://github.com/fortran-lang/fpm/pull/131), "
"[#132](https://github.com/fortran-lang/fpm/pull/132), "
"[#139](https://github.com/fortran-lang/fpm/pull/139), "
"[#140](https://github.com/fortran-lang/fpm/pull/140), "
"[#142](https://github.com/fortran-lang/fpm/pull/142), "
"[#145](https://github.com/fortran-lang/fpm/pull/145), "
"[#147](https://github.com/fortran-lang/fpm/pull/147), "
"[#148](https://github.com/fortran-lang/fpm/pull/148), "
"[#151](https://github.com/fortran-lang/fpm/pull/151): We merged several "
"pull requests toward the Fortran fpm implementation. The Haskell "
"implementation has moved to the `fpm/bootstrap` directory, and the "
"Fortran implementation is developed in `fpm/fpm`. The Fortran fpm is, of "
"course, an fpm package itself so it can be built by the Haskell fpm. "
"Soon, it will be able to be build by itself."
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:81
#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:64
msgid "Fortran benchmarks"
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:83
#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:66
msgid ""
"We created the [benchmarks repository](https://github.com/fortran-"
"lang/benchmarks) with the goal to design and implement a comprehensive "
"set of benchmarks. The benchmarks will aim to compare the performance of "
"various Fortran compilers, as well as the performance of canonical "
"algorithms implemented in Fortran and different languages. If you'd like "
"to contribute in any way, be it the design, implementation, or testing of"
" benchmarks, please join the ongoing discussion [here](https://github.com"
"/fortran-lang/benchmarks/issues)."
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:87
#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:82
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:104
#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:101
#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:108
#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:186
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:134
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:168
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:149
msgid "Classic Flang"
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:89
msgid ""
"We've begun to evaluate pull requests and merge them into the original "
"Flang compiler again. There is now a biweekly call to discuss issues and "
"plans for Classic Flang. The next call will be Wednesday, August 12, 8:30"
" AM Pacific time. The notes from previous calls, upcoming agenda and a "
"link to join the call can be found "
"[here](https://docs.google.com/document/d/1"
"-OuiKx4d7O6eLEJDBDKSRnSiUO2rgRR-c2Ga4AkrzOI)."
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:95
msgid ""
"In the last call, AMD reviewed their outstanding pull requests for "
"Fortran debug metadata enhancements."
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:98
#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:98
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:129
#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:123
#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:132
#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:194
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:154
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:194
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:160
msgid "LLVM Flang"
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:100
msgid ""
"Work continues on LLVM Flang, concentrating on semantics, lowering and "
"runtime sufficient to compile and run Fortran 77 programs. We are fixing "
"bugs we find in running FCVS and other test suites that use F77."
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:104
msgid ""
"We cominue upstreaming the lowering code from the fir-dev fork (MLIR-"
"based Fortran IR) into the llvm-project repository. Arm is working on "
"changes to support a driver program to replace the throwaway driver we "
"currently have."
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:108
msgid ""
"AMD has been contributing parser and semantic processing for OpenMP "
"constructs like task wait, barrier and parallel constructs."
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:111
msgid ""
"Changes have been made to default parse/unparse/compile processing to "
"default to gfortran (not NVIDIA Fortran)."
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:114
msgid "Valentin Clement has been committing initial changes for OpenACC support."
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:117
#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:116
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:150
#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:146
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:127
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:233
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:202
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:132
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:166
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:180
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:209
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:265
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:216
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:212
#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:131
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:267
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:194
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:249
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:235
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:307
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:235
msgid "LFortran"
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:119
#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:118
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:152
#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:148
msgid "What's new in LFortran:"
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:121
msgid ""
"The initial prototype C++ backend can translate Fortran's `do concurrent`"
" to C++'s `Kokkos::parallel_for`: "
"[https://twitter.com/lfortranorg/status/1280764915242811393](https://twitter.com/lfortranorg/status/1280764915242811393)"
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:122
msgid ""
"LFortran has a Twitter account for latest updates: "
"[@lfortranorg](https://twitter.com/lfortranorg)"
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:123
msgid ""
"Work is progressing on the production version of LFortran that is written"
" in C++"
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:124
msgid ""
"22 Merge Requests were merged and 4 issues fixed in July 2020. Some "
"notable ones:"
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:125
msgid ""
"[#163](https://gitlab.com/lfortran/lfortran/-/issues/163): Implement "
"basic Fortran to C++ translation backend"
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:126
msgid ""
"[!410](https://gitlab.com/lfortran/lfortran/-/merge_requests/410): Make "
"simple calculations work via LLVM in interactive mode"
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:127
msgid ""
"[!402](https://gitlab.com/lfortran/lfortran/-/merge_requests/402): Build "
"ASR (Abstract Semantic Representation) properly for subroutines and "
"functions"
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:129
msgid ""
"The short term goal is to get the C++ based production version of "
"LFortran matching most of the features from the Python prototype version "
"and make a public release. The long term goal is to build a modern "
"Fortran compiler that works with any production code and allows it to run"
" efficiently on modern hardware (CPUs and GPUs), both interactively and "
"compiling to binaries, and provide the basis for other tools such as the "
"Fortran to C++ translation, editor support, automatic documentation "
"generation (and doctesting like in Python), automatic formatting and "
"others."
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:140
msgid ""
"[FortranCon 2020](https://tcevents.chem.uzh.ch/event/12) was held July 2 "
"- 4. with many interesting talks. See the talk schedule "
"[here](https://tcevents.chem.uzh.ch/event/12/timetable/#20200702.detailed)."
" All presentations have been recorded and will be soon made available "
"online by the FortranCon organizers."
msgstr ""

#: ../../source/news/2020/08-01-Fortran-Newsletter-August-2020.md.md:146
msgid ""
"We had our third Fortran Monthly call on July 16. You can read watch the "
"recording below:"
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:7
msgid "Fortran newsletter: September 2020"
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:9
msgid ""
"Welcome to the September 2020 edition of the monthly Fortran newsletter. "
"The newsletter comes out on the first calendar day of every month and "
"details Fortran news from the previous month."
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:15
msgid "We continued the work on the Fortran-lang website, specifically:"
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:17
msgid ""
"[#133](https://github.com/fortran-lang/fortran-lang.org/pull/133): "
"Listing fpm packages on the Packages page of the website"
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:32
msgid ""
"There hasn't been new stdlib development in August, however ongoing work "
"and discussions continue:"
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:34
msgid ""
"[#227](https://github.com/fortran-lang/stdlib/issues/227): API proposal "
"for logging facilities in stdlib"
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:35
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:51
msgid ""
"[#225](https://github.com/fortran-lang/stdlib/issues/225): Name "
"convention for derived types in stdlib"
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:36
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:52
msgid ""
"[#224](https://github.com/fortran-lang/stdlib/issues/224): Handling and "
"propagating errors inside stdlib"
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:40
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:56
#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:60
#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:56
#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:92
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:89
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:74
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:95
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:87
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:87
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:109
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:130
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:101
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:151
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:95
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:101
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:128
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:81
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:75
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:89
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:107
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:98
msgid ""
"The candidate for file system operations to be included in stdlib is "
"being developed by [@MarDiehl](https://github.com/MarDiehl) and "
"[@arjenmarkus](https://github.com/arjenmarkus) in [this "
"repository](https://github.com/MarDiehl/stdlib_os). Please try it out and"
" let us know how it works, if there are any issues, or if the API can be "
"improved."
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:47
msgid "Ongoing work in fpm:"
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:49
msgid ""
"[#146](https://github.com/fortran-lang/fpm/issues/146) (WIP):  "
"Implementing internal dependencies and build backend in the Fortran fpm"
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:52
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:89
#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:87
msgid ""
"fpm is still in early development and we need as much help as we can get."
" Here's how you can help today:"
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:57
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:94
#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:92
#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:99
#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:177
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:125
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:118
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:159
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:140
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:122
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:156
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:171
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:142
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:207
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:136
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:151
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:164
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:142
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:123
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:135
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:153
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:138
msgid ""
"Adapt your Fortran package for fpm and submit it to the "
"[Registry](https://github.com/fortran-lang/fpm-registry)."
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:72
msgid "GFortran"
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:74
msgid ""
"GFortran 10.2 has been released, a bugfix release for 10.1. Bugs fixed "
"include PR94361, a memory leak with finalizers."
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:77
msgid ""
"The development version of `gfortran` now supports the full OpenMP 4.5 "
"specification.  This will be released with GCC 11, but of course people "
"can already download and test it."
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:84
msgid ""
"We're evaluating pull requests and merging them into the original Flang "
"compiler again. We pulled in 4 changes in the past couple of weeks, and "
"expect to merge in a few more each week. One upcoming change is the "
"support for LLVM 10, which requires the use of a new fork, the _classic-"
"flang-llvm-project_ fork of the LLVM monorepo. See "
"[PR#1](https://github.com/flang-compiler/classic-flang-llvm-"
"project/pull/1) for details."
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:92
msgid ""
"The Classic Flang biweekly call has been set up to discuss issues and "
"plans for the next pull requests to be validated and merged. Our next "
"calls will be Wednesday, September 9 and 23, 8:30 AM Pacific time. The "
"notes from previous calls, upcoming agenda and a link to join the call "
"can be found [here](https://docs.google.com/document/d/1"
"-OuiKx4d7O6eLEJDBDKSRnSiUO2rgRR-c2Ga4AkrzOI)."
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:100
msgid ""
"Work continues on LLVM Flang, concentrating on semantics, lowering and "
"runtime sufficient to compile and run Fortran 77 programs. We are fixing "
"bugs we find in running FCVS and other F77 test suites (and the F77 parts"
" of non-F77 suites)."
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:105
msgid ""
"In conjunction with the MLIR-based code from the _fir-dev_ fork (the "
"Fortran IR used for lowering), Flang can compile and run most F77 "
"programs. We continue to work on refactoring necessary to upstream this "
"fork into LLVM flang proper."
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:110
msgid ""
"Arm is working on changes to support a driver program to replace the "
"temporary driver we currently use."
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:113
#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:140
msgid ""
"Valentin Clement continues to contribute parsing and semantics changes "
"for OpenACC support."
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:120
msgid "143 Merge Requests were merged and 22 issues fixed in August 2020"
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:121
msgid ""
"The C++ backend can now translate to C++ and compile many simple Fortran "
"programs"
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:122
msgid ""
"The parser can now parse a large subset of Fortran (if you find something"
" that cannot be parsed, please "
"[report](https://gitlab.com/lfortran/lfortran/-/issues) a bug). Not all "
"the information is yet represented in the AST (so later stages of the "
"compiler also work on a smaller subset), but one should not get parse "
"errors anymore for most valid codes."
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:126
msgid ""
"Initial `lfortran fmt` subcommand for formatting Fortran files, you can "
"provide feedback [here](https://fortran-lang.discourse.group/t/feedback-"
"for-lfortran-fmt-to-format-fortran-source-code/281)."
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:129
msgid "A new command `lfortran kernel` can run LFortran as a Jupyter kernel."
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:130
msgid ""
"LFortran itself gives a nice Python like stacktrace (on Linux and macOS) "
"in Debug mode when an unhandled excetion happens or a segfault."
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:133
msgid ""
"Our goal for September is to get LFortran working for a much larger "
"subset of Fortran and allow it to compile and run via the C++ translation"
" backend (the LLVM backend will follow soon after)."
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:137
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:172
#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:162
msgid ""
"You can follow LFortran on Twitter for latest updates: "
"[@lfortranorg](https://twitter.com/lfortranorg)."
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:141
msgid ""
"We had our fourth Fortran Monthly call on August 20. You can watch the "
"recording below:"
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:151
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:186
#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:179
#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:173
#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:230
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:189
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:188
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:290
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:227
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:186
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:202
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:224
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:296
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:310
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:252
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:247
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:303
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:266
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:282
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:257
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:379
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:486
msgid ""
"We thank everybody who contributed to fortran-lang in the past month by "
"commenting in any of these repositories:"
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:156
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:191
msgid "[fortran-lang/fpm-registry](https://github.com/fortran-lang/fpm-registry),"
msgstr ""

#: ../../source/news/2020/09-01-Fortran-Newsletter-September-2020.md.md:158
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:193
msgid "[fortran-lang/benchmarks](https://github.com/fortran-lang/benchmarks),"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:7
msgid "Fortran newsletter: October 2020"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:9
msgid ""
"Welcome to the October 2020 edition of the monthly Fortran newsletter. "
"The newsletter comes out on the first calendar day of every month and "
"details Fortran news from the previous month."
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:15
msgid "This month we've had only one minor change to the website:"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:17
msgid ""
"[#136](https://github.com/fortran-lang/fortran-lang.org/pull/136): Small "
"fix in the opening sentence on the compilers page"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:22
msgid ""
"[#117](https://github.com/fortran-lang/fortran-lang.org/issues/117): "
"Adding a Benchmarks section, a new dedicated repository was created at "
"https://github.com/fortran-lang/benchmarks and many details have been "
"discussed in [issues](https://github.com/fortran-lang/benchmarks/issues) "
"there."
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:32
msgid ""
"This month we've had an improvement to the `stdlib_ascii` module, as well"
" as addition of logging facilities."
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:35
msgid ""
"[#238](https://github.com/fortran-lang/stdlib/pull/238): Improvements to "
"the `stdlib_stats` module by adding explicit conversions."
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:36
msgid ""
"[#228](https://github.com/fortran-lang/stdlib/pull/228): Implementation "
"of the `stdlib_logger` module. It provides a global logger instance for "
"easy use in user applications, as well as a `logger_type` derived type if"
" multiple concurrent loggers are needed. See the [logger "
"specification](https://stdlib.fortran-"
"lang.org/page/specs/stdlib_logger.html) to learn more."
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:42
#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:83
#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:78
#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:44
#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:82
#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:61
#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:161
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:53
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:107
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:55
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:94
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:57
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:142
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:53
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:117
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:53
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:101
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:67
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:141
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:81
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:152
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:36
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:66
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:121
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:23
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:55
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:112
msgid "Work in progress:"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:44
#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:49
msgid ""
"[#239](https://github.com/fortran-lang/stdlib/pull/239): Implementation "
"of the `stdlib_bitsets` module. It provides a bitset data type."
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:45
msgid ""
"[#235](https://github.com/fortran-lang/stdlib/pull/235): Improvements to "
"the `stdlib_ascii` module"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:49
#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:51
msgid "Otherwise, ongoing discussions continue:"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:63
msgid ""
"This month has seen over a dozen additions and improvements to the "
"Fortran implementation of fpm:"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:65
msgid ""
"[#186](https://github.com/fortran-lang/fpm/issues/186): Implement version"
" string validation and comparison"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:66
msgid "[#185](https://github.com/fortran-lang/fpm/issues/185): Update CI workflow"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:67
msgid ""
"[#182](https://github.com/fortran-lang/fpm/issues/182): CLI interface to "
"further development of subcommands"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:68
msgid ""
"[#180](https://github.com/fortran-lang/fpm/issues/180): Recursive source "
"discovery"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:69
msgid ""
"[#178](https://github.com/fortran-lang/fpm/issues/178): Add more example "
"packages"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:70
msgid ""
"[#177](https://github.com/fortran-lang/fpm/issues/177): Allow selective "
"testing of single suites and tests"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:71
msgid ""
"[#175](https://github.com/fortran-lang/fpm/issues/175): Updated "
"formatting of Markdown documents"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:72
msgid ""
"[#174](https://github.com/fortran-lang/fpm/issues/174): Cache Haskell "
"Stack build in CI"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:73
msgid ""
"[#171](https://github.com/fortran-lang/fpm/issues/171): Increase test "
"coverage of fpm manifest"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:74
msgid ""
"[#170](https://github.com/fortran-lang/fpm/issues/170): Source parsing "
"tests"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:75
msgid ""
"[#163](https://github.com/fortran-lang/fpm/issues/163): Use different "
"strategy to fetch git dependencies"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:76
msgid ""
"[#162](https://github.com/fortran-lang/fpm/issues/162): Updated OS type "
"identification"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:77
msgid ""
"[#160](https://github.com/fortran-lang/fpm/issues/160): Add contributing "
"guidelines (you can read them [here](https://github.com/fortran-"
"lang/fpm/CONTRIBUTING.md))"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:79
msgid ""
"[#157](https://github.com/fortran-lang/fpm/issues/157): Implement reading"
" of fpm.toml"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:80
msgid ""
"[#155](https://github.com/fortran-lang/fpm/issues/155): Internal "
"dependencies and build backend"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:85
msgid ""
"[#193](https://github.com/fortran-lang/fpm/issues/193) (WIP): Local path "
"dependencies"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:86
msgid ""
"[#190](https://github.com/fortran-lang/fpm/issues/190) (WIP): Auto "
"discovery of executables"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:87
msgid ""
"[#189](https://github.com/fortran-lang/fpm/issues/189) (WIP): Implement "
"`fpm new`"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:106
msgid ""
"We continue to evaluate and merge pull requests into the original Flang "
"compiler again. We pulled in several changes in the past month."
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:109
msgid ""
"One important merge was support for LLVM 10, which required the use of a "
"new fork, the _classic-flang-llvm-project_ fork of the LLVM monorepo. See"
" [PR#1](https://github.com/flang-compiler/classic-flang-llvm-"
"project/pull/1) for details."
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:115
msgid "Other recently merged pull requests into Classic Flang include:"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:116
msgid ""
"[PR#658: Fix in preprocessing for Flexi app](https://github.com/flang-"
"compiler/flang/pull/658)"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:117
msgid ""
"[PR#737: TRAILZ function added to the fortran "
"compiler](https://github.com/flang-compiler/flang/pull/737)"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:118
msgid ""
"[PR#756: Fix ICE interf:new_symbol_and_link symbol not "
"found](https://github.com/flang-compiler/flang/pull/756)"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:119
msgid ""
"[PR#888: flang gen-exec does not show routine variables with parameter "
"attribute; there are multiple pull requests that this includes (details "
"below)](https://github.com/flang-compiler/flang/pull/888)"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:120
msgid ""
"[PR#916: Fix off-by-one error in minimum integers](https://github.com"
"/flang-compiler/flang/pull/916)"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:121
msgid ""
"[PR#921: Correction of representation of string (character type) "
"constants](https://github.com/flang-compiler/flang/pull/921)"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:123
msgid ""
"The Classic Flang biweekly call has been set up to discuss issues and "
"plans for the next pull requests to be validated and merged. Our next "
"calls will be Wednesday, October 7 and 21, 8:30 AM Pacific time. The "
"notes from previous calls, upcoming agenda and a link to join the call "
"can be found [here](https://docs.google.com/document/d/1"
"-OuiKx4d7O6eLEJDBDKSRnSiUO2rgRR-c2Ga4AkrzOI)."
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:131
msgid ""
"Work continues on LLVM Flang, concentrating on semantics, lowering and "
"runtime sufficient to compile and run Fortran 77 programs."
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:134
msgid ""
"In conjunction with the MLIR-based code from the _fir-dev_ fork (the "
"Fortran IR used for lowering), Flang can compile and run most F77 "
"programs, including the Fortran Compiler Validation Suite (FCVS). We "
"continue to work on refactoring necessary to upstream the _fir-dev_ fork "
"into LLVM flang proper."
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:140
msgid "Arm has contributed changes toward a full-fledged driver for flang."
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:142
#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:138
msgid "AMD continues to add support for OpenMP semantics and lowering."
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:144
msgid ""
"Valentin Clement continues to contribute parsing and semantics changes "
"for OpenACC support. This will be the topic of the next Flang Technical "
"Community call on Monday, October 5, 8:30 AM Pacific Time."
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:148
msgid ""
"Michael Kruse continues to add support for building Flang on Windows with"
" MSVC."
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:154
msgid "59 Merge Requests were merged and 3 issues fixed in September 2020"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:155
msgid ""
"The FortranCon 2020 LFortran video now "
"[available](https://www.youtube.com/watch?v=tW9tUxVMnzc)"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:156
msgid ""
"LFortran, now imlemented in C++, has surpassed the Python prototype from "
"a year ago"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:158
msgid "The Jupyter notebook now works as it used to with the Python prototype"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:159
msgid ""
"A new notebook added showcasing how to visualize AST, ASR and C++ "
"translation in Jupyter "
"([!624](https://gitlab.com/lfortran/lfortran/-/merge_requests/624))"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:161
msgid ""
"X86 backend to generate direct x86-32 machine code (very fast compilation"
" in Debug mode)"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:163
msgid "Further parser improvements"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:164
msgid "Initial Fortran modules support"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:165
msgid ""
"Initial support for using GFortran modules "
"([!632](https://gitlab.com/lfortran/lfortran/-/merge_requests/632))"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:167
msgid ""
"Better compiler error messages "
"([!617](https://gitlab.com/lfortran/lfortran/-/merge_requests/617))"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:169
msgid ""
"The interactive prompt (REPL) now understands arrow keys "
"([!603](https://gitlab.com/lfortran/lfortran/-/merge_requests/603))"
msgstr ""

#: ../../source/news/2020/10-01-Fortran-Newsletter-October-2020.md.md:176
msgid ""
"We had our fourth Fortran Monthly call on September 25. You can watch the"
" recording below:"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:7
msgid "Fortran newsletter: November 2020"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:9
msgid ""
"Welcome to the November 2020 edition of the monthly Fortran newsletter. "
"The newsletter comes out on the first calendar day of every month and "
"details Fortran news from the previous month."
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:15
msgid "This month we've had a few additions and improvements to the website:"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:17
msgid ""
"[#152](https://github.com/fortran-lang/fortran-lang.org/pull/152): New "
"mini-book on setting up the Fortran development environment. You can read"
" it [here](https://fortran-lang.org/learn/os_setup)."
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:20
msgid ""
"[#147](https://github.com/fortran-lang/fortran-lang.org/pull/147): "
"Automated posting to @fortranlang Twitter using twitter-together."
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:22
msgid ""
"[#155](https://github.com/fortran-lang/fortran-lang.org/pull/155): Fix "
"for a security vulnerability reported by the GitHub Security Team."
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:24
msgid ""
"The following packages were added to the [Package Index](https://fortran-"
"lang.org/packages): atomsk, ddPCM, DFTB+, DFT-D4, ELPA, ELSI, FortJSON, "
"fypp, HANDE, libmbd, libnegf, mpifx, NTPoly, NWChem, OpenMolcas, PoisFFT,"
" QMD-PROGRESS, scalapackfx, tapenade, wannier90, and xtb."
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:29
msgid ""
"[#145](https://github.com/fortran-lang/fortran-lang.org/pull/145), "
"[#146](https://github.com/fortran-lang/fortran-lang.org/pull/146), "
"[#154](https://github.com/fortran-lang/fortran-lang.org/pull/154), "
"[#158](https://github.com/fortran-lang/fortran-lang.org/pull/158): Minor "
"fixes and improvements."
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:37
#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:26
msgid ""
"[#160](https://github.com/fortran-lang/fortran-lang.org/pull/160) (WIP): "
"In-depth introduction for Fortran with Make."
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:39
msgid ""
"[#156](https://github.com/fortran-lang/fortran-lang.org/pull/156) (WIP): "
"Updating the mini-book on building programs."
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:47
msgid "This month progress was made on a few pull requests:"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:50
msgid ""
"[#240](https://github.com/fortran-lang/stdlib/pull/240): Implementation "
"of the `stdlib_stats_distribution` module. It provides probability "
"distribution and statistical functions."
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:51
msgid ""
"[#243](https://github.com/fortran-lang/stdlib/pull/243): A proposition to"
" support newline characters in the message provided to the logger."
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:53
#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:49
#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:72
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:69
msgid "Don't hesitate to test and review these pull requests!"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:55
msgid "Otherwise, ongoing discussions continue;"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:56
msgid ""
"[#220](https://github.com/fortran-lang/stdlib/pull/220): API for file "
"system operations: directory manipulation"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:57
msgid ""
"[#241](https://github.com/fortran-lang/stdlib/pull/241): Include a "
"`split` function (202X feature)"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:67
msgid "What's new:"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:69
msgid ""
"[#213](https://github.com/fortran-lang/fpm/issues/213): Bootstrap fpm "
"submodule support"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:70
msgid ""
"[#208](https://github.com/fortran-lang/fpm/issues/208): Minor fixes to "
"`list_files` and `mkdir` in `fpm_filesystem`"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:71
msgid ""
"[#206](https://github.com/fortran-lang/fpm/issues/206): Add installation "
"script in `install.sh`"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:72
msgid ""
"[#193](https://github.com/fortran-lang/fpm/issues/193): Local and remote "
"package dependencies (Fortran fpm can now build itself)"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:73
msgid ""
"[#190](https://github.com/fortran-lang/fpm/issues/190): Auto discovery of"
" executables"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:74
msgid ""
"[#189](https://github.com/fortran-lang/fpm/issues/189), "
"[#204](https://github.com/fortran-lang/fpm/issues/204), "
"[#203](https://github.com/fortran-lang/fpm/issues/203): Implement `fpm "
"new` in Fortran fpm"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:80
#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:84
#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:163
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:109
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:96
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:144
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:119
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:103
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:143
msgid ""
"[First beta release](https://github.com/fortran-lang/fpm/milestone/1) "
"(WIP): First feature-complete release of the Fortran implementation."
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:81
msgid ""
"[#221](https://github.com/fortran-lang/fpm/issues/221) (WIP): Test and "
"executable runner options"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:82
msgid ""
"[#220](https://github.com/fortran-lang/fpm/issues/220) (WIP): Compiler "
"and flags"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:83
msgid ""
"[#216](https://github.com/fortran-lang/fpm/issues/216) (WIP): Remove "
"bashism from install.sh"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:84
msgid ""
"[#209](https://github.com/fortran-lang/fpm/issues/209) (WIP): Add "
"automatic documentation for Fortran fpm"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:85
msgid ""
"[#202](https://github.com/fortran-lang/fpm/issues/202) (WIP): Create "
"package manifest with toml-f build interface"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:95
#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:102
#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:180
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:128
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:121
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:162
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:143
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:125
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:159
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:174
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:145
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:210
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:139
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:154
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:167
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:145
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:126
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:138
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:156
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:141
msgid ""
"The short-term goal of fpm is to make development and installation of "
"Fortran packages with dependencies easier. Its long term goal is to build"
" a rich and decentralized ecosystem of Fortran packages and create a "
"healthy environment in which new open source Fortran projects are created"
" and published with ease."
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:103
msgid ""
"We continue to evaluate and merge pull requests into the original Flang "
"compiler again. We pulled in several changes in October."
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:106
msgid "Recently merged pull requests into Classic Flang include:"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:107
msgid ""
"[PR#660: Enable support for simd directives](https://github.com/flang-"
"compiler/flang/pull/660)"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:108
msgid ""
"[PR#878: [DebugInfo]: Fix for missing DISPFlagOptimized in debug "
"metadata](https://github.com/flang-compiler/flang/pull/878)"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:109
msgid ""
"[PR#910: Fix f90_correct tests](https://github.com/flang-"
"compiler/flang/pull/910)"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:110
msgid ""
"[PR#922: Fix private flag overwrite in "
"find_def_in_most_recent_scope()](https://github.com/flang-"
"compiler/flang/pull/922)"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:111
msgid ""
"[PR#927: f90_correct: exclude tests failing with LLVM 10 on "
"OpenPOWER](https://github.com/flang-compiler/flang/pull/927)"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:112
msgid ""
"[PR#930: Fix HTML docs generation](https://github.com/flang-"
"compiler/flang/pull/930)"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:113
msgid ""
"[PR#931: [flang2] Fix segmentation faults (#421)](https://github.com"
"/flang-compiler/flang/pull/931)"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:114
msgid ""
"[PR#932: [flang1] Do not assume unempty derived types](https://github.com"
"/flang-compiler/flang/pull/932)"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:115
msgid ""
"[PR#938: [flang2] Fixing possible crash due to ivl being NULL in "
"dinit.cpp](https://github.com/flang-compiler/flang/pull/938)"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:117
msgid ""
"The Classic Flang biweekly call has been set up to discuss issues and "
"plans for the next pull requests to be validated and merged. Our next "
"calls will be Wednesday, November 4 and 18, 8:00 AM Pacific time (note "
"the time change). The notes from previous calls, upcoming agenda and a "
"link to join the call can be found "
"[here](https://docs.google.com/document/d/1"
"-OuiKx4d7O6eLEJDBDKSRnSiUO2rgRR-c2Ga4AkrzOI)."
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:125
msgid ""
"Work continues on LLVM Flang, concentrating on semantics, lowering and "
"runtime."
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:127
#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:136
msgid ""
"In conjunction with the MLIR-based code from the _fir-dev_ fork (the "
"Fortran IR used for lowering), Flang can compile and run most F77 "
"programs, including the Fortran Compiler Validation Suite (FCVS)."
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:131
msgid ""
"Pat McCormick is working on an RFC for the merge of the lowering code in "
"the fir-dev fork into LLVM master. The goal is to expedite this in a way "
"that is acceptable to the Flang community, so we can do further work in "
"the single master branch."
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:136
msgid ""
"Arm continues to contribute changes toward a full-fledged driver for "
"flang."
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:143
msgid ""
"Michael Kruse continues to add support for building Flang on Windows with"
" MSVC to the point that he can build and test Flang on Windows."
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:150
msgid "9 Merge Requests were merged and 5 issues fixed in October 2020"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:151
msgid ""
"We gave LFortran "
"[talk](https://cfp.jupytercon.com/2020/schedule/presentation/169"
"/lfortran-interactive-llvm-based-fortran-compiler-for-modern-"
"architectures/) at JupyterCon 2020"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:154
msgid ""
"A prototype compiler implementation of conditional expressions for the "
"October 2020 Fortran Standards Committee meeting "
"([!645](https://gitlab.com/lfortran/lfortran/-/merge_requests/645))"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:157
msgid "Better code formatting support (`lfortran fmt`)"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:158
msgid "Improvements to AST"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:159
msgid ""
"Capture stdout on Windows in a Jupyter notebook "
"([!642](https://gitlab.com/lfortran/lfortran/-/merge_requests/642))"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:166
msgid ""
"The US Fortran Standards Committee held a virtual meeting from October "
"12-14. You can read the summary and the discussion "
"[here](https://github.com/j3-fortran/fortran_proposals/issues/185) and "
"all the documents [here](https://j3-fortran.org/doc/meeting/222)."
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:169
msgid ""
"We had our 5th Fortran Monthly call on October 27. You can watch the "
"recording below:"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:182
#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:176
#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:233
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:192
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:191
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:293
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:230
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:189
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:205
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:227
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:299
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:313
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:255
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:250
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:306
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:269
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:285
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:260
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:382
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:489
msgid "[fortran-lang/stdlib](https://github.com/fortran-lang/stdlib)"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:183
#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:177
#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:234
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:194
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:193
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:295
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:232
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:191
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:207
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:229
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:301
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:315
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:257
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:252
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:308
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:271
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:287
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:262
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:384
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:491
msgid "[fortran-lang/fpm](https://github.com/fortran-lang/fpm)"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:184
#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:178
#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:235
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:195
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:194
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:296
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:233
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:192
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:208
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:230
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:302
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:316
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:258
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:253
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:309
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:272
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:288
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:263
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:385
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:492
msgid "[fortran-lang/fpm-registry](https://github.com/fortran-lang/fpm-registry)"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:185
#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:179
#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:237
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:197
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:196
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:299
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:236
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:195
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:211
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:233
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:305
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:319
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:261
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:256
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:313
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:276
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:292
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:267
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:389
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:496
msgid ""
"[fortran-lang/fortran-lang.org](https://github.com/fortran-lang/fortran-"
"lang.org)"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:186
#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:180
#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:238
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:198
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:197
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:300
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:237
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:196
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:212
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:234
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:306
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:320
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:262
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:257
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:314
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:277
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:293
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:268
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:390
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:497
msgid "[fortran-lang/benchmarks](https://github.com/fortran-lang/benchmarks)"
msgstr ""

#: ../../source/news/2020/11-01-Fortran-Newsletter-November-2020.md.md:187
#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:181
#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:239
msgid "[j3-fortran/fortran_proposals](https://github.com/j3-fortran/fortran_proposals)"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:7
msgid "Fortran newsletter: December 2020"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:9
msgid ""
"Welcome to the December 2020 edition of the monthly Fortran newsletter. "
"The newsletter comes out at the beginning of every month and details "
"Fortran news from the previous month."
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:15
#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:16
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:15
msgid "This month we've had a few updates to the website:"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:17
msgid ""
"[#156](https://github.com/fortran-lang/fortran-lang.org/pull/156): "
"Updates to the mini-book on building Fortran programs, including the "
"addition of short guides on Meson and CMake. You can read the mini-book "
"[here](https://fortran-lang.org/learn/building_programs)."
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:21
msgid ""
"[#169](https://github.com/fortran-lang/fortran-lang.org/pull/169): Add "
"PSBLAS to the package index."
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:34
#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:47
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:34
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:44
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:45
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:36
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:40
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:44
msgid "Here's what's new in `stdlib`:"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:36
msgid ""
"[#239](https://github.com/fortran-lang/stdlib/pull/239): Implementation "
"of bitsets in `stdlib_bitsets`."
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:37
msgid ""
"[#243](https://github.com/fortran-lang/stdlib/pull/243), "
"[#245](https://github.com/fortran-lang/stdlib/pull/245), "
"[#252](https://github.com/fortran-lang/stdlib/pull/253), "
"[#255](https://github.com/fortran-lang/stdlib/pull/255): Various "
"improvements to `stdlib_logger`."
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:41
msgid ""
"[#245](https://github.com/fortran-lang/stdlib/pull/245), "
"[#250](https://github.com/fortran-lang/stdlib/pull/250): Minor fixes to "
"the CI."
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:46
msgid ""
"(WIP) [#240](https://github.com/fortran-lang/stdlib/pull/240): "
"Implementation of the `stdlib_stats_distribution` module. It provides "
"probability distribution and statistical functions."
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:47
msgid ""
"(WIP) [#189](https://github.com/fortran-lang/stdlib/pull/189): Initial "
"implementation of sparse matrices."
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:52
msgid ""
"[#220](https://github.com/fortran-lang/stdlib/issues/220): API for file "
"system operations: directory manipulation"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:53
msgid ""
"[#241](https://github.com/fortran-lang/stdlib/issues/241): Include a "
"`split` function (202X feature)"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:54
msgid ""
"[#254](https://github.com/fortran-lang/stdlib/issues/254): Proposition to"
" add a logger for debug phases and levels among the different logs."
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:63
#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:99
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:96
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:81
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:102
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:94
msgid "Here's what's new in `fpm`:"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:65
msgid ""
"[#259](https://github.com/fortran-lang/fpm/pull/259): Update the "
"instructions for building from source in README.md."
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:66
msgid ""
"[#246](https://github.com/fortran-lang/fpm/pull/246): Automated binary "
"releases in CI."
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:67
msgid ""
"[#233](https://github.com/fortran-lang/fpm/pull/233): Allow linking with "
"external libraries."
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:68
msgid ""
"[#224](https://github.com/fortran-lang/fpm/pull/224): Add a reference "
"document for the package manifest (fpm.toml)."
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:69
msgid ""
"[#221](https://github.com/fortran-lang/fpm/pull/221), "
"[#239](https://github.com/fortran-lang/fpm/pull/239): Runner options for "
"test and app executables."
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:71
msgid ""
"[#220](https://github.com/fortran-lang/fpm/pull/220): Implement compiler "
"and flags settings in Haskell fpm."
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:72
msgid ""
"[#209](https://github.com/fortran-lang/fpm/pull/209): "
"[#237](https://github.com/fortran-lang/fpm/pull/237): Developer API docs."
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:74
msgid ""
"[#216](https://github.com/fortran-lang/fpm/pull/216), "
"[#225](https://github.com/fortran-lang/fpm/pull/225), "
"[#226](https://github.com/fortran-lang/fpm/pull/226), "
"[#229](https://github.com/fortran-lang/fpm/pull/229), "
"[#236](https://github.com/fortran-lang/fpm/pull/236), "
"[#240](https://github.com/fortran-lang/fpm/pull/240), "
"[#247](https://github.com/fortran-lang/fpm/pull/240): Other fixes and "
"improvements."
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:85
msgid ""
"(WIP) [#230](https://github.com/fortran-lang/fpm/pull/230),       "
"[#261](https://github.com/fortran-lang/fpm/pull/261): Specification of "
"the fpm CLI."
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:87
msgid ""
"(WIP) [#232](https://github.com/fortran-lang/fpm/pull/232): Allowing the "
"`extra` section in fpm.toml."
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:88
msgid ""
"(WIP) [#248](https://github.com/fortran-lang/fpm/pull/248): Refactor "
"backend for incremental rebuilds."
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:89
msgid ""
"(WIP) [#251](https://github.com/fortran-lang/fpm/pull/251): Dependency "
"management."
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:90
msgid ""
"(WIP) [#255](https://github.com/fortran-lang/fpm/pull/255): Setting the "
"compiler and specifying test or app target."
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:91
msgid ""
"(WIP) [#257](https://github.com/fortran-lang/fpm/pull/257): Implement "
"`fpm install`."
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:92
msgid ""
"(WIP) [#260](https://github.com/fortran-lang/fpm/pull/260): Fix CI to "
"test release build."
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:94
#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:171
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:119
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:112
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:153
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:134
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:116
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:150
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:165
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:136
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:198
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:127
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:142
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:155
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:133
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:114
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:126
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:144
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:129
msgid ""
"`fpm` is still in early development and we need as much help as we can "
"get. Here's how you can help today:"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:97
#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:174
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:122
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:115
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:156
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:137
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:119
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:153
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:168
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:139
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:201
msgid ""
"Use it and let us know what you think! Read the [fpm packaging "
"guide](https://github.com/fortran-lang/fpm/blob/HEAD/PACKAGING.md) to "
"learn how to build your package with fpm, and the [manifest "
"reference](https://github.com/fortran-lang/fpm/blob/HEAD/manifest-"
"reference.md) to learn what are all the things that you can specify in "
"the fpm.toml file."
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:110
msgid ""
"We continue to evaluate and merge pull requests into Classic Flang. "
"Recently merged pull requests into Classic Flang include:"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:111
msgid ""
"[PR#883: Flang generated executable does not show result variable of "
"function](https://github.com/flang-compiler/flang/pull/883)"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:112
msgid ""
"[PR#933: Updating X-flag entries for internal command line option \"-x "
"49\"](https://github.com/flang-compiler/flang/pull/933)"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:113
msgid ""
"[PR#939: Publish Arm's internal documentation](https://github.com/flang-"
"compiler/flang/pull/939)"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:114
msgid ""
"[PR#941: [DebugInfo] Internal subprogram variable is not accessible for "
"printing in gdb](https://github.com/flang-compiler/flang/pull/941)"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:115
msgid ""
"[PR#942: Implement UNROLL(n) directive](https://github.com/flang-"
"compiler/flang/pull/942)"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:116
msgid ""
"[PR#943: Enable github Actions for push to master and pull requests to "
"master](https://github.com/flang-compiler/flang/pull/943)"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:117
msgid ""
"[PR#945: libpgmath: Stop using pgstdinit.h](https://github.com/flang-"
"compiler/flang/pull/945)"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:118
msgid ""
"[PR#946: Call check_member() for PD_is_contiguous](https://github.com"
"/flang-compiler/flang/pull/946)"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:119
msgid ""
"[PR#951: Fix for ICE in atomic instruction generation](https://github.com"
"/flang-compiler/flang/pull/951)"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:121
msgid "Pull requests merged into the supporting projects:"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:122
msgid ""
"[classic flang LLVM monorepo PR#5: [Driver] Reduce downstream "
"delta](https://github.com/flang-compiler/classic-flang-llvm-"
"project/pull/5)"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:123
msgid ""
"[classic flang LLVM monorepo PR#6: Removing a few CI "
"pipelines](https://github.com/flang-compiler/classic-flang-llvm-"
"project/pull/6)"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:124
msgid ""
"[classic flang LLVM monorepo PR#7: Github Actions added to pre-compile "
"artifacts for flang](https://github.com/flang-compiler/classic-flang-"
"llvm-project/pull/7)"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:125
msgid ""
"[llvm mirror PR#87: Enable github actions for llvm](https://github.com"
"/flang-compiler/llvm/pull/87)"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:126
msgid ""
"[flang-driver PR#94: Enable github actions](https://github.com/flang-"
"compiler/flang-driver/pull/94)"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:128
msgid ""
"The Classic Flang biweekly call has been set up to discuss issues and "
"plans for the next pull requests to be validated and merged. Our next "
"calls are Wednesday, December 16 and 30, 8:00 AM Pacific time. The notes "
"from previous calls, upcoming agenda and a link to join the call can be "
"found [here](https://docs.google.com/document/d/1"
"-OuiKx4d7O6eLEJDBDKSRnSiUO2rgRR-c2Ga4AkrzOI)."
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:134
msgid ""
"Work continues on LLVM Flang, concentrating on semantics, lowering and "
"runtime. Significant contributions are being made for OpenMP and OpenACC "
"support."
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:138
msgid ""
"Pat McCormick is (still) working on an RFC for the merge of the lowering "
"code in the fir-dev fork into LLVM master. (This was interrupted by "
"Supercomputing 2020 and other ECP duties.) The goal is to expedite this "
"in a way that is acceptable to the Flang community, so we can do further "
"work in the single master branch."
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:141
msgid "Recent updates include:"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:142
msgid ""
"Johannes Doerfert has created a web page at https://flang.llvm.org; you "
"can find call and Slack logistics there"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:143
msgid ""
"Nichols Romero has an llvm-dev RFC for adding Fortran tests to the llvm-"
"tests project: http://lists.llvm.org/pipermail/llvm-"
"dev/2020-November/146873.html"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:144
msgid ""
"Andzrej Warzynski has a flang-dev RFC regarding flang option names: "
"http://lists.llvm.org/pipermail/flang-dev/2020-November/000588.html"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:145
msgid ""
"Andzrej Warzynski has a cfe-dev RFC regarding refactoring clang to help "
"flang driver become independent of clang: http://lists.llvm.org/pipermail"
"/cfe-dev/2020-November/067263.html"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:146
msgid ""
"Changed representation of CHARACTER data in type system to make more "
"consistent with other types (for arrays)"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:147
msgid ""
"Changed COMPLEX expression representation to provide better handling in "
"lowering"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:148
msgid "More improvements for supporting Fortran 77 programs"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:149
msgid "Implemented runtime support for basic ALLOCATE/DEALLOCATE and further work"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:150
msgid ""
"Continued implementation of table-driven runtime for derived types; "
"posted documentation"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:151
msgid "Continued implementation of array expression lowering"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:152
msgid "Improved error checks on forward references"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:153
msgid ""
"More updates to flang driver (option handling; -E can now be used to "
"invoke just the Flang preprocessor)"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:154
msgid "OpenACC semantic checks for modifiers on enter/exit data, set directives"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:155
msgid ""
"OpenACC lowering (enter/exit data, update, init, shutdown, wait "
"directives)"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:156
msgid ""
"OpenMP structure checker updates; semantic checks for copyin clause; "
"schedule class"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:161
msgid ""
"Brian Friesen (Lawrence Berkeley National Laboratory) was selected to be "
"the new Chair of PL22.3 (J3, US Standards Committee). Brian will serve in"
" his first term until November 2023. Congratulations, Brian!"
msgstr ""

#: ../../source/news/2020/12-01-Fortran-Newsletter-December-2020.md.md:163
msgid ""
"We had our 6th Fortran Monthly call on November 17. You can watch the "
"recording below:"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:7
msgid "Fortran newsletter: January 2021"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:9
msgid ""
"Happy New Year! Welcome to the January 2021 edition of the monthly "
"Fortran newsletter. The newsletter comes out at the beginning of every "
"month and details Fortran news from the previous month."
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:18
msgid ""
"[#178](https://github.com/fortran-lang/fortran-lang.org/pull/178), "
"[#188](https://github.com/fortran-lang/fortran-lang.org/pull/188): Fix "
"build preview"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:21
msgid ""
"[#179](https://github.com/fortran-lang/fortran-lang.org/pull/179): Fix "
"word spelling error in quickstart page"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:23
msgid ""
"[#173](https://github.com/fortran-lang/fortran-lang.org/pull/173), "
"[#180](https://github.com/fortran-lang/fortran-lang.org/pull/180), "
"[#186](https://github.com/fortran-lang/fortran-lang.org/pull/186): Add "
"missing packages from the list of popular Fortran projects to the package"
" index"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:27
msgid ""
"[#182](https://github.com/fortran-lang/fortran-lang.org/pull/182): Update"
" compilers page following Intel oneAPI release"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:29
msgid ""
"[#160](https://github.com/fortran-lang/fortran-lang.org/pull/160), "
"[#171](https://github.com/fortran-lang/fortran-lang.org/pull/171): In-"
"depth introduction for Fortran with Make."
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:35
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:24
msgid ""
"[#187](https://github.com/fortran-lang/fortran-lang.org/pull/187) (WIP): "
"Correct compiler page and tutorial regarding Intel oneAPI and PGI to "
"NVIDIA"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:37
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:26
msgid ""
"[#174](https://github.com/fortran-lang/fortran-lang.org/issues/174) "
"(WIP): We are searching for a representative Fortran code snippet for the"
" website and are looking forward to suggestions."
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:39
msgid ""
"[#190](https://github.com/fortran-lang/fortran-lang.org/pull/190) (WIP): "
"Add links to fpm contributing guidelines"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:49
msgid ""
"[#256](https://github.com/fortran-lang/stdlib/pull/256): Add the method "
"`log_debug` to `stdlib_logger`"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:50
msgid ""
"[#257](https://github.com/fortran-lang/stdlib/pull/257): Improve CMake "
"check for F18 error stop"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:51
msgid ""
"[#260](https://github.com/fortran-lang/stdlib/pull/260): Add Intel oneAPI"
" Fortran compiler to CI"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:52
msgid ""
"[#261](https://github.com/fortran-lang/stdlib/pull/261): Add a level "
"option to ignore logging messages"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:53
msgid ""
"[#263](https://github.com/fortran-lang/stdlib/pull/263),  "
"[#267](https://github.com/fortran-lang/stdlib/pull/267): Minor fixes to "
"CI"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:55
msgid ""
"[#270](https://github.com/fortran-lang/stdlib/pull/270): Add GFortran 10 "
"to CI"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:56
msgid ""
"[#275](https://github.com/fortran-lang/stdlib/pull/275): Add MSYS2 "
"systems to Windows CI"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:57
msgid ""
"[#282](https://github.com/fortran-lang/stdlib/pull/282): Add a note about"
" memory issues when compiling stdlib with the support of arrays to up 15 "
"ranks"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:58
msgid ""
"[#283](https://github.com/fortran-lang/stdlib/pull/283): Improve the "
"compilation load by splitting submodules"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:63
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:57
msgid ""
"[#269](https://github.com/fortran-lang/stdlib/pull/269) (WIP): "
"Implementation of a module for handling lists of strings"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:64
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:59
msgid ""
"[#271](https://github.com/fortran-lang/stdlib/pull/271) (WIP), "
"[#272](https://github.com/fortran-lang/stdlib/pull/272) (WIP), "
"[#273](https://github.com/fortran-lang/stdlib/pull/273) (WIP), "
"[#276](https://github.com/fortran-lang/stdlib/pull/276) (WIP), "
"[#278](https://github.com/fortran-lang/stdlib/pull/278) (WIP): "
"Implementation of the `stdlib_stats_distribution` modules. It provides "
"probability distribution and statistical functions."
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:69
msgid ""
"[#284](https://github.com/fortran-lang/stdlib/pull/284) (WIP): Required "
"changes to be able to use `stdlib` as a subproject in CMake"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:70
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:66
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:57
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:59
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:55
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:81
msgid ""
"[#189](https://github.com/fortran-lang/stdlib/pull/189) (WIP): Initial "
"implementation of sparse matrices."
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:74
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:71
msgid ""
"Otherwise, ongoing discussions continue about usability of `stdlib` "
"([#7](https://github.com/fortran-lang/stdlib/issues/7), "
"[#215](https://github.com/fortran-lang/stdlib/issues/215), "
"[#279](https://github.com/fortran-lang/stdlib/issues/279), "
"[#280](https://github.com/fortran-lang/stdlib/issues/280), "
"[#285](https://github.com/fortran-lang/stdlib/issues/285)), and new "
"implementations for `stdlib` ([#135](https://github.com/fortran-"
"lang/stdlib/issues/135), [#212](https://github.com/fortran-"
"lang/stdlib/issues/212), [#234](https://github.com/fortran-"
"lang/stdlib/issues/234), [#241](https://github.com/fortran-"
"lang/stdlib/issues/241), [#258](https://github.com/fortran-"
"lang/stdlib/issues/258), [#259](https://github.com/fortran-"
"lang/stdlib/issues/259), [#262](https://github.com/fortran-"
"lang/stdlib/issues/262), [#268](https://github.com/fortran-"
"lang/stdlib/issues/268), [#277](https://github.com/fortran-"
"lang/stdlib/issues/277))."
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:101
msgid ""
"[Alpha release version 0.1.3](https://github.com/fortran-"
"lang/fpm/releases/tag/v0.1.3)"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:102
msgid ""
"[setup-fpm action](https://github.com/marketplace/actions/setup-fpm): "
"GitHub Action to setup the Fortran Package Manager on Ubuntu, MacOS and "
"Windows runners"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:104
msgid ""
"[Discussion board](https://github.com/fortran-lang/fpm/discussions): For "
"questions & answers, sharing of ideas, showing off projects and, of "
"course, discussions around fpm"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:106
msgid ""
"[#248](https://github.com/fortran-lang/fpm/pull/248): Refactor backend "
"for incremental rebuilds"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:108
msgid ""
"[#266](https://github.com/fortran-lang/fpm/pull/251): Dependency "
"management and `fpm update` subcommand"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:110
msgid ""
"[#255](https://github.com/fortran-lang/fpm/pull/255) Setting the compiler"
" and specifying test or app target"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:112
msgid ""
"[#262](https://github.com/fortran-lang/fpm/pull/262): Add "
"-fcoarray=single to default gfortran flags"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:114
msgid ""
"[#257](https://github.com/fortran-lang/fpm/pull/257): Implement `fpm "
"install`"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:116
msgid ""
"[#260](https://github.com/fortran-lang/fpm/pull/260): Fix CI to test "
"release build"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:118
msgid ""
"[#267](https://github.com/fortran-lang/fpm/pull/267): Fix enumeration of "
"non-library link objects"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:120
msgid ""
"[#268](https://github.com/fortran-lang/fpm/pull/268): Fix dependency "
"tracking issue in bootstrap version"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:122
msgid ""
"[#271](https://github.com/fortran-lang/fpm/pull/271): Fix Windows run and"
" test commands"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:124
msgid ""
"[#273](https://github.com/fortran-lang/fpm/pull/273): Update developer "
"documentation (manifest + command line)"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:126
msgid ""
"[#274](https://github.com/fortran-lang/fpm/pull/274): Update README with "
"link to setup-fpm github action."
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:128
msgid ""
"[#280](https://github.com/fortran-lang/fpm/pull/280): Create "
"specification for example section"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:130
msgid ""
"[#281](https://github.com/fortran-lang/fpm/pull/281): Cleanup: Remove "
"archived Rust prototype"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:132
msgid ""
"[#284](https://github.com/fortran-lang/fpm/pull/284): Document model and "
"backend for developers"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:134
msgid ""
"[#285](https://github.com/fortran-lang/fpm/pull/285): CI: update naming "
"of release binaries"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:136
msgid ""
"[#286](https://github.com/fortran-lang/fpm/pull/286): Implement check for"
" duplicated program names"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:138
msgid ""
"[#289](https://github.com/fortran-lang/fpm/pull/289): Add support for "
"same compilers as Fortran version to Haskell version"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:140
msgid ""
"[#291](https://github.com/fortran-lang/fpm/pull/291): Initial "
"implementation of `fpm build --show-model`"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:142
msgid ""
"[#292](https://github.com/fortran-lang/fpm/pull/292): Specify the correct"
" help for `fpm run -h`"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:144
msgid ""
"[#293](https://github.com/fortran-lang/fpm/pull/293): Fix: missing error "
"check after `new_package` call"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:146
msgid ""
"[#294](https://github.com/fortran-lang/fpm/pull/294): Add: support for "
"detecting .f and .F files"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:148
msgid ""
"[#300](https://github.com/fortran-lang/fpm/pull/300): Remove "
"-coarray=single option from ifort compiler default options"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:150
msgid ""
"[#303](https://github.com/fortran-lang/fpm/pull/303): Fixes to source "
"parsing"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:152
msgid ""
"[#304](https://github.com/fortran-lang/fpm/pull/304): Remove note on not "
"supported dependencies in program targets"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:154
msgid ""
"[#307](https://github.com/fortran-lang/fpm/pull/307): Fix: program object"
" file collision"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:156
msgid ""
"[#315](https://github.com/fortran-lang/fpm/pull/315): Remove: -ffast-math"
" in gfortran default release flags"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:158
msgid ""
"[#322](https://github.com/fortran-lang/fpm/pull/322): Group sources by "
"package in the model"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:165
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:111
msgid ""
"[#230](https://github.com/fortran-lang/fpm/pull/230), "
"[#261](https://github.com/fortran-lang/fpm/pull/261) (WIP): Specification"
" of the fpm CLI."
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:168
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:114
msgid ""
"[#316](https://github.com/fortran-lang/fpm/pull/316) (WIP): Update "
"subcommand \"new\" to reflect the addition of support for examples"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:175
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:123
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:116
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:157
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:138
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:120
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:154
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:169
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:140
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:205
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:134
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:149
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:162
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:140
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:121
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:133
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:151
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:136
msgid ""
"Browse existing *fpm* packages on the [fortran-lang website](https"
"://fortran-lang.org/packages/fpm)"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:188
msgid "There are several pull requests out for evaluation."
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:190
msgid "Only one pull request was merged in December:"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:192
msgid ""
"[PR#951 Fix for ICE in atomic instruction generation](https://github.com"
"/flang-compiler/flang/pull/951)"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:196
msgid ""
"Alexis-Perry Holby (aperry@lanl.gov) has taken over the Flang biweekly "
"calls. An invitation was sent to the _flang-dev_ LLVM email list on "
"December 22nd. Call notes will be sent to the _flang-dev_ email list and "
"also recorded [here]( https://docs.google.com/document/d/10T-"
"S2J3GrahpG4Ooif93NSTz2zBW0MQc_RlwHi0-afY)."
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:200
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:156
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:196
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:162
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:180
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:219
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:148
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:163
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:175
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:153
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:134
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:146
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:164
msgid "Recent development updates:"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:202
msgid "Semantic analysis fix for index-names of `FORALL` statements"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:203
msgid "Continued work on parser support for `ALLOCATE`"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:204
msgid "Build tidying"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:205
msgid "OpenMP semantic checks: atomic, flush"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:206
msgid "Continued work on new driver"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:207
msgid "Fix for list-directed REAL output editing"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:208
msgid ""
"Bug fixes: USE of USE of generic, crash in folding (#48437), crash in "
"OpenMP semantic check (#48308), `IMPLICIT_NONE(EXTERNAL)`"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:209
msgid "Implement `STORAGE_SIZE()`, `SIZEOF()`, and `C_SIZEOF()`"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:210
msgid ""
"OpenACC: update serial construct clauses for 3.1, enforce restriction on "
"routine directive and clauses"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:211
msgid "OpenMP: adding important clauses to OmpClause, task reduction clause"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:215
msgid ""
"We had our 7th Fortran Monthly call on December 15. You can watch the "
"recording below:"
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:223
msgid ""
"[Episode 6](https://adspthepodcast.com/2021/01/01/Episode-6.html) of the "
"Algorithms+Data Structures=Programs (ADSP) Podcast discussed Fortran and "
"the recent fortran-lang developments."
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:226
msgid ""
"[First year of Fortran-lang](https://medium.com/modern-fortran/first-"
"year-of-fortran-lang-d8796bfa0067) by Milan Curcic."
msgstr ""

#: ../../source/news/2021/01-01-Fortran-Newsletter-January-2021.md.md:236
#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:196
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:195
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:297
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:234
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:193
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:209
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:231
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:303
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:317
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:259
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:254
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:311
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:274
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:290
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:265
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:387
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:494
msgid "[fortran-lang/setup-fpm](https://github.com/fortran-lang/setup-fpm)"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:7
msgid "Fortran newsletter: February 2021"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:9
msgid ""
"Welcome to the February 2021 edition of the monthly Fortran newsletter. "
"The newsletter comes out at the beginning of every month and details "
"Fortran news from the previous month."
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:17
msgid ""
"[#190](https://github.com/fortran-lang/fortran-lang.org/pull/190): Add "
"links to fpm contributing guidelines"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:22
msgid ""
"[#191](https://github.com/fortran-lang/fortran-lang.org/pull/191) (WIP): "
"Fix author/maintainer output in fpm registry"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:36
msgid ""
"[#303](https://github.com/fortran-lang/stdlib/pull/303), "
"[#301](https://github.com/fortran-lang/stdlib/pull/301), "
"[#294](https://github.com/fortran-lang/stdlib/pull/294): Fixes and "
"improvements for the manual Makefile build"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:40
msgid ""
"[#293](https://github.com/fortran-lang/stdlib/pull/293): Write a more "
"verbose introduction to building stdlib"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:42
msgid ""
"[#291](https://github.com/fortran-lang/stdlib/pull/291): Export package "
"files (CMake and pkg-config)"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:44
msgid ""
"[#290](https://github.com/fortran-lang/stdlib/pull/290): Rename CMake "
"project from stdlib to fortran\\_stdlib"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:46
msgid ""
"[#288](https://github.com/fortran-lang/stdlib/pull/288): Follow GNU "
"install conventions"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:48
msgid ""
"[#284](https://github.com/fortran-lang/stdlib/pull/284): Required changes"
" to be able to use `stdlib` as a subproject in CMake"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:50
msgid ""
"[CMake example](https://github.com/fortran-lang/stdlib-cmake-example): "
"Integration of the Fortran standard library in CMake projects"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:55
msgid ""
"[#304](https://github.com/fortran-lang/stdlib/pull/304) (WIP): Add "
"supported compilers MinGW 8, 9, 10"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:98
msgid ""
"[#342](https://github.com/fortran-lang/fpm/pull/342): Fix broken link in "
"contributing guidelines"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:100
msgid ""
"[#337](https://github.com/fortran-lang/fpm/pull/337): Allow hyphens in "
"fpm project names in \"fpm new\""
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:102
msgid ""
"[#335](https://github.com/fortran-lang/fpm/pull/335): Fix: performance "
"regression"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:104
msgid ""
"[#334](https://github.com/fortran-lang/fpm/pull/334): Remove a name clash"
" in the fpm testsuite"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:116
msgid ""
"[#345](https://github.com/fortran-lang/fpm/pull/345) (WIP): Update: "
"fpm\\_backend with dynamic openmp scheduling"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:136
msgid "There are a number of pull requests out for evaluation."
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:138
msgid "A total of 12 pull requests were merged in January."
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:140
msgid ""
"[PR#932 Do not assume unempty derived types](https://github.com/flang-"
"compiler/flang/pull/932)"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:141
msgid ""
"[PR#957 Support Prefetch Directive](https://github.com/flang-"
"compiler/flang/pull/957)"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:142
msgid ""
"[PR#947 Fix gcc-10 compilaton issues](https://github.com/flang-"
"compiler/flang/pull/947)"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:143
msgid ""
"[PR#948 Expand CI to run with GCC-9/10 and "
"LLVM-9/10/11](https://github.com/flang-compiler/flang/pull/948)"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:144
msgid ""
"[PR#949 USE rename should check if renamed sptr is available in the "
"scope](https://github.com/flang-compiler/flang/pull/949)"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:145
msgid ""
"[PR#971 Remove dwarfdump_prolog.f90 test since it is dependent on "
"codegen](https://github.com/flang-compiler/flang/pull/971)"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:146
msgid ""
"[PR#940 Flang should generate debug location for limited instructions in "
"prolog](https://github.com/flang-compiler/flang/pull/940)"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:147
msgid ""
"[PR#977 Update apt data before installing sphinx](https://github.com"
"/flang-compiler/flang/pull/977)"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:148
msgid ""
"[PR#751 Fix for len intrinsic returning int*8 in some "
"cases](https://github.com/flang-compiler/flang/pull/751)"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:149
msgid ""
"[PR#956 Minor FileCheck pattern fixes](https://github.com/flang-"
"compiler/flang/pull/956)"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:150
msgid ""
"[PR#978 Fix the readme to point to the correct flang-dev "
"list](https://github.com/flang-compiler/flang/pull/978)"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:151
msgid ""
"[PR#979 Rename direct header to avoid windows "
"conflict](https://github.com/flang-compiler/flang/pull/979)"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:158
msgid ""
"OpenMP semantic checks: private, firstprivate, lastprivate, Workshare "
"Construct, `DO` loop restrictions"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:159
msgid "Detect call to abstract interface"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:160
msgid ""
"OpenMP - add task_reduction clause, make reduction clause part of "
"OmpClause"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:161
msgid ""
"New Driver - adding support for various options, testing improvements, "
"standard macro pre-definitions, fixed-form detection, CMake improvements"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:162
msgid "OpenACC - semantic checks to enforce declare directive restrictions"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:163
msgid "Internal subprogram improvements"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:164
msgid ""
"OpenMP/OpenACC - Extend CheckNoBranching to handle branching provided by "
"LabelEnforce"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:165
msgid "Disallow `INTENT` attribute on procedure dummy arguments"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:166
msgid "Module file improvements and bug fixes"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:167
msgid "Add tests for procedure arguments with implicit interfaces"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:169
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:231
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:200
msgid ""
"Call notes will be sent to the _flang-dev_ email list and also recorded "
"[here](https://docs.google.com/document/d/10T-"
"S2J3GrahpG4Ooif93NSTz2zBW0MQc_RlwHi0-afY)."
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:174
msgid ""
"We had our 8th Fortran Monthly call on January 19. You can watch the "
"recording below:"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:179
msgid ""
"This year fortran-lang will be applying as a mentor organisation for "
"[Google Summer of Code](https://summerofcode.withgoogle.com/). We have "
"started working on the application and the project ideas; you can join "
"the ongoing discussion [here](https://fortran-lang.discourse.group/t"
"/google-summer-of-code-2021/658). If you'd like to help us flesh out the "
"ideas, or have a project idea of your own, please join our upcoming video"
" calls on February 9 and 16 (call info will be posted in the Discourse "
"thread), or write directly in the Discourse thread. If you're a student, "
"or know students who are [eligible to "
"participate](https://developers.google.com/open-"
"source/gsoc/faq#what_are_the_eligibility_requirements_for_participation),"
" and you'd like to help build the Fortran ecosystem please reach out and "
"let us know."
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:193
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:192
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:294
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:231
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:190
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:206
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:228
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:300
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:314
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:256
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:251
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:307
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:270
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:286
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:261
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:383
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:490
msgid ""
"[fortran-lang/stdlib-cmake-example](https://github.com/fortran-lang"
"/stdlib-cmake-example)"
msgstr ""

#: ../../source/news/2021/02-01-Fortran-Newsletter-February-2021.md.md:199
#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:198
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:302
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:239
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:198
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:214
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:236
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:309
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:323
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:265
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:260
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:318
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:281
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:298
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:273
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:395
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:503
msgid "[j3-fortran/fortran\\_proposals](https://github.com/j3-fortran/fortran_proposals)"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:7
msgid "Fortran newsletter: March 2021"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:9
msgid ""
"Welcome to the March 2021 edition of the monthly Fortran newsletter. The "
"newsletter comes out at the beginning of every month and details Fortran "
"news from the previous month."
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:15
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:15
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:15
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:15
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:15
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:15
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:15
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:15
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:16
msgid "This month we've had several updates to the website:"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:17
msgid ""
"[#191](https://github.com/fortran-lang/fortran-lang.org/pull/191): Fix "
"author/maintainer output in fpm registry"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:19
msgid ""
"[#193](https://github.com/fortran-lang/fortran-lang.org/pull/193): Rename"
" all instances of fortran-lang.github.io to fortran-lang.org"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:21
msgid ""
"[#196](https://github.com/fortran-lang/fortran-lang.org/pull/196): Update"
" package index"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:23
msgid ""
"[#199](https://github.com/fortran-lang/fortran-lang.org/pull/199): Fix "
"broken link for LLVM flang"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:25
msgid ""
"[#205](https://github.com/fortran-lang/fortran-lang.org/pull/205): Add "
"more electronic structure and atomistic simulation packages"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:27
msgid ""
"[#206](https://github.com/fortran-lang/fortran-lang.org/pull/206): Add "
"books to learning section"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:29
msgid ""
"[#208](https://github.com/fortran-lang/fortran-lang.org/pull/208): Fix "
"package information"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:34
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:35
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:26
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:32
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:28
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:29
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:24
msgid ""
"[#201](https://github.com/fortran-lang/fortran-lang.org/pull/201) (WIP): "
"Internationalization for fortran-lang"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:36
msgid ""
"[#207](https://github.com/fortran-lang/fortran-lang.org/issues/207) "
"(WIP): Correct subtitle of setting up your os"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:46
msgid ""
"[#271](https://github.com/fortran-lang/stdlib/pull/271): Probability "
"Distribution and Statistical Functions--PRNG Module"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:48
msgid ""
"[#304](https://github.com/fortran-lang/stdlib/pull/304): Add supported "
"compilers MinGW 8, 9, 10"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:50
msgid ""
"[#310](https://github.com/fortran-lang/stdlib/pull/310): Extend "
"`stdlib_ascii` module for handling character variables"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:52
msgid ""
"[#324](https://github.com/fortran-lang/stdlib/pull/324): Install "
"setuptools for MinGW builds"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:59
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:61
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:57
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:75
msgid ""
"[#272](https://github.com/fortran-lang/stdlib/pull/272) (WIP), "
"[#273](https://github.com/fortran-lang/stdlib/pull/273) (WIP), "
"[#276](https://github.com/fortran-lang/stdlib/pull/276) (WIP), "
"[#278](https://github.com/fortran-lang/stdlib/pull/278) (WIP): "
"Implementation of the `stdlib_stats_distribution` modules. It provides "
"probability distribution and statistical functions."
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:65
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:67
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:63
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:73
msgid ""
"[#311](https://github.com/fortran-lang/stdlib/pull/311) (WIP): "
"Implementation of a module for handling lists of strings"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:67
msgid ""
"[#320](https://github.com/fortran-lang/stdlib/pull/320) (WIP): Implement "
"non-fancy functional string type"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:69
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:69
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:65
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:71
msgid ""
"[#313](https://github.com/fortran-lang/stdlib/pull/313) (WIP): Legendre "
"polynomials and Gaussian quadrature"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:72
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:93
msgid "Please help improve stdlib by testing and reviewing these pull requests!"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:83
msgid ""
"[#316](https://github.com/fortran-lang/fpm/pull/316): Update subcommand "
"\"new\" to reflect the addition of support for the example/ directory"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:85
msgid ""
"[#345](https://github.com/fortran-lang/fpm/pull/345): Fpm backend with "
"dynamic openmp scheduling"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:87
msgid ""
"[#346](https://github.com/fortran-lang/fpm/pull/346): Include root dir in"
" path to default example setup"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:89
msgid ""
"[#349](https://github.com/fortran-lang/fpm/pull/349): Suggest to move the"
" fpm version in the boostrapping process"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:91
msgid ""
"[#372](https://github.com/fortran-lang/fpm/pull/372): Unify release mode "
"calling convention"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:98
msgid ""
"[#230](https://github.com/fortran-lang/fpm/pull/230), "
"[#261](https://github.com/fortran-lang/fpm/pull/261) (WIP): Document the "
"specification of the fpm CLI."
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:101
msgid ""
"[#352](https://github.com/fortran-lang/fpm/pull/352) (WIP): Hacky fix for"
" the help test"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:103
msgid ""
"[#357](https://github.com/fortran-lang/fpm/pull/357) (WIP): Install "
"script for Fortran fpm"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:105
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:146
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:121
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:113
msgid ""
"[#364](https://github.com/fortran-lang/fpm/pull/364) (WIP): Plugin alpha "
"version"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:107
msgid ""
"[#369](https://github.com/fortran-lang/fpm/pull/369) (WIP): Separate "
"build targets from model structure"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:109
msgid ""
"[#370](https://github.com/fortran-lang/fpm/pull/370) (WIP): Update run "
"subcommand"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:129
msgid ""
"The LFortran team is excited to announce that LFortran is now a [NumFOCUS"
" sponsored project](https://numfocus.org/project/lfortran). Please "
"consider donating to LFortran to accelerate its development."
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:131
msgid ""
"4 people contributed code in the last month:   [Gagandeep "
"Singh](https://github.com/czgdp1807),   [Dominic "
"Poerio](https://dompoer.io/),   [Rohit Goswami](https://rgoswami.me/),   "
"[Ondřej Čertík](https://ondrejcertik.com/)."
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:136
msgid "Recent Merge Requests highlights:"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:137
msgid ""
"Complex type support (thanks to [Gagandeep "
"Singh](https://github.com/czgdp1807)):   "
"[!654](https://gitlab.com/lfortran/lfortran/-/merge_requests/654),   "
"[!657](https://gitlab.com/lfortran/lfortran/-/merge_requests/657),   "
"[!658](https://gitlab.com/lfortran/lfortran/-/merge_requests/658),   "
"[!660](https://gitlab.com/lfortran/lfortran/-/merge_requests/660),   "
"[!663](https://gitlab.com/lfortran/lfortran/-/merge_requests/663),   "
"[!664](https://gitlab.com/lfortran/lfortran/-/merge_requests/664).   "
"[!672](https://gitlab.com/lfortran/lfortran/-/merge_requests/672)."
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:145
msgid ""
"Multiline REPL (thanks to [Dominic Poerio](https://dompoer.io/)):   "
"[!655](https://gitlab.com/lfortran/lfortran/-/merge_requests/655),   "
"[!662](https://gitlab.com/lfortran/lfortran/-/merge_requests/662),   "
"[!670](https://gitlab.com/lfortran/lfortran/-/merge_requests/670),   "
"[!674](https://gitlab.com/lfortran/lfortran/-/merge_requests/674)."
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:150
msgid ""
"Initial support for runtime math functions:   "
"[!667](https://gitlab.com/lfortran/lfortran/-/merge_requests/667),   "
"[!673](https://gitlab.com/lfortran/lfortran/-/merge_requests/673),"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:153
msgid ""
"[!648](https://gitlab.com/lfortran/lfortran/-/merge_requests/648): "
"Implement --show-stacktrace"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:154
msgid ""
"[!666](https://gitlab.com/lfortran/lfortran/-/merge_requests/666): "
"Refactor ImplicitCast nodes handling"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:156
msgid ""
"[!665](https://gitlab.com/lfortran/lfortran/-/merge_requests/665): Fixed "
"floating point printing"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:163
msgid ""
"We had our 9th Fortran Monthly call on February 25. You can watch the "
"recording below:"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:168
msgid ""
"This year Fortran-lang applied as a mentor organization for [Google "
"Summer of Code](https://summerofcode.withgoogle.com/). Accepted mentor "
"organizations will be announced on March 9. If you're a student, or know "
"students who are [eligible to participate](https://developers.google.com"
"/open-"
"source/gsoc/faq#what_are_the_eligibility_requirements_for_participation),"
" and you'd like to help build the Fortran ecosystem please reach out and "
"let us know."
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:172
msgid ""
"The 223rd meeting of the US Fortran Standards Committee is held virtually"
" from February 22 to March 2 (Monday and Tuesday only). Main topics of "
"dicussion are the planned changes for the Fortran 202X revision of the "
"Standard:"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:177
msgid "[List](https://j3-fortran.org/doc/meeting/223) of all submitted papers"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:178
msgid ""
"[Summary](https://github.com/j3-fortran/fortran_proposals/issues/199) of "
"which papers were discussed each day and voting results"
msgstr ""

#: ../../source/news/2021/03-01-Fortran-Newsletter-March-2021.md.md:180
#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:277
msgid ""
"If you have ideas for new improvements to the language, please propose "
"them [here](https://github.com/j3-fortran/fortran_proposals)."
msgstr ""

#: ../../source/news/2021/03-09-fortran-lang-accepted-for-google-summer-of-code-2021.md.md:7
msgid "Fortran-lang accepted to Google Summer of Code 2021"
msgstr ""

#: ../../source/news/2021/03-09-fortran-lang-accepted-for-google-summer-of-code-2021.md.md:9
msgid ""
"We are excited to announce that Fortran-lang has been accepted as a "
"[Google Summer of Code (GSoC) 2021 mentoring "
"organization](https://summerofcode.withgoogle.com/organizations/6633903353233408)!"
" 🎉"
msgstr ""

#: ../../source/news/2021/03-09-fortran-lang-accepted-for-google-summer-of-code-2021.md.md:11
msgid ""
"You can review our project ideas [here](https://github.com/fortran-lang"
"/fortran-lang.org/wiki/GSoC-2021-Project-ideas), and if you have any "
"ideas that are not mentioned, please let us know."
msgstr ""

#: ../../source/news/2021/03-09-fortran-lang-accepted-for-google-summer-of-code-2021.md.md:15
msgid ""
"We are looking for students to get in touch with us and to apply. Click "
"[here](https://github.com/fortran-lang/fortran-lang.org/wiki/GSoC-2021"
"-Student-instructions) for instructions on how to do so."
msgstr ""

#: ../../source/news/2021/03-09-fortran-lang-accepted-for-google-summer-of-code-2021.md.md:19
msgid ""
"Our main communication channel will be the [Fortran Discourse](https"
"://fortran-lang.discourse.group/). There, we will announce a date for "
"GSoC video calls where all prospective students are welcome to join to "
"ask questions, discuss, and brainstorm ideas."
msgstr ""

#: ../../source/news/2021/03-09-fortran-lang-accepted-for-google-summer-of-code-2021.md.md:23
msgid "We look forward to a productive and fun Google Summer of Code!"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:7
msgid "Fortran newsletter: April 2021"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:9
msgid ""
"Welcome to the April 2021 edition of the monthly Fortran newsletter. The "
"newsletter comes out at the beginning of every month and details Fortran "
"news from the previous month."
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:17
msgid ""
"[#229](https://github.com/fortran-lang/fortran-lang.org/pull/229): "
"Correct value of pi in quickstart mini-book"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:19
msgid ""
"[#226](https://github.com/fortran-lang/fortran-lang.org/pull/226): Added "
"DelaunaySparse to package list"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:21
msgid ""
"[#223](https://github.com/fortran-lang/fortran-lang.org/pull/223) "
"[#225](https://github.com/fortran-lang/fortran-lang.org/pull/225): GSoC "
"announcement"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:24
msgid ""
"[#222](https://github.com/fortran-lang/fortran-lang.org/pull/222): Avoid "
"unclear formulation in contributing guide"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:26
msgid ""
"[#221](https://github.com/fortran-lang/fortran-lang.org/pull/221): Add "
"information about free compiler versions"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:28
msgid ""
"[#216](https://github.com/fortran-lang/fortran-lang.org/pull/216): "
"Improve tags"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:30
msgid ""
"[#207](https://github.com/fortran-lang/fortran-lang.org/issues/207): "
"Correct subtitle of setting up your os"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:37
msgid ""
"[#220](https://github.com/fortran-lang/fortran-lang.org/pull/220) (WIP): "
"Include learn resources to online courses"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:47
msgid ""
"[#320](https://github.com/fortran-lang/stdlib/pull/320): Implement non-"
"fancy functional string type"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:49
msgid ""
"[#362](https://github.com/fortran-lang/stdlib/pull/362): Fix wording in "
"style guide for dimension attribute"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:51
msgid ""
"[#352](https://github.com/fortran-lang/stdlib/pull/352): Added TOC to "
"README"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:53
msgid ""
"[#346](https://github.com/fortran-lang/stdlib/pull/346) "
"[#356](https://github.com/fortran-lang/stdlib/pull/356): Added "
"to\\_lower, to\\_upper, reverse and to\\_title function to "
"stdlib\\_string\\_type module"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:71
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:67
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:69
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:87
msgid ""
"[#333](https://github.com/fortran-lang/stdlib/pull/333) (WIP): Provide "
"abstract base class for a string object"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:73
msgid ""
"[#336](https://github.com/fortran-lang/stdlib/pull/336) (WIP): Add "
"functions to convert integer/logical values to character values"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:75
msgid ""
"[#343](https://github.com/fortran-lang/stdlib/pull/343) (WIP): Implement "
"strip and chomp as supplement to trim"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:77
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:69
msgid ""
"[#349](https://github.com/fortran-lang/stdlib/pull/349) (WIP): Simplify "
"test makefile"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:79
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:71
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:67
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:85
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:111
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:83
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:132
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:79
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:86
msgid ""
"[#353](https://github.com/fortran-lang/stdlib/pull/353) (WIP): Initial "
"checkin for a module for tolerant comparison of reals"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:81
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:73
msgid ""
"[#355](https://github.com/fortran-lang/stdlib/pull/355) (WIP): Implement "
"clip function"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:83
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:75
msgid ""
"[#359](https://github.com/fortran-lang/stdlib/pull/359) (WIP): Add "
"general contributing guidelines to stdlib"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:85
msgid ""
"[#360](https://github.com/fortran-lang/stdlib/pull/360) (WIP): Summarize "
"build toolchain workflow and implied rules"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:87
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:77
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:65
msgid ""
"[#363](https://github.com/fortran-lang/stdlib/pull/363) (WIP): Add sort "
"to stdlib\\_string\\_type module"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:89
msgid ""
"[#367](https://github.com/fortran-lang/stdlib/pull/367) (WIP): Add Intel "
"compiler workflow for OSX"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:104
msgid ""
"[Alpha release version 0.2.0](https://github.com/fortran-"
"lang/fpm/releases/tag/v0.2.0)"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:105
msgid ""
"[Fpm is now available on conda-forge](https://github.com/conda-forge/fpm-"
"feedstock)"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:106
msgid ""
"[#352](https://github.com/fortran-lang/fpm/pull/352): Hacky fix for the "
"help test"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:108
msgid ""
"[#357](https://github.com/fortran-lang/fpm/pull/357): Install script for "
"Fortran fpm"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:110
msgid ""
"[#369](https://github.com/fortran-lang/fpm/pull/369): Separate build "
"targets from model structure"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:112
msgid ""
"[#370](https://github.com/fortran-lang/fpm/pull/370): Update run "
"subcommand"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:114
msgid ""
"[#377](https://github.com/fortran-lang/fpm/pull/377): Add explicit "
"include-dir key to manifest"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:116
msgid ""
"[#378](https://github.com/fortran-lang/fpm/pull/378): Add ford-compatible"
" documentation to fpm\\_strings.f90"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:118
msgid ""
"[#386](https://github.com/fortran-lang/fpm/pull/386): Replace deprecated "
"flags in debug\\_fortran option"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:120
msgid ""
"[#390](https://github.com/fortran-lang/fpm/pull/390) "
"[#407](https://github.com/fortran-lang/fpm/pull/407): Implement --flag "
"option for Fortran fpm"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:123
msgid ""
"[#397](https://github.com/fortran-lang/fpm/pull/397): Add Conda install "
"instructions to the README"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:125
msgid ""
"[#398](https://github.com/fortran-lang/fpm/pull/398): Minor fix: for "
"setting executable link libraries"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:127
msgid ""
"[#402](https://github.com/fortran-lang/fpm/pull/402): Add fpm description"
" and reorganize the README intro"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:129
msgid ""
"[#404](https://github.com/fortran-lang/fpm/pull/404): Correct join for "
"null input"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:131
msgid ""
"[#409](https://github.com/fortran-lang/fpm/pull/409): Give Programs "
"Access to Code in Subdirectories"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:133
msgid ""
"[#414](https://github.com/fortran-lang/fpm/pull/414): Add few important "
"links to README"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:135
msgid ""
"[#412](https://github.com/fortran-lang/fpm/pull/412): Duplicate module "
"definitions"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:137
msgid ""
"[#413](https://github.com/fortran-lang/fpm/pull/413): Add: omp\\_lib to "
"intrinsic modules list"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:139
msgid ""
"[#419](https://github.com/fortran-lang/fpm/pull/419): Split workflow for "
"Haskell and Fortran fpm"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:148
msgid ""
"[#420](https://github.com/fortran-lang/fpm/pull/420) (WIP): Phase out "
"Haskell fpm"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:150
msgid ""
"[fpm-haskell](https://github.com/fortran-lang/fpm-haskell) (WIP): "
"Separate repository for the Haskell fpm version"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:170
msgid "A total of 10 pull requests were merged in February."
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:172
msgid ""
"[PR#996 tests: one test case supporting PR #966](https://github.com"
"/flang-compiler/flang/pull/996)"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:173
msgid ""
"[PR#968 Fix a clash between CONTIGUOUS and SAVE attribute in flang (issue"
" #673)](https://github.com/flang-compiler/flang/pull/968)"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:174
msgid ""
"[PR#955 Do not issue an error when character kind 2 is "
"used](https://github.com/flang-compiler/flang/pull/955)"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:175
msgid ""
"[PR#975 Add the option to build release_11x branch of llvm with Github "
"Actions](https://github.com/flang-compiler/flang/pull/975)"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:176
msgid ""
"[PR#974 Fix hash collision handling routine that didn't work due to a "
"fatal mistake (issue #960).](https://github.com/flang-"
"compiler/flang/pull/974)"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:177
msgid ""
"[PR#1000 Add ccache support to GitHub Actions](https://github.com/flang-"
"compiler/flang/pull/1000)"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:178
msgid ""
"[PR#952 Array debugging support with upgraded "
"DISubrange](https://github.com/flang-compiler/flang/pull/952)"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:179
msgid ""
"[PR#1002 Fix for regression introduced by PR #922 (issue "
"#995)](https://github.com/flang-compiler/flang/pull/1002)"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:180
msgid "[PR#985 add asprintf](https://github.com/flang-compiler/flang/pull/985)"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:181
msgid ""
"[PR#966 Fixes to address cp2k compilation and runtime "
"issues](https://github.com/flang-compiler/flang/pull/966)"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:183
msgid "A total of 8 pull requests were merged in March."
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:185
msgid ""
"[PR#963 Fix errors on array initialisation with an implied do "
"loop](https://github.com/flang-compiler/flang/pull/963)"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:186
msgid ""
"[PR#1007 fix for issue #1006: stop passing unused uninitialized "
"value](https://github.com/flang-compiler/flang/pull/1007)"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:187
msgid ""
"[PR#1004 Nested implied do loop fix for real numbers](https://github.com"
"/flang-compiler/flang/pull/1004)"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:188
msgid ""
"[PR#710 Test case for capturing procedure pointers to OpenMP parallel "
"regions](https://github.com/flang-compiler/flang/pull/710)"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:189
msgid ""
"[PR#561 flang2: corrected fix for #424](https://github.com/flang-"
"compiler/flang/pull/561)"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:190
msgid ""
"[PR#778 Fixing NCAR test problems with error tolerance lower than "
"E-12.](https://github.com/flang-compiler/flang/pull/778)"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:191
msgid ""
"[PR#1010 LLVM 12 upgrade](https://github.com/flang-"
"compiler/flang/pull/1010)"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:192
msgid ""
"[PR#1012 Remove release_90 from Github Actions](https://github.com/flang-"
"compiler/flang/pull/1012)"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:198
msgid "New Driver:"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:199
msgid "Add options for -fdefault\\* and -flarge-sizes"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:200
msgid "Refine tests for module search directories"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:201
msgid "Add -fdebug-dump-parsing-log"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:202
msgid "Add -fdebug-module-writer option"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:203
msgid "Add debug dump, measure-parse-tree and pre-fir-tree options"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:204
msgid "Add -Xflang and make -test-io a frontend-only flang"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:205
msgid "Add -J and -module-dir to f18 driver"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:206
msgid "Fix -fdefault\\* family bug"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:207
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:187
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:225
msgid "FIR (Fortran IR - a dialect of MLIR):"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:208
msgid "Add diagnostic tests for FIR ops verifier"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:209
msgid "Add FIR Types parser diagnostic tests"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:210
msgid ""
"Upstream the pre-FIR tree changes (The PFT has been updated to support "
"Fortran 77)"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:211
msgid "Update flang test tool support classes"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:212
msgid "Add zero_bits, array value, and other operations"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:213
msgid ""
"Upstream utility function valueHasFirAttribute() to be used in subsequent"
" merges"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:214
msgid "OpenMP - add semantic checks for:"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:215
msgid "OpenMP 4.5 - 2.7.1 Do Loop restrictions for Threadprivate"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:216
msgid "Occurrence of multiple list items in aligned clause for simd directive"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:217
msgid "Flang OpenMP 4.5 - 2.15.3.6 Reduction clause"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:218
msgid "2.15.4.2 - Copyprivate clause"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:219
msgid "2.15.3.4 - Firstprivate clause"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:220
msgid "2.15.3.5 - Lastprivate clause"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:221
msgid "Update character tests to use gtest"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:222
msgid "Adaptations to MLIR API changes"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:223
msgid "Fix call to CHECK() on overriding an erroneous type-bound procedure"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:224
msgid "Handle type-bound procedures with alternate returns"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:225
msgid "Runtime: implement INDEX intrinsic function"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:226
msgid "Fix compilation on MinGW-w64"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:227
msgid "Extension: forward refs to dummy args under IMPLICIT NONE"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:228
msgid "Detect circularly defined interfaces of procedures"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:229
msgid "Implement the related character intrinsic functions SCAN and VERIFY"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:235
msgid ""
"LFortran is participating in GSoC under the NumFOCUS and Fortran-lang "
"umbrella, if you are interested, please apply: "
"[https://gitlab.com/lfortran/lfortran/-/wikis/GSoC-2021-Ideas](https://gitlab.com/lfortran/lfortran/-/wikis/GSoC-2021-Ideas)"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:236
msgid ""
"7 people contributed code in the last month:   [Gagandeep "
"Singh](https://github.com/czgdp1807),   [Dominic "
"Poerio](https://dompoer.io/),   [Himanshu "
"Pandey](https://github.com/hp77-creator),   [Thirumalai "
"Shaktivel](https://github.com/Thirumalai-Shaktivel),   [Scot "
"Halverson](https://github.com/scothalverson),   [Rohit "
"Goswami](https://rgoswami.me/),   [Ondřej "
"Čertík](https://ondrejcertik.com/)."
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:244
#, python-format
msgid ""
"114 Merge Requests were "
"[merged](https://gitlab.com/lfortran/lfortran/-/merge_requests?scope=all&utf8=%E2%9C%93&state=merged)"
" in the past month, highlights"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:245
msgid ""
"macOS support (both Intel and ARM), compilation and development of "
"LFortran itself (stacktraces work also)"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:247
msgid ""
"Initial implentation of: modules (modfiles, dependencies, ...), "
"interfaces, integer/real kinds, public/private attribute, derived types, "
"strings, variable initializations, pointers, modules"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:250
msgid "Many other fixes"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:252
msgid ""
"LFortran is still in pre-alpha stage, but we are making rapid progress "
"towards getting it to compile more Fortran features. We are looking for "
"contributors, if you are interested, please get in touch and we will help"
" you get started. We can be contacted at Zulip Chat, mailinglist or "
"GitLab issues (see https://lfortran.org for links to all three)."
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:260
msgid ""
"We had our 10th Fortran Monthly call on March 24. You can watch the "
"recording below:"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:265
msgid ""
"This year Fortran-lang is a mentor organization for [Google Summer of "
"Code](https://summerofcode.withgoogle.com/organizations/6633903353233408/)."
" If you're a student, or know students who are [eligible to "
"participate](https://developers.google.com/open-"
"source/gsoc/faq#what_are_the_eligibility_requirements_for_participation),"
" and you'd like to help build the Fortran ecosystem please reach out and "
"let us know. The student application window opened on March 29 and will "
"close on April 13 at 14:00 Eastern Time."
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:269
msgid ""
"The 223rd meeting of the US Fortran Standards Committee concluded on "
"March 2. Main topics of dicussion were the planned changes for the "
"Fortran 202X revision of the Standard. Here's the [list of all submitted "
"papers](https://j3-fortran.org/doc/meeting/223), and the "
"[summary](https://github.com/j3-fortran/fortran_proposals/issues/199) of "
"the papers discussed and voting results. The committee also welcomed a "
"new member, Milan Curcic "
"([@milancurcic](https://github.com/milancurcic)), who is the voting "
"alternate to Gary Klimowicz "
"([@gklimowicz](https://github.com/gklimowicz))."
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:280
msgid ""
"Registration is open for the upcoming free webinar on [Fortran for High "
"Performance "
"Computing](https://register.gotowebinar.com/register/7343048137688004108)."
" The webinar is organized by [Excellerat](https://www.excellerat.eu/) and"
" will be presented by Wadud Miah "
"([@wadudmiah](https://github.com/wadudmiah)) from the University of "
"Southampton."
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:298
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:235
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:194
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:210
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:232
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:304
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:318
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:260
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:255
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:312
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:275
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:291
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:266
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:388
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:495
msgid "[fortran-lang/fpm-haskell](https://github.com/fortran-lang/fpm-haskell)"
msgstr ""

#: ../../source/news/2021/04-01-Fortran-Newsletter-April-2021.md.md:301
#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:238
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:197
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:213
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:235
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:307
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:321
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:263
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:258
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:315
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:278
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:294
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:269
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:391
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:498
msgid ""
"[fortran-lang/fortran-forum-article-template](https://github.com/fortran-"
"lang/fortran-forum-article-template)"
msgstr ""

#: ../../source/news/2021/04-20-First-Year.md.md:7
msgid "First year of the Fortran website"
msgstr ""

#: ../../source/news/2021/04-20-First-Year.md.md:9
msgid ""
"In April 2020 we created a website for the Fortran language at [fortran-"
"lang.org](https://fortran-lang.org/). In exactly one year, it grew to be "
"the first result when you search \"Fortran\" in Bing, Yahoo, DuckDuckGo, "
"Ecosia, Qwant, SearchEncrypt and the second result in Google (after the "
"Wikipedia page for Fortran)."
msgstr ""

#: ../../source/news/2021/04-20-First-Year.md.md:15
msgid ""
"The goal of the website is to maintain a neutral place where any Fortran "
"user (expert or novice), compiler vendor (open source or commercial), "
"Fortran Standards Committee member, enthusiast, supporter or anybody else"
" interested is welcome to participate. Fortran was invented in 1956, and "
"we aim to be the stewards of the language and we welcome you to join us."
msgstr ""

#: ../../source/news/2021/04-20-First-Year.md.md:21
msgid "Here are some of the ways that you can participate:"
msgstr ""

#: ../../source/news/2021/04-20-First-Year.md.md:23
msgid ""
"[Fortran Discourse](https://fortran-lang.discourse.group/) discussion "
"forum"
msgstr ""

#: ../../source/news/2021/04-20-First-Year.md.md:24
msgid ""
"Contribute to [fpm](https://github.com/fortran-lang/fpm/), "
"[stdlib](https://github.com/fortran-lang/stdlib/), the [Fortran "
"website](https://github.com/fortran-lang/fortran-lang.org) or any other "
"project"
msgstr ""

#: ../../source/news/2021/04-20-First-Year.md.md:28
msgid "Join our monthly Fortran call (see announcements at Discourse)"
msgstr ""

#: ../../source/news/2021/04-20-First-Year.md.md:29
msgid "Contribute to the Fortran monthly newsletter"
msgstr ""

#: ../../source/news/2021/04-20-First-Year.md.md:30
msgid ""
"Follow our Fortran Twitter account "
"[@fortranlang](https://twitter.com/fortranlang)"
msgstr ""

#: ../../source/news/2021/04-20-First-Year.md.md:33
msgid ""
"Thank you everybody for your support so far. We are looking forward for "
"the second year!"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:7
msgid "Fortran newsletter: May 2021"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:9
msgid ""
"Welcome to the May 2021 edition of the monthly Fortran newsletter. The "
"newsletter comes out at the beginning of every month and details Fortran "
"news from the previous month."
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:17
msgid ""
"[#244](https://github.com/fortran-lang/fortran-lang.org/pull/244): Add a "
"first year announcement"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:19
msgid ""
"[#236](https://github.com/fortran-lang/fortran-lang.org/pull/236): Add "
"dl\\_poly\\_4 to package index"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:21
msgid ""
"[#220](https://github.com/fortran-lang/fortran-lang.org/pull/220): "
"Include learn resources to online courses"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:28
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:30
msgid ""
"[#246](https://github.com/fortran-lang/fortran-lang.org/pull/246) (WIP): "
"Transferring fortran90.org “Fortran Best Practise” into a mini-book"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:38
msgid ""
"[#391](https://github.com/fortran-lang/stdlib/pull/391): Add issue "
"templates"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:40
msgid ""
"[#388](https://github.com/fortran-lang/stdlib/pull/388): Changed "
"filenames for bitset tests"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:42
msgid ""
"[#384](https://github.com/fortran-lang/stdlib/pull/384): Implement "
"starts\\_with and ends\\_with functions"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:44
msgid ""
"[#367](https://github.com/fortran-lang/stdlib/pull/367): Add Intel "
"compiler workflow for OSX"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:46
msgid ""
"[#360](https://github.com/fortran-lang/stdlib/pull/360): Summarize build "
"toolchain workflow and implied rules"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:48
msgid ""
"[#343](https://github.com/fortran-lang/stdlib/pull/343): Implement strip "
"and chomp as supplement to trim"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:50
msgid ""
"[#336](https://github.com/fortran-lang/stdlib/pull/336): Add functions to"
" convert integer/logical values to character values"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:79
msgid ""
"[#372](https://github.com/fortran-lang/stdlib/pull/372) (WIP): Correct "
"implementation of to\\_title"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:81
msgid ""
"[#386](https://github.com/fortran-lang/stdlib/pull/386) (WIP): Start the "
"addition of the module stdlib\\_sorting"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:85
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:85
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:107
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:128
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:99
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:149
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:93
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:99
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:126
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:79
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:73
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:87
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:105
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:96
#, python-format
msgid ""
"Please help improve stdlib by testing and [reviewing pull "
"requests](https://github.com/fortran-"
"lang/stdlib/issues?q=is%3Apr+is%3Aopen+label%3A%22reviewers+needed%22)!"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:96
msgid ""
"[#420](https://github.com/fortran-lang/fpm/pull/420): Phase out Haskell "
"fpm"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:98
msgid "[#468](https://github.com/fortran-lang/fpm/pull/468): Identify OpenBSD"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:100
msgid "[#465](https://github.com/fortran-lang/fpm/pull/465): Fix typo in README"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:102
msgid ""
"[#442](https://github.com/fortran-lang/fpm/pull/442): Use lib instead of "
"ar on Windows"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:104
msgid ""
"[#440](https://github.com/fortran-lang/fpm/pull/440): Minor edits to "
"README"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:106
msgid ""
"[#438](https://github.com/fortran-lang/fpm/pull/438): Add external-"
"modules key to build table for non-fpm modules"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:108
msgid ""
"[#437](https://github.com/fortran-lang/fpm/pull/437): Remove coarray "
"single from default Intel flags"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:110
msgid ""
"[#433](https://github.com/fortran-lang/fpm/pull/433): Fix to allow "
"compiling C with Intel CC"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:112
msgid ""
"[#431](https://github.com/fortran-lang/fpm/pull/431): Use different "
"compiler flags on differnt platforms for Intel"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:114
msgid ""
"[#429](https://github.com/fortran-lang/fpm/pull/429): Use wget if curl is"
" missing in install.sh"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:123
msgid ""
"[#423](https://github.com/fortran-lang/fpm/pull/423) (WIP): Use default "
"instead of master to reference the repository HEAD"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:125
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:111
msgid ""
"[#444](https://github.com/fortran-lang/fpm/pull/444) (WIP): Allow to find"
" include files / modules in CPATH environment variable"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:127
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:109
msgid ""
"[#449](https://github.com/fortran-lang/fpm/pull/449) (WIP): Response "
"files with ar on Windows"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:129
msgid ""
"[#450](https://github.com/fortran-lang/fpm/pull/450) (WIP): Remove "
"coarray flag from intel debug settings"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:131
#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:107
msgid ""
"[#451](https://github.com/fortran-lang/fpm/pull/451) (WIP): Refactor: use"
" objects to represent compilers and archiver"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:151
msgid "A total of 5 pull requests were merged in April."
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:153
msgid ""
"[PR#1021 Switch to new LLVM License](https://github.com/flang-"
"compiler/flang/pull/1021)"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:154
msgid ""
"[PR#1025 runtime: register atfork handler to re-initialize internal "
"flangrti locks at fork](https://github.com/flang-"
"compiler/flang/pull/1025)"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:155
msgid ""
"[PR#1026 Test case update for #895](https://github.com/flang-"
"compiler/flang/pull/1026)"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:156
msgid ""
"[PR#1030 Update README.md](https://github.com/flang-"
"compiler/flang/pull/1030)"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:157
msgid ""
"[PR#1034 Github Action use the prebuilt clang to build "
"flang](https://github.com/flang-compiler/flang/pull/1034)"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:164
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:190
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:228
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:156
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:165
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:161
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:188
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:195
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:199
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:161
msgid "OpenMP"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:165
msgid "[OPENMP5.1]Initial support for novariants clause."
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:166
msgid "[OPENMP5.1]Initial support for nocontext clause."
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:167
msgid ""
"Add functionality to check \"close nesting\" of regions, which can be "
"used for Semantic checks"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:168
msgid "[OpenMP5.1] Initial support for masked directive and filter clause"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:169
msgid ""
"Modify semantic check for nesting of `ordered` regions to include `close`"
" nesting check."
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:170
msgid "Remove `OmpEndLoopDirective` handles from code."
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:171
msgid "Add General Semantic Checks for Allocate Directive"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:172
msgid "New Driver"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:173
msgid "Add options for -Werror"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:174
#, python-format
msgid ""
"Modify the existing test cases that use -Mstandard in f18, to use "
"-pedantic and %flang_fc1 to share with the new driver"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:175
msgid "Add support for `-cpp/-nocpp`"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:176
msgid "Fix `-fdebug-dump-provenance`"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:177
msgid "Add debug options not requiring semantic checks"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:178
#, python-format
msgid "Remove `%flang-new` from the LIT configuration"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:179
msgid "Update the regression tests to use the new driver when enabled"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:180
msgid "Add support for `-fget-definition`"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:181
msgid "Move .f77 to the list of fixed-form file extensions"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:182
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:232
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:150
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:188
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:225
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:193
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:217
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:173
msgid "Runtime"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:183
msgid "Implement reductions"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:184
msgid "Implement numeric intrinsic functions"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:185
msgid "TRANSFER() intrinsic function"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:186
msgid "RANDOM_NUMBER, RANDOM_SEED, RANDOM_INIT"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:187
msgid "Implement IPARITY, PARITY, and FINDLOC reductions"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:188
msgid "Fix unit test failure on POWER"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:189
msgid "Improve constant folding for type parameter inquiries"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:190
msgid "Check for conflicting BIND(C) names"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:191
msgid "Enforce a limit on recursive PDT instantiations"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:192
msgid "Accept & fold IEEE_SELECTED_REAL_KIND"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:193
msgid "Define missing & needed IEEE_ARITHMETIC symbols"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:194
msgid "Handle instantiation of procedure pointer components"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:195
msgid "Fix checking of argument passing for parameterized derived types"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:196
msgid "Fix spurious errors from runtime derived type table construction"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:197
msgid "Check for attributes specific to dummy arguments"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:198
msgid "Handle structure constructors with forward references to PDTs"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:204
msgid "98 Merge Requests merged in April"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:205
msgid ""
"Working towards compiling the [SNAP](https://github.com/lanl/SNAP) proxy "
"app ([#313](https://gitlab.com/lfortran/lfortran/-/issues/313)):"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:206
msgid ""
"Code can be parsed to AST and transformed back to source code which "
"compiles with other compilers and works"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:207
msgid ""
"About 3rd of the files can be transformed from AST to ASR and the modules"
" saved"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:208
msgid "Other improvements:"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:209
msgid "Runtime library (more functions work)"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:211
msgid "Derived types"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:215
msgid ""
"We had our 11th Fortran Monthly call on April 22. You can watch the "
"recording below:"
msgstr ""

#: ../../source/news/2021/05-01-Fortran-Newsletter-May-2021.md.md:220
msgid ""
"Wadud Miah ([@wadudmiah](https://github.com/wadudmiah)) from the "
"University of Southampton presented a webinar on Fortran for High "
"Performance Computing, organized by "
"[Excellerat](https://www.excellerat.eu/). You can find the slides and the"
" recording [here](https://services.excellerat.eu/viewevent/39)."
msgstr ""

#: ../../source/news/2021/05-18-Welcome-GSoC-students.md.md:7
msgid "Fortran-lang welcomes new students to Google Summer of Code 2021"
msgstr ""

#: ../../source/news/2021/05-18-Welcome-GSoC-students.md.md:9
msgid ""
"We're happy to announce six students that will work on Fortran projects "
"under the Google Summer of Code 2021 program:"
msgstr ""

#: ../../source/news/2021/05-18-Welcome-GSoC-students.md.md:12
msgid ""
"[Aman Godara](https://github.com/aman-godara) will work on strings in the"
" [Fortran Standard Library](https://github.com/fortran-lang/stdlib). "
"Aman's mentors will be [Sebastian Ehlert](https://github.com/awvwgk) and "
"[Milan Curcic](https://github.com/milancurcic)."
msgstr ""

#: ../../source/news/2021/05-18-Welcome-GSoC-students.md.md:16
msgid ""
"[Rohit Goswami](https://github.com/haozeke) will work on the "
"[LFortran](https://lfortran.org) compiler, specifically toward the "
"capability to compile a complex physics package. Rohit's mentor will be "
"[Ondřej Čertík](https://github.com/certik)."
msgstr ""

#: ../../source/news/2021/05-18-Welcome-GSoC-students.md.md:20
msgid ""
"[Jakub Jelínek](https://github.com/kubajj) will work on handling compiler"
" arguments in the [Fortran Package Manager](https://github.com/fortran-"
"lang/fpm). Jakub's mentors will be [Laurence "
"Kedward](https://github.com/lkedward) and [Brad "
"Richardson](https://github.com/everythingfunctional)."
msgstr ""

#: ../../source/news/2021/05-18-Welcome-GSoC-students.md.md:25
msgid ""
"[Chetan Karwa](https://github.com/chetankarwa) will work on the linked "
"list support in the [Fortran Standard Library](https://github.com"
"/fortran-lang/stdlib). Chetan's mentors will be [Arjen "
"Markus](https://github.com/arjenmarkus) and [Milan "
"Curcic](https://github.com/milancurcic)."
msgstr ""

#: ../../source/news/2021/05-18-Welcome-GSoC-students.md.md:30
msgid ""
"[Thirumalai Shaktivel](https://gitlab.com/Thirumalai-Shaktivel) will work"
" on the Abstract Syntax Tree generation in the "
"[LFortran](https://lfortran.org) compiler. Thirumalai's mentor will be "
"[Ondřej Čertík](https://github.com/certik)."
msgstr ""

#: ../../source/news/2021/05-18-Welcome-GSoC-students.md.md:34
msgid ""
"[Gagandeep Singh](https://github.com/czgdp1807) will work on the support "
"of arrays and allocatables in the [LFortran](https://lfortran.org) "
"compiler. Gagandeep's mentor will be [Ondřej "
"Čertík](https://github.com/certik). Gagandeep was accepted under the "
"NumFOCUS application to GSoC."
msgstr ""

#: ../../source/news/2021/05-18-Welcome-GSoC-students.md.md:39
msgid ""
"This is the first year that Fortran-lang applied for Google Summer of "
"Code, and we're beyond excited that our project was allocated this many "
"student slots. You can follow students' progress in their weekly reports "
"in the [Fortran Discourse](https://fortran-lang.discourse.group/) forum."
msgstr ""

#: ../../source/news/2021/05-18-Welcome-GSoC-students.md.md:43
msgid "Thank you, Google, for your support of Fortran and open source software!"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:7
msgid "Fortran newsletter: June 2021"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:9
msgid ""
"Welcome to the June 2021 edition of the monthly Fortran newsletter. The "
"newsletter comes out at the beginning of every month and details Fortran "
"news from the previous month."
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:17
msgid ""
"[#269](https://github.com/fortran-lang/fortran-lang.org/pull/269): "
"Grammar and typo fixes in main page and quickstart minibook"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:19
msgid ""
"[#261](https://github.com/fortran-lang/fortran-lang.org/pull/261): Script"
" for summarizing PRs"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:21
msgid ""
"[#259](https://github.com/fortran-lang/fortran-lang.org/pull/259): "
"MapTran3D, RPNcalc, Gemini3D and Blocktran were added to the package "
"index"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:23
msgid ""
"[#253](https://github.com/fortran-lang/fortran-lang.org/pull/253): Fixed "
"grammar in Easy to learn section"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:28
msgid ""
"[#255](https://github.com/fortran-lang/fortran-lang.org/pull/255) (WIP): "
"Quickstart edits"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:42
msgid ""
"[#417](https://github.com/fortran-lang/stdlib/pull/417): Add GCC-11 to "
"workflow"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:44
msgid ""
"[#415](https://github.com/fortran-lang/stdlib/pull/415): Corrected Ubuntu"
" version"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:46
msgid ""
"[#407](https://github.com/fortran-lang/stdlib/pull/407): Changed "
"to\\_title to to\\_sentence and implemented correct to\\_title"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:48
msgid ""
"[#359](https://github.com/fortran-lang/stdlib/pull/359): Add general "
"contributing guidelines to stdlib"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:50
msgid ""
"[#355](https://github.com/fortran-lang/stdlib/pull/355): Implement clip "
"function"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:55
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:81
msgid ""
"[#420](https://github.com/fortran-lang/stdlib/pull/420) (WIP): First "
"implementation of real-valued linspace."
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:57
msgid ""
"[#419](https://github.com/fortran-lang/stdlib/pull/419) (WIP): Allow "
"modification of install directory for module files"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:59
msgid ""
"[#418](https://github.com/fortran-lang/stdlib/pull/418) (WIP): Improved "
"support for NAG"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:61
msgid ""
"[#414](https://github.com/fortran-lang/stdlib/pull/414) (WIP): "
"Implemented intelligent slice functionality"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:63
msgid ""
"[#408](https://github.com/fortran-lang/stdlib/pull/408) (WIP): Addition "
"of the stdlib\\_sorting module"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:94
#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:118
msgid "Here is what is new in *fpm*:"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:96
msgid ""
"[#450](https://github.com/fortran-lang/fpm/pull/450): Remove coarray flag"
" from intel debug settings"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:98
msgid ""
"[#423](https://github.com/fortran-lang/fpm/pull/423): Use default instead"
" of master to reference the repository HEAD"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:105
msgid ""
"[#483](https://github.com/fortran-lang/fpm/pull/483) (WIP): Allow fpm to "
"change the working directory"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:134
msgid ""
"39 Merge Requests "
"[merged](https://gitlab.com/lfortran/lfortran/-/merge_requests?scope=all&state=merged)"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:135
msgid "Features that can now be compiled (in the LLVM backend):"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:136
msgid "More nested functions and callbacks (the context is properly propagated)"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:137
msgid "Runtime: size, lbound, ubound"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:138
msgid "Return statement"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:139
msgid "More array operations and declarations"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:140
msgid "Array initializer expressions"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:141
msgid "Features in ASR only (semantics):"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:142
msgid "Runtime intrinsics: min, max, allocated"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:143
msgid "Features in AST only (syntax):"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:144
msgid "Co-arrays"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:145
msgid "Methods"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:146
msgid "Enumerations"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:147
msgid "Attributes in `use`"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:148
msgid "BOZ constants"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:149
msgid "Forall"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:150
msgid "More interfaces"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:151
msgid "Import"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:152
msgid "Implicit statements"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:153
msgid "Select type"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:155
msgid "The following people contributed code in May 2021:"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:157
msgid "Gagandeep Singh ([@czgdp1807](https://github.com/czgdp1807))"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:158
msgid ""
"Thirumalai Shaktivel ([@Thirumalai-Shaktivel](https://github.com"
"/Thirumalai-Shaktivel))"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:159
msgid "Ondřej Čertík ([@certik](https://github.com/certik))"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:160
msgid "Dominic Poerio ([@dpoe](https://gitlab.com/dpoe))"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:165
msgid ""
"We had our 12th Fortran Monthly call on May 20. You can watch the "
"recording below:"
msgstr ""

#: ../../source/news/2021/06-01-Fortran-Newsletter-June-2021.md.md:170
msgid ""
"Google Summer of Code program has announced the allocation of students to"
" each project. Fortran-lang received six studens (one through "
"[NumFOCUS](https://numfocus.org/)) who will work across three "
"subprojects: stdlib, fpm, and LFortran. Congratulations and welcome to "
"students [Aman Godara](https://github.com/aman-godara), [Rohit "
"Goswami](https://github.com/haozeke), [Jakub "
"Jelínek](https://github.com/kubajj), [Chetan "
"Karwa](https://github.com/chetankarwa), [Thirumalai "
"Shaktivel](https://gitlab.com/Thirumalai-Shaktivel), and [Gagandeep "
"Singh](https://github.com/czgdp1807). Read the full post [here](https"
"://fortran-lang.org/newsletter/2021/05/18/Welcome-GSoC-students/)."
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:7
msgid "Fortran newsletter: July 2021"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:9
msgid ""
"Welcome to the July 2021 edition of the monthly Fortran newsletter. The "
"newsletter comes out at the beginning of every month and details Fortran "
"news from the previous month."
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:17
msgid ""
"[#276](https://github.com/fortran-lang/fortran-lang.org/pull/276): Add "
"LATTE tight-binding molecular dynamics code to package index"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:19
msgid ""
"[#275](https://github.com/fortran-lang/fortran-lang.org/pull/275): Add "
"crest program to package index"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:21
msgid ""
"[#255](https://github.com/fortran-lang/fortran-lang.org/pull/255): "
"Quickstart edits"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:23
msgid ""
"[#273](https://github.com/fortran-lang/fortran-lang.org/pull/273): Add "
"the SNaC package to package index"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:25
msgid ""
"[#272](https://github.com/fortran-lang/fortran-lang.org/pull/272): Add "
"QUICK to package index"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:30
msgid ""
"[#277](https://github.com/fortran-lang/fortran-lang.org/pull/277) (WIP): "
"Add projects for Fortran-lua interfacing to package index"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:32
msgid ""
"[#274](https://github.com/fortran-lang/fortran-lang.org/pull/274) (WIP): "
"Add convert_FORTRAN_case formatter to package index"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:34
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:46
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:26
msgid ""
"[#246](https://github.com/fortran-lang/fortran-lang.org/pull/246) (WIP): "
"Transferring fortran90.org \"Fortran Best Practices\" into a mini-book"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:36
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:48
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:52
msgid ""
"[#201](https://github.com/fortran-lang/fortran-lang.org/pull/201) (WIP): "
"Draft: Internationalization for fortran-lang"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:46
msgid ""
"[#313](https://github.com/fortran-lang/stdlib/pull/313): Legendre "
"polynomials and gaussian quadrature"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:48
msgid "[#432](https://github.com/fortran-lang/stdlib/pull/432): Outer product"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:50
msgid ""
"[#439](https://github.com/fortran-lang/stdlib/pull/439): Reduce time "
"spent on sorting tests"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:52
msgid ""
"[#440](https://github.com/fortran-lang/stdlib/pull/440): Make maximum "
"rank an option"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:54
msgid ""
"[#433](https://github.com/fortran-lang/stdlib/pull/433): Implemented low "
"level find function for string matching"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:56
msgid ""
"[#414](https://github.com/fortran-lang/stdlib/pull/414): Implemented "
"intelligent slice functionality"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:58
msgid ""
"[#428](https://github.com/fortran-lang/stdlib/pull/428): Fix issue with "
"stdlib_sorting"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:60
msgid ""
"[#419](https://github.com/fortran-lang/stdlib/pull/419): Allow "
"modification of install directory for module files"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:62
msgid ""
"[#430](https://github.com/fortran-lang/stdlib/pull/430): Remove support "
"for GCC 7 and 8"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:64
msgid ""
"[#424](https://github.com/fortran-lang/stdlib/pull/424): Add separate "
"logical kind parameters"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:69
msgid ""
"[#445](https://github.com/fortran-lang/stdlib/pull/445) (WIP): Add `disp`"
" function to display your data"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:71
msgid ""
"[#444](https://github.com/fortran-lang/stdlib/pull/444) (WIP): Add "
"`format_string` to format other type to string"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:73
msgid ""
"[#441](https://github.com/fortran-lang/stdlib/pull/441) (WIP): Implement "
"pad function"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:75
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:107
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:79
msgid ""
"[#437](https://github.com/fortran-lang/stdlib/pull/437) (WIP): [FPM] add "
"fpm support"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:77
msgid ""
"[#436](https://github.com/fortran-lang/stdlib/pull/436) (WIP): Implement "
"low-level replace_all function"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:79
msgid ""
"[#426](https://github.com/fortran-lang/stdlib/pull/426) (WIP): Addition "
"of a subroutine to compute the median of array elements"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:83
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:109
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:81
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:130
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:77
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:84
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:115
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:70
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:64
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:78
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:96
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:85
msgid ""
"[#363](https://github.com/fortran-lang/stdlib/pull/363) (WIP): Sorting "
"string's characters according to their ASCII values"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:89
msgid ""
"[#311](https://github.com/fortran-lang/stdlib/pull/311) (WIP): String "
"list new"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:91
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:113
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:85
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:134
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:81
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:88
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:117
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:72
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:66
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:80
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:98
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:87
msgid ""
"[#286](https://github.com/fortran-lang/stdlib/pull/286) (WIP): "
"Probability Distribution and Statistical Functions -- Beta Distribution "
"Module"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:93
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:115
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:87
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:136
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:83
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:90
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:119
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:74
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:68
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:82
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:100
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:89
msgid ""
"[#278](https://github.com/fortran-lang/stdlib/pull/278) (WIP): "
"Probability Distribution and Statistical Functions -- Gamma Distribution "
"Module"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:95
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:117
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:89
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:138
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:85
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:92
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:121
msgid ""
"[#276](https://github.com/fortran-lang/stdlib/pull/276) (WIP): "
"Probability Distribution and Statistical Functions -- Exponential "
"Distribution Module"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:97
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:119
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:91
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:140
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:87
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:94
msgid ""
"[#273](https://github.com/fortran-lang/stdlib/pull/273) (WIP): "
"Probability Distribution and Statistical Functions -- Normal Distribution"
" Module"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:99
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:121
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:93
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:142
msgid ""
"[#272](https://github.com/fortran-lang/stdlib/pull/272) (WIP): "
"Probability Distribution and Statistical Functions -- Uniform "
"Distribution Module"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:101
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:123
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:95
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:144
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:89
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:96
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:123
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:76
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:70
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:84
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:102
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:91
msgid ""
"[#189](https://github.com/fortran-lang/stdlib/pull/189) (WIP): Initial "
"implementation of COO / CSR sparse format"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:103
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:125
msgid ""
"[#157](https://github.com/fortran-lang/stdlib/pull/157) (WIP): Update "
"CMAKE files"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:116
msgid ""
"__Alpha release update:__ Last month saw the release of __v0.3.0__ for "
"*fpm* which includes a number of [new features and bug "
"fixes](https://github.com/fortran-lang/fpm/releases/tag/v0.3.0)."
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:120
msgid ""
"[#504](https://github.com/fortran-lang/fpm/pull/504): install.sh, "
"README.md: Update version number, single source file extension"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:122
msgid ""
"[#501](https://github.com/fortran-lang/fpm/pull/501): Bump version for "
"new release"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:124
msgid ""
"[#491](https://github.com/fortran-lang/fpm/pull/491): Catch "
"execute_command_line errors and print useful messages"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:126
msgid ""
"[#500](https://github.com/fortran-lang/fpm/pull/500): Allow reading "
"version number from file"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:128
msgid ""
"[#497](https://github.com/fortran-lang/fpm/pull/497): correct for equal "
"sign in flag options to fix #495"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:130
msgid ""
"[#449](https://github.com/fortran-lang/fpm/pull/449): Response files with"
" ar on Windows"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:132
msgid ""
"[#490](https://github.com/fortran-lang/fpm/pull/490): Minor fix to module"
" parsing"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:134
msgid ""
"[#489](https://github.com/fortran-lang/fpm/pull/489): Redirect output "
"when searching for archiver"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:136
msgid ""
"[#484](https://github.com/fortran-lang/fpm/pull/484): Add support for "
"invoking simple plugins"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:138
msgid ""
"[#483](https://github.com/fortran-lang/fpm/pull/483): Allow fpm to change"
" the working directory"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:145
msgid ""
"[#505](https://github.com/fortran-lang/fpm/pull/505) (WIP): quiet mode "
"for #502"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:147
#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:162
msgid ""
"[#498](https://github.com/fortran-lang/fpm/pull/498) (WIP): Draft - "
"Compiler flags profiles"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:168
msgid ""
"49 Merge Requests "
"[merged](https://gitlab.com/lfortran/lfortran/-/merge_requests?scope=all&state=merged)"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:169
msgid "Highlights"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:170
msgid ""
"Improvements to array support in the LLVM backend and at the ASR level: "
"array sections, allocatable arrays, and other improvements"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:172
msgid ""
"Many parser fixes (`lfortran fmt` works on more projects): block data, "
"common block, equivalence, custom operator declaration, flush, critical "
"and event statements"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:175
msgid "More runtime functions: minval, maxval, real, sum, abs"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:176
msgid "Optional human readable mod files"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:181
msgid ""
"We had our 13th Fortran Monthly call on June 15. You can watch the "
"recording below:"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:186
msgid ""
"Joint J3/WG5 (Fortran Standards Committees) meeting was held virtually "
"from June 21-30 (Mondays and Wednesdays only). You can find all the "
"papers that were discussed "
"[here](https://j3-fortran.org/doc/meeting/224). Highlights from the "
"meeting:"
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:187
msgid ""
"Conditional expressions syntax for Fortran 202X "
"([paper](https://j3-fortran.org/doc/year/21/21-157r2.txt))."
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:188
msgid ""
"Protected components specifications and syntax for Fortran 202X "
"([paper](https://j3-fortran.org/doc/year/21/21-168.txt))."
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:189
msgid ""
"The generics feature planned for Fortran 202Y was discussed at depth "
"([paper](https://j3-fortran.org/doc/year/21/21-144r4.txt))."
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:190
msgid ""
"Jeff Hammond (NVidia Corporation) is the new J3 member as a voting "
"alternate to Bryce Adelstein-Lelbach."
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:191
msgid "Target year for Fortran 202X is 2023, subject to change."
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:193
msgid ""
"FortranCon 2021 will be held virtually from September 23-24, 2021. For "
"more information, visit the [FortranCon "
"website](https://tcevents.chem.uzh.ch/event/14/)."
msgstr ""

#: ../../source/news/2021/07-01-Fortran-Newsletter-July-2021.md.md:195
msgid ""
"Work has started for our Google Summer of Code program. You read about "
"our students and their progress so far on Discourse: <https://fortran-"
"lang.discourse.group/c/gsoc-2021/11>"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:7
msgid "Fortran newsletter: August 2021"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:9
msgid ""
"Welcome to the August 2021 edition of the monthly Fortran newsletter. The"
" newsletter comes out at the beginning of every month and details Fortran"
" news from the previous month."
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:17
msgid ""
"[#281](https://github.com/fortran-lang/fortran-lang.org/pull/281): July "
"newsletter"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:19
msgid ""
"[#274](https://github.com/fortran-lang/fortran-lang.org/pull/274): Add "
"`convert_FORTRAN_case` formatter to package index"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:21
msgid ""
"[#277](https://github.com/fortran-lang/fortran-lang.org/pull/277): Add "
"projects for Fortran-lua interfacing to package index"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:23
msgid ""
"[#284](https://github.com/fortran-lang/fortran-lang.org/pull/284): PRs "
"script updates"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:25
msgid ""
"[#286](https://github.com/fortran-lang/fortran-lang.org/pull/286): "
"Installation process for GFortran on OpenBSD"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:27
msgid ""
"[#288](https://github.com/fortran-lang/fortran-lang.org/pull/288): Add "
"Flatiron institute multipole libraries to the package index"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:29
msgid ""
"[#289](https://github.com/fortran-lang/fortran-lang.org/pull/289): Small "
"fix in packages index"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:31
msgid ""
"[#291](https://github.com/fortran-lang/fortran-lang.org/pull/291): Bump "
"addressable from 2.7.0 to 2.8.0"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:33
msgid ""
"[#293](https://github.com/fortran-lang/fortran-lang.org/pull/293): add "
"Apogee and Edinburgh compilers"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:35
msgid ""
"[#290](https://github.com/fortran-lang/fortran-lang.org/pull/290): Add "
"arrayfire-fortran to package index"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:37
msgid ""
"[#294](https://github.com/fortran-lang/fortran-lang.org/pull/294): "
"compilers: use more objective tone"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:39
msgid ""
"[#296](https://github.com/fortran-lang/fortran-lang.org/pull/296): my "
"software with at least 5 stars"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:41
msgid ""
"[#297](https://github.com/fortran-lang/fortran-lang.org/pull/297): Fix "
"insecure workflow."
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:56
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:36
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:64
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:42
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:35
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:44
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:35
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:35
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:41
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:59
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:46
msgid "Here's what's new in stdlib:"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:58
msgid ""
"[#436](https://github.com/fortran-lang/stdlib/pull/436): implemented low-"
"level `replace_all` function"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:60
msgid ""
"[#454](https://github.com/fortran-lang/stdlib/pull/454): added "
"`stdlib_math` to specs/index.md"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:62
msgid ""
"[#453](https://github.com/fortran-lang/stdlib/pull/453): implemented "
"count function"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:64
msgid ""
"[#441](https://github.com/fortran-lang/stdlib/pull/441): implemented pad "
"function"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:66
msgid ""
"[#456](https://github.com/fortran-lang/stdlib/pull/456): slice function's"
" documentation made user friendly"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:68
msgid ""
"[#459](https://github.com/fortran-lang/stdlib/pull/459): Fix CMake "
"variable usage"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:70
msgid ""
"[#420](https://github.com/fortran-lang/stdlib/pull/420): First "
"implementation of real-valued linspace."
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:72
msgid "[#468](https://github.com/fortran-lang/stdlib/pull/468): Update CI"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:74
msgid ""
"[#469](https://github.com/fortran-lang/stdlib/pull/469): CMake: "
"corrections and updates"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:76
msgid ""
"[#426](https://github.com/fortran-lang/stdlib/pull/426): Addition of a "
"subroutine to compute the median of array elements"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:78
msgid ""
"[#474](https://github.com/fortran-lang/stdlib/pull/474): Bug fix: "
"Allocatable argument 'x' is not allocated #472"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:83
msgid ""
"[#481](https://github.com/fortran-lang/stdlib/pull/481) (WIP): "
"[`stdlib_linalg`] Update eye function."
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:85
msgid ""
"[#480](https://github.com/fortran-lang/stdlib/pull/480) (WIP): "
"[`stdlib_math`] Add seq function."
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:87
msgid ""
"[#478](https://github.com/fortran-lang/stdlib/pull/478) (WIP): "
"[`stdlib_linalg`] Add zeros, ones, ex function."
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:89
msgid ""
"[#477](https://github.com/fortran-lang/stdlib/pull/477) (WIP): "
"[`stdlib_linalg`] Add empty function."
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:91
msgid ""
"[#475](https://github.com/fortran-lang/stdlib/pull/475) (WIP): Generating"
" sorting subroutines specific to character type with fypp"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:93
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:71
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:124
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:75
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:82
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:113
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:68
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:62
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:76
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:94
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:83
msgid ""
"[#473](https://github.com/fortran-lang/stdlib/pull/473) (WIP): Error stop"
" improvements"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:95
msgid ""
"[#470](https://github.com/fortran-lang/stdlib/pull/470) (WIP): Revival "
"string list"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:97
msgid ""
"[#467](https://github.com/fortran-lang/stdlib/pull/467) (WIP): "
"implemented `move_alloc` for `string_type`"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:99
msgid ""
"[#455](https://github.com/fortran-lang/stdlib/pull/455) (WIP): "
"`stdlib_hash`: waterhash algorithm"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:101
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:75
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:128
msgid ""
"[#452](https://github.com/fortran-lang/stdlib/pull/452) (WIP): "
"Implementation of a map data type"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:103
msgid ""
"[#445](https://github.com/fortran-lang/stdlib/pull/445) (WIP): [feature] "
"`disp`(display your data) & `format_string`(format other type to string, "
"see #444)"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:105
msgid ""
"[#444](https://github.com/fortran-lang/stdlib/pull/444) (WIP): Add "
"`format_string` routine to format other types to strings"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:137
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:108
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:158
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:102
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:108
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:135
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:88
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:82
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:96
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:114
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:105
msgid "Here's what's new in fpm:"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:139
msgid ""
"[#507](https://github.com/fortran-lang/fpm/pull/507): optimize file "
"listing"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:141
msgid ""
"[#511](https://github.com/fortran-lang/fpm/pull/511): check name used for"
" package, executable, test, or example"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:143
msgid ""
"[#516](https://github.com/fortran-lang/fpm/pull/516): initialize "
"allocatable strings before using in a comparison"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:145
msgid "[#517](https://github.com/fortran-lang/fpm/pull/517): Fix run"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:147
msgid ""
"[#522](https://github.com/fortran-lang/fpm/pull/522): remove warnings and"
" fix truncated help text"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:149
msgid ""
"[#523](https://github.com/fortran-lang/fpm/pull/523): Fix compilation "
"error in ifort"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:154
msgid ""
"[#525](https://github.com/fortran-lang/fpm/pull/525) (WIP): proposal to "
"close #525 by generating build/.gitignore"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:156
msgid ""
"[#527](https://github.com/fortran-lang/fpm/pull/527) (WIP): Add objects "
"for handling compiler and archiver"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:158
msgid "[#521](https://github.com/fortran-lang/fpm/pull/521) (WIP): expand tabs"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:160
msgid ""
"[#506](https://github.com/fortran-lang/fpm/pull/506) (WIP): Draft: "
"initial implementation of `implicit_none`"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:182
msgid "Updates for July 2021:"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:184
msgid ""
"90 "
"[merged](https://gitlab.com/lfortran/lfortran/-/merge_requests?scope=all&state=merged)"
" MRs, this month we have crossed 1000 total merged MRs, 12 total "
"contributors"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:185
msgid ""
"Parser: we asked the community to test it, several people have reported "
"about 15 bugs, we have fixed all of them (AST)"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:187
msgid "Initial fixed form parser (AST)"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:188
msgid "Classes and class procedures (ASR, LLVM)"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:189
msgid "Many common array usage now works, including allocatable (ASR, LLVM)"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:190
msgid "Associate construct (ASR, LLVM)"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:191
msgid "Compile time evaluation of constant expressions (ASR)"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:192
msgid "7 people contributed code:"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:193
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:215
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:273
msgid "Ondřej Čertík"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:194
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:216
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:276
msgid "Thirumalai Shaktivel"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:195
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:218
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:274
msgid "Gagandeep Singh"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:196
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:217
msgid "Rohit Goswami"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:197
msgid "Dominic Poerio"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:198
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:219
msgid "Andrew Best"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:199
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:278
msgid "Sebastian Ehlert"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:201
msgid ""
"We are looking for new contributors, so if you are interested, please "
"[get in touch with us](https://lfortran.org/)!"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:207
msgid ""
"We had our 14th Fortran Monthly call on July 20. You can watch the "
"recording below:"
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:212
msgid ""
"FortranCon 2021 will be held virtually from September 23-24, 2021. "
"Registration is free of charge and is due by September 15. The first call"
" for abstracts is due August 1, and the second is due September 1. For "
"more information, visit the [FortranCon "
"website](https://tcevents.chem.uzh.ch/event/14/)."
msgstr ""

#: ../../source/news/2021/08-01-Fortran-Newsletter-August-2021.md.md:217
msgid ""
"Work is well under way started for our Google Summer of Code program. "
"Read about our students and their progress so far on Discourse: <https"
"://fortran-lang.discourse.group/c/gsoc-2021/11>"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:7
msgid "Fortran newsletter: September 2021"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:9
msgid ""
"Welcome to the September 2021 edition of the monthly Fortran newsletter. "
"The newsletter comes out at the beginning of every month and details "
"Fortran news from the previous month."
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:17
msgid ""
"[#303](https://github.com/fortran-lang/fortran-lang.org/pull/303): Add "
"NJOY to package index"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:20
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:51
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:125
#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:169
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:48
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:92
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:186
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:27
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:49
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:115
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:20
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:54
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:131
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:31
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:91
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:140
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:22
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:48
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:110
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:22
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:40
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:99
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:26
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:54
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:107
msgid "Work in progress"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:22
msgid ""
"[#302](https://github.com/fortran-lang/fortran-lang.org/pull/302) (WIP): "
"Update Silverfrost compiler description."
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:24
msgid ""
"[#300](https://github.com/fortran-lang/fortran-lang.org/pull/300) (WIP): "
"Add QCxMS to package index"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:38
msgid ""
"[#467](https://github.com/fortran-lang/stdlib/pull/467): Implemented "
"move_alloc for string_type"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:40
msgid ""
"[#470](https://github.com/fortran-lang/stdlib/pull/470): Revival string "
"list"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:42
msgid ""
"[#481](https://github.com/fortran-lang/stdlib/pull/481): [stdlib_linalg] "
"Update eye function."
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:44
msgid ""
"[#493](https://github.com/fortran-lang/stdlib/pull/493): Update copyright"
" and remove old artifact"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:46
msgid ""
"[#444](https://github.com/fortran-lang/stdlib/pull/444): Add "
"format_string routine to format other types to strings"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:48
msgid ""
"[#483](https://github.com/fortran-lang/stdlib/pull/483): Remove GCC "
"Fortran MinGW 8.4.0 from known to work list"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:53
msgid ""
"[#501](https://github.com/fortran-lang/stdlib/pull/501) (WIP): Minor "
"updates to README.md"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:55
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:112
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:63
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:72
msgid ""
"[#500](https://github.com/fortran-lang/stdlib/pull/500) (WIP): Selection "
"algorithms"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:57
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:114
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:74
msgid ""
"[#499](https://github.com/fortran-lang/stdlib/pull/499) (WIP): "
"[stdlib_linalg] matrix property checks"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:59
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:116
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:76
msgid ""
"[#498](https://github.com/fortran-lang/stdlib/pull/498) (WIP): "
"[stdlib_math] add `arg/argd/argpi`"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:61
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:118
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:69
msgid ""
"[#494](https://github.com/fortran-lang/stdlib/pull/494) (WIP): Add "
"testing module to allow better structuring of test suites"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:63
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:120
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:71
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:78
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:111
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:66
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:60
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:74
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:92
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:81
msgid ""
"[#491](https://github.com/fortran-lang/stdlib/pull/491) (WIP): Stdlib "
"linked list"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:65
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:122
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:80
msgid ""
"[#488](https://github.com/fortran-lang/stdlib/pull/488) (WIP): "
"[stdlib_math] add `is_close` routines."
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:67
msgid ""
"[#478](https://github.com/fortran-lang/stdlib/pull/478) (WIP): "
"[stdlib_linalg] Add zeros, ones function."
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:69
msgid ""
"[#475](https://github.com/fortran-lang/stdlib/pull/475) (WIP): Generating"
" sorting subroutines specific to `character` type with fypp"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:73
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:126
msgid ""
"[#455](https://github.com/fortran-lang/stdlib/pull/455) (WIP): "
"stdlib_hash: waterhash algorithm"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:77
msgid ""
"[#445](https://github.com/fortran-lang/stdlib/pull/445) (WIP): "
"[stdlib_io] `disp`(display your data)"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:110
msgid ""
"[Version 0.4.0](https://github.com/fortran-lang/fpm/releases/tag/v0.4.0):"
" Alpha release update"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:112
msgid ""
"[#546](https://github.com/fortran-lang/fpm/pull/546): Update version for "
"release 0.4.0"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:114
msgid ""
"[#548](https://github.com/fortran-lang/fpm/pull/548): Fix build on "
"MacOS/ARM64"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:116
msgid ""
"[#527](https://github.com/fortran-lang/fpm/pull/527): Add objects for "
"handling compiler and archiver"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:118
msgid ""
"[#536](https://github.com/fortran-lang/fpm/pull/536): Always call `git "
"init` in fpm new when backfilling"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:120
msgid ""
"[#533](https://github.com/fortran-lang/fpm/pull/533): Allow extra section"
" in package manifest"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:122
msgid ""
"[#528](https://github.com/fortran-lang/fpm/pull/528): Generate "
"`build/.gitignore`"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:127
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:192
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:121
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:137
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:150
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:124
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:107
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:121
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:139
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:124
msgid ""
"[#539](https://github.com/fortran-lang/fpm/pull/539) (WIP): Add parent "
"packages into dependency tree"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:129
msgid ""
"[#521](https://github.com/fortran-lang/fpm/pull/521) (WIP): Expand tabs "
"in source parsing"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:131
msgid ""
"[#506](https://github.com/fortran-lang/fpm/pull/506) (WIP): Initial "
"implementation of implicit_none"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:133
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:194
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:123
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:139
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:152
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:126
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:109
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:123
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:141
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:126
msgid ""
"[#498](https://github.com/fortran-lang/fpm/pull/498) (WIP): Compiler "
"flags profiles"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:149
msgid "FFTPACK"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:151
msgid ""
"Zuo Zhihua ([@zoziha](https://github.com/zoziha)) and Ondřej Čertík "
"([@certik](https://github.com/certik)) started maintaining the public "
"domain project FFTPACK under the Fortran-lang namespace. The project is "
"readily available for usage in with fpm."
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:154
msgid "Here is what is new in FFTPACK:"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:156
msgid ""
"[#10](https://github.com/fortran-lang/fftpack/pull/10): Add "
"`(i)qct/dcosqi/dcosqf/dcosqb` interfaces for quarter wave data."
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:158
msgid ""
"[#7](https://github.com/fortran-lang/fftpack/pull/7): Add "
"`dzffti/dzfftf/dzfftb` interfaces"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:160
msgid ""
"[#4](https://github.com/fortran-lang/fftpack/pull/4): Improve fft "
"interface for `complex` sequences: `(i)fft/zffti/zfftf/zfftb`"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:162
msgid ""
"[#6](https://github.com/fortran-lang/fftpack/pull/6): Add  "
"`(i)rfft/dffti/dfftf/dfftb` interface and ready to move to `fortran-lang`"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:164
msgid ""
"[#5](https://github.com/fortran-lang/fftpack/pull/5): Add "
"`fftshift/ifftshift`"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:166
msgid "[#3](https://github.com/fortran-lang/fftpack/pull/3): Add CI: fpm.yml"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:171
msgid ""
"[#11](https://github.com/fortran-lang/fftpack/pull/11) (WIP): Add "
"`(i)dct/dcosti/dcost` interfaces."
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:174
msgid "Feedback and ideas for this project are welcome."
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:178
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:217
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:146
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:161
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:173
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:151
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:132
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:144
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:162
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:147
msgid "Flang"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:182
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:221
msgid "New Driver and CMake integration:"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:183
msgid "The new driver has replaced the old, hence f18 has been deleted."
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:184
msgid ""
"flang-new (aka. the new driver) now drives the flang bash script before "
"an external compiler is called."
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:185
msgid "Code-generation work is ongoing."
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:186
msgid ""
"Work is now proceeding to enable CMake to recognize the compiler and set "
"the appropriate options for build configurations."
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:188
msgid ""
"Fortran 95 lowering and runtime support is nearing completion, "
"particularly of intrinsics"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:189
msgid "Code upstreaming will begin again in earnest once F95 is deemed complete"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:191
msgid "Nesting of region semantic checks"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:192
msgid "enter_data MLIR to LLVM IR lowering"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:193
msgid "Semantic checks for allocate directive"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:194
msgid "Lowering for various modifiers for the schedule clause"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:195
msgid "Pretty printer and parser for omp.target operation"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:196
msgid "Semantic checks for linear, nested barrier, allocate directive"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:197
msgid "Progress with firstprivate, critical, collapse, ordered, reduction"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:198
msgid "Lift -Werror checks into local functions"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:199
msgid "Document the flang wrapper script"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:200
msgid "Fix the extent calculation when upper bounds are less than lower bounds"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:201
msgid "Fix list-directed plural repeated null values at end of record"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:202
msgid "Fix build failure on MacOS involving std::clock_t"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:203
msgid "Fix error messages on Windows."
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:204
msgid "Disable Plugins in out-of-tree builds"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:205
msgid "Correct off-by-one error in SET_EXPONENT"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:207
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:263
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:214
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:210
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:265
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:192
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:247
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:233
msgid ""
"Call notes are recorded and available upon request "
"[here](https://docs.google.com/document/d/10T-"
"S2J3GrahpG4Ooif93NSTz2zBW0MQc_RlwHi0-afY). Please contact Alexis Perry-"
"Holby at aperry@lanl.gov for document access."
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:211
msgid ""
"168 "
"[merged](https://gitlab.com/lfortran/lfortran/-/merge_requests?scope=all&state=merged)"
" Merge Requests in August 2021"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:214
msgid "The following people have contributed code to LFortran in August:"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:220
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:275
msgid "Carlos Une"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:221
msgid "Sebastian Ehlert got LFortran working with fpm"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:222
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:280
msgid "Many people have reported bugs (thank you all!)"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:223
msgid ""
"Our 3 Google Summer of Code (GSoC) students have successfully finished "
"their projects. Here are their final reports:"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:225
msgid ""
"Gagandeep Singh: "
"[https://czgdp1807.github.io/2021/08/16/z_final_report.html](https://czgdp1807.github.io/2021/08/16/z_final_report.html)"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:226
msgid ""
"Thirumalai Shaktivel: [https://gist.github.com/Thirumalai-"
"Shaktivel/c2a1aaa5239e792e499eaa8942987519](https://gist.github.com"
"/Thirumalai-Shaktivel/c2a1aaa5239e792e499eaa8942987519)"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:227
msgid ""
"Rohit Goswami: [https://rgoswami.me/posts/gsoc21-fin-"
"reprot/](https://rgoswami.me/posts/gsoc21-fin-reprot/)"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:229
msgid "LFortran 0.12.0 was released on August 15"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:231
msgid "Changes since the last release."
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:233
msgid "Fixed all issues in the parser that were reported (AST)"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:234
msgid "multiple loop single end do"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:235
msgid "arithmetic if"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:236
msgid ""
"Comments and empty lines are now represented in AST and formatted "
"correctly (AST)"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:237
msgid ""
"The formatter (`lfortran fmt`) now uses the minimal amount of parentheses"
" in expressions"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:238
msgid "Initial fixed-form parser (AST)"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:239
msgid "Initial class support (ASR, LLVM)"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:240
msgid "Allocate / deallocate, allocatable arrays (ASR, LLVM)"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:241
msgid "Associate block (ASR, LLVM)"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:242
msgid "Runtime library refactoring (ASR, LLVM)"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:243
msgid "Split into builtin, pure and impure"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:244
msgid "`iso_fortran_env`, `iso_c_binding` intrinsic modules added"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:245
msgid "Compile time evaluation (ASR, LLVM)"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:247
msgid "Commits (`git shortlog -ns v0.11.0..v0.12.0`):"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:258
msgid "Updates in master since the last release:"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:260
msgid "LFortran can now compile binaries on Windows"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:261
msgid "C interoperation works on all platforms (including Windows and MSVC)"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:262
msgid "Runtime library improvements"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:263
msgid "Complex intrinsics fixed on all platforms"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:264
msgid ""
"All trigonometric functions now use the Fortran `impure` interface in the"
" runtime library"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:265
msgid "More intrinsics implemented"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:266
msgid "Initial implementation of classes and methods"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:267
msgid ""
"LFortran now works with `fpm` and compiles the hello world project and a "
"few other example projects"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:268
msgid "Parser improvements: team and sync statements"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:269
msgid ""
"Improved handling of character types as function arguments and return "
"values"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:272
msgid ""
"We are looking for new contributors, so if you are interested, please "
"[get in touch with us](https://lfortran.org/)! We would be happy to do a "
"video call with you to get you started."
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:279
msgid ""
"We had our 15th Fortran Monthly call on August 17. You can watch the "
"recording below:"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:283
msgid ""
"FortranCon 2021 will be held virtually from September 23-24, 2021. "
"Registration is free of charge and is due by September 15. The second "
"call for abstracts is due September 1. For more information, visit the "
"[FortranCon website](https://tcevents.chem.uzh.ch/event/14/)."
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:288
msgid ""
"Our Google Summer of Code program for 2021 is coming to a close. Read "
"about our students and their progress so far on Discourse: <https"
"://fortran-lang.discourse.group/c/gsoc-2021/11>"
msgstr ""

#: ../../source/news/2021/09-01-Fortran-Newsletter-September-2021.md.md:308
#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:322
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:264
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:259
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:316
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:279
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:295
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:270
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:392
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:499
msgid "[fortran-lang/fftpack](https://github.com/fortran-lang/fftpack)"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:7
msgid "Fortran newsletter: October 2021"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:9
msgid ""
"Welcome to the October 2021 edition of the monthly Fortran newsletter. "
"The newsletter comes out at the beginning of every month and details "
"Fortran news from the previous month."
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:17
msgid ""
"[#305](https://github.com/fortran-lang/fortran-lang.org/pull/305): "
"September newsletter draft"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:19
msgid ""
"[#300](https://github.com/fortran-lang/fortran-lang.org/pull/300): Add "
"QCxMS to package index"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:21
msgid ""
"[#302](https://github.com/fortran-lang/fortran-lang.org/pull/302): Update"
" Silverfrost compiler description."
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:23
msgid ""
"[#307](https://github.com/fortran-lang/fortran-lang.org/pull/307): Fixed "
"typo"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:25
msgid ""
"[#308](https://github.com/fortran-lang/fortran-lang.org/pull/308): remove"
" excess 'mpi' tag from fortran2018-examples"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:27
msgid ""
"[#246](https://github.com/fortran-lang/fortran-lang.org/pull/246): "
"Transferring fortran90.org \"Fortran Best Practices\" into a mini-book"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:29
msgid ""
"[#314](https://github.com/fortran-lang/fortran-lang.org/pull/314): "
"grammar and spelling from issue #313"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:31
msgid ""
"[#317](https://github.com/fortran-lang/fortran-lang.org/pull/317): more "
"grammar, spelling, and rewording for Fortran Best Practices"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:33
msgid ""
"[#324](https://github.com/fortran-lang/fortran-lang.org/pull/324): "
"replaced \"be found be found\" with \"be found\""
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:35
msgid ""
"[#320](https://github.com/fortran-lang/fortran-lang.org/pull/320): "
"Alternative approach to avoiding integer division"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:37
msgid ""
"[#328](https://github.com/fortran-lang/fortran-lang.org/pull/328): Add "
"incompact3d to package index"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:39
msgid ""
"[#333](https://github.com/fortran-lang/fortran-lang.org/pull/333): Add "
"fparser to package index"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:41
msgid ""
"[#335](https://github.com/fortran-lang/fortran-lang.org/pull/335): Adding"
" two more packages to the index"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:43
msgid ""
"[#334](https://github.com/fortran-lang/fortran-lang.org/pull/334): Add "
"pFlogger to package index"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:45
msgid ""
"[#336](https://github.com/fortran-lang/fortran-lang.org/pull/336): One "
"more package"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:50
msgid ""
"[#329](https://github.com/fortran-lang/fortran-lang.org/pull/329) (WIP): "
"Quantum Information book, WSL GUI, and typos"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:66
msgid "[#509](https://github.com/fortran-lang/stdlib/pull/509): fixed typo"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:68
msgid ""
"[#503](https://github.com/fortran-lang/stdlib/pull/503): refactor "
"documentation regarding consistency"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:70
msgid ""
"[#511](https://github.com/fortran-lang/stdlib/pull/511): Correctly set "
"CMAKE_INSTALL_MODULEDIR cache variable"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:72
msgid ""
"[#513](https://github.com/fortran-lang/stdlib/pull/513): Update issue "
"templates"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:74
msgid ""
"[#523](https://github.com/fortran-lang/stdlib/pull/523): Rename "
"config.yaml -> config.yml"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:76
msgid ""
"[#508](https://github.com/fortran-lang/stdlib/pull/508): github-ci: add "
"fpm support"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:78
msgid ""
"[#475](https://github.com/fortran-lang/stdlib/pull/475): Generating "
"sorting subroutines specific to `character` type with fypp"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:80
msgid ""
"[#525](https://github.com/fortran-lang/stdlib/pull/525): Add files "
"generated by tests to gitignore"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:82
msgid ""
"[#529](https://github.com/fortran-lang/stdlib/pull/529): Add maintainer "
"entry to fpm manifest"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:84
msgid ""
"[#530](https://github.com/fortran-lang/stdlib/pull/530): Make it clearer "
"how the user can control compiler optimization"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:86
msgid ""
"[#528](https://github.com/fortran-lang/stdlib/pull/528): Reduce "
"redundancy caused by optional arguments"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:88
msgid ""
"[#3](https://github.com/fortran-lang/stdlib-cmake-example/pull/3) "
"(`stdlib-cmake-example`): Add example integration with test-drive"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:94
msgid ""
"[#543](https://github.com/fortran-lang/stdlib/pull/543) (WIP): Fix string"
" concat"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:96
msgid ""
"[#539](https://github.com/fortran-lang/stdlib/pull/539) (WIP): Add "
"function gcd"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:98
msgid ""
"[#538](https://github.com/fortran-lang/stdlib/pull/538) (WIP): Bump "
"stdlib version to 0.1.0"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:100
msgid ""
"[#537](https://github.com/fortran-lang/stdlib/pull/537) (WIP): Add a "
"changelog for the current features of stdlib"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:102
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:55
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:64
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:103
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:58
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:52
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:66
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:84
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:73
msgid ""
"[#536](https://github.com/fortran-lang/stdlib/pull/536) (WIP): Fix "
"conversion warnings"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:104
msgid ""
"[#521](https://github.com/fortran-lang/stdlib/pull/521) (WIP): Ensure "
"module output directory is generated in configure stage"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:106
msgid ""
"[#520](https://github.com/fortran-lang/stdlib/pull/520) (WIP): "
"[stdlib_io] add `disp`(display your data)."
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:108
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:68
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:107
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:62
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:56
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:70
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:88
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:77
msgid ""
"[#517](https://github.com/fortran-lang/stdlib/pull/517) (WIP): adding "
"SPEC_TEMPLATE.md #504"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:110
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:61
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:70
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:109
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:64
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:58
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:72
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:90
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:79
msgid ""
"[#514](https://github.com/fortran-lang/stdlib/pull/514) (WIP): pop, drop "
"& get with basic range feature for stringlist"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:160
msgid "[#521](https://github.com/fortran-lang/fpm/pull/521): expand tabs"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:162
msgid ""
"[#557](https://github.com/fortran-lang/fpm/pull/557): Update installer "
"script to update subprojects first"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:164
msgid "[#558](https://github.com/fortran-lang/fpm/pull/558): Add issue templates"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:166
msgid ""
"[#565](https://github.com/fortran-lang/fpm/pull/565): Default branch "
"renaming aftermath"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:168
msgid ""
"[#562](https://github.com/fortran-lang/fpm/pull/562): Add new "
"distributions where fpm is available to README"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:170
msgid ""
"[#563](https://github.com/fortran-lang/fpm/pull/563): Add workflow to "
"create single source fpm version"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:172
msgid ""
"[#564](https://github.com/fortran-lang/fpm/pull/564): Separate upload "
"stage in CI testing"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:174
msgid ""
"[#572](https://github.com/fortran-lang/fpm/pull/572): Build no tests by "
"default"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:176
msgid ""
"[#549](https://github.com/fortran-lang/fpm/pull/549): Allow setting, "
"archiver, C compiler flags and linker flags from commandline"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:178
msgid ""
"[#578](https://github.com/fortran-lang/fpm/pull/578): help text was "
"truncated"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:180
msgid ""
"[#579](https://github.com/fortran-lang/fpm/pull/579): Fix dir not getting"
" removed after testing fpm"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:182
msgid ""
"[#584](https://github.com/fortran-lang/fpm/pull/584): Actually read "
"environment variables"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:188
msgid ""
"[#575](https://github.com/fortran-lang/fpm/pull/575) (WIP): Enable "
"multiple build output directories"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:190
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:119
msgid ""
"[#569](https://github.com/fortran-lang/fpm/pull/569) (WIP): Add workflow "
"for continuous delivery"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:222
msgid ""
"flang-omp-report plugin - first full fledged frontend plugin has been "
"contributed"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:223
msgid "CMake integration - waiting on a new PR"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:224
msgid ""
"Code-generation work is ongoing - task list has been presented to the "
"community for discussion and approval"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:226
msgid "Fortran 95 lowering and runtime support is nearing completion"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:227
msgid "Code upstreaming has begun again"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:229
msgid "Merged: Critical, collapse clause, Fixes for SNAP."
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:230
msgid ""
"In review: Firstprivate, Ordered, MLIR definitions for a few target side "
"constructs, semantic checks for atomic, critical, sections, simd"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:231
msgid "OpenMP 5.0 metadirective"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:233
msgid "Change complex type define in runtime for clang-cl"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:234
msgid "Implement READ(SIZE=) and INQUIRE(IOLENGTH=) in runtime"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:235
msgid ""
"GET_COMMAND_ARGUMENT runtime implementation, handling the LENGTH, VALUE, "
"STATUS and ERRMSG parameters."
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:236
msgid "COMMAND_ARGUMENT_COUNT runtime implementation"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:237
msgid "Add POSIX implementation for SYSTEM_CLOCK"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:238
msgid "Fix WRITE after BACKSPACE on variable-length file"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:239
msgid "Implement Posix version of DATE_AND_TIME runtime"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:240
msgid "Ported test scripts to Python, enables testing on Windows"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:241
msgid "More precise checks for NULL() operands"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:242
msgid "Enforce array conformance in actual arguments to ELEMENTALs"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:243
msgid ""
"Constant folding for COUNT, SQRT, HYPOT, CABS, CSHIFT, EOSHIFT, PACK, "
"UNPACK, and TRANSPOSE"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:244
msgid "Make this_image() an intrinsic function"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:245
msgid "Revamp C1502 checking of END INTERFACE [generic-spec]"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:246
msgid "Accept SIZE(assumed-rank, DIM=n)"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:247
msgid "Validate SIZE(x,DIM=n) dimension for assumed-size array x"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:248
msgid "Catch errors with intrinsic array inquiry functions"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:249
msgid "Correct overflow detection in folding of real->integer conversions"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:250
msgid "Upgrade warning to error in case of PURE procedure"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:251
msgid "Enforce fixed form rules about END continuation"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:252
msgid "Enforce specification function rules on callee, not call"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:253
msgid "Catch error: base of DATA statement object can't be a pointer"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:254
msgid "Represent parentheses around derived types"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:255
msgid "Enforce constraint: defined ass't in WHERE must be elemental"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:256
msgid "Catch branching into FORALL/WHERE constructs"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:257
msgid "Implement semantic checks for ELEMENTAL subprograms"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:258
msgid "Signal EOR in non advancing IO and move to next record"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:259
msgid "Extension: reduced scope for some implied DO loop indices"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:260
msgid "Take result length into account in ApplyElementwise folding"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:261
msgid "Apply double precision KindCode in specific proc interface"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:267
msgid ""
"81 "
"[merged](https://gitlab.com/lfortran/lfortran/-/merge_requests?scope=all&state=merged)"
" Merge Requests in September 2021"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:270
msgid ""
"LFortran Minimum Viable Product (MVP) "
"[released](https://lfortran.org/blog/2021/09/lfortran-minimum-viable-"
"product-mvp/)"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:271
msgid "LFortran 0.13.0, 0.13.1 and 0.14.0 released in September"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:272
msgid "The following people have contributed code to LFortran in September:"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:277
msgid "Harris M. Snyder"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:279
msgid "Mengjia Lyu"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:281
msgid "Main features implemented in September:"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:282
msgid "Operator overloading (ASR, LLVM)"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:283
msgid "Goto (ASR, LLVM)"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:284
msgid "Runtime library improvements: `iand`, `len`, `trim`, `len_trim`"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:285
msgid ""
"Interactive mode: get complex numbers, intrinsic functions working "
"(Windows, macOS, Linux)"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:287
msgid "New driver options: --fast, --symtab-only, --target"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:290
#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:225
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:226
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:279
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:245
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:257
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:237
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:365
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:467
msgid ""
"We are looking for new contributors. Please do not hesitate to contact us"
" if you are interested. We will help you get up to speed."
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:296
msgid ""
"We had our 16th Fortran Monthly call on September 22. You can watch the "
"recording below:"
msgstr ""

#: ../../source/news/2021/10-01-Fortran-Newsletter-October-2021.md.md:300
msgid ""
"The second international Fortran Conference (FortranCon) 2021 was held "
"virtually on September 23-24 Video recordings of the talks will be made "
"available soon. For more information, visit the [FortranCon "
"website](https://tcevents.chem.uzh.ch/event/14/)."
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:7
msgid "Fortran newsletter: November 2021"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:9
msgid ""
"Welcome to the November 2021 edition of the monthly Fortran newsletter. "
"The newsletter comes out at the beginning of every month and details "
"Fortran news from the previous month."
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:18
msgid ""
"[#345](https://github.com/fortran-lang/fortran-lang.org/pull/345): Fix "
"title in learning resources"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:20
msgid ""
"[#341](https://github.com/fortran-lang/fortran-lang.org/pull/341): Add "
"Cantera to package index"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:22
msgid ""
"[#329](https://github.com/fortran-lang/fortran-lang.org/pull/329): "
"Quantum Information book, WSL GUI, and typos"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:24
msgid ""
"[#340](https://github.com/fortran-lang/fortran-lang.org/pull/340): Minor "
"fixes in Best Practices"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:44
msgid ""
"[0.1.0](https://github.com/fortran-lang/stdlib/releases/tag/v0.1.0): "
"Initial version of the Fortran standard library"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:46
msgid "[#543](https://github.com/fortran-lang/stdlib/pull/543): Fix string concat"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:51
msgid ""
"[#554](https://github.com/fortran-lang/stdlib/pull/554) (WIP): Hash "
"functions"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:53
msgid ""
"[#552](https://github.com/fortran-lang/stdlib/pull/552) (WIP): Fix bug in"
" stringlist"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:57
msgid ""
"[#520](https://github.com/fortran-lang/stdlib/pull/520) (WIP): "
"[stdlib\\_io] add `disp` (display your data)."
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:59
msgid ""
"[#517](https://github.com/fortran-lang/stdlib/pull/517) (WIP): adding "
"SPEC\\_TEMPLATE.md"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:65
msgid ""
"[#499](https://github.com/fortran-lang/stdlib/pull/499) (WIP): "
"[stdlib\\_linalg] matrix property checks"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:67
msgid ""
"[#498](https://github.com/fortran-lang/stdlib/pull/498) (WIP): "
"[stdlib\\_math] add `arg/argd/argpi`"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:73
msgid ""
"[#488](https://github.com/fortran-lang/stdlib/pull/488) (WIP): "
"[stdlib\\_math] add `is_close` routines."
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:104
msgid ""
"[#597](https://github.com/fortran-lang/fpm/pull/597): Add LFortran "
"optimization flag to release profile"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:106
msgid ""
"[#595](https://github.com/fortran-lang/fpm/pull/595): List names without "
"suffix (mainly for Windows)"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:108
msgid ""
"[#590](https://github.com/fortran-lang/fpm/pull/590): Change link command"
" on Windows with `ifort` or `ifx`"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:110
msgid ""
"[#575](https://github.com/fortran-lang/fpm/pull/575): Enable multiple "
"build output directories"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:112
msgid ""
"[#587](https://github.com/fortran-lang/fpm/pull/587): Bootstrapping "
"instructions version update"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:117
msgid ""
"[#598](https://github.com/fortran-lang/fpm/pull/598) (WIP): Update "
"README.md compiler, archiver, & link flags"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:130
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:145
msgid ""
"Use it and let us know what you think! Read the [fpm packaging "
"guide](https://github.com/fortran-lang/fpm/blob/main/PACKAGING.md) to "
"learn how to build your package with fpm, and the [manifest "
"reference](https://github.com/fortran-lang/fpm/blob/main/manifest-"
"reference.md) to learn what are all the things that you can specify in "
"the fpm.toml file."
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:151
msgid "Front-end and runtime support for CALL EXIT and ABORT"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:152
msgid "Fix formatted real input regression w/ spaces"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:153
msgid "Add runtime interface for GET_ENVIRONMENT_VARIABLE"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:154
msgid "More work on SYSTEM_CLOCK runtime API and implementation"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:155
msgid "Implement GET_ENVIRONMENT_VARIABLE(LENGTH)"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:157
msgid ""
"Added OpenMP 5.0 specification based semantic checks for sections "
"construct and test case for simd construct"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:158
msgid ""
"Added test case for OpenMP 5.0 specification based semantic checks for "
"parallel sections construct"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:159
msgid ""
"Added OpenMP 5.0 specification based semantic checks for CRITICAL "
"construct name resolution"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:160
msgid "Checks for THREADPRIVATE and DECLARE TARGET Directives"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:161
msgid "Initial parsing/sema for append_args clause for 'declare variant'"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:162
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:168
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:177
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:155
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:136
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:148
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:166
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:149
msgid "FIR"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:163
msgid ""
"Add typeparams to fir.array_update, fir.array_fetch and "
"fir.array_merge_store operations. Add optional slice operands to "
"fir.array_merge_store op."
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:164
msgid ""
"Updated various ops - fir.extract_value, fir.insert_value, fir.allocmem, "
"fir.alloca, fir.field_index, fir.freemem, fir.store"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:165
msgid ""
"Move the parsers, printers and builders from the TableGen file to the "
".cpp file"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:166
msgid "Update fir.alloca op - Add pinned attributes and specific builders"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:167
msgid "Add ops: fir.char_convert and fir.array_modify"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:168
msgid ""
"Add passes: external name interop, affine promotion, affine demotion, "
"character conversion, abstract result conversion, cfg conversion"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:169
msgid "Add fir.convert canonicalization patterns"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:170
msgid "Add the DoLoopHelper"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:171
msgid "Add IfBuilder and utility functions"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:172
msgid "Add FIRBuilder utility functions"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:173
msgid "Add character utility functions in FIRBuilder"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:174
msgid "Add Character helper"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:175
msgid "Add utility function to FIRBuilder and MutableBox"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:176
msgid "Add substring to fir.slice operation"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:177
msgid ""
"Avoid slice with substr in fir.array_load, fir.array_coor and "
"fir.array_merge_store"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:178
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:183
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:191
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:194
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:152
msgid "Driver"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:179
msgid "Error if uuidgen is not installed"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:180
msgid "Fix erroneous `&`"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:181
msgid "Add actions that execute despite semantic errors"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:182
#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:190
msgid "flang-omp-report"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:183
msgid "replace std::vector's with llvm::SmallVector"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:184
msgid "Switch from std::string to StringRef (where possible)"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:185
msgid "replace std::map with llvm::DenseMap"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:186
msgid "Make builtin types more easily accessible; use them"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:187
msgid "Fix test regression from SQRT folding"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:188
msgid "Fold FINDLOC, MAXLOC, MINLOC, LGE/LGT/LLE/LLT, BTEST intrinsic functions"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:189
msgid "Take into account SubprogramDetails in GetInterfaceSymbol"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:190
msgid "Add debug dump method to evaluate::Expr and semantics::Symbol"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:191
msgid "Add a wrapper for Fortran main program"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:192
msgid "Improve runtime interface with C99 complex"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:193
msgid "Better error recovery for missing THEN in ELSE IF"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:194
msgid "Define IEEE_SCALB, IEEE_NEXT_AFTER, IEEE_NEXT_DOWN, IEEE_NEXT_UP"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:195
msgid "Catch mismatched parentheses in prescanner"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:196
msgid "Error checking for IBCLR/IBSET and ISHFT/SHIFT[ALR]"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:197
msgid "Document behavior for nonspecified/ambiguous cases"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:198
msgid "Add two negative tests for needExternalNameMangling"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:199
msgid "Expunge bogus semantic check for ELEMENTAL without dummies"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:200
msgid "Admit NULL() in generic procedure resolution cases"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:201
msgid "Fix bogus folding error for ISHFT(x, negative)"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:202
msgid "Emit unformatted headers & footers even with RECL="
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:203
msgid "Enforce rest of semantic constraint C919"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:204
msgid "Extension to distinguish specific procedures"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:205
msgid "Support NAMELIST input of short arrays"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:206
msgid "Fix generic resolution case"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:207
msgid "Speed common runtime cases of DOT_PRODUCT & MATMUL"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:208
msgid "Fix crash on empty formatted external READs"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:209
msgid "Extension: allow tabs in output format strings"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:210
msgid "Fix DOT_PRODUCT for logical"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:211
msgid "Fix NAMELIST input bug with multiple subscript triplets"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:212
msgid "Support legacy usage of 'A' edit descriptors for integer & real"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:218
msgid "155 Merge Requests merged in October 2021"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:219
msgid "AST to ASR transformation simplified and unified"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:220
msgid "Many new intrinsics added"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:221
msgid "Rust style error messages, add first warnings and style suggestions"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:222
msgid "Fixed bugs in location information"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:223
msgid "C preprocessor added"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:231
msgid "We have adopted two new Fortran-lang guidelines:"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:232
msgid ""
"[Governance document](https://github.com/fortran-"
"lang/.github/blob/main/GOVERNANCE.md) that describes how Fortran-lang "
"projects are managed"
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:233
msgid ""
"[Administration, moderation, and editing guide](https://fortran-"
"lang.discourse.group/t/welcome-to-discourse/7#administration-moderation-"
"and-editing-3) for Fortran Discourse Both documents are part of an effort"
" to increase transparency between Fortran-lang administrators and the "
"rest of the community."
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:235
msgid ""
"The US Fortran Standards Committee (J3) held the meeting 225 October "
"18-27, 2021. The meeting was virtual and on Mondays and Wednesdays only. "
"Discussions focused on resolving any outstanding issues to the Fortran "
"202X features. Here are the links to the meeting "
"[agenda](https://j3-fortran.org/doc/year/21/agenda225.txt), "
"[minutes](https://j3-fortran.org/doc/year/21/minutes225.txt), and "
"[papers](https://j3-fortran.org/doc/meeting/225). See also the [Fortran-"
"lang and LFortran liaison report to "
"J3](https://j3-fortran.org/doc/year/21/21-206.txt) submitted by Ondřej "
"Čertík and Milan Curcic."
msgstr ""

#: ../../source/news/2021/11-01-Fortran-Newsletter-November-2021.md.md:243
msgid ""
"We had our 19th Fortran Monthly call on October 19. You can watch the "
"recording below:"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:7
msgid "Fortran newsletter: December 2021"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:9
msgid ""
"Welcome to the December 2021 edition of the monthly Fortran newsletter. "
"The newsletter comes out at the beginning of every month and details "
"Fortran news from the previous month."
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:15
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:16
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:15
msgid "Here's what's new and ongoing in the fortran-lang.org repo:"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:17
msgid ""
"[#348](https://github.com/fortran-lang/fortran-lang.org/pull/348): Fix "
"typo in author field"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:22
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:33
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:24
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:24
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:30
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:48
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:35
msgid ""
"[#347](https://github.com/fortran-lang/fortran-lang.org/pull/347) (WIP): "
"Fortran Intrinsics"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:37
msgid ""
"[#558](https://github.com/fortran-lang/stdlib/pull/558): Pin specific fpm"
" version"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:39
msgid ""
"[#556](https://github.com/fortran-lang/stdlib/pull/556): fix some FORD "
"links"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:41
msgid ""
"[#494](https://github.com/fortran-lang/stdlib/pull/494): Add testing "
"module to allow better structuring of test suites"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:43
msgid ""
"[#562](https://github.com/fortran-lang/stdlib/pull/562): Minor update "
"`pure/elemental` in `string_type` module"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:45
msgid ""
"[#565](https://github.com/fortran-lang/stdlib/pull/565): Make support for"
" quadruple precision optional"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:47
msgid ""
"[#566](https://github.com/fortran-lang/stdlib/pull/566): Create a call "
"for reviewers pull request template"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:49
msgid ""
"[#578](https://github.com/fortran-lang/stdlib/pull/578): Update error in "
"case fypp preprocessor is not found"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:51
msgid ""
"[#579](https://github.com/fortran-lang/stdlib/pull/579): Add module for "
"handling version information of stdlib"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:56
msgid ""
"[#581](https://github.com/fortran-lang/stdlib/pull/581) (WIP): Add "
"routines for saving/loading arrays in npy format"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:58
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:99
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:54
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:48
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:62
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:80
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:69
msgid ""
"[#580](https://github.com/fortran-lang/stdlib/pull/580) (WIP): Add "
"terminal and color escape sequences"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:60
msgid ""
"[#573](https://github.com/fortran-lang/stdlib/pull/573) (WIP): Revised "
"Hash functions incorporating changes in the main Stdlib repository."
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:62
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:101
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:56
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:50
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:64
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:82
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:71
msgid ""
"[#552](https://github.com/fortran-lang/stdlib/pull/552) (WIP): fixed bug "
"in stringlist"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:66
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:105
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:60
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:54
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:68
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:86
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:75
msgid ""
"[#520](https://github.com/fortran-lang/stdlib/pull/520) (WIP): "
"[stdlib_io] add `disp`(display variable values formatted)."
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:110
msgid ""
"[v0.5.0](https://github.com/fortran-lang/fpm/releases/tag/v0.5.0): Alpha "
"release update"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:112
msgid ""
"[#598](https://github.com/fortran-lang/fpm/pull/598): Update README.md "
"compiler, archiver, & link flags"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:114
msgid ""
"[#569](https://github.com/fortran-lang/fpm/pull/569): Add workflow for "
"continuous delivery"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:116
msgid ""
"[#602](https://github.com/fortran-lang/fpm/pull/602): fix(fpm_compiler): "
"intel windows release flag was incorrect"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:118
msgid ""
"[#607](https://github.com/fortran-lang/fpm/pull/607): Repair --list "
"option and correct obsolete descriptions of the --list option"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:120
msgid ""
"[#612](https://github.com/fortran-lang/fpm/pull/612): Fix modules listing"
" (for install)"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:122
msgid ""
"[#613](https://github.com/fortran-lang/fpm/pull/613): Add: critical "
"section to mkdir in backend"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:124
msgid ""
"[#616](https://github.com/fortran-lang/fpm/pull/616): Add: workflow to "
"make installer on push and release"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:126
msgid ""
"[#614](https://github.com/fortran-lang/fpm/pull/614): Bump version to "
"0.5.0"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:128
msgid ""
"[setup-fpm#7](https://github.com/fortran-lang/setup-fpm/pull/7): Fix "
"Latest Option"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:133
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:146
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:120
msgid ""
"[#622](https://github.com/fortran-lang/fpm/pull/622) (WIP): Cleanup the "
"backend output"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:135
#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:148
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:122
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:105
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:119
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:137
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:122
msgid ""
"[#608](https://github.com/fortran-lang/fpm/pull/608) (WIP): --env switch "
"lets you specify the prefix of the compiler-related environment variables"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:166
msgid "Use the ultimate symbol in a call to the IsPointer function"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:167
msgid "Add parsing/sema/serialization for 'bind' clause."
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:169
msgid "Add base of the FIR to LLVM IR pass"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:170
msgid "Add various FIR to LLVM IR conversion patterns:"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:171
msgid "fir.unreachable"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:172
msgid "fir.insert_on_range"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:173
msgid "fir.zero_bits"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:174
msgid "fir.select and fir.select_rank"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:175
msgid "fir.extract_value and fir.insert_value"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:176
msgid "types - fir.box, fir.logical, fir.char, fir.ptr"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:177
msgid "fir.box_rank, fir.box_addr, fir.box_dims, fir.box_elesize"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:178
msgid "fir.convert"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:179
msgid "fir.call"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:180
msgid "fir.store and fir.load"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:181
msgid "Add substr information to fircg.ext_embox and fircg.ext_rebox operations"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:182
msgid "Use notifyMatchFailure in fir.zero_bits conversion"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:183
msgid "Restrict array type on fir.insert_on_range"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:184
msgid "Add test for FIR types conversion"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:185
msgid "Use contralized values for indexing box"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:186
msgid "Add complex operations conversion from FIR LLVM IR"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:187
msgid "Add TargetRewrite pass and TargetRewrite: Rewrite COMPLEX values"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:189
msgid "Read environment variables directly"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:191
msgid "Removed unnecessary comments in flang-omp-report plugin tests"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:192
msgid "Remove the loop workarounds for nowait clause"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:193
msgid "Add flang-omp-report summarising script"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:194
msgid "Checks for pointers to intrinsic functions"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:195
msgid "Fold SPREAD"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:196
msgid "Improve error message for misuse of NULL(mold) as data statement constant"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:197
msgid "Fix crash on \"call system_clock(count_max=j)\""
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:198
msgid "Fix combined folding of FINDLOC/MAXLOC/MINLOC"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:199
msgid "Implement GET_ENVIRONMENT_VARIABLE(VALUE)"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:200
msgid ""
"Remove builder that takes SSA value instead of Attribute on "
"ExtractValueOp, InsetValueOp, and InsertOnRangeOp"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:201
msgid "Remove getModel<Fortran::ISO::CFI_dim_t> in DescriptorModel.h"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:202
msgid "Set the addendum when establishing pointer section in descriptor"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:203
msgid "Fix error in characteristics check at procedure pointer assignment"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:204
msgid "Initial parsing/sema for 'align' clause"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:205
msgid "Don't reference non-invariant symbols in shape expressions"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:206
msgid "Make subscript list argument a nullable pointer"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:207
msgid "Distinguish error/warning cases for bad jumps into constructs"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:208
msgid "Fix folding of EPSILON()"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:214
msgid "32 Merge Requests merged in November 2021"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:215
msgid "Support for same name interface and subroutine/function"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:216
msgid "Compile-time evaluation for bit intrinsics"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:217
msgid "Implement the `repeat` and `shape` intrinsics"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:218
msgid "Variadic support for `min` and `max` intrinsics"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:219
msgid "Implement the scalar `random_number` function"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:220
msgid "Fixes and improved error message for `read` and `write` statements"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:221
msgid "Support the `final`, `intrinsic`, and `private` attributes"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:222
msgid "Implement the `ieee_arithmetic` intrinsic module"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:223
msgid "Support for the `abstract` class"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:224
msgid "Support for `assignment(=)` on `use` statement"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:232
msgid ""
"Sebastian Ehlert presented the Fortran Package Manager at the "
"PackagingCon 2021 conference. You can watch the recording below:"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:235
msgid ""
"Recordings of all FortranCon 2021 presentations are now available to view"
" in the [FortranCon YouTube "
"Channel](https://www.youtube.com/playlist?list=PLeKbr7eYHjt5UaV9zQtY24oEbne9_uFni)."
" Enjoy!"
msgstr ""

#: ../../source/news/2021/12-01-Fortran-Newsletter-December-2021.md.md:238
msgid ""
"We had our 20th Fortran Monthly call on November 15. You can watch the "
"recording below:"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:7
msgid "=(Fortran-lang-2021-in-review)"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:9
msgid "Fortran-lang: 2021 in review"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:11
msgid ""
"With another year behind us, let's review the progress that the Fortran-"
"lang community has made. If you're new to Fortran-lang, here's a quick "
"intro: We're an open source community that aims to develop modern Fortran"
" tooling and nurture a rich ecosystem of libraries, as well as to provide"
" a friendly, helpful, and inclusive space for newcomers and experienced "
"Fortran programmers to work together. We started in late 2019 and have "
"been going ever since. If you're first discovering (or re-discovering) "
"Fortran through this article, welcome, and we hope it inspires you to try"
" Fortran for one of your projects. In this article we summarize new "
"developments from 2021, from flagship and new projects to community "
"development and outreach."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:24
msgid "Standard Library (stdlib)"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:26
msgid ""
"To date, [33 people](https://github.com/fortran-"
"lang/stdlib/graphs/contributors) have contributed code to stdlib, and "
"more than 100 people have participated in discussions. More than a dozen "
"new modules have been added in 2021:"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:31
msgid ""
"`stdlib_array`: Provides `trueloc` and `falseloc` which allow you to "
"index an array based on a logical condition in a functional style"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:33
msgid "`stdlib_hash`: Provides many hash algorithms, 32- and 64-bit alike"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:34
msgid "`stdlib_math`: Provides a number of common mathematical functions"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:35
msgid "`stdlib_random`: Pseudo-random integer number generation"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:36
msgid ""
"`stdlib_selection`: Selection procedures for selecting elements from an "
"array given a desired range"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:38
msgid ""
"`stdlib_sorting`: Sorting procedures based on Rust's sorting algorithm "
"and introsort by David Musser"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:40
msgid ""
"`stdlib_specialfunctions`: Provides the Legendre function and its "
"derivative in support of the Gaussian quadrature procedures"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:42
msgid ""
"`stdlib_stats_distribution_normal`: Functions to sample values from a "
"normal distribution"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:44
msgid ""
"`stdlib_stats_distribution_uniform`: Functions to sample values from a "
"uniform distribution"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:46
msgid ""
"`stdlib_string_type`: Provides a `string_type` derived type that "
"alleviates some limitations of the variable-length `character` variables."
" `string_type` is compatible with all intrinsic procedures that operate "
"on `character`."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:49
msgid ""
"`stdlib_stringlist_type`: A derived type that is a 1-dimensional list of "
"strings"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:51
msgid ""
"`stdlib_strings`: Provides a number of inquiry and manipulation "
"procedures that complement the intrinsic set"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:53
msgid "`stdlib_version`: Allows querying the version of the stdlib library build"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:55
msgid ""
"which brings us to a total of 23 modules in stdlib. You can read about "
"these modules in more detail on the [stdlib API docs "
"website](https://stdlib.fortran-lang.org)."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:59
msgid ""
"Besides the new modules, procedures, and derived types, there have been a"
" few key improvements in terms of stdlib delivery:"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:62
msgid ""
"You can now use stdlib as a dependency in your fpm projects, see "
"[here](https://github.com/fortran-lang/stdlib#build-with-fortran-"
"langfpm). This significantly lowers the bar for getting started with "
"stdlib."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:65
msgid ""
"We had our first stdlib release (0.1.0) on October 4. As of now we don't "
"have a set release schedule, and plan to publish a new release when there"
" is significant new functionality. As stdlib matures and becomes more "
"widely used, we expect releases to become more frequent."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:70
msgid ""
"We now maintain a [change log](https://github.com/fortran-"
"lang/stdlib/blob/HEAD/CHANGELOG.md) where every change to the API is "
"documented. This is a useful document to reference when you want to know "
"what's been added to the stdlib since the latest release."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:75
msgid ""
"If you haven't tried stdlib yet, please do and let us know what you think"
" and how we can improve it. Our vision for stdlib is to provide basic "
"utilities that most Fortran projects use, as well as wider numerical "
"capabilities with the scope of NumPy and SciPy."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:82
msgid ""
"Fortran Package Manager (fpm) is the package manager and build system for"
" Fortran. Its key goal is to make developing, distributing, and reusing "
"Fortran libraries and applications as easy and as fun as possible. In "
"2020, the big change for fpm was the transition from the prototype "
"implemented in Haskell to a pure Fortran implementation. Fpm has since "
"been used in increasingly more and ever larger Fortran projects."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:90
msgid ""
"To date, [22 people](https://github.com/fortran-"
"lang/fpm/graphs/contributors) have contributed code to fpm. In 2021 fpm "
"has advanced from v0.1.3 to v0.5.0. Key additions this year include "
"(release version in parentheses):"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:95
msgid "CLI arguments for linker, archiver, and C compiler (0.5.0)"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:96
msgid "Support for MPI and LFortran (0.4.0)"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:97
msgid ""
"Support for installed library modules via `external-modules` in the "
"manifest (0.3.0)"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:99
msgid "Automatic discovery of manifest files in parent directories (0.3.0)"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:100
msgid "Support for reading package version from file (0.3.0)"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:101
msgid "Support for include directories (0.2.0)"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:102
msgid "Support for `--flag` CLI option to specify compiler flags (0.2.0)"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:103
msgid ""
"`fpm build --show-model` displays the internal representation of a "
"package (0.1.4)"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:105
msgid "Allow hyphen in new package names (0.1.4)"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:106
msgid ""
"`fpm new` now supports `--full` and `--bare` to specify level of "
"scaffolding (0.1.4)"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:109
msgid "Check out also these fpm plugins:"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:111
msgid ""
"[fpm-search](https://github.com/brocolis/fpm-search): Adds the `fpm "
"search` command for searching for registered fpm packages from the "
"command line."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:114
msgid ""
"[fpm-man](https://github.com/urbanjost/fpm-man): Adds the `fpm man` "
"command for displaying man-style help pages about Fortran intrinsics and "
"other language features."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:118
msgid ""
"At the time of writing, there are almost 200 projects now using fpm. If "
"you haven't tried fpm yet, please do! It has truly been a game-changing "
"tool for many of us."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:122
msgid "We have many ideas that we want to pursue, such as:"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:124
msgid ""
"First-class integration with other package managers such as Spack and "
"Conda"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:125
msgid "First-class integration with build systems like CMake and Meson"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:126
msgid ""
"Improving [fpm's package registry](https://github.com/fortran-lang/fpm-"
"registry), etc."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:128
msgid ""
"We are always looking for new contributors. If any of these projects "
"interest you, please join us."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:139
msgid ""
"Though not technically a Fortran-lang project, "
"[LFortran](https://lfortran.org) has been growing close to the Fortran-"
"lang community and projects largely thanks to its creator and lead "
"developer  [Ondřej Čertík](https://github.com/certik) also being one of "
"the founding members of Fortran-lang. LFortran has been developing "
"rapidly this year and was released as a [Minimum Viable Product "
"(MVP)](https://lfortran.org/blog/2021/09/lfortran-minimum-viable-product-"
"mvp/) in September. LFortran currently parses all of Fortran 2018 and "
"compiles a significant subset of the language. 16 people have contributed"
" code so far, and many more have reported bugs or participated in "
"discussions. If you haven't tried LFortran yet, please do and let us know"
" how it can best improve for your use case. You can help speed up "
"LFortran's development by contributing code and/or documentation "
"directly, or by donating funds to the project via "
"[NumFOCUS](https://numfocus.org/project/lfortran)."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:155
msgid ""
"Follow LFortran on Twitter at "
"[@lfortranorg](https://twitter.com/lfortranorg)."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:157
msgid "fortran-lang.org, Discourse, and social media"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:159
msgid ""
"A major addition to the Fortran website this year is the [Fortran Best "
"Practices mini-book](https://fortran-lang.org/learn/best_practices). This"
" is a port and an update to the well-known "
"[fortran90.org](https://www.fortran90.org) by [Ondřej "
"Čertík](https://github.com/certik). It provides a plethora of tips on how"
" to write simple and idiomatic Fortran for numerical tasks, and how to "
"avoid some common gotchas. Give it a read and let us know how it can be "
"improved."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:168
msgid ""
"The [Fortran Discourse](https://fortran-lang.discourse.group) is as "
"active as ever, with new users joining daily. There are currently 338 "
"active users out of a total of 537 registered users. The Fortran "
"Discourse is a great place to ask for help with Fortran code, post a "
"Fortran job opening, and discuss anything Fortran-related."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:174
msgid ""
"We also continue to release the monthly newsletter where we document the "
"progress month-by-month, as well as post about any notable events in the "
"Fortran world. This newsletter is a great way to stay up to date with "
"Fortran-lang. If you're also on Twitter, follow our account "
"[@fortranlang](https://twitter.com/fortranlang) for daily bite-size news "
"and updates, as well as the new "
"[@FortranTip](https://twitter.com/FortranTip) account, managed by "
"[Beliavsky](https://github.com/beliavsky), which brings daily Fortran "
"tips to your Twitter feed."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:184
msgid ""
"Finally, we meet on monthly video calls to discuss issues and topics "
"related to all Fortran-lang projects. The calls are advertised on Fortran"
" Discourse and are open to everyone. Don't hesitate to join the call to "
"meet other Fortran-lang participants and take part in different "
"discussions."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:189
msgid "New projects"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:191
msgid ""
"In addition to the flagship projects summarized above, a few new projects"
" started or were adopted by Fortran-lang this year."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:194
msgid "fftpack"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:196
msgid ""
"[fftpack](https://github.com/fortran-lang/fftpack) is a classic "
"collection of subroutines to perform the Fast Fourier Transform on real "
"and complex data. It is based on the classic [FFTPACK library from "
"Netlib](http://www.netlib.org/fftpack/). fftpack was adopted by Fortran-"
"lang in an effort to provide:"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:202
msgid "A community-maintained FFT library"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:203
msgid "Bug fixes to the existing codebase"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:204
msgid "Modern interfaces on top of the existing API"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:205
msgid "fpm package for easy use as a dependency."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:207
msgid "test-drive"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:209
msgid ""
"[Test-drive](https://github.com/fortran-lang/test-drive) is a simple and"
"  easy-to-use testing framework developed by [Sebastian "
"Ehlert](https://github.com/awvwgk). It follows a simple functional style "
"to collect and run your tests in parallel and print a minimal and clean "
"diagnostic printout to the standard output.  Test-drive is currently used"
" by both stdlib and fpm for their own test suites. Give test-drive a test"
" drive for your next Fortran project!"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:217
msgid "fpm-docs"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:219
msgid ""
"[fpm-docs](https://github.com/fortran-lang/fpm-docs) is a brand new user "
"documentation website for fpm, developed by [Sebastian "
"Ehlert](https://github.com/awvwgk). Its key aim is to provide community-"
"maintained documentation across four target audiences/use cases:"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:225
msgid "**Tutorials**: for learning how to use fpm for Fortran development"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:226
msgid "**How-to guides**: recipes for specific and concrete problems"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:227
msgid ""
"**Design documents**: resources that document the design of various "
"aspects of fpm"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:229
msgid "**References**: specification documents of fpm components"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:237
msgid ""
"As the fpm user docs are now hosted at [fpm.fortran-lang.org](https://fpm"
".fortran-lang.org), the API docs are now located at [fortran-"
"lang.github.io/fpm/](https://fortran-lang.github.io/fpm/)."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:241
msgid "Google Summer of Code 2021"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:243
msgid ""
"2021 has been the first year for Fortran-lang to participate in the "
"[Google Summer of Code](https://summerofcode.withgoogle.com/) program. "
"Together with NumFOCUS and LFortran, Fortran-lang had six students who "
"worked on a  variety of projects:"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:248
msgid ""
"[Aman Godara](https://github.com/Aman-Godara) (Improving strings in "
"stdlib)"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:249
msgid "[Chetan Karwa](https://github.com/chetankarwa) (Linked lists in stdlib)"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:250
msgid ""
"[Gagandeep Singh](https://github.com/czgdp1807) (Arrays and allocatables "
"in LFortran)"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:251
msgid "[Jakub Jelínek](https://github.com/kubajj) (Compiler arguments in fpm)"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:252
msgid "[Rohit Goswami](https://rgoswami.me/) (Compiling dftatom with LFortran)"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:253
msgid ""
"[Thirumalai Shaktivel](https://github.com/Thirumalai-Shaktivel) (AST "
"generation in LFortran)"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:255
msgid ""
"You can read in more detail about their projects "
"[here](https://summerofcode.withgoogle.com/archive/2021/organizations/6542461173760000)."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:258
msgid ""
"A big thank you to all students, mentors, and administrators, for their "
"great work, and of course, to the Google Summer of Code program for "
"making possible for students to participate."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:262
msgid ""
"We plan to apply for Google Summer of Code in 2022 as well. The program "
"is no longer limited to students and anybody 18 or older can apply to "
"work on an open source project and get paid for it. If you're interested "
"participating in the program in 2022 with Fortran-lang, don't hesitate to"
" contact us and we'll guide you toward applying."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:268
msgid "Conferences and papers"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:270
msgid "FortranCon 2021"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:272
msgid ""
"Like in 2020, the Fortran event of this year was [FortranCon "
"2021](https://tcevents.chem.uzh.ch/event/14/), the international Fortran "
"conference, held on September 23-24. The keynote speaker this year was "
"[Damian Rouson](https://github.com/rouson), the head of the [Computer "
"Languages and Systems Software "
"(CLaSS)](https://crd.lbl.gov/divisions/amcr/computer-science-amcr/class/)"
" group at the Lawrence Berkeley National Lab.  Fortran-lang had a "
"dedicated session (a Fortran-lang minisymposium) on the second day of the"
" conference, with the talks about specific Fortran-lang projects as well "
"as the Google Summer of Code student presentations. FortranCon was hosted"
" at the University of Zurich (UZH), and organized by [Tiziano "
"Müller](https://github.com/dev-zero) from UZH and [Alfio "
"Lazzaro](https://github.com/alazzaro) from Hewlett-Packard Enterprise. "
"You can watch all FortranCon 2021 talks "
"[here](https://www.youtube.com/playlist?list=PLeKbr7eYHjt5UaV9zQtY24oEbne9_uFni)."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:287
msgid "PackagingCon 2021"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:289
msgid ""
"Another big event for Fortran-lang was [PackagingCon 2021](https"
"://packaging-con.org/), a conference dedicated to package management "
"software and its community of developers. [Sebastian "
"Ehlert](https://github.com/awvwgk) presented fpm--you can watch the "
"recording below:"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:299
msgid "Papers"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:301
msgid ""
"This year two papers have been written about Fortran-lang projects. The "
"first paper documents the motivation and goals of Fortran-lang: \"Toward "
"Modern Fortran Tooling and a Thriving Developer Community\" by Milan "
"Curcic, Ondřej Čertík, Brad Richardson, Sebastian Ehlert, Laurence "
"Kedward, Arjen Markus, Ivan Pribec, and Jérémie Vandenplas "
"([https://arxiv.org/abs/2109.07382](https://arxiv.org/abs/2109.07382))."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:314
msgid ""
"If Fortran-lang has been helpful in your work and if you want to cite "
"this paper, here's the citation info:"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:333
msgid ""
"We have also submitted a paper draft to IEEE's [Computing in Science & "
"Engineering "
"(CiSE)](https://ieeexplore.ieee.org/xpl/RecentIssue.jsp?punumber=5992) "
"journal, titled \"The State of Fortran\" and led by [Laurence "
"Kedward](https://github.com/lkedward). For this paper, we have [publicly "
"invited on Discourse](https://fortran-lang.discourse.group/t/fortran-"
"lang-community-paper/1232) anybody in the Fortran-lang community to "
"participate. Once published, this will be another paper that you can "
"cite. Stay tuned for its publication."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:343
msgid "Summary"
msgstr "Sumário"

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:345
msgid "2021 is behind us as another productive year."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:346
msgid ""
"Fortran-lang flagship projects such as [stdlib](https://github.com"
"/fortran-lang/stdlib), [fpm](https://github.com/fortran-lang/fpm), "
"[fortran-lang.org](https://fortran-lang.org), and "
"[LFortran](https://lfortran.org) continue to grow and gain traction."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:351
msgid ""
"New Fortran-lang projects include [fftpack](https://github.com/fortran-"
"lang/fftpack), [test-drive](https://github.com/fortran-lang/test-drive), "
"and [fpm-docs](https://github.com/fortran-lang/fpm-docs)."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:355
msgid ""
"Fortran-lang participated in the [Google Summer of "
"Code](https://summerofcode.withgoogle.com/) program for the first time, "
"and had 6 students working on projects across stdlib, fpm, and LFortran."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:359
msgid ""
"We had several presentations of Fortran-lang projects at [FortranCon "
"2021](https://www.youtube.com/playlist?list=PLeKbr7eYHjt5UaV9zQtY24oEbne9_uFni)"
" and [PackagingCon 2021](https://www.youtube.com/watch?v=YG8zEM1lAVM)."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:362
msgid ""
"New Fortran-lang [paper](https://arxiv.org/abs/2109.07382) is out and  "
"another is in review."
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:365
msgid "Thanks"
msgstr ""

#: ../../source/news/2021/12-29-Fortran-lang-2021-in-review.md.md:367
msgid ""
"We thank all people who contributed to Fortran-lang projects and "
"discussions on GitHub, Fortran Discourse, Fortran-lang mailing list, "
"Twitter, and  elsewhere. It wouldn't have been possible without you all."
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:7
msgid "Fortran newsletter: January 2022"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:9
msgid ""
"Happy New Year and welcome to the January 2022 edition of the monthly "
"Fortran  newsletter. The newsletter comes out at the beginning of every "
"month and details Fortran news from the previous month."
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:18
msgid ""
"[#349](https://github.com/fortran-lang/fortran-lang.org/pull/349): "
"Newsletter draft for December 2021"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:20
msgid ""
"[#350](https://github.com/fortran-lang/fortran-lang.org/pull/350): "
"Updated CaNS item so that it shows the version"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:22
msgid ""
"[#353](https://github.com/fortran-lang/fortran-lang.org/pull/353): Add "
"MCST LCC C, C++ and Fortran compiler"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:24
msgid ""
"[#351](https://github.com/fortran-lang/fortran-lang.org/pull/351): Use "
"HEAD to reference default branch"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:26
msgid ""
"[#355](https://github.com/fortran-lang/fortran-lang.org/pull/355): 2021 "
"review article draft"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:28
msgid ""
"[#356](https://github.com/fortran-lang/fortran-lang.org/pull/356) (WIP): "
"Adding Fortran Error Handler to packages index"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:46
msgid ""
"[#500](https://github.com/fortran-lang/stdlib/pull/500): Selection "
"algorithms"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:48
msgid ""
"[#586](https://github.com/fortran-lang/stdlib/pull/586): Update of "
"stdlib_stats.md"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:50
msgid ""
"[#581](https://github.com/fortran-lang/stdlib/pull/581): Add routines for"
" saving/loading arrays in npy format"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:52
msgid "[#590](https://github.com/fortran-lang/stdlib/pull/590): Update changelog"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:54
msgid ""
"[#588](https://github.com/fortran-lang/stdlib/pull/588): Error on no "
"tests in CTest"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:56
msgid ""
"[#585](https://github.com/fortran-lang/stdlib/pull/585): "
"stdlib_selection: correction of typos and addition of some checks"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:58
msgid ""
"[#591](https://github.com/fortran-lang/stdlib/pull/591): Fix compilation "
"errors with makefiles due to command-line variable assignments"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:60
msgid ""
"[#273](https://github.com/fortran-lang/stdlib/pull/273): Probability "
"Distribution and Statistical Functions -- Normal Distribution Module"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:62
msgid ""
"[#584](https://github.com/fortran-lang/stdlib/pull/584): Replace the call"
" to sort by select in stdlib_stats_median"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:64
msgid ""
"[#593](https://github.com/fortran-lang/stdlib/pull/593): Probability "
"Distribution and Statistical Functions -- Uniform Distribution Module"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:66
msgid ""
"[#594](https://github.com/fortran-lang/stdlib/pull/594): Minor update to "
"makefile installation instructions"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:68
msgid ""
"[#596](https://github.com/fortran-lang/stdlib/pull/596): Rename "
"references to default branch"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:70
msgid ""
"[#600](https://github.com/fortran-lang/stdlib/pull/600): Fix iomsg "
"allocation in save_npy"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:72
msgid ""
"[#488](https://github.com/fortran-lang/stdlib/pull/488): [stdlib_math] "
"add `is_close` routines."
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:74
msgid ""
"[#597](https://github.com/fortran-lang/stdlib/pull/597): Add getline to "
"read whole line from formatted unit"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:76
msgid ""
"[#498](https://github.com/fortran-lang/stdlib/pull/498): [stdlib_math] "
"add `arg/argd/argpi`"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:78
msgid ""
"[#603](https://github.com/fortran-lang/stdlib/pull/603): Implement "
"trueloc/falseloc"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:80
msgid ""
"[#573](https://github.com/fortran-lang/stdlib/pull/573): Revised Hash "
"functions incorporating changes in the main Stdlib repository."
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:82
msgid ""
"[#609](https://github.com/fortran-lang/stdlib/pull/609): Consistent spec "
"titles"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:84
msgid ""
"[#610](https://github.com/fortran-lang/stdlib/pull/610): Fixed tables in "
"stdlib_hash_procedures.md"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:86
msgid ""
"[#499](https://github.com/fortran-lang/stdlib/pull/499): [stdlib_linalg] "
"matrix property checks"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:88
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:41
msgid ""
"[#613](https://github.com/fortran-lang/stdlib/pull/613): Ignore hash "
"testing binaries and logs"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:93
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:50
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:44
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:58
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:76
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:65
msgid "[#611](https://github.com/fortran-lang/stdlib/pull/611) (WIP): Hash maps"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:95
msgid ""
"[#605](https://github.com/fortran-lang/stdlib/pull/605) (WIP): "
"[stdlib_math] Add function `diff`"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:97
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:52
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:46
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:60
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:78
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:67
msgid ""
"[#604](https://github.com/fortran-lang/stdlib/pull/604) (WIP): Add "
"get_argument, get_variable and set_variable"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:137
msgid ""
"[#634](https://github.com/fortran-lang/fpm/pull/634): Better extraction "
"of the Fortran compiler from the MPI wrapper"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:142
msgid ""
"[#642](https://github.com/fortran-lang/fpm/pull/642) (WIP): Replace "
"polymorphic assignment with move_alloc"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:144
msgid ""
"[#630](https://github.com/fortran-lang/fpm/pull/630) (WIP): allow "
"backfilling of current directory in fpm-new subcommand"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:158
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:136
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:117
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:129
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:147
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:132
msgid ""
"Use it and let us know what you think! Read the [fpm packaging "
"guide](https://fpm.fortran-lang.org/en/tutorial) to learn how to build "
"your package with fpm, and the [manifest reference](https://fpm.fortran-"
"lang.org/en/spec/manifest.html) to learn what are all the things that you"
" can specify in the fpm.toml file."
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:178
msgid "Add fir.box_isarray, fir.box_isptr and fir.box_isalloc conversion."
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:179
msgid "Add !fir.vector type conversion"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:180
msgid "Add type conversion for `fir.boxchar`"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:181
msgid "Add !fir.alloca conversion"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:182
msgid "Add placeholder conversion pattern for disptach operations"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:183
msgid "Add fir.select_case conversion"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:184
msgid "Add !fir.field type conversion"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:185
msgid "Transform `IsPresentOpConversion` and `AbsentOpConversion`"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:186
msgid "Add type conversion for FIR heap type"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:187
msgid "Add type conversion for FIR integer kind"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:188
msgid "Add !fir.len type conversion"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:189
msgid "Transform `fir.emboxchar` to a sequence of LLVM MLIR"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:190
msgid "Add fir.select_type conversion placeholder"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:191
msgid "Remove extra return in SelectTypeOpConversion"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:192
msgid "Transform `fir.unboxchar` to a sequence of LLVM MLIR"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:193
msgid "Add fir.global_len conversion placeholder"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:194
msgid "Add the FIR LLVMPointer Type"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:195
msgid "Add fir.cmpc conversion"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:196
msgid "Add fir.gentypedesc conversion"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:197
msgid "Transform `fir.boxchar_len` to a sequence of LLVM MLIR"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:198
msgid "Add missing `HasParent` in `fir_DTEntryOp`"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:199
msgid "Add fir.string_lit conversion"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:200
msgid "Add conversion patterns for slice, shape, shapeshift and shift ops"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:201
msgid "Add fir.box_tdesc conversion"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:202
msgid "!fir.tdesc type conversion"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:203
msgid "Add fir.constc conversion"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:204
msgid "Add fir.embox conversion"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:205
msgid "Notify conversion failure for Proc ops, types"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:206
msgid "Add tests for mlir::ComplexType conversion"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:207
msgid "Add `fir.end` conversion placeholder"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:208
msgid "Transform `fir.field_index` to a sequence of LLVM MLIR"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:209
msgid "Add a factory class for creating Complex Ops"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:210
msgid "Add fir.no_reassoc conversion"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:211
msgid "Set !fir.len_param_index conversion to unimplemented"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:212
msgid "Add base for runtime builder unittests"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:213
msgid "Add fir transformational intrinsic builder"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:214
msgid "Add assignment runtime API builder"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:215
msgid "Add data flow optimization pass"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:216
msgid "Add array value copy pass"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:217
msgid "Add fir reduction builder"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:218
msgid "Add fir numeric intrinsic runtime call builder"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:219
msgid "Add fircg.ext_embox conversion"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:220
msgid "Add fir derived type runtime builder"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:221
msgid "Add fir character builder"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:222
msgid "Add fircg.ext_array_coor conversion"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:223
msgid "Upstream conversion of the XRebox Op"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:224
msgid ""
"Convert fir.allocmem and fir.freemem operations to calls to malloc and "
"free, respectively"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:226
msgid "Fix vector cshift runtime with non zero lower bounds"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:227
msgid "Respect NO_STOP_MESSAGE=1 in runtime"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:228
msgid "Runtime performance improvements to real formatted input"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:229
msgid "Allow write after non advancing read in IO runtime"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:230
msgid "Fix reversed comparison in RESHAPE() runtime"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:231
msgid "Define & implement a lowering support API IsContiguous() in runtime"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:232
msgid "Don't close stderr in runtime (fixes STOP output)"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:233
msgid "Return arrays in Transfer runtime with SIZE argument"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:234
msgid "Fix INQUIRE(FILE=,NAME=)"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:235
msgid "Add ragged array runtime functions"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:236
msgid "Allow exterior branch to outermost WHERE construct statement"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:237
msgid "Fix ORDER= argument to RESHAPE"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:238
msgid "Fix rounding edge case in F output editing"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:239
msgid "Handle ENTRY names in IsPureProcedure() predicate"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:240
msgid "Allow implicit procedure pointers to associate with explicit procedures"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:241
msgid "Fix a bug in INQUIRE(IOLENGTH=) output"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:242
msgid "Remove default argument from function template specialization"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:243
msgid "Check ArrayRef base for contiguity in IsSimplyContiguousHelper"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:244
msgid "Deal with negative character lengths in semantics"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:245
msgid "Fix INQUIRE(PAD=) and (POSITION=) for predefined units"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:246
msgid "Add a semantics test for co_sum"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:247
msgid "Fix off-by-one results from folding MAXEXPONENT and MINEXPONENT"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:248
msgid "Skip `Fortran STOP:` before message when NO_STOP_MESSAGE is set"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:249
msgid "Fix printing of constc and parsing of  #fir.real"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:250
msgid "Predefine unit 0 connected to stderr"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:251
msgid "Add -fno-automatic, refine IsSaved()"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:252
msgid "Correct the argument keyword for AIMAG(Z=...)"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:253
msgid "Inclusive language: remove instances of master"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:254
msgid "Return true in IsSymplyContiguous for allocatables"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:255
msgid "Fix usage & catch errors for MAX/MIN with keyword= arguments"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:256
msgid "Re-fold bounds expressions in DATA implied DO loops"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:257
msgid "Correct INQUIRE(POSITION= & PAD=)"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:258
msgid "Rearrange prototype & code placement of IsCoarray()"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:259
msgid "Replace notifyMatchFailure with TODO hard failures"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:260
msgid "TargetRewrite: Rewrite fir.address_of(func)"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:261
msgid "Fix folding of EXPONENT() intrinsic function"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:262
msgid "OPEN(RECL=) handling for sequential formatted I/O"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:263
msgid "Avoid potential deadlock in CloseAll()"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:269
msgid ""
"Beginning of refactoring of ASR (Abstract Semantic Representation) into a"
" standalone library"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:270
msgid "New intrinsics: mvbits, bge, bgt, ble, blt, ibits"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:271
msgid "generic procedure resolution fixes"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:272
msgid "FreeBSD fixes"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:273
msgid "Implement `.xor.` (LFortran as well as GFortran extension)"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:274
msgid "Fixes to large integers (BigInt) handling"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:275
msgid "Added support for `private`, `final` attributes in derived types/classes"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:277
msgid ""
"The following people contributed code in December 2021: Ondřej Čertík, "
"Gagandeep Singh, Harris Snyder"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:284
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:249
msgid ""
"fpm has a new documentation website hosted at [fpm.fortran-"
"lang.org](https://fpm.fortran-lang.org/). This website will provide user-"
"oriented tutorials and how-to guides, as well as developer-oriented "
"reference documents and specifications. We welcome all contributions to "
"the fpm documentation, including translations to other languages. Please "
"visit the [fpm-docs repo](https://github.com/fortran-lang/fpm-docs) to "
"get started."
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:292
msgid ""
"We had our 21st Fortran Monthly call on December 14. You can watch the "
"recording below:"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:295
msgid ""
"We also wrote a review of the Fortran-lang projects in 2021. Read it "
"[here](Fortran-lang-2021-in-review)."
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:310
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:273
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:289
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:264
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:386
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:493
msgid "[fortran-lang/fpm-docs](https://github.com/fortran-lang/fpm-docs)"
msgstr ""

#: ../../source/news/2022/01-01-Fortran-Newsletter-January-2022.md.md:317
#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:280
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:297
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:272
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:394
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:501
msgid "[fortran-lang/test-drive](https://github.com/fortran-lang/test-drive)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:7
msgid "Fortran newsletter: February 2022"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:9
msgid ""
"Welcome to the February 2022 edition of the monthly Fortran newsletter. "
"The newsletter comes out at the beginning of every month and details "
"Fortran news from the previous month."
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:17
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:17
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:31
msgid ""
"[#369](https://github.com/fortran-lang/fortran-lang.org/pull/369): "
"Resolves Issue #217"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:19
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:19
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:17
msgid ""
"[#359](https://github.com/fortran-lang/fortran-lang.org/pull/359): Fix "
"time calculation in the PRs script"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:37
msgid ""
"[#276](https://github.com/fortran-lang/stdlib/pull/276): Probability "
"Distribution and Statistical Functions -- Exponential Distribution Module"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:39
msgid ""
"[#605](https://github.com/fortran-lang/stdlib/pull/605): [stdlib_math] "
"Add function `diff`"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:43
msgid ""
"[#617](https://github.com/fortran-lang/stdlib/pull/617): Made format "
"constant public"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:45
msgid ""
"[#622](https://github.com/fortran-lang/stdlib/pull/622): Fix Gauss "
"quadrature"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:90
msgid ""
"[#630](https://github.com/fortran-lang/fpm/pull/630): allow backfilling "
"of current directory in fpm-new subcommand"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:92
msgid ""
"[#646](https://github.com/fortran-lang/fpm/pull/646): Respect user "
"provided main-files"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:94
msgid ""
"[#645](https://github.com/fortran-lang/fpm/pull/645): Update module "
"output directory command for flang-new/f18"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:96
msgid ""
"[fpm-docs#47](https://github.com/fortran-lang/fpm-docs/pull/47) [fpm-"
"docs#46](https://github.com/fortran-lang/fpm-docs/pull/46) [fpm-"
"docs#45](https://github.com/fortran-lang/fpm-docs/pull/45) [fpm-"
"docs#44](https://github.com/fortran-lang/fpm-docs/pull/44) [fpm-"
"docs#41](https://github.com/fortran-lang/fpm-docs/pull/41) [fpm-"
"docs#39](https://github.com/fortran-lang/fpm-docs/pull/39): French "
"translation"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:103
msgid ""
"[fpm-docs#43](https://github.com/fortran-lang/fpm-docs/pull/43): Add "
"testing workflow for source examples"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:105
msgid ""
"[fpm-docs#40](https://github.com/fortran-lang/fpm-docs/pull/40): Update "
"Spanish translation"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:107
msgid ""
"[fpm-docs#37](https://github.com/fortran-lang/fpm-docs/pull/37): zh_CN: "
"Update Chinese translations"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:112
msgid ""
"[#654](https://github.com/fortran-lang/fpm/pull/654) (WIP): Ignore hidden"
" source files"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:114
#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:103
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:117
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:135
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:120
msgid ""
"[#653](https://github.com/fortran-lang/fpm/pull/653) (WIP): Enable "
"profiles in toml"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:116
msgid ""
"[#652](https://github.com/fortran-lang/fpm/pull/652) (WIP): Get user name"
" and email using got config if available else use defaults"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:118
msgid ""
"[#648](https://github.com/fortran-lang/fpm/pull/648) (WIP): Add note "
"about relocation of manifest reference"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:128
msgid ""
"[fpm-docs#42](https://github.com/fortran-lang/fpm-docs/issues/42) (WIP): "
"Dutch translation"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:130
msgid ""
"[fpm-docs#48](https://github.com/fortran-lang/fpm-docs/pull/48) (WIP): "
"Chinese translation improvements"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:156
msgid "Keep runtime function name in comment"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:157
msgid "Add a conversion for !fir.coordinate_of"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:158
msgid "Add a new memory allocation rewrite pass."
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:159
msgid "Correct and reenable test that was removed by MLIR."
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:160
msgid "Fix overallocation by fir-to-llvm-ir pass"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:162
msgid "Add some semantic checks for threadprivate and declare target directives"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:163
msgid "Simplify RaggedArrayHeader and make it plain C struct"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:164
msgid "Fix folding of ac-implied-do indices in structure constructors"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:165
msgid "Avoid code duplication in mixed expressions"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:166
msgid "Add test with shape for allocmem and freemem"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:167
msgid "Make the frontend driver error out when requesting multiple actions"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:168
msgid "Add semantics tests for co_reduce, co_min, and co_max"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:169
msgid "Use GNUInstallDirs to support custom installation dirs."
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:170
msgid "Enable support for conversion of recursive record types"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:171
msgid "Separate temporary and user-specified object files"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:172
msgid "update to reflect MLIR LLVM::GEPOp changes"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:173
msgid "Do not lose call in shape inquiry on function reference"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:174
msgid "Fix the documentation on how to build flang"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:175
msgid "Add tests for converting arrays and refs to arrays"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:176
msgid "Make the \"flang\" wrapper script check the Bash version"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:177
msgid "Fix handling of space between # and name in preprocessor stringification"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:178
msgid "RESHAPE(PAD=) can be arbitrary array rank"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:179
msgid ""
"Any type can appear in a structure constructor for an unlimited "
"polymorphic allocatable component"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:180
msgid "Implement semantics for DEC STRUCTURE/RECORD"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:181
msgid "Extension: initialization of LOGICAL with INTEGER & vice versa"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:182
msgid "Allow initialization in blank COMMON"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:183
msgid "Support extension intrinsic function variations on ABS"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:184
msgid "Allow pointers to non-sequence types in sequence types"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:185
msgid "\"CFI\" types for Fortran REAL and COMPLEX kinds 2, 3, 10, 16"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:186
msgid "Legacy extension: non-character formats"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:187
msgid "Signal runtime error on WRITE after ENDFILE"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:188
msgid "Don't blank-fill remaining lines in internal output"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:189
msgid "Accept ENTRY names in generic interfaces"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:190
msgid "Support substring references in NAMELIST input"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:196
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:309
msgid "**Compiling `stdlib` with `lfortran`**"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:198
msgid ""
"[stdlib: Implement `AINT` intrinsic "
"Procedure](https://gitlab.com/lfortran/lfortran/-/merge_requests/1638)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:199
msgid ""
"[Draft: Sprint Bug fixing to compile stdlib with "
"LFortran](https://gitlab.com/lfortran/lfortran/-/merge_requests/1644)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:201
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:315
msgid "**Addition of ASR Optimization Passes**"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:203
msgid ""
"[Added pass for converting division to multiplication "
"operation](https://gitlab.com/lfortran/lfortran/-/merge_requests/1647)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:204
msgid ""
"[Adding LLVM backend for flip "
"sign](https://gitlab.com/lfortran/lfortran/-/merge_requests/1649)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:206
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:321
msgid "**`libasr`**"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:208
msgid ""
"[Move more header files into "
"libasr](https://gitlab.com/lfortran/lfortran/-/merge_requests/1620)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:209
msgid ""
"[Move exception.h to "
"libasr](https://gitlab.com/lfortran/lfortran/-/merge_requests/1621)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:210
msgid ""
"[Move string_utils.h/cpp to "
"libasr](https://gitlab.com/lfortran/lfortran/-/merge_requests/1622)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:211
msgid ""
"[Move location.h to "
"libasr](https://gitlab.com/lfortran/lfortran/-/merge_requests/1623)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:212
msgid ""
"[Move stacktrace.h/cpp to "
"libasr](https://gitlab.com/lfortran/lfortran/-/merge_requests/1624)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:213
msgid ""
"[Move colors.h and asr_scopes.h to "
"libasr](https://gitlab.com/lfortran/lfortran/-/merge_requests/1625)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:214
msgid ""
"[Move bwriter.h and modfile.h to "
"libasr](https://gitlab.com/lfortran/lfortran/-/merge_requests/1626)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:215
msgid ""
"[Move config.h to "
"libasr](https://gitlab.com/lfortran/lfortran/-/merge_requests/1627)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:216
msgid ""
"[CI: do not run parent cmake in libasr "
"test](https://gitlab.com/lfortran/lfortran/-/merge_requests/1628)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:217
msgid ""
"[Split "
"serialization.h/cpp](https://gitlab.com/lfortran/lfortran/-/merge_requests/1629)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:218
msgid ""
"[Nullify in ASR, LLVM, scalar "
"types](https://gitlab.com/lfortran/lfortran/-/merge_requests/1630)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:219
msgid ""
"[Remove unused "
"SymbolTable::get_hash()](https://gitlab.com/lfortran/lfortran/-/merge_requests/1631)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:220
msgid ""
"[Separate evaluators into LFortran and libasr "
"parts](https://gitlab.com/lfortran/lfortran/-/merge_requests/1632)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:221
msgid ""
"[utils.h and parser.h split into lfortran/libasr "
"parts](https://gitlab.com/lfortran/lfortran/-/merge_requests/1633)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:222
msgid ""
"[Expose rl_path from "
"libasr](https://gitlab.com/lfortran/lfortran/-/merge_requests/1634)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:223
msgid ""
"[CI: build libasr in an isolated "
"directory](https://gitlab.com/lfortran/lfortran/-/merge_requests/1635)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:224
msgid ""
"[Use the libasr's CMakeLists in LFortran's "
"one](https://gitlab.com/lfortran/lfortran/-/merge_requests/1636)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:225
msgid ""
"[Refactored `libasr/pass` framework and some bug "
"fixes](https://gitlab.com/lfortran/lfortran/-/merge_requests/1645)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:227
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:346
msgid "**Miscellaneous**"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:229
msgid ""
"[fixes for windows compilation (defining NOMINMAX), installation-"
"instructions for Windows/Visual "
"Studio](https://gitlab.com/lfortran/lfortran/-/merge_requests/1639)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:230
msgid ""
"[Update "
"gitignore](https://gitlab.com/lfortran/lfortran/-/merge_requests/1643)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:231
msgid ""
"[Update ASR from "
"LPython](https://gitlab.com/lfortran/lfortran/-/merge_requests/1646)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:232
msgid ""
"[Abstracting out, visit_Program, visit_Subroutine, visit_Function, state "
"variables from "
"passes](https://gitlab.com/lfortran/lfortran/-/merge_requests/1648)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:233
msgid ""
"[Draft: Add a test for "
"pywrap](https://gitlab.com/lfortran/lfortran/-/merge_requests/1637)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:234
msgid ""
"[Fix order deps "
"ordered](https://gitlab.com/lfortran/lfortran/-/merge_requests/1640)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:235
msgid ""
"[link to static zlib to avoid runtime "
"dependency](https://gitlab.com/lfortran/lfortran/-/merge_requests/1641)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:237
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:359
msgid "**Contributors**"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:239
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:362
msgid "[Ondřej Čertík](https://gitlab.com/certik)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:240
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:361
msgid "[Gagandeep Singh](https://gitlab.com/czgdp18071)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:241
msgid "[Dominic Poerio](https://gitlab.com/dpoe)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:242
msgid "[Tobias Loew](https://gitlab.com/tobias-loew)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:243
msgid "[Thirumalai Shaktivel](https://gitlab.com/Thirumalai-Shaktivel)"
msgstr ""

#: ../../source/news/2022/02-01-Fortran-Newsletter-February-2022.md.md:257
msgid ""
"We had our 22st Fortran Monthly call on January 17. You can watch the "
"recording below:"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:7
msgid "Fortran newsletter: March 2022"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:9
msgid ""
"Welcome to the March edition of the monthly Fortran newsletter. The "
"newsletter comes out at the beginning of every month and details Fortran "
"news from the previous month."
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:15
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:15
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:15
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:16
msgid "Here's what's new in the fortran-lang.org repo:"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:37
msgid ""
"[#624](https://github.com/fortran-lang/stdlib/pull/624): [stdlib_math] "
"Minor update to `stdlib_math` module and document"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:42
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:56
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:74
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:63
msgid ""
"[#625](https://github.com/fortran-lang/stdlib/pull/625) (WIP): Gamma "
"special function"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:84
msgid ""
"[#652](https://github.com/fortran-lang/fpm/pull/652): get user name and "
"email using git config if available else use defaults"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:86
msgid ""
"[#654](https://github.com/fortran-lang/fpm/pull/654): Ignore hidden "
"source files"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:88
msgid ""
"[#622](https://github.com/fortran-lang/fpm/pull/622): Cleanup the backend"
" output"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:90
msgid ""
"[#648](https://github.com/fortran-lang/fpm/pull/648): Add note about "
"relocation of manifest reference"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:92
msgid ""
"[fpm-docs#42](https://github.com/fortran-lang/fpm-docs/issues/42): Dutch "
"translation"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:94
msgid ""
"[fpm-docs#48](https://github.com/fortran-lang/fpm-docs/pull/48): Chinese "
"translation improvements"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:96
msgid ""
"[fpm-docs#52](https://github.com/fortran-lang/fpm-docs/pull/52): Update "
"plugin tutorial"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:101
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:115
msgid ""
"[#665](https://github.com/fortran-lang/fpm/pull/665) (WIP): add clean "
"command"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:111
msgid ""
"[fpm-docs#51](https://github.com/fortran-lang/fpm-docs/pull/51) (WIP): "
"Add page about fpm logo"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:137
msgid "Initial lowering for empty program"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:138
msgid "Upstream partial lowering of COMMAND_ARGUMENT_COUNT intrinsic"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:139
msgid "Add lowering placeholders"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:140
msgid "Add lowering for basic empty SUBROUTINE"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:141
msgid "Upstream partial lowering of EXIT intrinsic"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:142
msgid "Lower basic STOP statement"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:143
msgid "Lower PAUSE statement"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:144
msgid "Add lowering for integer constant"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:145
msgid "Lower integer constant code for STOP stmt"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:146
msgid "Add fir.array_access op"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:147
msgid "Add fir.array_amend operation definition"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:148
msgid "Handle logical constant value for quiet in STOP stmt"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:149
msgid "Upstream partial lowering of GET_COMMAND_ARGUMENT intrinsic"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:150
msgid "Basic local variable lowering"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:151
msgid "Add lowering for ASCII character constant"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:152
msgid "Handle character constant for error code in STOP stmt"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:153
msgid "Upstream partial lowering of GET_ENVIRONMENT_VARIABLE intrinsic"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:154
msgid "Add missing CFI case for REAL and COMPLEX"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:155
msgid "Add support for lowering the goto statement"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:156
msgid "Add type conversion for !fir.box<none>"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:157
msgid "Add FIRInlinerInterface"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:158
msgid "Lower simple RETURN statement"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:159
msgid ""
"Upstream fix to allocmem codegen to deal with missing dimensions for "
"sequence of character types"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:160
msgid "Lower basic function with scalar integer/logical return value"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:161
msgid "Enable scalar real type in lowering"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:162
msgid "Enable complex type in function lowering"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:163
msgid "Handle lowering of ranked array"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:164
msgid "Lower simple scalar assignment"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:165
msgid "Lower scalar negation"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:166
msgid "Lower basic binary operation for scalars"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:167
msgid "Initial patch to lower a Fortran intrinsic"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:168
msgid "Lower real constant"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:169
msgid "Lower complex constant"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:170
msgid "Lower function and subroutine calls"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:171
msgid "Handle allocatable dummy arguments"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:172
msgid "Lower allocatable assignment for scalar"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:173
msgid "Simple array assignment lowering"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:174
msgid "Lower simple character return"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:175
msgid "Lower Fortran intrinsic to a runtime call/llvm intrinsic"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:176
msgid "Lower integer comparison operation"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:177
msgid "Lower real comparison operations"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:178
msgid "Lower logical comparison and logical operations"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:179
msgid "Lower power operations"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:180
msgid "Add complex operations lowering tests"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:181
msgid "Lower basic IO statement"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:182
msgid "Handle dynamic array lowering"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:184
msgid "Add support for `-emit-mlir`"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:185
msgid "Add support for `-emit-llvm`"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:186
msgid "Make `flang-new` always generate run-time type info"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:187
msgid "Add support for `--target`/`--triple`"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:189
msgid ""
"Added OpenMP 5.0 specification based semantic checks for atomic update "
"construct"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:190
msgid "The device expression must evaluate to a non-negative integer value"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:191
msgid ""
"Remove clauses from OpenMP Dialect that are handled by the flang frontend"
" instead:"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:192
msgid "private, firstprivate, lastprivate, shared, default, copyin, copyprivate"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:194
msgid "Implement a runtime routine to report fatal errors with source position"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:195
msgid "Rename the runtime routine that reports a fatal user error"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:196
msgid "runtime perf: larger I/O buffer growth increments"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:197
msgid "Add runtime interface for GET_COMMAND"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:198
msgid "Upstream runtime changes for inquiry intrinsics"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:199
msgid "Improve error message (initialized variable in pure subprogram)"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:200
msgid "Accept BOZ literals for some actual arguments"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:201
msgid "Accept sparse argument keyword names for MAX/MIN"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:202
msgid "Accept INDEX(..., BACK=array)"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:203
msgid "Fix OPEN/WRITE(SIGN='SUPPRESS')"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:204
msgid "Handle FLUSH(unknown unit)"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:205
msgid "Allow explicit '+' in NAMELIST input subscripts"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:206
msgid "Extension: skip over NAMELIST groups"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:207
msgid "Add array operations documentation"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:208
msgid "Fix crash from USE-associated defined I/O subprograms"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:209
msgid "Allow INQUIRE() on a child unit in user-defined I/O procedure"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:210
msgid "Don't drop format string for external child I/O"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:211
msgid "Support DECIMAL='COMMA' mode in namelist I/O"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:212
msgid "Update tco tool pipline and add translation to LLVM IR"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:213
msgid "Add MemoryAllocation pass to the pipeline"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:214
msgid "Add ieee_is_normal/ieee_is_negative to ieee_arithmetic module."
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:215
msgid "Add a custom target for the \"flang\" wrapper script."
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:216
msgid "split character procedure arguments in target-rewrite pass"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:217
msgid "Expand the semantics test for co_sum"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:218
msgid "Correct interpretation of RECL="
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:219
msgid "Distinguish intrinsic from non-intrinsic modules"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:220
msgid ""
"Make NEWUNIT= use a range suitable for INTEGER(KIND=1) and recycle unit "
"numbers"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:221
msgid "Modify right modes for READ/WRITE vs OPEN"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:222
msgid "Add a semantics test for co_broadcast"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:223
msgid "catch implicit interface incompatibility with global scope symbol"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:224
msgid "Add an assert to guard against nullptr dereferencing"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:225
msgid "Fix FlangOptimizerTests link on Solaris"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:226
msgid "Handle \"type(foo) function f\" when foo is defined in f"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:227
msgid "Refine pointer/target test for ASSOCIATED intrinsic"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:228
msgid "Allow mixed association of procedure pointers and targets"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:229
msgid "Fix edge case in USE-associated generics"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:230
msgid "Fail at link time if derived type descriptors were not generated"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:231
msgid "Allow for deferred-length character in EstablishDescriptor"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:232
msgid "Allow DATA initialization of derived types w/ allocatable components"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:233
msgid ""
"Accept NULL(mold=x) as constant component value in constant structure "
"constructor"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:234
msgid "Ensure a characterized ENTRY in a PURE subprogram is also marked PURE"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:235
msgid "Accept structure constructor value for polymorphic component"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:236
msgid "Remove deprecated parser/printer/verifier utilities"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:237
msgid "Accept pointer assignment w/ remapping to function result"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:238
msgid "Allow extension cases of EQUIVALENCE with optional warnings"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:239
msgid "Handle CALL C_F_POINTER(without SHAPE=)"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:240
msgid "Make source location more accurate for actual arguments"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:241
msgid "Add Win32 to the list of supported triples"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:242
msgid "Allow tabs as white space in formats"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:243
msgid "Do not print format tabs"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:244
msgid "Catch I/O of bad derived type at compile time"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:245
msgid "Allow more concurrently open NEWUNIT= values, with recycling"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:251
#, python-format
msgid ""
"LFortran is participating in GSoC, please see [GSoC 2022 Student "
"Instructions for "
"LFortran](https://gitlab.com/lfortran/lfortran/-/wikis/GSoC%202022%20Student%20Instructions)"
" for instructions how to apply"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:252
msgid "19 Merge Requests merged"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:253
msgid "New ASR optimizations"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:254
msgid "Addes support for fma (fused-multiply add) in LLVM"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:255
msgid "Semantic improves to compile more of stdlib"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:261
msgid ""
"Fortran-lang has been selected as a mentoring organization for Google "
"Summer of Code 2022! Thanks to everybody who helped prepare the "
"application. [GSoC](https://summerofcode.withgoogle.com/) is Google's "
"global, online program that allows newcomers to open-source to work on a "
"project and get paid for it.  See the [Fortran-lang GSoC 2022 "
"page](https://summerofcode.withgoogle.com/programs/2022/organizations"
"/fortran-lang) for information about the projects and how to apply. "
"Applications for contributors open **April 4** and close **April 19**. To"
" learn more about GSoC and what has changed since last year, please see "
"the [GSoC 2022 announcement](https://opensource.googleblog.com/2021/11"
"/expanding-google-summer-of-code-in-2022.html). If you'd like to "
"participate as a contributor or a mentor, please let us know in this "
"thread and we'll help you get started."
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:268
msgid ""
"Fortran-lang community now maintains a modernized fork of the classic "
"library [minpack](https://github.com/fortran-lang/minpack). Give it a "
"try!"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:270
msgid ""
"We had our 23rd Fortran Monthly call on February 15. You can watch the "
"recording below:"
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:273
msgid ""
"US Fortran Standards Committee meeting #226 started on February 28. See "
"the draft agenda [here](https://j3-fortran.org/doc/year/22/agenda226.txt)"
" and the submitted papers [here](https://j3-fortran.org/doc/meeting/226)."
msgstr ""

#: ../../source/news/2022/03-09-Fortran-Newsletter-March-2022.md.md:296
#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:271
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:393
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:500
msgid "[fortran-lang/minpack](https://github.com/fortran-lang/minpack)"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:7
msgid "Fortran newsletter: April 2022"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:9
msgid ""
"Welcome to the April edition of the monthly Fortran newsletter. The "
"newsletter comes out at the beginning of every month and details Fortran "
"news from the previous month."
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:17
msgid ""
"[#379](https://github.com/fortran-lang/fortran-lang.org/pull/379): "
"Newsletter for March 2022"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:19
msgid ""
"[#383](https://github.com/fortran-lang/fortran-lang.org/pull/383): "
"Updated VS Code extensions"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:21
msgid ""
"[#381](https://github.com/fortran-lang/fortran-lang.org/pull/381): add "
"string array to learn"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:23
msgid ""
"[#384](https://github.com/fortran-lang/fortran-lang.org/pull/384): "
"Resolves typos #377"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:28
msgid ""
"[#369](https://github.com/fortran-lang/fortran-lang.org/pull/369) (WIP): "
"Resolves Issue #217"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:43
msgid ""
"[#632](https://github.com/fortran-lang/stdlib/pull/632): doc: fix some "
"typos"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:45
msgid ""
"[#629](https://github.com/fortran-lang/stdlib/pull/629): option to "
"disable testing by setting BUILD_TESTING to OFF"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:47
msgid ""
"[#631](https://github.com/fortran-lang/stdlib/pull/631): Preparation for "
"0.2.0 release"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:49
msgid ""
"[#637](https://github.com/fortran-lang/stdlib/pull/637): Only set Fortran"
" arguments for Fortran compiler"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:51
msgid ""
"[#642](https://github.com/fortran-lang/stdlib/pull/642): Fix linking "
"issue with shared libraries"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:98
msgid ""
"[#675](https://github.com/fortran-lang/fpm/pull/675): Fix for backtrace "
"error when file not found in: src/fpm_source_parsing.f90"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:100
msgid ""
"[#677](https://github.com/fortran-lang/fpm/pull/677): Fix issue with "
"backend pretty output"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:102
msgid ""
"[#684](https://github.com/fortran-lang/fpm/pull/684): fix: remove remove "
"unnecessary space in fpm new cmd"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:104
msgid ""
"[#8](https://github.com/fortran-lang/setup-fpm/pull/8) (`setup-fpm`): "
"Update to v4 in usage example in README"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:109
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:129
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:118
msgid ""
"[#685](https://github.com/fortran-lang/fpm/pull/685) (WIP): fix: function"
" for getting executable path"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:111
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:131
msgid ""
"[#676](https://github.com/fortran-lang/fpm/pull/676) (WIP): Tree shaking "
"for modules"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:113
#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:133
msgid ""
"[#671](https://github.com/fortran-lang/fpm/pull/671) (WIP): Add `library-"
"dir` to support `-Lpath`"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:149
msgid "Lower IO open and close statements"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:150
msgid "Lower basic IO file statements"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:151
msgid "Lower inquire statement"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:152
msgid "Handle module in lowering pass"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:153
msgid "Lower more cases of assignments on allocatable variables"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:154
msgid "Add lowering for host association"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:155
msgid "Lower allocate and deallocate statements"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:156
msgid "Lower sum intrinsic"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:157
msgid "Lower computed and assigned goto"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:158
msgid "Lower associate construct"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:159
msgid "Update ArrayValueCopy to support array_amend and array_access"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:160
msgid "Lower more array character cases"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:161
msgid "Lower basic derived types"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:162
msgid "Lower where statement"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:163
msgid "Lower general forall statement"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:164
msgid "Lower pointer component in derived type"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:165
msgid "Lower of elemental calls in array expression"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:166
msgid "Add tests for allocatable global"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:167
msgid "Add support for linkonce_odr in FIR"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:168
msgid "Lower elemental calls"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:169
msgid "Lower ALL intrinsic"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:170
msgid "Lower common block"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:171
msgid "Lower format statement"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:172
msgid "Write a pass to annotate constant operands on FIR ops"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:173
msgid "Lower ANY intrinsic"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:174
msgid "Add support for lowering the dot_product intrinsic"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:175
msgid "Add support for lowering the dim intrinsic"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:176
msgid "Add support for lowering of the ibits intrinsic"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:177
msgid "Lower more pointer assignments/disassociation cases"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:178
msgid "Lower entry statement"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:179
msgid "Lower alternate return"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:180
msgid "Lower allocated intrinsic"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:181
msgid ""
"Add lowering for the following character related intrinsics: len, "
"len_trim, lge, lgt, lle and llt"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:182
msgid "Adds lowering for min/max intrinsics: max, maxloc, maxval, minloc, minval"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:183
msgid "Lower random_[init|number|seed] intrinsics"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:184
msgid "Lower date_and_time and cpu_time intrinsics"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:185
msgid "Lower system_clock intrinsic"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:186
msgid "Add support for lowering of the ibset intrinsic"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:187
msgid "Lower transfer instrinsic"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:188
msgid "Lower adjustl and adjustr intrinsics"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:189
msgid "Lower count intrinsic"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:190
msgid "Add lowering for the set_exponent intrinsic"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:192
msgid "Add support for -debug-dump-pft"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:193
msgid "Add support for -S and implement -c/-emit-obj"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:194
msgid "Add support for -mllvm"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:196
msgid "[mlir]Generating enums in accordance with the guidelines"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:197
msgid "Added basic connect to lower OpenMP constructs"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:198
msgid "Support for dump OpenMP/OpenACC declarative directives PFT in module"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:199
msgid "Add OpenMP and OpenACC flags to bbc"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:200
msgid "Allow data transfer stmt control list errors to be caught"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:201
msgid "Extension: don't require commas between most edit descriptors in formats"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:202
msgid "Fix result type of \"procedure(abs) :: f\""
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:203
msgid "Catch READ/WRITE on direct-access file without REC="
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:204
msgid "Honor RECL= in list-directed/namelist output"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:205
msgid "Accommodate module subprograms defined in the same module"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:206
msgid "Extend ProvenanceRange::Suffix() to handle crash case"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:207
msgid "Remove bogus messages for actual/dummy procedure argument compatibility"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:208
msgid "Support PDT type descriptors in codegen"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:209
msgid "Handle optional TARGET associate in ASSOCIATED runtime"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:210
msgid "Generate PDT runtime type info in the type definition scope"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:211
msgid "Accommodate arrays with a zero-extent dimension in location folding"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:212
msgid "Avoid crash case in provenance mapping"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:213
msgid "Make per-argument intrinsic error messages more localized"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:214
msgid "Use faster path for default formatted character input"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:215
msgid "Runtime validation of SPREAD(DIM=dim) argument"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:216
msgid ""
"Make uninitialized allocatable components explicitly NULL() in structure "
"constructors"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:217
msgid "Fix module file missing USE for shadowed derived type"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:218
msgid "Add nonfatal message classes"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:219
msgid "Distinguish usage and portability warning messages"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:220
msgid "Use unix logical representation for fir.logical"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:221
msgid "Fix extent computation in finalization"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:222
msgid "Fix processing ModuleLikeUnit evaluationList"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:223
msgid "Do not return true for pointer sub-object in IsPointerObject"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:224
msgid "Fix DYLIB builds"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:225
msgid "Improve runtime crash messages"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:226
msgid "Add runtime support for GET_COMMAND"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:227
msgid "IEEE_ARITHMETIC must imply USE IEEE_EXCEPTIONS"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:228
msgid "LBOUND() edge case: empty dimension"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:229
msgid "Hanlde COMPLEX 2/3/10 in runtime TypeCode(cat, kind)"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:230
msgid "fulfill -Msave/-fno-automatic in main programs too"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:231
msgid "Relax fir.rebox verifier with characters"
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:241
msgid ""
"The \"State of Fortran\" paper by Kedward et al. has been accepted for "
"publication in the IEEE journal Computing in Science and Engineering "
"(CiSE). You can read the pre-print on "
"[arXiv](https://arxiv.org/abs/2203.15110), or find the paper in Early "
"Access on the [CiSE "
"website](https://ieeexplore.ieee.org/document/9736688)."
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:243
msgid ""
"The contributor application window for this year's [Google Summer of "
"Code](https://summerofcode.withgoogle.com) is approaching fast. It opens "
"**April 4** and closes **April 19**. See the [Fortran-lang GSoC 2022 "
"page](https://summerofcode.withgoogle.com/programs/2022/organizations"
"/fortran-lang) for information about the projects and how to apply. To "
"learn more about GSoC and what has changed since last year, please see "
"the [GSoC 2022 announcement](https://opensource.googleblog.com/2021/11"
"/expanding-google-summer-of-code-in-2022.html). If you'd like to "
"participate, please let us know and we'll help you get started."
msgstr ""

#: ../../source/news/2022/04-07-Fortran-Newsletter-April-2022.md.md:248
msgid ""
"We had our 24th Fortran Monthly call on March 15. You can watch the "
"recording below:"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:7
msgid "Fortran newsletter: May 2022"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:9
msgid ""
"Welcome to the May edition of the monthly Fortran newsletter. The "
"newsletter comes out at the beginning of every month and details Fortran "
"news from the previous month."
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:19
msgid ""
"[#387](https://github.com/fortran-lang/fortran-lang.org/pull/387): "
"Newsletter for April 2022"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:21
msgid ""
"[#389](https://github.com/fortran-lang/fortran-lang.org/pull/389): Add "
"librsb to package index"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:23
msgid ""
"[#390](https://github.com/fortran-lang/fortran-lang.org/pull/390): Add "
"Elk to package index"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:25
msgid ""
"[#391](https://github.com/fortran-lang/fortran-lang.org/pull/391): Add "
"pencil-code to package index"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:27
msgid ""
"[#392](https://github.com/fortran-lang/fortran-lang.org/pull/392): Add "
"PROPACK to package index"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:29
msgid ""
"[#398](https://github.com/fortran-lang/fortran-lang.org/pull/398): Add "
"feed link to HTML head element"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:33
msgid ""
"[#400](https://github.com/fortran-lang/fortran-lang.org/pull/400): fix "
"dependency of include files under `learn/building_programs` mini-book"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:38
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:25
msgid ""
"[#397](https://github.com/fortran-lang/fortran-lang.org/pull/397) (WIP): "
"Add NUFFT to package index"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:40
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:27
msgid ""
"[#396](https://github.com/fortran-lang/fortran-lang.org/pull/396) (WIP): "
"Add OpenFFT to package index"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:42
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:29
msgid ""
"[#395](https://github.com/fortran-lang/fortran-lang.org/pull/395) (WIP): "
"Add 2DECOMP&FFT to package index"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:44
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:31
msgid ""
"[#394](https://github.com/fortran-lang/fortran-lang.org/pull/394) (WIP): "
"Add SLICOT to package index"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:46
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:33
msgid ""
"[#393](https://github.com/fortran-lang/fortran-lang.org/pull/393) (WIP): "
"Add FATODE to package index"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:61
msgid ""
"[#646](https://github.com/fortran-lang/stdlib/pull/646): Export symbols "
"on Windows and set PIC flag for Unix"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:63
msgid ""
"[#651](https://github.com/fortran-lang/stdlib/pull/651): Bugfix release "
"version 0.2.1"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:68
msgid ""
"[#656](https://github.com/fortran-lang/stdlib/pull/656) (WIP): Add hint "
"for building error with make"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:70
msgid ""
"[#655](https://github.com/fortran-lang/stdlib/pull/655) (WIP): fixed "
"32-bit integer overflow in stdlib_io_npy"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:72
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:61
msgid ""
"[#652](https://github.com/fortran-lang/stdlib/pull/652) (WIP): Feature: "
"loadtxt skiprows and max_rows"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:116
msgid ""
"[#688](https://github.com/fortran-lang/fpm/pull/688): Small fix for "
"fpm_model"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:118
msgid "[#665](https://github.com/fortran-lang/fpm/pull/665): add clean command"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:123
msgid ""
"[#693](https://github.com/fortran-lang/fpm/pull/693) (WIP): Fix show-"
"model option"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:125
msgid ""
"[#692](https://github.com/fortran-lang/fpm/pull/692) (WIP): Fix for non-"
"portable GFortran `-J` flag in install script"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:127
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:116
msgid ""
"[#686](https://github.com/fortran-lang/fpm/pull/686) (WIP): fix: remove "
"extra space from help-test cmd"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:167
msgid "Lower various intrinsics:"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:168
msgid ""
"character related intrinsics, array related intrinsics, index intrinsics,"
" present, exit, btest, ceiling, nearest, scale, matmul, trim, transpose, "
"command, environment, repeat, aint, anint, cmplx, conjg, dble, dprod, "
"sign, spacing, rrspacing, merge intrinsics, lbound, ubound, ior, exp, "
"log, log10, sqrt, atan, sinh, cosh, sin, cos, mvbits, achar"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:169
msgid "Add IO lowering test"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:170
msgid "Add more lowering tests for dummy arguments"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:171
msgid "Add equivalence lowering tests"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:172
msgid "Add array constructor lowering tests"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:173
msgid "Lower more array expressions"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:174
msgid "Lower statement function"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:175
msgid "Lower length on character storage"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:176
msgid "Lower select case statement"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:177
msgid "Add OpenMP Conversion patterns"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:178
msgid "Lower procedure designator"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:179
msgid "Lower boxed procedure"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:180
msgid "Flush and master constructs"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:181
msgid "Add lowering C interoperability test"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:182
msgid "Add misc lowering tests"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:183
msgid "Handle zero extent case in LBOUND"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:184
msgid "Lower some coarray statements to their runtime function"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:185
msgid "Options to lower math intrinsics to relaxed, precise variants"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:186
msgid "Lower optionals in GET_COMMAND_ARGUMENT and  GET_ENVIRONMENT_VARIABLE"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:187
msgid "Added lowering support for atomic read and write constructs"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:188
msgid "fix LBOUND lowering with KIND and no DIM arguments"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:189
msgid "Keep fully qualified !fir.heap type for fir.freemem op"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:190
msgid "Update the conversion code for fir.coordinate_of"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:191
msgid "Set lower bounds of array section fir.embox to one"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:192
msgid "Fix fir.embox codegen with constant interior shape"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:193
msgid "Do not fold fir.box_addr when it has a slice"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:195
msgid "Make --version and -version consistent with clang"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:196
msgid "Add support for -mmlir"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:197
msgid "Make the plugin API independent of the driver internals"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:198
msgid "Add support for generating executables"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:200
msgid "Lowering critical construct"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:201
msgid "Added assembly format for omp.wsloop and remove parseClauses"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:202
msgid "Added lowering support for sections construct"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:203
msgid "Added ReductionClauseInterface"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:204
msgid "Added parallel sections translation"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:205
msgid ""
"Revert \"[Flang][OpenMP] Add semantic check for OpenMP Private, "
"Firstprivate and Lastprivate clauses.\""
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:206
msgid "Added allocate clause translation for OpenMP block constructs"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:207
msgid "Support export/import OpenMP Threadprivate Flag"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:208
msgid "Add implementation of privatisation"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:209
msgid "Add checks and tests for hint clause and fix empty hint"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:210
msgid "OpenACC"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:211
msgid "Lower enter data directive"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:212
msgid "Lower exit data directive"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:213
msgid "Lower init/shutdown directive"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:214
msgid "Lower update directive"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:215
msgid "Lower data directive"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:216
msgid "Lower wait directive"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:218
msgid "Error recovery improvement in runtime (IOMSG=)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:219
msgid "Initial UTF-8 support in runtime I/O"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:220
msgid "Ensure PointerDeallocate actually deallocate pointers"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:221
msgid "Add runtime API to catch unit number out of range"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:222
msgid "Prefer process time over thread time in CPU_TIME"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:223
msgid "Raise FP exceptions from runtime conversion to binary"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:224
msgid "Preserve effect of positioning in record in non-advancing output"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:225
msgid "Don't skip input spaces when they are significant"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:226
msgid "Fix ENDFILE for formatted stream output"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:227
msgid "Don't emit empty lines for bad writes"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:228
msgid "Ignore leading spaces even in BZ mode"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:229
msgid "Fix edge-case FP input bugs"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:230
msgid "Enforce some limits on kP scale factors"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:231
msgid "Signal record read overrun when PAD='NO'"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:232
msgid "Fix KIND=16 real/complex component I/O"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:233
msgid "Fix total MAXLOC/MINLOC for non-integer data"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:234
msgid "Handle allocatable components when creating array temps"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:235
msgid "[Parser] Add a node for individual sections in sections construct"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:236
msgid "Add explanatory messages to grammar for language extensions"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:237
msgid ""
"Convert RUNTIME_CHECK to better error for user errors in "
"transformational.cpp"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:238
msgid "Accept legacy aliases for intrinsic function names"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:239
msgid "Expose error recovery cases in external I/O"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:240
msgid "Fix crash: ENTRY with generic interface of the same name"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:241
msgid "Fold DBLE"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:242
msgid "Single construct translation from PFT to FIR"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:243
msgid "UBOUND() edge case: empty dimension"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:244
msgid "Make not yet implemented messages more consistent"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:245
msgid "Fix LBOUND rewrite on descriptor components"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:246
msgid "Ensure descriptor lower bounds are LBOUND compliant"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:247
msgid "Fix cycle-catcher in procedure characterization"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:248
msgid "Fix bogus error from assignment to CLASS(*)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:249
msgid "Mark C_ASSOCIATED specific procedures as PURE"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:250
msgid "Catch bad OPEN(STATUS=) cases"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:251
msgid "Fold NEAREST() and its relatives"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:252
msgid "Prevent undefined behavior in character MAXLOC folding"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:253
msgid "Fix invalid overflow check"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:254
msgid "Skip D when including D debug line"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:255
msgid "Allow user to recover from bad edit descriptor with INTEGER"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:256
msgid "Fold instantiated PDT character component length when needed"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:257
msgid "Add one semantic check for allocatable/pointer argument association"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:258
msgid "[cmake] Make CMake copy \"omp_lib.h\" into the build directory"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:259
msgid "Handle dynamically optional argument in EXIT"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:260
msgid "Fix semantic analysis for \"forall\" targeted by \"label\""
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:261
msgid "Emit a portability warning for padding in COMMON"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:262
msgid "Expand the num_images test coverage"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:263
msgid "Fold IBITS() intrinsic function"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:264
msgid "Error handling for out-of-range CASE values"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:265
msgid "Respect left tab limit with Tn editing after ADVANCE='NO'"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:266
msgid "Allow IMPLICIT NONE(EXTERNAL) with GenericDetails"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:267
msgid "Do not ICE on out-of-range data statement designator"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:268
msgid "Fix ICE for sqrt(0.0) evaluation"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:269
msgid "Fix float-number representation bug"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:270
msgid "Fix intrinsic interface for DIMAG/DCONJG"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:271
msgid "Improve appearance of message attachments"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:272
msgid "Fix combining cases of USE association & generic interfaces"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:273
msgid "Defer all function result type processing"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:274
msgid "Always encode multi-byte output in UTF-8"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:275
msgid "Fix shape analysis of RESHAPE result"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:276
msgid "Use full result range for clock_gettime implementation of SYSTEM_CLOCK"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:277
msgid "Correct interaction between generics and intrinsics"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:278
msgid "Make F0.1 output editing of zero edge case consistent"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:279
msgid "Inner INTRINSIC must not shadow host generic"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:280
msgid "Local generics must not shadow host-associated generics"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:281
msgid "Fix TYPE/CLASS IS (T(...)) in SELECT TYPE"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:282
msgid "Allow modification of construct entities"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:283
msgid "Defer NAMELIST group item name resolution"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:284
msgid "Accept TYPE(intrinsic type) in declarations only for non-extension type"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:285
msgid "Finer control over error recovery with GetExpr()"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:286
msgid "Handle parameter-dependent types in PDT initializers"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:287
msgid "Upgrade short actual character arguments to errors"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:288
msgid "Allow POINTER attribute statement on procedure interfaces"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:289
msgid "Accept KIND type parameter inquiries on RE, IM, etc."
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:290
msgid "Add & use a better visit()"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:291
msgid "Fix regression with recent work on intrinsic/generic interactions"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:292
msgid "Do not pass derived type by descriptor when not needed"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:293
msgid "Fix LBOUND() folding for constant arrays"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:294
msgid "Set LBOUND() folding for (x) expression as ones"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:295
msgid "Semantics limits on kP scale factors"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:296
msgid "Do not ICE on recursive function definition in function result"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:297
msgid "Fold transformational bessels when host runtime has bessels"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:298
msgid "Do not create arith.extui with same from/to type"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:299
msgid "Disambiguate F(X)=Y case where F is a function returning a pointer"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:300
msgid "Avoid global name conflict when BIND(C,NAME=) is used"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:301
msgid "Accept \"INFINITY\" as real input"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:302
msgid "Add semantic checks for intrinsic function REDUCE()"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:303
msgid "Fix crash from PDT component init in module file"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:305
msgid ""
"Call notes are recorded and publicly available "
"[here](https://docs.google.com/document/d/1Z2U5UAtJ-"
"Dag5wlMaLaW1KRmNgENNAYynJqLW2j2AZQ/edit)."
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:311
msgid ""
"[Fixes for intrinsics while compiling `stdlib` using "
"`lfortran`](https://gitlab.com/lfortran/lfortran/-/merge_requests/1718)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:312
msgid ""
"[Draft: Stdlib "
"sprint](https://gitlab.com/lfortran/lfortran/-/merge_requests/1719)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:313
msgid ""
"[Draft: Sprint Compiling stdlib with "
"LFortran](https://gitlab.com/lfortran/lfortran/-/merge_requests/1689)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:317
msgid ""
"[Implementing dead code elemination "
"optimization](https://gitlab.com/lfortran/lfortran/-/merge_requests/1688)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:318
msgid ""
"[Supporting duplication of Function/Subroutine "
"calls](https://gitlab.com/lfortran/lfortran/-/merge_requests/1686)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:319
msgid ""
"[Implementing loop unrolling optimization for fixed sized "
"loops](https://gitlab.com/lfortran/lfortran/-/merge_requests/1681)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:323
msgid ""
"[AST->ASR: Remove "
"current_body](https://gitlab.com/lfortran/lfortran/-/merge_requests/1720)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:324
msgid ""
"[Added support keyword argument in class "
"procedures](https://gitlab.com/lfortran/lfortran/-/merge_requests/1717)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:325
msgid ""
"[Implementing ArrayBound node to replace `lbound`, `ubound` as function "
"calls](https://gitlab.com/lfortran/lfortran/-/merge_requests/1715)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:326
msgid ""
"[Implementing `Block` and "
"`BlockCall`](https://gitlab.com/lfortran/lfortran/-/merge_requests/1714)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:327
msgid ""
"[Made scope private in SymbolTable struct and added interface methods to "
"modify scope](https://gitlab.com/lfortran/lfortran/-/merge_requests/1711)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:328
msgid ""
"[Removing dead code which treats size intrinsic as "
"function](https://gitlab.com/lfortran/lfortran/-/merge_requests/1710)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:329
msgid ""
"[Implementing `ArraySize` node to replace function call to "
"`size`](https://gitlab.com/lfortran/lfortran/-/merge_requests/1708)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:330
msgid ""
"[Fixing "
"adjustl](https://gitlab.com/lfortran/lfortran/-/merge_requests/1707)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:331
msgid ""
"[Implementing "
"AssociateBlock](https://gitlab.com/lfortran/lfortran/-/merge_requests/1706)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:332
msgid ""
"[Move ASR.asdl into the src/libasr "
"directory](https://gitlab.com/lfortran/lfortran/-/merge_requests/1703)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:333
msgid ""
"[Fixing handling of return "
"type](https://gitlab.com/lfortran/lfortran/-/merge_requests/1699)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:334
msgid ""
"[Fill function in FunctionCall of len expr of Character type after "
"completing symbol "
"table](https://gitlab.com/lfortran/lfortran/-/merge_requests/1698)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:335
msgid ""
"[Fixing inline function calls pass to skip "
"intrinsics](https://gitlab.com/lfortran/lfortran/-/merge_requests/1694)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:336
msgid ""
"[Draft: ASR: Add all intrinsic operations into ASR "
"itself](https://gitlab.com/lfortran/lfortran/-/merge_requests/1700)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:339
msgid "**WASM**"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:341
msgid "[Wasm backend](https://gitlab.com/lfortran/lfortran/-/merge_requests/1713)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:342
msgid ""
"[draft: Wasm Intial "
"Base](https://gitlab.com/lfortran/lfortran/-/merge_requests/1704)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:343
msgid ""
"[draft: Compiling LFortran to "
"WASM](https://gitlab.com/lfortran/lfortran/-/merge_requests/1705)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:348
msgid ""
"[bind(c): Fix "
"call_fortran_i64](https://gitlab.com/lfortran/lfortran/-/merge_requests/1723)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:349
msgid ""
"[bind(c): Add tests for i64, f32, "
"f64](https://gitlab.com/lfortran/lfortran/-/merge_requests/1722)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:350
msgid ""
"[Fix a bug in a "
"test](https://gitlab.com/lfortran/lfortran/-/merge_requests/1721)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:351
msgid ""
"[Add a test for calling Fortran from "
"C](https://gitlab.com/lfortran/lfortran/-/merge_requests/1716)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:352
msgid ""
"[Update ASR from "
"LPython](https://gitlab.com/lfortran/lfortran/-/merge_requests/1712)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:353
msgid ""
"[CI: add git "
"safe.directory](https://gitlab.com/lfortran/lfortran/-/merge_requests/1702)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:354
msgid ""
"[Update ASR from "
"LPython](https://gitlab.com/lfortran/lfortran/-/merge_requests/1701)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:355
msgid ""
"[Update ASR from "
"LPython](https://gitlab.com/lfortran/lfortran/-/merge_requests/1696)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:356
msgid ""
"[Adding and Improving "
"tests](https://gitlab.com/lfortran/lfortran/-/merge_requests/1695)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:357
msgid ""
"[Remove --target install and CMAKE_INSTALL_PREFIX from "
"build1.sh](https://gitlab.com/lfortran/lfortran/-/merge_requests/1709)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:363
msgid "[Ubaid Shaikh](https://gitlab.com/shaikhubaid769)"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:369
msgid ""
"We had our 25th Fortran Monthly call on April 22. You can watch the "
"recording below:"
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:372
msgid ""
"Visual Studio Code's popular [Modern "
"Fortran](https://marketplace.visualstudio.com/items?itemName=fortran-lang"
".linter-gfortran) extension joined the [fortran-lang "
"GitHub](https://github.com/fortran-lang/vscode-fortran-support) "
"organization."
msgstr ""

#: ../../source/news/2022/05-05-Fortran-Newsletter-May-2022.md.md:374
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:481
msgid ""
"Join and follow the [Fortran Discourse](https://fortran-"
"lang.discourse.group) to stay tuned with the future meetings."
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:8
msgid "Fortran newsletter: June 2022"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:10
msgid ""
"Welcome to the June edition of the monthly Fortran newsletter. The "
"newsletter comes out at the beginning of every month and details Fortran "
"news from the previous month."
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:18
msgid ""
"[#401](https://github.com/fortran-lang/fortran-lang.org/pull/401): "
"Newsletter May 2022"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:20
msgid ""
"[#403](https://github.com/fortran-lang/fortran-lang.org/pull/403): Add "
"SeisSol to package index"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:48
msgid ""
"[#656](https://github.com/fortran-lang/stdlib/pull/656): Add hint for "
"building error with make"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:50
msgid ""
"[#655](https://github.com/fortran-lang/stdlib/pull/655): fixed 32-bit "
"integer overflow in stdlib_io_npy"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:52
msgid ""
"[#657](https://github.com/fortran-lang/stdlib/pull/657): Remove support "
"for manual make builds"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:57
msgid ""
"[#660](https://github.com/fortran-lang/stdlib/pull/660) (WIP): Fix "
"erroneous gaussian quadrature points in gauss_legendre"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:59
msgid ""
"[#659](https://github.com/fortran-lang/stdlib/pull/659) (WIP): Readme "
"update"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:107
msgid ""
"[#692](https://github.com/fortran-lang/fpm/pull/692): Fix for non-"
"portable GFortran `-J` flag in install script"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:109
msgid ""
"[#693](https://github.com/fortran-lang/fpm/pull/693): Fix show-model "
"option"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:114
msgid ""
"[#701](https://github.com/fortran-lang/fpm/pull/701) (WIP): Some cleanups"
" and minor fixes"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:150
msgid "Initial lowering of the Fortran Do loop"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:151
msgid "Lower Unstructured do loops"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:153
msgid "Define the default frontend driver triple"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:154
msgid "Add support for consuming LLVM IR/BC files"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:155
msgid "Add support for -save-temps"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:156
msgid "Switch to the MLIR coding style in the driver"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:157
msgid "Fix driver method names overridden by the plugins"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:158
msgid "Support parsing response files"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:159
msgid "Make driver accept -module-dir<value>"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:160
msgid "Add support for generating executables on MacOSX/Darwin"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:162
msgid "Add lowering stubs for OpenMP/OpenACC declarative constructs"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:163
msgid "Added tests for taskwait and taskyield translation"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:164
msgid "Restrict types for omp.parallel args"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:165
msgid "Add omp.cancel and omp.cancellationpoint."
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:166
msgid "Initial lowering of the OpenMP worksharing loop"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:167
msgid "Lowering for task construct"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:168
msgid "Support lowering to MLIR for ordered clause"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:169
msgid "Support for Collapse"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:170
msgid "Upstream the lowering of the parallel do combined construct"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:171
msgid "Fix the types of worksharing-loop variables"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:172
msgid "Change the OpenMP atomic read/write test cases"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:174
msgid "Correct emission & reading of unterminated final records"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:175
msgid "Support B/O/Z editing of CHARACTER"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:176
msgid "Use 1-based dim in transformational runtime error msg"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:177
msgid "Change \"unsupported\" messages in the runtime to \"not yet implemented\""
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:178
msgid "Fix input of NAN(...) on non-fast path"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:179
msgid "Don't pad CHARACTER input at end of record unless PAD='YES'"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:180
msgid "Enforce restrictions on unlimited format repetition"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:181
msgid "(G0) for CHARACTER means (A), not (A0)"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:182
msgid "BACKSPACE after non-advancing I/O"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:183
msgid "Use proper prototypes in Fortran_main. NFCI"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:184
msgid "Clean up asynchronous I/O APIs"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:185
msgid "INQUIRE(UNIT=666,NUMBER=n) must set n=666"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:186
msgid "Handle BACKSPACE after reading past EOF"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:187
msgid "Fix MAXLOC/MINLOC when MASK is scalar .FALSE."
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:188
msgid "Fix UBOUND() constant folding for parentheses expr"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:189
msgid "Support FINDLOC/MAXLOC/MINLOC with scalar mask"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:190
msgid "Handle common block with different sizes in same file"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:191
msgid "Add one semantic check for implicit interface"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:192
msgid "Fix semantics check for RETURN statement"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:193
msgid "Fix ICE for passing a label for non alternate return arguments"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:194
msgid "Add ExternalNameConversionPass to pass pipeline"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:195
msgid "Fix AllocaOp/AllocMemOp type conversion"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:196
msgid ""
"Support external procedure passed as actual argument with implicit "
"character type"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:197
msgid "Fix internal error with DATA-statement style initializers"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:198
msgid "Upstream support for POINTER assignment in FORALL"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:199
msgid "Enforce a program not including more than one main program"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:200
msgid "Retain binding label of entry subprograms"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:201
msgid "Fold intrinsic inquiry functions SAME_TYPE_AS() and EXTENDS_TYPE_OF()"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:202
msgid "Fold intrinsic functions SPACING() and RRSPACING()"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:203
msgid "Operands of SIGN() need not have same kind"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:204
msgid "Correct folding of SPREAD() for higher ranks"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:205
msgid "Refine handling of short character actual arguments"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:206
msgid "Ensure that structure constructors fold parameter references"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:207
msgid ""
"Correct actual/dummy procedure compatibility for ALLOCATABLE/POINTER "
"functions"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:208
msgid "Allow PDTs with LEN parameters in REDUCE()"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:209
msgid "Allow NULL() actual argument for optional dummy procedure"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:210
msgid "Allow implicit declaration of DATA objects in inner procedures"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:211
msgid "Refine error checking in specification expressions"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:212
msgid "Reverse a reversed type compatibility check"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:213
msgid "Accept POINTER followed by INTERFACE"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:214
msgid "Allow ENTRY function result symbol usage before the ENTRY"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:215
msgid "Fold real-valued DIM(), MODULO() and MOD()"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:216
msgid "Enforce limit on rank + corank"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:217
msgid ""
"Allow local variables and function result inquiries in specification "
"expressions"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:218
msgid "Change \"bad kind\" messages in the runtime to \"not yet implemented\""
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:219
msgid "Fold complex component references"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:220
msgid "Fix check for assumed-size arguments to SHAPE() & al."
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:221
msgid ""
"Fix a performance problem with lowering of forall loops and creating too "
"many temporaries"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:222
msgid "Warn for the limit on name length"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:223
msgid "Install Fortran_main library"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:224
msgid "test conforming & non-conforming lcobound"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:225
msgid "Fix use-associated false-positive error"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:226
msgid "Fix character length calculation for Unicode component"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:227
msgid "Allow global scope names that clash with intrinsic modules"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:228
msgid "Ignore BIND(C) binding name conflicts of inner procedures"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:229
msgid "Allow more forward references to ENTRY names"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:230
msgid "Extension: Accept Hollerith actual arguments as if they were BOZ"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:231
msgid "Alternate entry points with unused arguments"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:232
msgid "Fix crash in semantics after PDT instantiation"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:237
msgid "Gagandeep Singh (106):"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:238
msgid "Factored out visit_Declaration to visit_DeclarationUtil in CommonVisitor"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:239
msgid "Added test for kwargs in class procedure"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:240
msgid "Added support for kwargs in class procedures"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:241
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:246
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:252
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:257
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:266
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:270
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:272
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:275
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:280
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:285
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:290
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:292
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:297
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:300
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:302
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:305
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:308
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:310
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:314
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:320
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:334
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:337
msgid "Updated reference tests"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:242
msgid "Added support for i32 and i64 in repeat"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:243
msgid "Added mergechar in merge interface"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:244
msgid "Added is_iostat_eor"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:245
msgid "Removed compulsory evaluation of ishft"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:247
msgid ""
"Use intrinsic type checking in assignment only when operator overloading "
"fails"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:248
msgid "Perform casting in Compare only when overloaded is not available"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:249
msgid "Set dest_type and source_type even though casting doesn't happen"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:250
msgid "Use kind_value to generate type in ArraySize"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:251
msgid "Added test for verifying SemanticError in case of non-constant kind input"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:253
msgid "Add AssociateBlock and Block in serialization.cpp"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:254
msgid "Include associate_06 in the integration_tests/CMakeLists.txt"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:255
msgid "Take into account output kind in LLVM's ArraySize visitor"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:256
msgid "Added test for different output kinds in ArraySize"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:258
msgid "Import procedures for overloaded operators as well"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:259
msgid "Fixed tests for compiling correctly with gfortran"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:260
msgid "Mangle name before importing procedures under generic procs"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:261
msgid "Merged master into sprint_6"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:262
msgid "Avoid manual imports while using overloaded symbols"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:263
msgid "Remove symbol from to_be_imported_later"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:264
msgid ""
"Added support for keyword arguments in generic procedures and fix total "
"arguments"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:265
msgid "Added test for generic procedures with keyword arguments"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:267
msgid "Added intrinsics: congjz, dotproduct and updated: merge"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:268
msgid "Added matmul, transpose as ASR nodes"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:269
msgid "Added tests for matmul and transpose"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:271
msgid "Added merge, dotproduct procedures for complex type"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:273
msgid "Add support for source kwarg in allocate"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:274
msgid "Updated test for verifying source argument"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:276
msgid ""
"Registered shiftr, shiftl, adjustr, lgt, llt, lge, lle, count in "
"comptime_eval.h"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:277
msgid "Added shiftl, shiftr and count"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:278
msgid "Added more implementations for abs, mod"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:279
msgid "Added adjustr, lgt, llt, lle, lge for string type"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:281
msgid "Registered ieee_is_nan in comptime_eval.h"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:282
msgid "Added support for pack intrinsic"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:283
msgid "Added support for transfer intrinsic"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:284
msgid "Use modern Fortran syntax for array constants"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:286
msgid "ArrayTransfer -> Transfer rename"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:287
msgid "Added generation code for expression replacer"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:288
msgid "Added ReplaceArgVisitor and generalised handle_return_type"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:289
msgid "Added tests for verifying arg replacer in return types"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:291
msgid "Added cmplx via ComplexConstructor node"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:293
msgid "Import via use inside Function"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:294
msgid "Added support for matching Derived/ClassType"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:295
msgid "Added support for falling back to intrinsic"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:296
msgid "Added to test verify importing procedures inside function"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:298
msgid "Added support for passing kind parameter to floor intrinsic"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:299
msgid ""
"Use CPtr for variables declared with type(c_ptr) 2. Set "
"Module_t.m_intrinsic in set_intrinsic 3. Add CPtr in "
"extract_dimensions_from_ttype"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:301
msgid "Added LLVM support for CLoc, CPtr"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:303
msgid "Added integration test for c_f_pointer"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:304
msgid "Added support for c_f_pointer"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:306
msgid "Added error checking for presence of shape argument in c_f_pointer call"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:307
msgid "Fixed ArrayConstant type and raise error is shape is not rank 1"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:309
msgid "Implemented c_f_pointer for non-array variables"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:311
msgid "Added test with pointer array variables"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:312
msgid "Shifted type generation to a function in LLVM backend"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:313
msgid "Corrected llvm::Type* for array pointer variables"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:315
msgid ""
"Fixed ArrayBound for array pointers 2. Shifted argument type generation "
"to a function and use recursion for Pointer"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:316
msgid "Added support for printing Pointer type"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:317
msgid ""
"Added AssociateBlock symbol in PassVisitor 2. Fixed get_bound to return "
"ArrayBound instead of a function call"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:318
msgid "Use element type in ArrayRef instead of pointer"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:319
msgid "Syntax improvement"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:321
msgid "Removed warnings"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:322
msgid "Adjust ArrayBound for ArrayConstant"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:323
msgid "Corrected arrays_13 by making iv, rv as target"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:324
msgid "Stronger verification checks for CFPointer creation"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:325
msgid "Support for array inputs in CFPointer"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:326
msgid "Improved bindc2 for array inputs in c_f_pointer"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:327
msgid ""
"Fixed ArraySize for array pointer variables in LLVM backend. 2. Improved "
"CFPointer in LLVM backend to not interfere with already stored array in "
"array pointer variables 3. Improved bindc2.f90 and made it robust to "
"cover more cases. 4. Updated reference tests"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:328
msgid "Fixed unused variable warnings in llvm_utils.cpp"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:329
msgid "Use abstract methods in CFPointer for accessing array descriptor data"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:330
msgid "Added test for ArrayRef in c_loc"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:331
msgid "Minor update in bindc2 and bindc3"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:332
msgid "Fixed Complex case in duplicate type and intialise type at declaration"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:333
msgid "Added support ArrayRef in CLoc in LLVM backend"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:335
msgid ""
"Added support for CPtr in arguments and fixed llvm::Type for intent(out) "
"for CPtr 2. Added support for constant arrays as shape in c_f_pointer"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:336
msgid "Updated bindc4 for verifying constant arrays in c_f_pointer"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:339
msgid "Naman Gera (1):"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:340
msgid "Update the C runtime library"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:342
msgid "Ondřej Čertík (136):"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:343
msgid "AST->ASR: Remove current_body"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:344
msgid "Fix a bug in a test"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:345
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:350
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:352
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:355
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:359
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:361
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:364
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:373
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:376
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:383
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:391
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:406
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:409
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:427
msgid "Update tests"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:346
msgid "bind(c): Add tests for i64, f32, f64"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:347
msgid "Update modules_18b.f90 to compile"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:348
msgid "Add tests for the other types"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:349
msgid "Comment out a non-working case"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:351
msgid "bind(c): Fix call_fortran_i64"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:353
msgid "bind(c): Add a test for i32 by value"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:354
msgid "LLVM: implement value arguments in bind(c) procs"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:356
msgid "Make modules_18b.f90 compile"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:357
msgid "bind(c): test i64, f32, f64 by value"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:358
msgid "Update modules_18b to compile"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:360
msgid "ASR: Bring updates from LPython"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:362
msgid "ASR: Updates from LPython"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:363
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:426
msgid "Update the rest of the code to compile"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:365
msgid "C++ backend: implement ComplexConstructor"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:366
msgid "Add the simplest test for submodules"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:367
msgid "Add Logical to nested_vars"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:368
msgid "Workaround a cmake bug"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:369
msgid "Add a test for bind(c) with pointers"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:370
msgid "Rework the AST->ASR handling of floor()"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:371
msgid "Implement is_intrinsic_symbol()"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:372
msgid "Refactor floor() into lfortran_intrinsic_math3"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:374
msgid "Add a test case for imported derived type"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:375
msgid "Add value to all expr nodes except Constant"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:377
msgid "Implement expr_type() using ExprTypeVisitor"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:378
msgid "Implement expr_value() using ExprValueVisitor"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:379
msgid "iso_c_binding: add the c_loc() function"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:380
msgid "Allow derived types as return values"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:381
msgid "ASR: Represent c_loc()"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:382
msgid "Add ASR test for c_loc()"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:384
msgid "ASR: Add string conversion for derived type"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:385
msgid "Add a CPtr() type"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:386
msgid "Make c_loc() return CPtr"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:387
msgid "LLVM: handle CPtr in convert_args()"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:388
msgid "LLVM: Comment out visit_CFPointer (WIP)"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:389
msgid "CI: pin mkdocs-material and mkdocs versions"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:390
msgid "Fix spelling"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:392
msgid "Shorten the help for --show-wat to fit 80 columns"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:393
msgid "Git ignore wasm_visitor.h"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:394
msgid "Move emit_wat out of LLVM ifdef"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:395
msgid "Generate wasm_visitor.h in ci/build.xsh"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:396
msgid "Enable WAT tests in run_tests.py"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:397
msgid "Add a test for WASM"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:398
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:443
#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:446
msgid "Update reference tests"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:399
msgid "Implement FortranEvaluator::get_wasm()"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:400
msgid "Use asr_to_wasm_bytes_stream() in asr_to_wasm"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:401
msgid "WASM: Add 64 bit BinOp operations"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:402
msgid "WASM: handle i64 arguments"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:403
msgid "WASM: Add a test for i64"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:404
msgid "Move the wasm_instructions_visitor.py to libasr"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:405
msgid "Update ASR from LPython"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:407
msgid "Bring more ASR improvements from LPython"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:408
msgid "Bring in name mangling"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:410
msgid "Add a test for passing through pointers via C"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:411
msgid "LLVM: implement debug ASR printing"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:412
msgid "LLVM: Use `deftype` to implement interfaces"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:413
msgid "LLVM: Pass type(c_ptr) by value properly"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:414
msgid "Pass \"n\" by reference for now"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:415
msgid "Pass arguments by value for bind(c)"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:416
msgid "Only do the load if it is a pointer"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:417
msgid "LLVM: Use an ASR condition instead of LLVM one"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:418
msgid "lfortran_intrinsic_string: depend iso_fortran_env"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:419
msgid "Enable bindc_01 LLVM test"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:420
msgid "Add a test for pointer argument"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:421
msgid "Add suffixes 1/2"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:422
msgid "Add a callback2b test"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:423
msgid "Add a test for callback1b()"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:424
msgid "Get value to reference argument working"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:425
msgid "Port ASR improvements from LPython"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:428
msgid "ASR sync with LPython"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:430
msgid "Tapasweni Pathak (9):"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:431
msgid "Add markdown sample for intrinsic:math:asin"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:432
msgid "Add doxygen docstring in lfortran intrinsic runtime asin"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:433
msgid "Add comments for interface asin"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:434
msgid "Add doxygen comment for lfortran_sasin_api"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:435
msgid "Enhance presentation of information"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:436
msgid "use retval for return values variable"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:437
msgid "delete fortran doxygen comments docs"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:438
msgid "mkdocs: LFortran Intrinsics: asin"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:439
msgid "add: mkdocs: code syntax highlighting"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:441
msgid "Ubaid (24):"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:442
msgid "Improve ceiling() test case"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:444
msgid "Specifying constants as double precision"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:445
msgid "Update error condition check as suggested"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:447
msgid "Code formatting"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:448
msgid "Add and improve namespace ending comments"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:449
msgid "Add wasm_instructions list"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:450
msgid "Comment out few instructions that have temporary variables"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:451
msgid "Add wasm_instructions_visitor script"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:452
msgid ""
"Add namespace related info and pass code as function parameter in "
"wasm_insts_visitor script"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:453
msgid "Add command in build0.sh to generate wasm_visitor.h"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:454
msgid "Add utility struct and functions defined in wasm_utils"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:455
msgid "Add wasm_to_wat converter"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:456
msgid "Include wasm_to_wat and wasm_utils in CMakeLists.txt"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:457
msgid "Define vector.resize()"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:458
msgid "Add --show-wat flag and emit_wat() function"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:459
msgid "Declare and define get_wat() in fortran_evaluator"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:460
msgid ""
"Declare and define asr_to_wasm_bytes_stream() which stores wasm binary to"
" memory"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:461
msgid "Fix warning by adding U and add comment"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:462
msgid "Fix missing parameters bug"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:463
msgid "Switch off WAT_DEBUG macro"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:464
msgid "Remove debugging cout statements"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:465
msgid "Move load_file() to top"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:471
msgid ""
"The Fortran-lang Google Summer of Code 2022 program began on May 23. We "
"welcome five contributors: Arteev Raina, Ashirwad Mishra, Henil Shalin "
"Panchal, Mohd Ubaid Shaikh, and Oshanath Rajawasam. They will be working "
"on exciting projects from fpm and the Fortran website to improving the "
"LFortran compiler. Read more about their projects "
"[here](https://summerofcode.withgoogle.com/programs/2022/organizations"
"/fortran-lang)."
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:477
msgid "We had our 26th Fortran Monthly call on May 16. Watch the recording below:"
msgstr ""

#: ../../source/news/2022/06-09-Fortran-Newsletter-June-2022.md.md:502
msgid ""
"[fortran-lang/vscode-fortran-support](https://github.com/fortran-lang"
"/vscode-fortran-support)"
msgstr ""

#: ../../source/packages.md:5
msgid "Packages - The Fortran Programming Language"
msgstr ""

#: ../../source/packages.md:9
msgid "Fortran Packages"
msgstr ""

#: ../../source/packages.md:13 ../../source/packages/data-types.md:6
#: ../../source/packages/examples.md:6 ../../source/packages/graphics.md:6
#: ../../source/packages/interfaces.md:6 ../../source/packages/io.md:6
#: ../../source/packages/libraries.md:6 ../../source/packages/numerical.md:6
#: ../../source/packages/programming.md:6 ../../source/packages/scientific.md:6
#: ../../source/packages/strings.md:6
msgid "A rich ecosystem of high-performance code"
msgstr ""

#: ../../source/packages.md:18
msgid "Find a Package"
msgstr ""

#: ../../source/packages.md:30
msgid "Package index"
msgstr ""

#: ../../source/packages.md:34
msgid ""
"The fortran-lang package index is community-maintained and lists open "
"source Fortran-related projects.This includes large-scale scientific "
"applications,function libraries, Fortran interfaces, and developer "
"tools.<br> See [here](../community/packages/) for how to get your project"
" listed.  <br> Use the box above to search the package index by keyword, "
"package name, or author username."
msgstr ""

#: ../../source/packages.md:45
msgid "Featured topics"
msgstr ""

#: ../../source/packages.md:50
msgid ""
"<a href='../search/index.html?q=mpi'>mpi,</a> <a "
"href='../search/index.html?q=electronic-structure'>electronic-"
"structure,</a> <a href='../search/index.html?q=molecular-dynamics"
"'>molecular-dynamics,</a> <a href='../search/index.html?q=quantum-"
"chemistry'>quantum-chemistry,</a> <a href='../search/index.html?q=linear-"
"algebra'>linear-algebra,</a> <a "
"href='../search/index.html?q=openmp'>openmp,</a> <a "
"href='../search/index.html?q=hpc'>hpc,</a> <a "
"href='../search/index.html?q=ode'>ode,</a> <a "
"href='../search/index.html?q=density-functional-theory'>density-"
"functional-theory,</a> <a "
"href='../search/index.html?q=python'>python,</a> <a "
"href='../search/index.html?q=gpu'>gpu,</a> <a "
"href='../search/index.html?q=interpolation'>interpolation,</a> <a "
"href='../search/index.html?q=parallel'>parallel,</a> <a "
"href='../search/index.html?q=runge'>runge,</a> <a "
"href='../search/index.html?q=kutta'>kutta,</a> <a "
"href='../search/index.html?q=physics'>physics,</a> <a "
"href='../search/index.html?q=cfd'>cfd,</a> <a "
"href='../search/index.html?q=computational-fluid-dynamics'>computational-"
"fluid-dynamics,</a> <a href='../search/index.html?q=computational-"
"chemistry'>computational-chemistry,</a> <a "
"href='../search/index.html?q=parser'>parser,</a> <a "
"href='../search/index.html?q=testing'>testing,</a> <a "
"href='../search/index.html?q=lua'>lua,</a> <a "
"href='../search/index.html?q=integral'>integral,</a> <a "
"href='../search/index.html?q=integration'>integration,</a> <a "
"href='../search/index.html?q=finite'>finite,</a> <a "
"href='../search/index.html?q=fft'>fft,</a> <a "
"href='../search/index.html?q=spline'>spline,</a> <a "
"href='../search/index.html?q=hdf5'>hdf5,</a> <a "
"href='../search/index.html?q=array'>array,</a> <a "
"href='../search/index.html?q=errors'>errors,</a> <a "
"href='../search/index.html?q=random'>random,</a> <a "
"href='../search/index.html?q=unit'>unit,</a> <a "
"href='../search/index.html?q=list'>list,</a> <a "
"href='../search/index.html?q=posix'>posix,</a> <a "
"href='../search/index.html?q=cpp'>cpp,</a> <a "
"href='../search/index.html?q=formatter'>formatter,</a> <a "
"href='../search/index.html?q=interface-generator'>interface-"
"generator,</a> <a href='../search/index.html?q=container'>container,</a> "
"<a href='../search/index.html?q=hash'>hash,</a> <a "
"href='../search/index.html?q=table'>table,</a> <a "
"href='../search/index.html?q=split'>split,</a> <a "
"href='../search/index.html?q=json'>json,</a> <a "
"href='../search/index.html?q=interface'>interface,</a> <a "
"href='../search/index.html?q=contour'>contour,</a> <a "
"href='../search/index.html?q=pde'>pde,</a> <a "
"href='../search/index.html?q=coarray'>coarray,</a> <a "
"href='../search/index.html?q=acm-toms'>acm-toms,</a> <a "
"href='../search/index.html?q=element'>element,</a> <a "
"href='../search/index.html?q=turbulence'>turbulence,</a> <a "
"href='../search/index.html?q=fluid-dynamics'>fluid-dynamics,</a>"
msgstr ""

#: ../../source/packages.md:56
msgid "Browse Packages by Category"
msgstr ""

#: ../../source/packages.md:59
msgid "[Data types and containers](../packages/data-types)"
msgstr ""

#: ../../source/packages.md:61 ../../source/packages/data-types.md:9
msgid "Libraries for advanced data types and container classes"
msgstr ""

#: ../../source/packages.md:63
msgid "[Interface libraries](../packages/interfaces)"
msgstr ""

#: ../../source/packages.md:65 ../../source/packages/interfaces.md:9
msgid "Libraries that interface with other systems, languages, or devices"
msgstr ""

#: ../../source/packages.md:67
msgid "[Libraries](../packages/libraries)"
msgstr ""

#: ../../source/packages.md:69 ../../source/packages/libraries.md:9
msgid "Fortran libraries for general programming tasks"
msgstr ""

#: ../../source/packages.md:71
msgid "[Input, output and parsing](../packages/io)"
msgstr ""

#: ../../source/packages.md:73 ../../source/packages/io.md:9
msgid "Libraries for reading, writing and parsing files and inputs"
msgstr ""

#: ../../source/packages.md:75
msgid "[Graphics, plotting and user interfaces](../packages/graphics)"
msgstr ""

#: ../../source/packages.md:77 ../../source/packages/graphics.md:9
msgid ""
"Libraries for plotting data, handling images and generating user "
"interfaces"
msgstr ""

#: ../../source/packages.md:79
msgid "[Examples and templates](../packages/examples)"
msgstr ""

#: ../../source/packages.md:81 ../../source/packages/examples.md:9
msgid "Demonstration codes and templates for Fortran"
msgstr ""

#: ../../source/packages.md:83
msgid "[Numerical projects](../packages/numerical)"
msgstr ""

#: ../../source/packages.md:85 ../../source/packages/numerical.md:9
msgid "Fortran libraries for linear algebra, optimization, root-finding etc."
msgstr ""

#: ../../source/packages.md:87
msgid "[Programming utilities](../packages/programming)"
msgstr ""

#: ../../source/packages.md:89 ../../source/packages/programming.md:9
msgid "Error handling, logging, documentation and testing"
msgstr ""

#: ../../source/packages.md:91
msgid "[Characters and strings](../packages/strings)"
msgstr ""

#: ../../source/packages.md:93 ../../source/packages/strings.md:9
msgid "Libraries for manipulating characters and strings"
msgstr ""

#: ../../source/packages.md:95
msgid "[Scientific Codes](../packages/scientific)"
msgstr ""

#: ../../source/packages.md:97 ../../source/packages/scientific.md:9
msgid ""
"Applications and libraries for applied mathematical and scientific "
"problems"
msgstr ""

#: ../../source/packages.md:99 ../../source/packages/data-types.md:47
#: ../../source/packages/examples.md:47 ../../source/packages/graphics.md:47
#: ../../source/packages/interfaces.md:47 ../../source/packages/io.md:47
#: ../../source/packages/libraries.md:47 ../../source/packages/numerical.md:47
#: ../../source/packages/programming.md:47
#: ../../source/packages/scientific.md:47 ../../source/packages/strings.md:47
msgid ""
"See [package index guidelines](../community/packages) for how to get your"
" project listed."
msgstr ""

#: ../../source/packages/data-types.md:2 ../../source/packages/examples.md:2
#: ../../source/packages/graphics.md:2 ../../source/packages/interfaces.md:2
#: ../../source/packages/io.md:2 ../../source/packages/libraries.md:2
#: ../../source/packages/numerical.md:2 ../../source/packages/programming.md:2
#: ../../source/packages/scientific.md:2 ../../source/packages/strings.md:2
msgid "Featured Open Source Projects"
msgstr ""

#: ../../source/packages/data-types.md:14 ../../source/packages/libraries.md:14
#: ../../source/packages/programming.md:44 ../../source/packages/strings.md:14
msgid "[coretran](https://github.com/leonfoks/coretran)"
msgstr ""

#: ../../source/packages/data-types.md:15 ../../source/packages/libraries.md:15
#: ../../source/packages/programming.md:45 ../../source/packages/strings.md:15
msgid ""
"Core fortran routines and object-oriented classes for sorting, kD-Trees, "
"and other algorithms to handle scientific data and concepts"
msgstr ""

#: ../../source/packages/data-types.md:17 ../../source/packages/libraries.md:17
#: ../../source/packages/programming.md:47 ../../source/packages/strings.md:17
msgid ""
"Tags: dynamic array formatting debugging errors kdtree sorting random "
"binary search strings unit testing timing"
msgstr ""

#: ../../source/packages/data-types.md:19 ../../source/packages/libraries.md:19
#: ../../source/packages/programming.md:49 ../../source/packages/strings.md:19
msgid ""
"![Release](https://img.shields.io/github/v/release/leonfoks/coretran?color=green)"
" ![license](https://img.shields.io/github/license/leonfoks/coretran) "
"![stars](https://img.shields.io/github/stars/leonfoks/coretran) "
"![forks](https://img.shields.io/github/forks/leonfoks/coretran) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/leonfoks/coretran?color=blue) "
"![issues](https://img.shields.io/github/issues/leonfoks/coretran?color=yellow)"
msgstr ""

#: ../../source/packages/data-types.md:19
#: ../../source/packages/data-types.md:34
#: ../../source/packages/data-types.md:49
#: ../../source/packages/data-types.md:64
#: ../../source/packages/data-types.md:88
#: ../../source/packages/data-types.md:103
#: ../../source/packages/data-types.md:118
#: ../../source/packages/data-types.md:133
#: ../../source/packages/data-types.md:148
#: ../../source/packages/data-types.md:163 ../../source/packages/examples.md:19
#: ../../source/packages/examples.md:34 ../../source/packages/examples.md:49
#: ../../source/packages/examples.md:64 ../../source/packages/examples.md:79
#: ../../source/packages/examples.md:94 ../../source/packages/graphics.md:28
#: ../../source/packages/graphics.md:43 ../../source/packages/graphics.md:58
#: ../../source/packages/graphics.md:73 ../../source/packages/graphics.md:88
#: ../../source/packages/graphics.md:103 ../../source/packages/graphics.md:127
#: ../../source/packages/interfaces.md:28
#: ../../source/packages/interfaces.md:43
#: ../../source/packages/interfaces.md:58
#: ../../source/packages/interfaces.md:80
#: ../../source/packages/interfaces.md:95
#: ../../source/packages/interfaces.md:110
#: ../../source/packages/interfaces.md:125
#: ../../source/packages/interfaces.md:140
#: ../../source/packages/interfaces.md:155
#: ../../source/packages/interfaces.md:170
#: ../../source/packages/interfaces.md:185
#: ../../source/packages/interfaces.md:200
#: ../../source/packages/interfaces.md:215
#: ../../source/packages/interfaces.md:230
#: ../../source/packages/interfaces.md:254
#: ../../source/packages/interfaces.md:269
#: ../../source/packages/interfaces.md:302
#: ../../source/packages/interfaces.md:317
#: ../../source/packages/interfaces.md:332
#: ../../source/packages/interfaces.md:347
#: ../../source/packages/interfaces.md:362
#: ../../source/packages/interfaces.md:377
#: ../../source/packages/interfaces.md:410
#: ../../source/packages/interfaces.md:425
#: ../../source/packages/interfaces.md:440
#: ../../source/packages/interfaces.md:453 ../../source/packages/io.md:19
#: ../../source/packages/io.md:34 ../../source/packages/io.md:49
#: ../../source/packages/io.md:64 ../../source/packages/io.md:79
#: ../../source/packages/io.md:92 ../../source/packages/io.md:107
#: ../../source/packages/io.md:122 ../../source/packages/io.md:137
#: ../../source/packages/io.md:152 ../../source/packages/io.md:167
#: ../../source/packages/io.md:182 ../../source/packages/io.md:197
#: ../../source/packages/io.md:212 ../../source/packages/io.md:225
#: ../../source/packages/io.md:240 ../../source/packages/io.md:255
#: ../../source/packages/io.md:270 ../../source/packages/io.md:285
#: ../../source/packages/io.md:300 ../../source/packages/io.md:313
#: ../../source/packages/io.md:328 ../../source/packages/io.md:343
#: ../../source/packages/io.md:358 ../../source/packages/libraries.md:19
#: ../../source/packages/libraries.md:34 ../../source/packages/libraries.md:49
#: ../../source/packages/libraries.md:64 ../../source/packages/libraries.md:79
#: ../../source/packages/libraries.md:94 ../../source/packages/libraries.md:109
#: ../../source/packages/libraries.md:124
#: ../../source/packages/libraries.md:139
#: ../../source/packages/libraries.md:154
#: ../../source/packages/libraries.md:169
#: ../../source/packages/libraries.md:184
#: ../../source/packages/libraries.md:199 ../../source/packages/numerical.md:28
#: ../../source/packages/numerical.md:43 ../../source/packages/numerical.md:58
#: ../../source/packages/numerical.md:73 ../../source/packages/numerical.md:88
#: ../../source/packages/numerical.md:103
#: ../../source/packages/numerical.md:118
#: ../../source/packages/numerical.md:133
#: ../../source/packages/numerical.md:157
#: ../../source/packages/numerical.md:172
#: ../../source/packages/numerical.md:187
#: ../../source/packages/numerical.md:202
#: ../../source/packages/numerical.md:217
#: ../../source/packages/numerical.md:232
#: ../../source/packages/numerical.md:247
#: ../../source/packages/numerical.md:262
#: ../../source/packages/numerical.md:277
#: ../../source/packages/numerical.md:292
#: ../../source/packages/numerical.md:307
#: ../../source/packages/numerical.md:322
#: ../../source/packages/numerical.md:337
#: ../../source/packages/numerical.md:361
#: ../../source/packages/numerical.md:376
#: ../../source/packages/numerical.md:391
#: ../../source/packages/numerical.md:406
#: ../../source/packages/numerical.md:430
#: ../../source/packages/numerical.md:445
#: ../../source/packages/numerical.md:469
#: ../../source/packages/numerical.md:493
#: ../../source/packages/numerical.md:508
#: ../../source/packages/numerical.md:523
#: ../../source/packages/numerical.md:538
#: ../../source/packages/numerical.md:562
#: ../../source/packages/numerical.md:577
#: ../../source/packages/numerical.md:592
#: ../../source/packages/numerical.md:607
#: ../../source/packages/numerical.md:620
#: ../../source/packages/numerical.md:635
#: ../../source/packages/numerical.md:650
#: ../../source/packages/numerical.md:665
#: ../../source/packages/numerical.md:680
#: ../../source/packages/numerical.md:695
#: ../../source/packages/numerical.md:710
#: ../../source/packages/numerical.md:734
#: ../../source/packages/programming.md:19
#: ../../source/packages/programming.md:34
#: ../../source/packages/programming.md:49
#: ../../source/packages/programming.md:64
#: ../../source/packages/programming.md:77
#: ../../source/packages/programming.md:101
#: ../../source/packages/programming.md:116
#: ../../source/packages/programming.md:131
#: ../../source/packages/programming.md:155
#: ../../source/packages/programming.md:170
#: ../../source/packages/programming.md:185
#: ../../source/packages/programming.md:200
#: ../../source/packages/programming.md:215
#: ../../source/packages/programming.md:239
#: ../../source/packages/programming.md:254
#: ../../source/packages/programming.md:269
#: ../../source/packages/programming.md:284
#: ../../source/packages/programming.md:299
#: ../../source/packages/programming.md:314
#: ../../source/packages/programming.md:338
#: ../../source/packages/scientific.md:28
#: ../../source/packages/scientific.md:43
#: ../../source/packages/scientific.md:58
#: ../../source/packages/scientific.md:73
#: ../../source/packages/scientific.md:88
#: ../../source/packages/scientific.md:101
#: ../../source/packages/scientific.md:116
#: ../../source/packages/scientific.md:131
#: ../../source/packages/scientific.md:146
#: ../../source/packages/scientific.md:161
#: ../../source/packages/scientific.md:176
#: ../../source/packages/scientific.md:191
#: ../../source/packages/scientific.md:206
#: ../../source/packages/scientific.md:221
#: ../../source/packages/scientific.md:234
#: ../../source/packages/scientific.md:249
#: ../../source/packages/scientific.md:264
#: ../../source/packages/scientific.md:279
#: ../../source/packages/scientific.md:294
#: ../../source/packages/scientific.md:316
#: ../../source/packages/scientific.md:329
#: ../../source/packages/scientific.md:344
#: ../../source/packages/scientific.md:359
#: ../../source/packages/scientific.md:374
#: ../../source/packages/scientific.md:389
#: ../../source/packages/scientific.md:404
#: ../../source/packages/scientific.md:419
#: ../../source/packages/scientific.md:434
#: ../../source/packages/scientific.md:449
#: ../../source/packages/scientific.md:464
#: ../../source/packages/scientific.md:479
#: ../../source/packages/scientific.md:494
#: ../../source/packages/scientific.md:509
#: ../../source/packages/scientific.md:533
#: ../../source/packages/scientific.md:555
#: ../../source/packages/scientific.md:570
#: ../../source/packages/scientific.md:585
#: ../../source/packages/scientific.md:600
#: ../../source/packages/scientific.md:615
#: ../../source/packages/scientific.md:630
#: ../../source/packages/scientific.md:645
#: ../../source/packages/scientific.md:660
#: ../../source/packages/scientific.md:673
#: ../../source/packages/scientific.md:688
#: ../../source/packages/scientific.md:701
#: ../../source/packages/scientific.md:716
#: ../../source/packages/scientific.md:731
#: ../../source/packages/scientific.md:746
#: ../../source/packages/scientific.md:761
#: ../../source/packages/scientific.md:776
#: ../../source/packages/scientific.md:791
#: ../../source/packages/scientific.md:806
#: ../../source/packages/scientific.md:819
#: ../../source/packages/scientific.md:834
#: ../../source/packages/scientific.md:849
#: ../../source/packages/scientific.md:864
#: ../../source/packages/scientific.md:879
#: ../../source/packages/scientific.md:894
#: ../../source/packages/scientific.md:909
#: ../../source/packages/scientific.md:922
#: ../../source/packages/scientific.md:946
#: ../../source/packages/scientific.md:961 ../../source/packages/strings.md:19
#: ../../source/packages/strings.md:34 ../../source/packages/strings.md:49
#: ../../source/packages/strings.md:64 ../../source/packages/strings.md:77
#: ../../source/packages/strings.md:92 ../../source/packages/strings.md:105
msgid "Release"
msgstr ""

#: ../../source/packages/data-types.md:19
#: ../../source/packages/data-types.md:34
#: ../../source/packages/data-types.md:49
#: ../../source/packages/data-types.md:64
#: ../../source/packages/data-types.md:88
#: ../../source/packages/data-types.md:103
#: ../../source/packages/data-types.md:118
#: ../../source/packages/data-types.md:133
#: ../../source/packages/data-types.md:148
#: ../../source/packages/data-types.md:163 ../../source/packages/examples.md:19
#: ../../source/packages/examples.md:34 ../../source/packages/examples.md:49
#: ../../source/packages/examples.md:64 ../../source/packages/examples.md:79
#: ../../source/packages/examples.md:94 ../../source/packages/graphics.md:28
#: ../../source/packages/graphics.md:43 ../../source/packages/graphics.md:58
#: ../../source/packages/graphics.md:73 ../../source/packages/graphics.md:88
#: ../../source/packages/graphics.md:103 ../../source/packages/graphics.md:127
#: ../../source/packages/interfaces.md:28
#: ../../source/packages/interfaces.md:43
#: ../../source/packages/interfaces.md:58
#: ../../source/packages/interfaces.md:80
#: ../../source/packages/interfaces.md:95
#: ../../source/packages/interfaces.md:110
#: ../../source/packages/interfaces.md:125
#: ../../source/packages/interfaces.md:140
#: ../../source/packages/interfaces.md:155
#: ../../source/packages/interfaces.md:170
#: ../../source/packages/interfaces.md:185
#: ../../source/packages/interfaces.md:200
#: ../../source/packages/interfaces.md:215
#: ../../source/packages/interfaces.md:230
#: ../../source/packages/interfaces.md:254
#: ../../source/packages/interfaces.md:269
#: ../../source/packages/interfaces.md:302
#: ../../source/packages/interfaces.md:317
#: ../../source/packages/interfaces.md:332
#: ../../source/packages/interfaces.md:347
#: ../../source/packages/interfaces.md:362
#: ../../source/packages/interfaces.md:377
#: ../../source/packages/interfaces.md:410
#: ../../source/packages/interfaces.md:425
#: ../../source/packages/interfaces.md:440
#: ../../source/packages/interfaces.md:453 ../../source/packages/io.md:19
#: ../../source/packages/io.md:34 ../../source/packages/io.md:49
#: ../../source/packages/io.md:64 ../../source/packages/io.md:79
#: ../../source/packages/io.md:92 ../../source/packages/io.md:107
#: ../../source/packages/io.md:122 ../../source/packages/io.md:137
#: ../../source/packages/io.md:152 ../../source/packages/io.md:167
#: ../../source/packages/io.md:182 ../../source/packages/io.md:197
#: ../../source/packages/io.md:212 ../../source/packages/io.md:225
#: ../../source/packages/io.md:240 ../../source/packages/io.md:255
#: ../../source/packages/io.md:270 ../../source/packages/io.md:285
#: ../../source/packages/io.md:300 ../../source/packages/io.md:313
#: ../../source/packages/io.md:328 ../../source/packages/io.md:343
#: ../../source/packages/io.md:358 ../../source/packages/libraries.md:19
#: ../../source/packages/libraries.md:34 ../../source/packages/libraries.md:49
#: ../../source/packages/libraries.md:64 ../../source/packages/libraries.md:79
#: ../../source/packages/libraries.md:94 ../../source/packages/libraries.md:109
#: ../../source/packages/libraries.md:124
#: ../../source/packages/libraries.md:139
#: ../../source/packages/libraries.md:154
#: ../../source/packages/libraries.md:169
#: ../../source/packages/libraries.md:184
#: ../../source/packages/libraries.md:199 ../../source/packages/numerical.md:28
#: ../../source/packages/numerical.md:43 ../../source/packages/numerical.md:58
#: ../../source/packages/numerical.md:73 ../../source/packages/numerical.md:88
#: ../../source/packages/numerical.md:103
#: ../../source/packages/numerical.md:118
#: ../../source/packages/numerical.md:133
#: ../../source/packages/numerical.md:157
#: ../../source/packages/numerical.md:172
#: ../../source/packages/numerical.md:187
#: ../../source/packages/numerical.md:202
#: ../../source/packages/numerical.md:217
#: ../../source/packages/numerical.md:232
#: ../../source/packages/numerical.md:247
#: ../../source/packages/numerical.md:262
#: ../../source/packages/numerical.md:277
#: ../../source/packages/numerical.md:292
#: ../../source/packages/numerical.md:307
#: ../../source/packages/numerical.md:322
#: ../../source/packages/numerical.md:337
#: ../../source/packages/numerical.md:361
#: ../../source/packages/numerical.md:376
#: ../../source/packages/numerical.md:391
#: ../../source/packages/numerical.md:406
#: ../../source/packages/numerical.md:430
#: ../../source/packages/numerical.md:445
#: ../../source/packages/numerical.md:469
#: ../../source/packages/numerical.md:493
#: ../../source/packages/numerical.md:508
#: ../../source/packages/numerical.md:523
#: ../../source/packages/numerical.md:538
#: ../../source/packages/numerical.md:562
#: ../../source/packages/numerical.md:577
#: ../../source/packages/numerical.md:592
#: ../../source/packages/numerical.md:607
#: ../../source/packages/numerical.md:620
#: ../../source/packages/numerical.md:635
#: ../../source/packages/numerical.md:650
#: ../../source/packages/numerical.md:665
#: ../../source/packages/numerical.md:680
#: ../../source/packages/numerical.md:695
#: ../../source/packages/numerical.md:710
#: ../../source/packages/numerical.md:734
#: ../../source/packages/programming.md:19
#: ../../source/packages/programming.md:34
#: ../../source/packages/programming.md:49
#: ../../source/packages/programming.md:64
#: ../../source/packages/programming.md:77
#: ../../source/packages/programming.md:101
#: ../../source/packages/programming.md:116
#: ../../source/packages/programming.md:131
#: ../../source/packages/programming.md:155
#: ../../source/packages/programming.md:170
#: ../../source/packages/programming.md:185
#: ../../source/packages/programming.md:200
#: ../../source/packages/programming.md:215
#: ../../source/packages/programming.md:239
#: ../../source/packages/programming.md:254
#: ../../source/packages/programming.md:269
#: ../../source/packages/programming.md:284
#: ../../source/packages/programming.md:299
#: ../../source/packages/programming.md:314
#: ../../source/packages/programming.md:338
#: ../../source/packages/scientific.md:28
#: ../../source/packages/scientific.md:43
#: ../../source/packages/scientific.md:58
#: ../../source/packages/scientific.md:73
#: ../../source/packages/scientific.md:88
#: ../../source/packages/scientific.md:101
#: ../../source/packages/scientific.md:116
#: ../../source/packages/scientific.md:131
#: ../../source/packages/scientific.md:146
#: ../../source/packages/scientific.md:161
#: ../../source/packages/scientific.md:176
#: ../../source/packages/scientific.md:191
#: ../../source/packages/scientific.md:206
#: ../../source/packages/scientific.md:221
#: ../../source/packages/scientific.md:234
#: ../../source/packages/scientific.md:249
#: ../../source/packages/scientific.md:264
#: ../../source/packages/scientific.md:279
#: ../../source/packages/scientific.md:294
#: ../../source/packages/scientific.md:316
#: ../../source/packages/scientific.md:329
#: ../../source/packages/scientific.md:344
#: ../../source/packages/scientific.md:359
#: ../../source/packages/scientific.md:374
#: ../../source/packages/scientific.md:389
#: ../../source/packages/scientific.md:404
#: ../../source/packages/scientific.md:419
#: ../../source/packages/scientific.md:434
#: ../../source/packages/scientific.md:449
#: ../../source/packages/scientific.md:464
#: ../../source/packages/scientific.md:479
#: ../../source/packages/scientific.md:494
#: ../../source/packages/scientific.md:509
#: ../../source/packages/scientific.md:533
#: ../../source/packages/scientific.md:555
#: ../../source/packages/scientific.md:570
#: ../../source/packages/scientific.md:585
#: ../../source/packages/scientific.md:600
#: ../../source/packages/scientific.md:615
#: ../../source/packages/scientific.md:630
#: ../../source/packages/scientific.md:645
#: ../../source/packages/scientific.md:660
#: ../../source/packages/scientific.md:673
#: ../../source/packages/scientific.md:688
#: ../../source/packages/scientific.md:701
#: ../../source/packages/scientific.md:716
#: ../../source/packages/scientific.md:731
#: ../../source/packages/scientific.md:746
#: ../../source/packages/scientific.md:761
#: ../../source/packages/scientific.md:776
#: ../../source/packages/scientific.md:791
#: ../../source/packages/scientific.md:806
#: ../../source/packages/scientific.md:819
#: ../../source/packages/scientific.md:834
#: ../../source/packages/scientific.md:849
#: ../../source/packages/scientific.md:864
#: ../../source/packages/scientific.md:879
#: ../../source/packages/scientific.md:894
#: ../../source/packages/scientific.md:909
#: ../../source/packages/scientific.md:922
#: ../../source/packages/scientific.md:946
#: ../../source/packages/scientific.md:961 ../../source/packages/strings.md:19
#: ../../source/packages/strings.md:34 ../../source/packages/strings.md:49
#: ../../source/packages/strings.md:64 ../../source/packages/strings.md:77
#: ../../source/packages/strings.md:92 ../../source/packages/strings.md:105
msgid "license"
msgstr ""

#: ../../source/packages/data-types.md:19
#: ../../source/packages/data-types.md:34
#: ../../source/packages/data-types.md:49
#: ../../source/packages/data-types.md:64
#: ../../source/packages/data-types.md:88
#: ../../source/packages/data-types.md:103
#: ../../source/packages/data-types.md:118
#: ../../source/packages/data-types.md:133
#: ../../source/packages/data-types.md:148
#: ../../source/packages/data-types.md:163 ../../source/packages/examples.md:19
#: ../../source/packages/examples.md:34 ../../source/packages/examples.md:49
#: ../../source/packages/examples.md:64 ../../source/packages/examples.md:79
#: ../../source/packages/examples.md:94 ../../source/packages/graphics.md:28
#: ../../source/packages/graphics.md:43 ../../source/packages/graphics.md:58
#: ../../source/packages/graphics.md:73 ../../source/packages/graphics.md:88
#: ../../source/packages/graphics.md:103 ../../source/packages/graphics.md:127
#: ../../source/packages/interfaces.md:28
#: ../../source/packages/interfaces.md:43
#: ../../source/packages/interfaces.md:80
#: ../../source/packages/interfaces.md:95
#: ../../source/packages/interfaces.md:110
#: ../../source/packages/interfaces.md:125
#: ../../source/packages/interfaces.md:140
#: ../../source/packages/interfaces.md:155
#: ../../source/packages/interfaces.md:170
#: ../../source/packages/interfaces.md:185
#: ../../source/packages/interfaces.md:200
#: ../../source/packages/interfaces.md:215
#: ../../source/packages/interfaces.md:230
#: ../../source/packages/interfaces.md:254
#: ../../source/packages/interfaces.md:269
#: ../../source/packages/interfaces.md:302
#: ../../source/packages/interfaces.md:317
#: ../../source/packages/interfaces.md:332
#: ../../source/packages/interfaces.md:347
#: ../../source/packages/interfaces.md:362
#: ../../source/packages/interfaces.md:377
#: ../../source/packages/interfaces.md:410
#: ../../source/packages/interfaces.md:425
#: ../../source/packages/interfaces.md:453 ../../source/packages/io.md:19
#: ../../source/packages/io.md:34 ../../source/packages/io.md:49
#: ../../source/packages/io.md:64 ../../source/packages/io.md:92
#: ../../source/packages/io.md:107 ../../source/packages/io.md:122
#: ../../source/packages/io.md:137 ../../source/packages/io.md:152
#: ../../source/packages/io.md:167 ../../source/packages/io.md:182
#: ../../source/packages/io.md:197 ../../source/packages/io.md:225
#: ../../source/packages/io.md:240 ../../source/packages/io.md:255
#: ../../source/packages/io.md:270 ../../source/packages/io.md:285
#: ../../source/packages/io.md:313 ../../source/packages/io.md:328
#: ../../source/packages/io.md:343 ../../source/packages/io.md:358
#: ../../source/packages/libraries.md:19 ../../source/packages/libraries.md:34
#: ../../source/packages/libraries.md:49 ../../source/packages/libraries.md:64
#: ../../source/packages/libraries.md:79 ../../source/packages/libraries.md:94
#: ../../source/packages/libraries.md:109
#: ../../source/packages/libraries.md:124
#: ../../source/packages/libraries.md:139
#: ../../source/packages/libraries.md:154
#: ../../source/packages/libraries.md:169
#: ../../source/packages/libraries.md:184
#: ../../source/packages/libraries.md:199 ../../source/packages/numerical.md:28
#: ../../source/packages/numerical.md:43 ../../source/packages/numerical.md:58
#: ../../source/packages/numerical.md:73 ../../source/packages/numerical.md:88
#: ../../source/packages/numerical.md:103
#: ../../source/packages/numerical.md:118
#: ../../source/packages/numerical.md:133
#: ../../source/packages/numerical.md:157
#: ../../source/packages/numerical.md:172
#: ../../source/packages/numerical.md:187
#: ../../source/packages/numerical.md:202
#: ../../source/packages/numerical.md:217
#: ../../source/packages/numerical.md:232
#: ../../source/packages/numerical.md:247
#: ../../source/packages/numerical.md:262
#: ../../source/packages/numerical.md:277
#: ../../source/packages/numerical.md:292
#: ../../source/packages/numerical.md:307
#: ../../source/packages/numerical.md:322
#: ../../source/packages/numerical.md:337
#: ../../source/packages/numerical.md:361
#: ../../source/packages/numerical.md:376
#: ../../source/packages/numerical.md:391
#: ../../source/packages/numerical.md:406
#: ../../source/packages/numerical.md:430
#: ../../source/packages/numerical.md:445
#: ../../source/packages/numerical.md:469
#: ../../source/packages/numerical.md:493
#: ../../source/packages/numerical.md:508
#: ../../source/packages/numerical.md:523
#: ../../source/packages/numerical.md:538
#: ../../source/packages/numerical.md:562
#: ../../source/packages/numerical.md:577
#: ../../source/packages/numerical.md:592
#: ../../source/packages/numerical.md:620
#: ../../source/packages/numerical.md:635
#: ../../source/packages/numerical.md:650
#: ../../source/packages/numerical.md:665
#: ../../source/packages/numerical.md:680
#: ../../source/packages/numerical.md:695
#: ../../source/packages/numerical.md:710
#: ../../source/packages/numerical.md:734
#: ../../source/packages/programming.md:19
#: ../../source/packages/programming.md:34
#: ../../source/packages/programming.md:49
#: ../../source/packages/programming.md:77
#: ../../source/packages/programming.md:101
#: ../../source/packages/programming.md:116
#: ../../source/packages/programming.md:131
#: ../../source/packages/programming.md:155
#: ../../source/packages/programming.md:170
#: ../../source/packages/programming.md:185
#: ../../source/packages/programming.md:200
#: ../../source/packages/programming.md:215
#: ../../source/packages/programming.md:239
#: ../../source/packages/programming.md:254
#: ../../source/packages/programming.md:269
#: ../../source/packages/programming.md:284
#: ../../source/packages/programming.md:299
#: ../../source/packages/programming.md:314
#: ../../source/packages/scientific.md:28
#: ../../source/packages/scientific.md:43
#: ../../source/packages/scientific.md:58
#: ../../source/packages/scientific.md:73
#: ../../source/packages/scientific.md:101
#: ../../source/packages/scientific.md:116
#: ../../source/packages/scientific.md:131
#: ../../source/packages/scientific.md:146
#: ../../source/packages/scientific.md:161
#: ../../source/packages/scientific.md:176
#: ../../source/packages/scientific.md:191
#: ../../source/packages/scientific.md:206
#: ../../source/packages/scientific.md:234
#: ../../source/packages/scientific.md:249
#: ../../source/packages/scientific.md:264
#: ../../source/packages/scientific.md:279
#: ../../source/packages/scientific.md:329
#: ../../source/packages/scientific.md:344
#: ../../source/packages/scientific.md:359
#: ../../source/packages/scientific.md:374
#: ../../source/packages/scientific.md:389
#: ../../source/packages/scientific.md:404
#: ../../source/packages/scientific.md:419
#: ../../source/packages/scientific.md:434
#: ../../source/packages/scientific.md:449
#: ../../source/packages/scientific.md:464
#: ../../source/packages/scientific.md:479
#: ../../source/packages/scientific.md:494
#: ../../source/packages/scientific.md:509
#: ../../source/packages/scientific.md:555
#: ../../source/packages/scientific.md:570
#: ../../source/packages/scientific.md:585
#: ../../source/packages/scientific.md:600
#: ../../source/packages/scientific.md:615
#: ../../source/packages/scientific.md:630
#: ../../source/packages/scientific.md:645
#: ../../source/packages/scientific.md:673
#: ../../source/packages/scientific.md:701
#: ../../source/packages/scientific.md:716
#: ../../source/packages/scientific.md:731
#: ../../source/packages/scientific.md:746
#: ../../source/packages/scientific.md:761
#: ../../source/packages/scientific.md:776
#: ../../source/packages/scientific.md:791
#: ../../source/packages/scientific.md:819
#: ../../source/packages/scientific.md:834
#: ../../source/packages/scientific.md:849
#: ../../source/packages/scientific.md:864
#: ../../source/packages/scientific.md:879
#: ../../source/packages/scientific.md:894
#: ../../source/packages/scientific.md:922
#: ../../source/packages/scientific.md:946
#: ../../source/packages/scientific.md:961 ../../source/packages/strings.md:19
#: ../../source/packages/strings.md:34 ../../source/packages/strings.md:49
#: ../../source/packages/strings.md:77 ../../source/packages/strings.md:105
msgid "stars"
msgstr ""

#: ../../source/packages/data-types.md:19
#: ../../source/packages/data-types.md:34
#: ../../source/packages/data-types.md:49
#: ../../source/packages/data-types.md:64
#: ../../source/packages/data-types.md:88
#: ../../source/packages/data-types.md:103
#: ../../source/packages/data-types.md:118
#: ../../source/packages/data-types.md:133
#: ../../source/packages/data-types.md:148
#: ../../source/packages/data-types.md:163 ../../source/packages/examples.md:19
#: ../../source/packages/examples.md:34 ../../source/packages/examples.md:49
#: ../../source/packages/examples.md:64 ../../source/packages/examples.md:79
#: ../../source/packages/examples.md:94 ../../source/packages/graphics.md:28
#: ../../source/packages/graphics.md:43 ../../source/packages/graphics.md:58
#: ../../source/packages/graphics.md:73 ../../source/packages/graphics.md:88
#: ../../source/packages/graphics.md:103 ../../source/packages/graphics.md:127
#: ../../source/packages/interfaces.md:28
#: ../../source/packages/interfaces.md:43
#: ../../source/packages/interfaces.md:58
#: ../../source/packages/interfaces.md:80
#: ../../source/packages/interfaces.md:95
#: ../../source/packages/interfaces.md:110
#: ../../source/packages/interfaces.md:125
#: ../../source/packages/interfaces.md:140
#: ../../source/packages/interfaces.md:155
#: ../../source/packages/interfaces.md:170
#: ../../source/packages/interfaces.md:185
#: ../../source/packages/interfaces.md:200
#: ../../source/packages/interfaces.md:215
#: ../../source/packages/interfaces.md:230
#: ../../source/packages/interfaces.md:254
#: ../../source/packages/interfaces.md:269
#: ../../source/packages/interfaces.md:302
#: ../../source/packages/interfaces.md:317
#: ../../source/packages/interfaces.md:332
#: ../../source/packages/interfaces.md:347
#: ../../source/packages/interfaces.md:362
#: ../../source/packages/interfaces.md:377
#: ../../source/packages/interfaces.md:410
#: ../../source/packages/interfaces.md:425
#: ../../source/packages/interfaces.md:440
#: ../../source/packages/interfaces.md:453 ../../source/packages/io.md:19
#: ../../source/packages/io.md:34 ../../source/packages/io.md:49
#: ../../source/packages/io.md:64 ../../source/packages/io.md:79
#: ../../source/packages/io.md:92 ../../source/packages/io.md:107
#: ../../source/packages/io.md:122 ../../source/packages/io.md:137
#: ../../source/packages/io.md:152 ../../source/packages/io.md:167
#: ../../source/packages/io.md:182 ../../source/packages/io.md:197
#: ../../source/packages/io.md:212 ../../source/packages/io.md:225
#: ../../source/packages/io.md:240 ../../source/packages/io.md:255
#: ../../source/packages/io.md:270 ../../source/packages/io.md:285
#: ../../source/packages/io.md:300 ../../source/packages/io.md:313
#: ../../source/packages/io.md:328 ../../source/packages/io.md:343
#: ../../source/packages/io.md:358 ../../source/packages/libraries.md:19
#: ../../source/packages/libraries.md:34 ../../source/packages/libraries.md:49
#: ../../source/packages/libraries.md:64 ../../source/packages/libraries.md:79
#: ../../source/packages/libraries.md:94 ../../source/packages/libraries.md:109
#: ../../source/packages/libraries.md:124
#: ../../source/packages/libraries.md:139
#: ../../source/packages/libraries.md:154
#: ../../source/packages/libraries.md:169
#: ../../source/packages/libraries.md:184
#: ../../source/packages/libraries.md:199 ../../source/packages/numerical.md:28
#: ../../source/packages/numerical.md:43 ../../source/packages/numerical.md:58
#: ../../source/packages/numerical.md:73 ../../source/packages/numerical.md:88
#: ../../source/packages/numerical.md:103
#: ../../source/packages/numerical.md:118
#: ../../source/packages/numerical.md:133
#: ../../source/packages/numerical.md:157
#: ../../source/packages/numerical.md:172
#: ../../source/packages/numerical.md:187
#: ../../source/packages/numerical.md:202
#: ../../source/packages/numerical.md:217
#: ../../source/packages/numerical.md:232
#: ../../source/packages/numerical.md:247
#: ../../source/packages/numerical.md:262
#: ../../source/packages/numerical.md:277
#: ../../source/packages/numerical.md:292
#: ../../source/packages/numerical.md:307
#: ../../source/packages/numerical.md:322
#: ../../source/packages/numerical.md:337
#: ../../source/packages/numerical.md:361
#: ../../source/packages/numerical.md:376
#: ../../source/packages/numerical.md:391
#: ../../source/packages/numerical.md:406
#: ../../source/packages/numerical.md:430
#: ../../source/packages/numerical.md:445
#: ../../source/packages/numerical.md:469
#: ../../source/packages/numerical.md:493
#: ../../source/packages/numerical.md:508
#: ../../source/packages/numerical.md:523
#: ../../source/packages/numerical.md:538
#: ../../source/packages/numerical.md:562
#: ../../source/packages/numerical.md:577
#: ../../source/packages/numerical.md:592
#: ../../source/packages/numerical.md:607
#: ../../source/packages/numerical.md:620
#: ../../source/packages/numerical.md:635
#: ../../source/packages/numerical.md:650
#: ../../source/packages/numerical.md:665
#: ../../source/packages/numerical.md:680
#: ../../source/packages/numerical.md:695
#: ../../source/packages/numerical.md:710
#: ../../source/packages/numerical.md:734
#: ../../source/packages/programming.md:19
#: ../../source/packages/programming.md:34
#: ../../source/packages/programming.md:49
#: ../../source/packages/programming.md:64
#: ../../source/packages/programming.md:77
#: ../../source/packages/programming.md:101
#: ../../source/packages/programming.md:116
#: ../../source/packages/programming.md:131
#: ../../source/packages/programming.md:155
#: ../../source/packages/programming.md:170
#: ../../source/packages/programming.md:185
#: ../../source/packages/programming.md:200
#: ../../source/packages/programming.md:215
#: ../../source/packages/programming.md:239
#: ../../source/packages/programming.md:254
#: ../../source/packages/programming.md:269
#: ../../source/packages/programming.md:284
#: ../../source/packages/programming.md:299
#: ../../source/packages/programming.md:314
#: ../../source/packages/programming.md:338
#: ../../source/packages/scientific.md:28
#: ../../source/packages/scientific.md:43
#: ../../source/packages/scientific.md:58
#: ../../source/packages/scientific.md:73
#: ../../source/packages/scientific.md:88
#: ../../source/packages/scientific.md:101
#: ../../source/packages/scientific.md:116
#: ../../source/packages/scientific.md:131
#: ../../source/packages/scientific.md:146
#: ../../source/packages/scientific.md:161
#: ../../source/packages/scientific.md:176
#: ../../source/packages/scientific.md:191
#: ../../source/packages/scientific.md:206
#: ../../source/packages/scientific.md:221
#: ../../source/packages/scientific.md:234
#: ../../source/packages/scientific.md:249
#: ../../source/packages/scientific.md:264
#: ../../source/packages/scientific.md:279
#: ../../source/packages/scientific.md:294
#: ../../source/packages/scientific.md:316
#: ../../source/packages/scientific.md:329
#: ../../source/packages/scientific.md:344
#: ../../source/packages/scientific.md:359
#: ../../source/packages/scientific.md:374
#: ../../source/packages/scientific.md:389
#: ../../source/packages/scientific.md:404
#: ../../source/packages/scientific.md:419
#: ../../source/packages/scientific.md:434
#: ../../source/packages/scientific.md:449
#: ../../source/packages/scientific.md:464
#: ../../source/packages/scientific.md:479
#: ../../source/packages/scientific.md:494
#: ../../source/packages/scientific.md:509
#: ../../source/packages/scientific.md:533
#: ../../source/packages/scientific.md:555
#: ../../source/packages/scientific.md:570
#: ../../source/packages/scientific.md:585
#: ../../source/packages/scientific.md:600
#: ../../source/packages/scientific.md:615
#: ../../source/packages/scientific.md:630
#: ../../source/packages/scientific.md:645
#: ../../source/packages/scientific.md:660
#: ../../source/packages/scientific.md:673
#: ../../source/packages/scientific.md:688
#: ../../source/packages/scientific.md:701
#: ../../source/packages/scientific.md:716
#: ../../source/packages/scientific.md:731
#: ../../source/packages/scientific.md:746
#: ../../source/packages/scientific.md:761
#: ../../source/packages/scientific.md:776
#: ../../source/packages/scientific.md:791
#: ../../source/packages/scientific.md:806
#: ../../source/packages/scientific.md:819
#: ../../source/packages/scientific.md:834
#: ../../source/packages/scientific.md:849
#: ../../source/packages/scientific.md:864
#: ../../source/packages/scientific.md:879
#: ../../source/packages/scientific.md:894
#: ../../source/packages/scientific.md:909
#: ../../source/packages/scientific.md:922
#: ../../source/packages/scientific.md:946
#: ../../source/packages/scientific.md:961 ../../source/packages/strings.md:19
#: ../../source/packages/strings.md:34 ../../source/packages/strings.md:49
#: ../../source/packages/strings.md:64 ../../source/packages/strings.md:77
#: ../../source/packages/strings.md:92 ../../source/packages/strings.md:105
msgid "forks"
msgstr ""

#: ../../source/packages/data-types.md:19
#: ../../source/packages/data-types.md:34
#: ../../source/packages/data-types.md:49
#: ../../source/packages/data-types.md:64
#: ../../source/packages/data-types.md:88
#: ../../source/packages/data-types.md:103
#: ../../source/packages/data-types.md:118
#: ../../source/packages/data-types.md:133
#: ../../source/packages/data-types.md:148
#: ../../source/packages/data-types.md:163 ../../source/packages/examples.md:19
#: ../../source/packages/examples.md:34 ../../source/packages/examples.md:49
#: ../../source/packages/examples.md:64 ../../source/packages/examples.md:79
#: ../../source/packages/examples.md:94 ../../source/packages/graphics.md:28
#: ../../source/packages/graphics.md:43 ../../source/packages/graphics.md:58
#: ../../source/packages/graphics.md:73 ../../source/packages/graphics.md:88
#: ../../source/packages/graphics.md:103 ../../source/packages/graphics.md:127
#: ../../source/packages/interfaces.md:28
#: ../../source/packages/interfaces.md:43
#: ../../source/packages/interfaces.md:80
#: ../../source/packages/interfaces.md:95
#: ../../source/packages/interfaces.md:110
#: ../../source/packages/interfaces.md:125
#: ../../source/packages/interfaces.md:140
#: ../../source/packages/interfaces.md:155
#: ../../source/packages/interfaces.md:170
#: ../../source/packages/interfaces.md:185
#: ../../source/packages/interfaces.md:200
#: ../../source/packages/interfaces.md:215
#: ../../source/packages/interfaces.md:230
#: ../../source/packages/interfaces.md:254
#: ../../source/packages/interfaces.md:269
#: ../../source/packages/interfaces.md:302
#: ../../source/packages/interfaces.md:317
#: ../../source/packages/interfaces.md:332
#: ../../source/packages/interfaces.md:347
#: ../../source/packages/interfaces.md:362
#: ../../source/packages/interfaces.md:377
#: ../../source/packages/interfaces.md:410
#: ../../source/packages/interfaces.md:425
#: ../../source/packages/interfaces.md:453 ../../source/packages/io.md:19
#: ../../source/packages/io.md:34 ../../source/packages/io.md:49
#: ../../source/packages/io.md:64 ../../source/packages/io.md:92
#: ../../source/packages/io.md:107 ../../source/packages/io.md:122
#: ../../source/packages/io.md:137 ../../source/packages/io.md:152
#: ../../source/packages/io.md:167 ../../source/packages/io.md:182
#: ../../source/packages/io.md:197 ../../source/packages/io.md:225
#: ../../source/packages/io.md:240 ../../source/packages/io.md:255
#: ../../source/packages/io.md:270 ../../source/packages/io.md:285
#: ../../source/packages/io.md:313 ../../source/packages/io.md:328
#: ../../source/packages/io.md:343 ../../source/packages/io.md:358
#: ../../source/packages/libraries.md:19 ../../source/packages/libraries.md:34
#: ../../source/packages/libraries.md:49 ../../source/packages/libraries.md:64
#: ../../source/packages/libraries.md:79 ../../source/packages/libraries.md:94
#: ../../source/packages/libraries.md:109
#: ../../source/packages/libraries.md:124
#: ../../source/packages/libraries.md:139
#: ../../source/packages/libraries.md:154
#: ../../source/packages/libraries.md:169
#: ../../source/packages/libraries.md:184
#: ../../source/packages/libraries.md:199 ../../source/packages/numerical.md:28
#: ../../source/packages/numerical.md:43 ../../source/packages/numerical.md:58
#: ../../source/packages/numerical.md:73 ../../source/packages/numerical.md:88
#: ../../source/packages/numerical.md:103
#: ../../source/packages/numerical.md:118
#: ../../source/packages/numerical.md:133
#: ../../source/packages/numerical.md:157
#: ../../source/packages/numerical.md:172
#: ../../source/packages/numerical.md:187
#: ../../source/packages/numerical.md:202
#: ../../source/packages/numerical.md:217
#: ../../source/packages/numerical.md:232
#: ../../source/packages/numerical.md:247
#: ../../source/packages/numerical.md:262
#: ../../source/packages/numerical.md:277
#: ../../source/packages/numerical.md:292
#: ../../source/packages/numerical.md:307
#: ../../source/packages/numerical.md:322
#: ../../source/packages/numerical.md:337
#: ../../source/packages/numerical.md:361
#: ../../source/packages/numerical.md:376
#: ../../source/packages/numerical.md:391
#: ../../source/packages/numerical.md:406
#: ../../source/packages/numerical.md:430
#: ../../source/packages/numerical.md:445
#: ../../source/packages/numerical.md:469
#: ../../source/packages/numerical.md:493
#: ../../source/packages/numerical.md:508
#: ../../source/packages/numerical.md:523
#: ../../source/packages/numerical.md:538
#: ../../source/packages/numerical.md:562
#: ../../source/packages/numerical.md:577
#: ../../source/packages/numerical.md:592
#: ../../source/packages/numerical.md:620
#: ../../source/packages/numerical.md:635
#: ../../source/packages/numerical.md:650
#: ../../source/packages/numerical.md:665
#: ../../source/packages/numerical.md:680
#: ../../source/packages/numerical.md:695
#: ../../source/packages/numerical.md:710
#: ../../source/packages/numerical.md:734
#: ../../source/packages/programming.md:19
#: ../../source/packages/programming.md:34
#: ../../source/packages/programming.md:49
#: ../../source/packages/programming.md:77
#: ../../source/packages/programming.md:101
#: ../../source/packages/programming.md:116
#: ../../source/packages/programming.md:131
#: ../../source/packages/programming.md:155
#: ../../source/packages/programming.md:170
#: ../../source/packages/programming.md:185
#: ../../source/packages/programming.md:200
#: ../../source/packages/programming.md:215
#: ../../source/packages/programming.md:239
#: ../../source/packages/programming.md:254
#: ../../source/packages/programming.md:269
#: ../../source/packages/programming.md:284
#: ../../source/packages/programming.md:299
#: ../../source/packages/programming.md:314
#: ../../source/packages/scientific.md:28
#: ../../source/packages/scientific.md:43
#: ../../source/packages/scientific.md:58
#: ../../source/packages/scientific.md:73
#: ../../source/packages/scientific.md:101
#: ../../source/packages/scientific.md:116
#: ../../source/packages/scientific.md:131
#: ../../source/packages/scientific.md:146
#: ../../source/packages/scientific.md:161
#: ../../source/packages/scientific.md:176
#: ../../source/packages/scientific.md:191
#: ../../source/packages/scientific.md:206
#: ../../source/packages/scientific.md:234
#: ../../source/packages/scientific.md:249
#: ../../source/packages/scientific.md:264
#: ../../source/packages/scientific.md:279
#: ../../source/packages/scientific.md:329
#: ../../source/packages/scientific.md:344
#: ../../source/packages/scientific.md:359
#: ../../source/packages/scientific.md:374
#: ../../source/packages/scientific.md:389
#: ../../source/packages/scientific.md:404
#: ../../source/packages/scientific.md:419
#: ../../source/packages/scientific.md:434
#: ../../source/packages/scientific.md:449
#: ../../source/packages/scientific.md:464
#: ../../source/packages/scientific.md:479
#: ../../source/packages/scientific.md:494
#: ../../source/packages/scientific.md:509
#: ../../source/packages/scientific.md:555
#: ../../source/packages/scientific.md:570
#: ../../source/packages/scientific.md:585
#: ../../source/packages/scientific.md:600
#: ../../source/packages/scientific.md:615
#: ../../source/packages/scientific.md:630
#: ../../source/packages/scientific.md:645
#: ../../source/packages/scientific.md:673
#: ../../source/packages/scientific.md:701
#: ../../source/packages/scientific.md:716
#: ../../source/packages/scientific.md:731
#: ../../source/packages/scientific.md:746
#: ../../source/packages/scientific.md:761
#: ../../source/packages/scientific.md:776
#: ../../source/packages/scientific.md:791
#: ../../source/packages/scientific.md:819
#: ../../source/packages/scientific.md:834
#: ../../source/packages/scientific.md:849
#: ../../source/packages/scientific.md:864
#: ../../source/packages/scientific.md:879
#: ../../source/packages/scientific.md:894
#: ../../source/packages/scientific.md:922
#: ../../source/packages/scientific.md:946
#: ../../source/packages/scientific.md:961 ../../source/packages/strings.md:19
#: ../../source/packages/strings.md:34 ../../source/packages/strings.md:49
#: ../../source/packages/strings.md:77 ../../source/packages/strings.md:105
msgid "last-commit"
msgstr ""

#: ../../source/packages/data-types.md:19
#: ../../source/packages/data-types.md:34
#: ../../source/packages/data-types.md:49
#: ../../source/packages/data-types.md:64
#: ../../source/packages/data-types.md:88
#: ../../source/packages/data-types.md:103
#: ../../source/packages/data-types.md:118
#: ../../source/packages/data-types.md:133
#: ../../source/packages/data-types.md:148
#: ../../source/packages/data-types.md:163 ../../source/packages/examples.md:19
#: ../../source/packages/examples.md:34 ../../source/packages/examples.md:49
#: ../../source/packages/examples.md:64 ../../source/packages/examples.md:79
#: ../../source/packages/examples.md:94 ../../source/packages/graphics.md:28
#: ../../source/packages/graphics.md:43 ../../source/packages/graphics.md:58
#: ../../source/packages/graphics.md:73 ../../source/packages/graphics.md:88
#: ../../source/packages/graphics.md:103 ../../source/packages/graphics.md:127
#: ../../source/packages/interfaces.md:28
#: ../../source/packages/interfaces.md:43
#: ../../source/packages/interfaces.md:58
#: ../../source/packages/interfaces.md:80
#: ../../source/packages/interfaces.md:95
#: ../../source/packages/interfaces.md:110
#: ../../source/packages/interfaces.md:125
#: ../../source/packages/interfaces.md:140
#: ../../source/packages/interfaces.md:155
#: ../../source/packages/interfaces.md:170
#: ../../source/packages/interfaces.md:185
#: ../../source/packages/interfaces.md:200
#: ../../source/packages/interfaces.md:215
#: ../../source/packages/interfaces.md:230
#: ../../source/packages/interfaces.md:254
#: ../../source/packages/interfaces.md:269
#: ../../source/packages/interfaces.md:302
#: ../../source/packages/interfaces.md:317
#: ../../source/packages/interfaces.md:332
#: ../../source/packages/interfaces.md:347
#: ../../source/packages/interfaces.md:362
#: ../../source/packages/interfaces.md:377
#: ../../source/packages/interfaces.md:410
#: ../../source/packages/interfaces.md:425
#: ../../source/packages/interfaces.md:440
#: ../../source/packages/interfaces.md:453 ../../source/packages/io.md:19
#: ../../source/packages/io.md:34 ../../source/packages/io.md:49
#: ../../source/packages/io.md:64 ../../source/packages/io.md:79
#: ../../source/packages/io.md:92 ../../source/packages/io.md:107
#: ../../source/packages/io.md:122 ../../source/packages/io.md:137
#: ../../source/packages/io.md:152 ../../source/packages/io.md:167
#: ../../source/packages/io.md:182 ../../source/packages/io.md:197
#: ../../source/packages/io.md:212 ../../source/packages/io.md:225
#: ../../source/packages/io.md:240 ../../source/packages/io.md:255
#: ../../source/packages/io.md:270 ../../source/packages/io.md:285
#: ../../source/packages/io.md:300 ../../source/packages/io.md:313
#: ../../source/packages/io.md:328 ../../source/packages/io.md:343
#: ../../source/packages/io.md:358 ../../source/packages/libraries.md:19
#: ../../source/packages/libraries.md:34 ../../source/packages/libraries.md:49
#: ../../source/packages/libraries.md:64 ../../source/packages/libraries.md:79
#: ../../source/packages/libraries.md:94 ../../source/packages/libraries.md:109
#: ../../source/packages/libraries.md:124
#: ../../source/packages/libraries.md:139
#: ../../source/packages/libraries.md:154
#: ../../source/packages/libraries.md:169
#: ../../source/packages/libraries.md:184
#: ../../source/packages/libraries.md:199 ../../source/packages/numerical.md:28
#: ../../source/packages/numerical.md:43 ../../source/packages/numerical.md:58
#: ../../source/packages/numerical.md:73 ../../source/packages/numerical.md:88
#: ../../source/packages/numerical.md:103
#: ../../source/packages/numerical.md:118
#: ../../source/packages/numerical.md:133
#: ../../source/packages/numerical.md:157
#: ../../source/packages/numerical.md:172
#: ../../source/packages/numerical.md:187
#: ../../source/packages/numerical.md:202
#: ../../source/packages/numerical.md:217
#: ../../source/packages/numerical.md:232
#: ../../source/packages/numerical.md:247
#: ../../source/packages/numerical.md:262
#: ../../source/packages/numerical.md:277
#: ../../source/packages/numerical.md:292
#: ../../source/packages/numerical.md:307
#: ../../source/packages/numerical.md:322
#: ../../source/packages/numerical.md:337
#: ../../source/packages/numerical.md:361
#: ../../source/packages/numerical.md:376
#: ../../source/packages/numerical.md:391
#: ../../source/packages/numerical.md:406
#: ../../source/packages/numerical.md:430
#: ../../source/packages/numerical.md:445
#: ../../source/packages/numerical.md:469
#: ../../source/packages/numerical.md:493
#: ../../source/packages/numerical.md:508
#: ../../source/packages/numerical.md:523
#: ../../source/packages/numerical.md:538
#: ../../source/packages/numerical.md:562
#: ../../source/packages/numerical.md:577
#: ../../source/packages/numerical.md:592
#: ../../source/packages/numerical.md:607
#: ../../source/packages/numerical.md:620
#: ../../source/packages/numerical.md:635
#: ../../source/packages/numerical.md:650
#: ../../source/packages/numerical.md:665
#: ../../source/packages/numerical.md:680
#: ../../source/packages/numerical.md:695
#: ../../source/packages/numerical.md:710
#: ../../source/packages/numerical.md:734
#: ../../source/packages/programming.md:19
#: ../../source/packages/programming.md:34
#: ../../source/packages/programming.md:49
#: ../../source/packages/programming.md:64
#: ../../source/packages/programming.md:77
#: ../../source/packages/programming.md:101
#: ../../source/packages/programming.md:116
#: ../../source/packages/programming.md:131
#: ../../source/packages/programming.md:155
#: ../../source/packages/programming.md:170
#: ../../source/packages/programming.md:185
#: ../../source/packages/programming.md:200
#: ../../source/packages/programming.md:215
#: ../../source/packages/programming.md:239
#: ../../source/packages/programming.md:254
#: ../../source/packages/programming.md:269
#: ../../source/packages/programming.md:284
#: ../../source/packages/programming.md:299
#: ../../source/packages/programming.md:314
#: ../../source/packages/programming.md:338
#: ../../source/packages/scientific.md:28
#: ../../source/packages/scientific.md:43
#: ../../source/packages/scientific.md:58
#: ../../source/packages/scientific.md:73
#: ../../source/packages/scientific.md:88
#: ../../source/packages/scientific.md:101
#: ../../source/packages/scientific.md:116
#: ../../source/packages/scientific.md:131
#: ../../source/packages/scientific.md:146
#: ../../source/packages/scientific.md:161
#: ../../source/packages/scientific.md:176
#: ../../source/packages/scientific.md:191
#: ../../source/packages/scientific.md:206
#: ../../source/packages/scientific.md:221
#: ../../source/packages/scientific.md:234
#: ../../source/packages/scientific.md:249
#: ../../source/packages/scientific.md:264
#: ../../source/packages/scientific.md:279
#: ../../source/packages/scientific.md:294
#: ../../source/packages/scientific.md:316
#: ../../source/packages/scientific.md:329
#: ../../source/packages/scientific.md:344
#: ../../source/packages/scientific.md:359
#: ../../source/packages/scientific.md:374
#: ../../source/packages/scientific.md:389
#: ../../source/packages/scientific.md:404
#: ../../source/packages/scientific.md:419
#: ../../source/packages/scientific.md:434
#: ../../source/packages/scientific.md:449
#: ../../source/packages/scientific.md:464
#: ../../source/packages/scientific.md:479
#: ../../source/packages/scientific.md:494
#: ../../source/packages/scientific.md:509
#: ../../source/packages/scientific.md:533
#: ../../source/packages/scientific.md:555
#: ../../source/packages/scientific.md:570
#: ../../source/packages/scientific.md:585
#: ../../source/packages/scientific.md:600
#: ../../source/packages/scientific.md:615
#: ../../source/packages/scientific.md:630
#: ../../source/packages/scientific.md:645
#: ../../source/packages/scientific.md:660
#: ../../source/packages/scientific.md:673
#: ../../source/packages/scientific.md:688
#: ../../source/packages/scientific.md:701
#: ../../source/packages/scientific.md:716
#: ../../source/packages/scientific.md:731
#: ../../source/packages/scientific.md:746
#: ../../source/packages/scientific.md:761
#: ../../source/packages/scientific.md:776
#: ../../source/packages/scientific.md:791
#: ../../source/packages/scientific.md:806
#: ../../source/packages/scientific.md:819
#: ../../source/packages/scientific.md:834
#: ../../source/packages/scientific.md:849
#: ../../source/packages/scientific.md:864
#: ../../source/packages/scientific.md:879
#: ../../source/packages/scientific.md:894
#: ../../source/packages/scientific.md:909
#: ../../source/packages/scientific.md:922
#: ../../source/packages/scientific.md:946
#: ../../source/packages/scientific.md:961 ../../source/packages/strings.md:19
#: ../../source/packages/strings.md:34 ../../source/packages/strings.md:49
#: ../../source/packages/strings.md:64 ../../source/packages/strings.md:77
#: ../../source/packages/strings.md:92 ../../source/packages/strings.md:105
msgid "issues"
msgstr ""

#: ../../source/packages/data-types.md:30
msgid "Date and time manipulation"
msgstr ""

#: ../../source/packages/data-types.md:32
msgid "Tags: day year month calendar weekday clock"
msgstr ""

#: ../../source/packages/data-types.md:34
msgid ""
"![Release](https://img.shields.io/github/v/release/wavebitscientific"
"/datetime-fortran?color=green) "
"![license](https://img.shields.io/github/license/wavebitscientific"
"/datetime-fortran) "
"![stars](https://img.shields.io/github/stars/wavebitscientific/datetime-"
"fortran) ![forks](https://img.shields.io/github/forks/wavebitscientific"
"/datetime-fortran) ![last-commit](https://img.shields.io/github/last-"
"commit/wavebitscientific/datetime-fortran?color=blue) "
"![issues](https://img.shields.io/github/issues/wavebitscientific"
"/datetime-fortran?color=yellow)"
msgstr ""

#: ../../source/packages/data-types.md:44
msgid "[fdict](https://github.com/zerothi/fdict)"
msgstr ""

#: ../../source/packages/data-types.md:45
msgid "Variable and type-free dictionary"
msgstr ""

#: ../../source/packages/data-types.md:47
msgid "Tags: hash table"
msgstr ""

#: ../../source/packages/data-types.md:49
msgid ""
"![Release](https://img.shields.io/github/v/release/zerothi/fdict?color=green)"
" ![license](https://img.shields.io/github/license/zerothi/fdict) "
"![stars](https://img.shields.io/github/stars/zerothi/fdict) "
"![forks](https://img.shields.io/github/forks/zerothi/fdict) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/zerothi/fdict?color=blue) "
"![issues](https://img.shields.io/github/issues/zerothi/fdict?color=yellow)"
msgstr ""

#: ../../source/packages/data-types.md:59
msgid "[Fortran template library](https://github.com/SCM-NV/ftl)"
msgstr ""

#: ../../source/packages/data-types.md:60
msgid ""
"Generic containers, versatile algorithms, easy string manipulation, and "
"more"
msgstr ""

#: ../../source/packages/data-types.md:62
msgid ""
"Tags: resizeable array container linked list hash map regex string shared"
" pointer"
msgstr ""

#: ../../source/packages/data-types.md:64
msgid ""
"![Release](https://img.shields.io/github/v/release/SCM-"
"NV/ftl?color=green) ![license](https://img.shields.io/github/license/SCM-"
"NV/ftl) ![stars](https://img.shields.io/github/stars/SCM-NV/ftl) "
"![forks](https://img.shields.io/github/forks/SCM-NV/ftl) ![last-"
"commit](https://img.shields.io/github/last-commit/SCM-NV/ftl?color=blue) "
"![issues](https://img.shields.io/github/issues/SCM-NV/ftl?color=yellow)"
msgstr ""

#: ../../source/packages/data-types.md:74
msgid "[FyCollections](https://bitbucket.org/aradi/fycollections/src/develop/)"
msgstr ""

#: ../../source/packages/data-types.md:76
msgid "generic collection templates for Fortran"
msgstr ""

#: ../../source/packages/data-types.md:78
#: ../../source/packages/data-types.md:101 ../../source/packages/examples.md:47
#: ../../source/packages/examples.md:77 ../../source/packages/graphics.md:26
#: ../../source/packages/graphics.md:86 ../../source/packages/interfaces.md:78
#: ../../source/packages/interfaces.md:198
#: ../../source/packages/interfaces.md:300
#: ../../source/packages/interfaces.md:451 ../../source/packages/io.md:32
#: ../../source/packages/io.md:150 ../../source/packages/io.md:356
#: ../../source/packages/numerical.md:170
#: ../../source/packages/numerical.md:359
#: ../../source/packages/numerical.md:605
#: ../../source/packages/numerical.md:663
#: ../../source/packages/programming.md:129
msgid "Tags: None"
msgstr ""

#: ../../source/packages/data-types.md:83
msgid "[kdtree2](https://github.com/jmhodges/kdtree2)"
msgstr ""

#: ../../source/packages/data-types.md:84
msgid "A kd-tree implementation in fortran"
msgstr ""

#: ../../source/packages/data-types.md:86 ../../source/packages/examples.md:92
#: ../../source/packages/interfaces.md:252
#: ../../source/packages/interfaces.md:345
#: ../../source/packages/interfaces.md:360 ../../source/packages/io.md:165
#: ../../source/packages/libraries.md:47 ../../source/packages/libraries.md:62
#: ../../source/packages/libraries.md:122
#: ../../source/packages/libraries.md:182
#: ../../source/packages/numerical.md:260
#: ../../source/packages/numerical.md:305
#: ../../source/packages/numerical.md:374
#: ../../source/packages/numerical.md:648
#: ../../source/packages/numerical.md:693
#: ../../source/packages/programming.md:198
#: ../../source/packages/scientific.md:56
#: ../../source/packages/scientific.md:71
#: ../../source/packages/scientific.md:114
#: ../../source/packages/scientific.md:144
#: ../../source/packages/scientific.md:159
#: ../../source/packages/scientific.md:204
#: ../../source/packages/scientific.md:342
#: ../../source/packages/scientific.md:357
#: ../../source/packages/scientific.md:387
#: ../../source/packages/scientific.md:417
#: ../../source/packages/scientific.md:432
#: ../../source/packages/scientific.md:462
#: ../../source/packages/scientific.md:492
#: ../../source/packages/scientific.md:553
#: ../../source/packages/scientific.md:568
#: ../../source/packages/scientific.md:583
#: ../../source/packages/scientific.md:699
#: ../../source/packages/scientific.md:817
#: ../../source/packages/scientific.md:847
#: ../../source/packages/scientific.md:862
#: ../../source/packages/scientific.md:892
#: ../../source/packages/scientific.md:944 ../../source/packages/strings.md:47
#: ../../source/packages/strings.md:90
msgid "Tags:"
msgstr ""

#: ../../source/packages/data-types.md:88
msgid ""
"![Release](https://img.shields.io/github/v/release/jmhodges/kdtree2?color=green)"
" ![license](https://img.shields.io/github/license/jmhodges/kdtree2) "
"![stars](https://img.shields.io/github/stars/jmhodges/kdtree2) "
"![forks](https://img.shields.io/github/forks/jmhodges/kdtree2) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/jmhodges/kdtree2?color=blue) "
"![issues](https://img.shields.io/github/issues/jmhodges/kdtree2?color=yellow)"
msgstr ""

#: ../../source/packages/data-types.md:98
msgid ""
"[Lookup Table "
"Fortran](https://github.com/jannisteunissen/lookup_table_fortran)"
msgstr ""

#: ../../source/packages/data-types.md:99
msgid "Linear lookup table implemented in modern Fortran"
msgstr ""

#: ../../source/packages/data-types.md:103
msgid ""
"![Release](https://img.shields.io/github/v/release/jannisteunissen/lookup_table_fortran?color=green)"
" "
"![license](https://img.shields.io/github/license/jannisteunissen/lookup_table_fortran)"
" "
"![stars](https://img.shields.io/github/stars/jannisteunissen/lookup_table_fortran)"
" "
"![forks](https://img.shields.io/github/forks/jannisteunissen/lookup_table_fortran)"
" ![last-commit](https://img.shields.io/github/last-"
"commit/jannisteunissen/lookup_table_fortran?color=blue) "
"![issues](https://img.shields.io/github/issues/jannisteunissen/lookup_table_fortran?color=yellow)"
msgstr ""

#: ../../source/packages/data-types.md:114
msgid "Procedures that expand on the Fortran DATE_AND_TIME intrinsic"
msgstr ""

#: ../../source/packages/data-types.md:116
msgid "Tags: date weekday unix epoch month convert moon phases duration"
msgstr ""

#: ../../source/packages/data-types.md:118
msgid ""
"![Release](https://img.shields.io/github/v/release/urbanjost/M_time?color=green)"
" ![license](https://img.shields.io/github/license/urbanjost/M_time) "
"![stars](https://img.shields.io/github/stars/urbanjost/M_time) "
"![forks](https://img.shields.io/github/forks/urbanjost/M_time) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/urbanjost/M_time?color=blue) "
"![issues](https://img.shields.io/github/issues/urbanjost/M_time?color=yellow)"
msgstr ""

#: ../../source/packages/data-types.md:128
#: ../../source/packages/numerical.md:518
msgid "[PENF](https://github.com/szaghi/PENF)"
msgstr ""

#: ../../source/packages/data-types.md:129
#: ../../source/packages/numerical.md:519
msgid ""
"Provides portable kind-parameters and many useful procedures to deal with"
" them"
msgstr ""

#: ../../source/packages/data-types.md:131
#: ../../source/packages/numerical.md:521
msgid "Tags: kinds integer real ieee floating point floats precision"
msgstr ""

#: ../../source/packages/data-types.md:133
#: ../../source/packages/numerical.md:523
msgid ""
"![Release](https://img.shields.io/github/v/release/szaghi/PENF?color=green)"
" ![license](https://img.shields.io/github/license/szaghi/PENF) "
"![stars](https://img.shields.io/github/stars/szaghi/PENF) "
"![forks](https://img.shields.io/github/forks/szaghi/PENF) ![last-"
"commit](https://img.shields.io/github/last-commit/szaghi/PENF?color=blue)"
" ![issues](https://img.shields.io/github/issues/szaghi/PENF?color=yellow)"
msgstr ""

#: ../../source/packages/data-types.md:143
#: ../../source/packages/numerical.md:557
msgid "[PSBLAS](https://github.com/sfilippone/psblas3)"
msgstr ""

#: ../../source/packages/data-types.md:144
#: ../../source/packages/numerical.md:558
msgid "Parallel Sparse BLAS"
msgstr ""

#: ../../source/packages/data-types.md:146
#: ../../source/packages/numerical.md:560
msgid "Tags: linear-algebra mpi"
msgstr ""

#: ../../source/packages/data-types.md:148
#: ../../source/packages/numerical.md:562
msgid ""
"![Release](https://img.shields.io/github/v/release/sfilippone/psblas3?color=green)"
" ![license](https://img.shields.io/github/license/sfilippone/psblas3) "
"![stars](https://img.shields.io/github/stars/sfilippone/psblas3) "
"![forks](https://img.shields.io/github/forks/sfilippone/psblas3) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/sfilippone/psblas3?color=blue) "
"![issues](https://img.shields.io/github/issues/sfilippone/psblas3?color=yellow)"
msgstr ""

#: ../../source/packages/data-types.md:158
msgid "[qContainers](https://github.com/darmar-lt/qcontainers)"
msgstr ""

#: ../../source/packages/data-types.md:159
msgid "Store any intrinsic or derived data type to a container"
msgstr ""

#: ../../source/packages/data-types.md:161
msgid ""
"Tags: qlibc tree table hash table linked list vector dynamic array unique"
" set"
msgstr ""

#: ../../source/packages/data-types.md:163
msgid ""
"![Release](https://img.shields.io/github/v/release/darmar-"
"lt/qcontainers?color=green) "
"![license](https://img.shields.io/github/license/darmar-lt/qcontainers) "
"![stars](https://img.shields.io/github/stars/darmar-lt/qcontainers) "
"![forks](https://img.shields.io/github/forks/darmar-lt/qcontainers) "
"![last-commit](https://img.shields.io/github/last-commit/darmar-"
"lt/qcontainers?color=blue) ![issues](https://img.shields.io/github/issues"
"/darmar-lt/qcontainers?color=yellow)"
msgstr ""

#: ../../source/packages/examples.md:14
msgid "[Blocktran](https://github.com/fortran-gaming/blocktran)"
msgstr ""

#: ../../source/packages/examples.md:15
msgid "Object-oriented Fortran falling block game using Curses console graphics"
msgstr ""

#: ../../source/packages/examples.md:17
msgid "Tags: game"
msgstr ""

#: ../../source/packages/examples.md:19
msgid ""
"![Release](https://img.shields.io/github/v/release/fortran-"
"gaming/blocktran?color=green) "
"![license](https://img.shields.io/github/license/fortran-"
"gaming/blocktran) ![stars](https://img.shields.io/github/stars/fortran-"
"gaming/blocktran) ![forks](https://img.shields.io/github/forks/fortran-"
"gaming/blocktran) ![last-commit](https://img.shields.io/github/last-"
"commit/fortran-gaming/blocktran?color=blue) "
"![issues](https://img.shields.io/github/issues/fortran-"
"gaming/blocktran?color=yellow)"
msgstr ""

#: ../../source/packages/examples.md:29
msgid "[Fortran 2018 examples](https://github.com/scivision/fortran2018-examples)"
msgstr ""

#: ../../source/packages/examples.md:30
msgid ""
"Easy examples of scientific computing with modern, powerful, easy Fortran"
" 2018 standard"
msgstr ""

#: ../../source/packages/examples.md:32
msgid ""
"Tags: block coarray contiguous namelist openmp random submodule "
"iso_fortran_env"
msgstr ""

#: ../../source/packages/examples.md:34
msgid ""
"![Release](https://img.shields.io/github/v/release/scivision/fortran2018-examples?color=green)"
" "
"![license](https://img.shields.io/github/license/scivision/fortran2018-examples)"
" "
"![stars](https://img.shields.io/github/stars/scivision/fortran2018-examples)"
" "
"![forks](https://img.shields.io/github/forks/scivision/fortran2018-examples)"
" ![last-commit](https://img.shields.io/github/last-"
"commit/scivision/fortran2018-examples?color=blue) "
"![issues](https://img.shields.io/github/issues/scivision/fortran2018-examples?color=yellow)"
msgstr ""

#: ../../source/packages/examples.md:44
msgid "[Fortran patterns](https://github.com/farhanjk/FortranPatterns)"
msgstr ""

#: ../../source/packages/examples.md:45
msgid "Popular design patterns implemented in Fortran"
msgstr ""

#: ../../source/packages/examples.md:49
msgid ""
"![Release](https://img.shields.io/github/v/release/farhanjk/FortranPatterns?color=green)"
" "
"![license](https://img.shields.io/github/license/farhanjk/FortranPatterns)"
" ![stars](https://img.shields.io/github/stars/farhanjk/FortranPatterns) "
"![forks](https://img.shields.io/github/forks/farhanjk/FortranPatterns) "
"![last-commit](https://img.shields.io/github/last-"
"commit/farhanjk/FortranPatterns?color=blue) "
"![issues](https://img.shields.io/github/issues/farhanjk/FortranPatterns?color=yellow)"
msgstr ""

#: ../../source/packages/examples.md:59 ../../source/packages/numerical.md:440
msgid ""
"[Numerical methods in fortran](https://github.com/planelles20/numerical-"
"methods-fortran)"
msgstr ""

#: ../../source/packages/examples.md:60 ../../source/packages/numerical.md:441
msgid "Solving linear, nonlinear equations, ordinary differential equations"
msgstr ""

#: ../../source/packages/examples.md:62 ../../source/packages/numerical.md:443
msgid "Tags: ode pde integral stochastic quadrature plotting"
msgstr ""

#: ../../source/packages/examples.md:64 ../../source/packages/numerical.md:445
msgid ""
"![Release](https://img.shields.io/github/v/release/planelles20/numerical-"
"methods-fortran?color=green) "
"![license](https://img.shields.io/github/license/planelles20/numerical-"
"methods-fortran) ![stars](https://img.shields.io/github/stars/planelles20"
"/numerical-methods-fortran) "
"![forks](https://img.shields.io/github/forks/planelles20/numerical-"
"methods-fortran) ![last-commit](https://img.shields.io/github/last-"
"commit/planelles20/numerical-methods-fortran?color=blue) "
"![issues](https://img.shields.io/github/issues/planelles20/numerical-"
"methods-fortran?color=yellow)"
msgstr ""

#: ../../source/packages/examples.md:74 ../../source/packages/interfaces.md:448
msgid "[tcp-client-server](https://github.com/modern-fortran/tcp-client-server)"
msgstr ""

#: ../../source/packages/examples.md:75 ../../source/packages/interfaces.md:449
msgid "A minimal Fortran TCP client and server demonstrating c interoperability"
msgstr ""

#: ../../source/packages/examples.md:79 ../../source/packages/interfaces.md:453
msgid ""
"![Release](https://img.shields.io/github/v/release/modern-fortran/tcp-"
"client-server?color=green) "
"![license](https://img.shields.io/github/license/modern-fortran/tcp-"
"client-server) ![stars](https://img.shields.io/github/stars/modern-"
"fortran/tcp-client-server) ![forks](https://img.shields.io/github/forks"
"/modern-fortran/tcp-client-server) ![last-"
"commit](https://img.shields.io/github/last-commit/modern-fortran/tcp-"
"client-server?color=blue) ![issues](https://img.shields.io/github/issues"
"/modern-fortran/tcp-client-server?color=yellow)"
msgstr ""

#: ../../source/packages/examples.md:89
msgid "[Tsunami](https://github.com/modern-fortran/tsunami)"
msgstr ""

#: ../../source/packages/examples.md:90
msgid "A parallel shallow water equations solver"
msgstr ""

#: ../../source/packages/examples.md:94
msgid ""
"![Release](https://img.shields.io/github/v/release/modern-"
"fortran/tsunami?color=green) "
"![license](https://img.shields.io/github/license/modern-fortran/tsunami) "
"![stars](https://img.shields.io/github/stars/modern-fortran/tsunami) "
"![forks](https://img.shields.io/github/forks/modern-fortran/tsunami) "
"![last-commit](https://img.shields.io/github/last-commit/modern-"
"fortran/tsunami?color=blue) "
"![issues](https://img.shields.io/github/issues/modern-"
"fortran/tsunami?color=yellow)"
msgstr ""

#: ../../source/packages/graphics.md:14 ../../source/packages/interfaces.md:66
msgid "[f03gl](http://www-stone.ch.cam.ac.uk/pub/f03gl/index.xhtml)"
msgstr ""

#: ../../source/packages/graphics.md:16 ../../source/packages/interfaces.md:68
msgid "Fortran 2003 interface to OpenGL"
msgstr ""

#: ../../source/packages/graphics.md:18 ../../source/packages/interfaces.md:70
msgid "Tags: graphics interface opengl"
msgstr ""

#: ../../source/packages/graphics.md:23 ../../source/packages/interfaces.md:195
msgid "[fortran-sdl2](https://github.com/interkosmos/fortran-sdl2)"
msgstr ""

#: ../../source/packages/graphics.md:24 ../../source/packages/interfaces.md:196
msgid ""
"A collection of ISO C binding interfaces to Simple DirectMedia Layer 2.0 "
"(SDL 2.0), for multimedia and game programming in Fortran"
msgstr ""

#: ../../source/packages/graphics.md:28 ../../source/packages/interfaces.md:200
msgid ""
"![Release](https://img.shields.io/github/v/release/interkosmos/fortran-"
"sdl2?color=green) "
"![license](https://img.shields.io/github/license/interkosmos/fortran-"
"sdl2) ![stars](https://img.shields.io/github/stars/interkosmos/fortran-"
"sdl2) ![forks](https://img.shields.io/github/forks/interkosmos/fortran-"
"sdl2) ![last-commit](https://img.shields.io/github/last-"
"commit/interkosmos/fortran-sdl2?color=blue) "
"![issues](https://img.shields.io/github/issues/interkosmos/fortran-"
"sdl2?color=yellow)"
msgstr ""

#: ../../source/packages/graphics.md:38 ../../source/packages/interfaces.md:210
msgid "[fortran-xlib](https://github.com/interkosmos/fortran-xlib)"
msgstr ""

#: ../../source/packages/graphics.md:39 ../../source/packages/interfaces.md:211
msgid "A collection of ISO C binding interfaces to Xlib for Fortran 2003"
msgstr ""

#: ../../source/packages/graphics.md:41 ../../source/packages/interfaces.md:213
msgid "Tags: x11 mandelbrot raycast wireframe"
msgstr ""

#: ../../source/packages/graphics.md:43 ../../source/packages/interfaces.md:215
msgid ""
"![Release](https://img.shields.io/github/v/release/interkosmos/fortran-"
"xlib?color=green) "
"![license](https://img.shields.io/github/license/interkosmos/fortran-"
"xlib) ![stars](https://img.shields.io/github/stars/interkosmos/fortran-"
"xlib) ![forks](https://img.shields.io/github/forks/interkosmos/fortran-"
"xlib) ![last-commit](https://img.shields.io/github/last-"
"commit/interkosmos/fortran-xlib?color=blue) "
"![issues](https://img.shields.io/github/issues/interkosmos/fortran-"
"xlib?color=yellow)"
msgstr ""

#: ../../source/packages/graphics.md:53 ../../source/packages/interfaces.md:264
msgid "[gtk-fortran](https://github.com/vmagnin/gtk-fortran)"
msgstr ""

#: ../../source/packages/graphics.md:54 ../../source/packages/interfaces.md:265
msgid "A cross-platform library to build Graphical User Interfaces (GUI)"
msgstr ""

#: ../../source/packages/graphics.md:56 ../../source/packages/interfaces.md:267
msgid "Tags: gui gtk graphical user interface"
msgstr ""

#: ../../source/packages/graphics.md:58 ../../source/packages/interfaces.md:269
msgid ""
"![Release](https://img.shields.io/github/v/release/vmagnin/gtk-"
"fortran?color=green) "
"![license](https://img.shields.io/github/license/vmagnin/gtk-fortran) "
"![stars](https://img.shields.io/github/stars/vmagnin/gtk-fortran) "
"![forks](https://img.shields.io/github/forks/vmagnin/gtk-fortran) ![last-"
"commit](https://img.shields.io/github/last-commit/vmagnin/gtk-"
"fortran?color=blue) "
"![issues](https://img.shields.io/github/issues/vmagnin/gtk-"
"fortran?color=yellow)"
msgstr ""

#: ../../source/packages/graphics.md:68
msgid "[Illustrate](https://github.com/ccsb-scripps/illustrate)"
msgstr ""

#: ../../source/packages/graphics.md:69
msgid "Biomolecular Illustration Tool"
msgstr ""

#: ../../source/packages/graphics.md:71
msgid "Tags: pdb"
msgstr ""

#: ../../source/packages/graphics.md:73
msgid ""
"![Release](https://img.shields.io/github/v/release/ccsb-"
"scripps/illustrate?color=green) "
"![license](https://img.shields.io/github/license/ccsb-scripps/illustrate)"
" ![stars](https://img.shields.io/github/stars/ccsb-scripps/illustrate) "
"![forks](https://img.shields.io/github/forks/ccsb-scripps/illustrate) "
"![last-commit](https://img.shields.io/github/last-commit/ccsb-"
"scripps/illustrate?color=blue) "
"![issues](https://img.shields.io/github/issues/ccsb-"
"scripps/illustrate?color=yellow)"
msgstr ""

#: ../../source/packages/graphics.md:83
msgid "[M_draw](https://github.com/urbanjost/M_draw)"
msgstr ""

#: ../../source/packages/graphics.md:84
msgid "Low-level vector graphics library"
msgstr ""

#: ../../source/packages/graphics.md:88
msgid ""
"![Release](https://img.shields.io/github/v/release/urbanjost/M_draw?color=green)"
" ![license](https://img.shields.io/github/license/urbanjost/M_draw) "
"![stars](https://img.shields.io/github/stars/urbanjost/M_draw) "
"![forks](https://img.shields.io/github/forks/urbanjost/M_draw) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/urbanjost/M_draw?color=blue) "
"![issues](https://img.shields.io/github/issues/urbanjost/M_draw?color=yellow)"
msgstr ""

#: ../../source/packages/graphics.md:98 ../../source/packages/interfaces.md:372
msgid "[ogpf](https://github.com/kookma/ogpf)"
msgstr ""

#: ../../source/packages/graphics.md:99 ../../source/packages/interfaces.md:373
msgid "Object based interface to GnuPlot for Fortran"
msgstr ""

#: ../../source/packages/graphics.md:101
#: ../../source/packages/interfaces.md:375
msgid "Tags: animation plot surface contour"
msgstr ""

#: ../../source/packages/graphics.md:103
#: ../../source/packages/interfaces.md:377
msgid ""
"![Release](https://img.shields.io/github/v/release/kookma/ogpf?color=green)"
" ![license](https://img.shields.io/github/license/kookma/ogpf) "
"![stars](https://img.shields.io/github/stars/kookma/ogpf) "
"![forks](https://img.shields.io/github/forks/kookma/ogpf) ![last-"
"commit](https://img.shields.io/github/last-commit/kookma/ogpf?color=blue)"
" ![issues](https://img.shields.io/github/issues/kookma/ogpf?color=yellow)"
msgstr ""

#: ../../source/packages/graphics.md:113
#: ../../source/packages/interfaces.md:396
msgid "[PLplot](http://plplot.sourceforge.net/)"
msgstr ""

#: ../../source/packages/graphics.md:115
#: ../../source/packages/interfaces.md:398
msgid "Library for scientific plotting"
msgstr ""

#: ../../source/packages/graphics.md:117
#: ../../source/packages/interfaces.md:400
msgid "Tags: plot surface contour interface"
msgstr ""

#: ../../source/packages/graphics.md:122
#: ../../source/packages/interfaces.md:405
msgid "[pyplot-fortran](https://github.com/jacobwilliams/pyplot-fortran)"
msgstr ""

#: ../../source/packages/graphics.md:123
#: ../../source/packages/interfaces.md:406
msgid "For generating plots from Fortran using Python's matplotlib.pyplot"
msgstr ""

#: ../../source/packages/graphics.md:125
#: ../../source/packages/interfaces.md:408
msgid "Tags: pyplot matplotlib contour histogram"
msgstr ""

#: ../../source/packages/graphics.md:127
#: ../../source/packages/interfaces.md:410
msgid ""
"![Release](https://img.shields.io/github/v/release/jacobwilliams/pyplot-"
"fortran?color=green) "
"![license](https://img.shields.io/github/license/jacobwilliams/pyplot-"
"fortran) ![stars](https://img.shields.io/github/stars/jacobwilliams"
"/pyplot-fortran) "
"![forks](https://img.shields.io/github/forks/jacobwilliams/pyplot-"
"fortran) ![last-commit](https://img.shields.io/github/last-"
"commit/jacobwilliams/pyplot-fortran?color=blue) "
"![issues](https://img.shields.io/github/issues/jacobwilliams/pyplot-"
"fortran?color=yellow)"
msgstr ""

#: ../../source/packages/interfaces.md:14
msgid "[aotus](https://osdn.net/projects/apes/scm/hg/aotus/)"
msgstr ""

#: ../../source/packages/interfaces.md:16
msgid "Fortran wrapper around the C-API of the Lua scripting language"
msgstr ""

#: ../../source/packages/interfaces.md:18
#: ../../source/packages/interfaces.md:123
#: ../../source/packages/interfaces.md:183
#: ../../source/packages/interfaces.md:292
msgid "Tags: lua"
msgstr ""

#: ../../source/packages/interfaces.md:23
msgid "[arrayfire-fortran](https://github.com/arrayfire/arrayfire-fortran)"
msgstr ""

#: ../../source/packages/interfaces.md:24
msgid "Fortran binding to the ArrayFire general purpose GPU library"
msgstr ""

#: ../../source/packages/interfaces.md:26
msgid "Tags: cpp gpu opencl"
msgstr ""

#: ../../source/packages/interfaces.md:28
msgid ""
"![Release](https://img.shields.io/github/v/release/arrayfire/arrayfire-"
"fortran?color=green) "
"![license](https://img.shields.io/github/license/arrayfire/arrayfire-"
"fortran) ![stars](https://img.shields.io/github/stars/arrayfire"
"/arrayfire-fortran) "
"![forks](https://img.shields.io/github/forks/arrayfire/arrayfire-fortran)"
" ![last-commit](https://img.shields.io/github/last-commit/arrayfire"
"/arrayfire-fortran?color=blue) "
"![issues](https://img.shields.io/github/issues/arrayfire/arrayfire-"
"fortran?color=yellow)"
msgstr ""

#: ../../source/packages/interfaces.md:38
msgid "[clfortran](https://github.com/cass-support/clfortran)"
msgstr ""

#: ../../source/packages/interfaces.md:39
msgid "Fortran interfaces to Khronos OpenCL 1.2 API"
msgstr ""

#: ../../source/packages/interfaces.md:41
#: ../../source/packages/interfaces.md:138
msgid "Tags: gpu compute accelerator"
msgstr ""

#: ../../source/packages/interfaces.md:43
msgid ""
"![Release](https://img.shields.io/github/v/release/cass-"
"support/clfortran?color=green) "
"![license](https://img.shields.io/github/license/cass-support/clfortran) "
"![stars](https://img.shields.io/github/stars/cass-support/clfortran) "
"![forks](https://img.shields.io/github/forks/cass-support/clfortran) "
"![last-commit](https://img.shields.io/github/last-commit/cass-"
"support/clfortran?color=blue) "
"![issues](https://img.shields.io/github/issues/cass-"
"support/clfortran?color=yellow)"
msgstr ""

#: ../../source/packages/interfaces.md:53
msgid "[ELSI](https://gitlab.com/elsi_project/elsi_interface)"
msgstr ""

#: ../../source/packages/interfaces.md:54
msgid ""
"A software interface designed for electronic structure codes to connect "
"with ELPA, libOMM, PEXSI, EigenExa, SLEPc, NTPoly, BSEPACK, LAPACK, "
"MAGMA, and other solver libraries."
msgstr ""

#: ../../source/packages/interfaces.md:56
msgid "Tags: electronic-structure mpi gpu"
msgstr ""

#: ../../source/packages/interfaces.md:58
msgid ""
"![Release](https://img.shields.io/gitlab/v/release/elsi_project/elsi_interface?date_order_by=created_at&sort=date&color=green)"
" "
"![license](https://img.shields.io/gitlab/license/elsi_project/elsi_interface)"
" "
"![forks](https://img.shields.io/gitlab/forks/elsi_project/elsi_interface)"
" "
"![issues](https://img.shields.io/gitlab/issues/all/elsi_project/elsi_interface?color=yellow)"
msgstr ""

#: ../../source/packages/interfaces.md:75
#: ../../source/packages/numerical.md:167
msgid "[fgsl](https://github.com/reinh-bader/fgsl)"
msgstr ""

#: ../../source/packages/interfaces.md:76
#: ../../source/packages/numerical.md:168
msgid "Fortran interface to the GNU Scientific Library"
msgstr ""

#: ../../source/packages/interfaces.md:80
#: ../../source/packages/numerical.md:172
msgid ""
"![Release](https://img.shields.io/github/v/release/reinh-"
"bader/fgsl?color=green) ![license](https://img.shields.io/github/license"
"/reinh-bader/fgsl) ![stars](https://img.shields.io/github/stars/reinh-"
"bader/fgsl) ![forks](https://img.shields.io/github/forks/reinh-"
"bader/fgsl) ![last-commit](https://img.shields.io/github/last-commit"
"/reinh-bader/fgsl?color=blue) "
"![issues](https://img.shields.io/github/issues/reinh-"
"bader/fgsl?color=yellow)"
msgstr ""

#: ../../source/packages/interfaces.md:90
msgid "[FKB](https://github.com/scientific-computing/FKB)"
msgstr ""

#: ../../source/packages/interfaces.md:91
msgid ""
"Fortran Keras Bridge - A two-way deep learning bridge between Keras and "
"Fortran"
msgstr ""

#: ../../source/packages/interfaces.md:93
msgid "Tags: deep-learning data-science machine-learning neural-networks"
msgstr ""

#: ../../source/packages/interfaces.md:95
msgid ""
"![Release](https://img.shields.io/github/v/release/scientific-"
"computing/FKB?color=green) "
"![license](https://img.shields.io/github/license/scientific-"
"computing/FKB) ![stars](https://img.shields.io/github/stars/scientific-"
"computing/FKB) ![forks](https://img.shields.io/github/forks/scientific-"
"computing/FKB) ![last-commit](https://img.shields.io/github/last-commit"
"/scientific-computing/FKB?color=blue) "
"![issues](https://img.shields.io/github/issues/scientific-"
"computing/FKB?color=yellow)"
msgstr ""

#: ../../source/packages/interfaces.md:105
msgid "[flibcpp](https://github.com/swig-fortran/flibcpp)"
msgstr ""

#: ../../source/packages/interfaces.md:106
msgid "Fortran bindings to the C++ Standard Library"
msgstr ""

#: ../../source/packages/interfaces.md:108
msgid "Tags: cpp"
msgstr ""

#: ../../source/packages/interfaces.md:110
msgid ""
"![Release](https://img.shields.io/github/v/release/swig-"
"fortran/flibcpp?color=green) "
"![license](https://img.shields.io/github/license/swig-fortran/flibcpp) "
"![stars](https://img.shields.io/github/stars/swig-fortran/flibcpp) "
"![forks](https://img.shields.io/github/forks/swig-fortran/flibcpp) "
"![last-commit](https://img.shields.io/github/last-commit/swig-"
"fortran/flibcpp?color=blue) "
"![issues](https://img.shields.io/github/issues/swig-"
"fortran/flibcpp?color=yellow)"
msgstr ""

#: ../../source/packages/interfaces.md:120
msgid "[flook](https://github.com/ElectronicStructureLibrary/flook)"
msgstr ""

#: ../../source/packages/interfaces.md:125
msgid ""
"![Release](https://img.shields.io/github/v/release/ElectronicStructureLibrary/flook?color=green)"
" "
"![license](https://img.shields.io/github/license/ElectronicStructureLibrary/flook)"
" "
"![stars](https://img.shields.io/github/stars/ElectronicStructureLibrary/flook)"
" "
"![forks](https://img.shields.io/github/forks/ElectronicStructureLibrary/flook)"
" ![last-commit](https://img.shields.io/github/last-"
"commit/ElectronicStructureLibrary/flook?color=blue) "
"![issues](https://img.shields.io/github/issues/ElectronicStructureLibrary/flook?color=yellow)"
msgstr ""

#: ../../source/packages/interfaces.md:135
msgid "[Focal](https://github.com/LKedward/focal)"
msgstr ""

#: ../../source/packages/interfaces.md:136
msgid ""
"A module library which wraps calls to the OpenCL runtime API with a "
"higher abstraction level"
msgstr ""

#: ../../source/packages/interfaces.md:140
msgid ""
"![Release](https://img.shields.io/github/v/release/LKedward/focal?color=green)"
" ![license](https://img.shields.io/github/license/LKedward/focal) "
"![stars](https://img.shields.io/github/stars/LKedward/focal) "
"![forks](https://img.shields.io/github/forks/LKedward/focal) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/LKedward/focal?color=blue) "
"![issues](https://img.shields.io/github/issues/LKedward/focal?color=yellow)"
msgstr ""

#: ../../source/packages/interfaces.md:150
msgid "[forpy](https://github.com/ylikx/forpy)"
msgstr ""

#: ../../source/packages/interfaces.md:151
msgid "allows you to use Python features in Fortran"
msgstr ""

#: ../../source/packages/interfaces.md:153
msgid "Tags: dict list tuple numpy python matplotlib scipy"
msgstr ""

#: ../../source/packages/interfaces.md:155
msgid ""
"![Release](https://img.shields.io/github/v/release/ylikx/forpy?color=green)"
" ![license](https://img.shields.io/github/license/ylikx/forpy) "
"![stars](https://img.shields.io/github/stars/ylikx/forpy) "
"![forks](https://img.shields.io/github/forks/ylikx/forpy) ![last-"
"commit](https://img.shields.io/github/last-commit/ylikx/forpy?color=blue)"
" ![issues](https://img.shields.io/github/issues/ylikx/forpy?color=yellow)"
msgstr ""

#: ../../source/packages/interfaces.md:165
msgid "[fortran-curl](https://github.com/interkosmos/fortran-curl)"
msgstr ""

#: ../../source/packages/interfaces.md:166
msgid "Fortran 2008 interface bindings to libcurl"
msgstr ""

#: ../../source/packages/interfaces.md:168
msgid "Tags: https curl imap libcurl smtp gopher"
msgstr ""

#: ../../source/packages/interfaces.md:170
msgid ""
"![Release](https://img.shields.io/github/v/release/interkosmos/fortran-"
"curl?color=green) "
"![license](https://img.shields.io/github/license/interkosmos/fortran-"
"curl) ![stars](https://img.shields.io/github/stars/interkosmos/fortran-"
"curl) ![forks](https://img.shields.io/github/forks/interkosmos/fortran-"
"curl) ![last-commit](https://img.shields.io/github/last-"
"commit/interkosmos/fortran-curl?color=blue) "
"![issues](https://img.shields.io/github/issues/interkosmos/fortran-"
"curl?color=yellow)"
msgstr ""

#: ../../source/packages/interfaces.md:180
msgid "[fortran-lua53](https://github.com/interkosmos/fortran-lua53)"
msgstr ""

#: ../../source/packages/interfaces.md:181
msgid "Fortran 2008 interface bindings to Lua 5.3"
msgstr ""

#: ../../source/packages/interfaces.md:185
msgid ""
"![Release](https://img.shields.io/github/v/release/interkosmos/fortran-"
"lua53?color=green) "
"![license](https://img.shields.io/github/license/interkosmos/fortran-"
"lua53) ![stars](https://img.shields.io/github/stars/interkosmos/fortran-"
"lua53) ![forks](https://img.shields.io/github/forks/interkosmos/fortran-"
"lua53) ![last-commit](https://img.shields.io/github/last-"
"commit/interkosmos/fortran-lua53?color=blue) "
"![issues](https://img.shields.io/github/issues/interkosmos/fortran-"
"lua53?color=yellow)"
msgstr ""

#: ../../source/packages/interfaces.md:225 ../../source/packages/io.md:132
#: ../../source/packages/libraries.md:89 ../../source/packages/numerical.md:242
msgid "[fortranlib](https://github.com/astrofrog/fortranlib)"
msgstr ""

#: ../../source/packages/interfaces.md:226 ../../source/packages/io.md:133
#: ../../source/packages/libraries.md:90 ../../source/packages/numerical.md:243
msgid "Collection of personal scientific routines in Fortran"
msgstr ""

#: ../../source/packages/interfaces.md:228 ../../source/packages/io.md:135
#: ../../source/packages/libraries.md:92 ../../source/packages/numerical.md:245
msgid ""
"Tags: solver integral integrate interpolation histogram constants hdf5 "
"error random posix angles probability stokes vectors"
msgstr ""

#: ../../source/packages/interfaces.md:230 ../../source/packages/io.md:137
#: ../../source/packages/libraries.md:94 ../../source/packages/numerical.md:247
msgid ""
"![Release](https://img.shields.io/github/v/release/astrofrog/fortranlib?color=green)"
" ![license](https://img.shields.io/github/license/astrofrog/fortranlib) "
"![stars](https://img.shields.io/github/stars/astrofrog/fortranlib) "
"![forks](https://img.shields.io/github/forks/astrofrog/fortranlib) "
"![last-commit](https://img.shields.io/github/last-"
"commit/astrofrog/fortranlib?color=blue) "
"![issues](https://img.shields.io/github/issues/astrofrog/fortranlib?color=yellow)"
msgstr ""

#: ../../source/packages/interfaces.md:240
#: ../../source/packages/programming.md:141
msgid "[fortyxima](https://bitbucket.org/aradi/fortyxima/src/develop/)"
msgstr ""

#: ../../source/packages/interfaces.md:242
#: ../../source/packages/programming.md:143
msgid "File system manipulation and unit testing framework"
msgstr ""

#: ../../source/packages/interfaces.md:244
#: ../../source/packages/programming.md:145
msgid "Tags: posix libc"
msgstr ""

#: ../../source/packages/interfaces.md:249 ../../source/packages/io.md:162
#: ../../source/packages/libraries.md:119
#: ../../source/packages/numerical.md:257
#: ../../source/packages/programming.md:195
#: ../../source/packages/scientific.md:414 ../../source/packages/strings.md:44
msgid "[Futility](https://github.com/CASL/Futility)"
msgstr ""

#: ../../source/packages/interfaces.md:250 ../../source/packages/io.md:163
#: ../../source/packages/libraries.md:120
#: ../../source/packages/numerical.md:258
#: ../../source/packages/programming.md:196
#: ../../source/packages/scientific.md:415 ../../source/packages/strings.md:45
msgid ""
"Fortran utilities including unit test harness, arbitrary length strings, "
"parameter list objects, timers, geometry definitions, file wrappers, "
"linear algebra tools, and parallel computing support"
msgstr ""

#: ../../source/packages/interfaces.md:254 ../../source/packages/io.md:167
#: ../../source/packages/libraries.md:124
#: ../../source/packages/numerical.md:262
#: ../../source/packages/programming.md:200
#: ../../source/packages/scientific.md:419 ../../source/packages/strings.md:49
msgid ""
"![Release](https://img.shields.io/github/v/release/CASL/Futility?color=green)"
" ![license](https://img.shields.io/github/license/CASL/Futility) "
"![stars](https://img.shields.io/github/stars/CASL/Futility) "
"![forks](https://img.shields.io/github/forks/CASL/Futility) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/CASL/Futility?color=blue) "
"![issues](https://img.shields.io/github/issues/CASL/Futility?color=yellow)"
msgstr ""

#: ../../source/packages/interfaces.md:279
#: ../../source/packages/numerical.md:347
#: ../../source/packages/scientific.md:519
msgid "[librsb](http://librsb.sourceforge.net/)"
msgstr ""

#: ../../source/packages/interfaces.md:281
#: ../../source/packages/numerical.md:349
#: ../../source/packages/scientific.md:521
msgid ""
"A shared memory parallel sparse matrix computations library for the "
"Recursive Sparse Blocks format implementing the Sparse BLAS standard"
msgstr ""

#: ../../source/packages/interfaces.md:283
#: ../../source/packages/numerical.md:351
#: ../../source/packages/scientific.md:523
msgid "Tags: linear-algebra openmp"
msgstr ""

#: ../../source/packages/interfaces.md:288
msgid "[LuaF](https://chiselapp.com/user/vadimz/repository/luaf/)"
msgstr ""

#: ../../source/packages/interfaces.md:290
msgid "Fortran 2003/2008 bindings to Lua 5.1"
msgstr ""

#: ../../source/packages/interfaces.md:297
msgid "[M_process](https://github.com/urbanjost/M_process)"
msgstr ""

#: ../../source/packages/interfaces.md:298
msgid "Read and write lines to or from a process from Fortran via a C wrapper"
msgstr ""

#: ../../source/packages/interfaces.md:302
msgid ""
"![Release](https://img.shields.io/github/v/release/urbanjost/M_process?color=green)"
" ![license](https://img.shields.io/github/license/urbanjost/M_process) "
"![stars](https://img.shields.io/github/stars/urbanjost/M_process) "
"![forks](https://img.shields.io/github/forks/urbanjost/M_process) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/urbanjost/M_process?color=blue) "
"![issues](https://img.shields.io/github/issues/urbanjost/M_process?color=yellow)"
msgstr ""

#: ../../source/packages/interfaces.md:312
msgid "[M_system](https://github.com/urbanjost/M_system)"
msgstr ""

#: ../../source/packages/interfaces.md:313
msgid "Call C system routines from Fortran"
msgstr ""

#: ../../source/packages/interfaces.md:315
msgid ""
"Tags: posix putenv getenv setenv environment file system mkdir rename "
"rmdir chmod rand uname"
msgstr ""

#: ../../source/packages/interfaces.md:317
msgid ""
"![Release](https://img.shields.io/github/v/release/urbanjost/M_system?color=green)"
" ![license](https://img.shields.io/github/license/urbanjost/M_system) "
"![stars](https://img.shields.io/github/stars/urbanjost/M_system) "
"![forks](https://img.shields.io/github/forks/urbanjost/M_system) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/urbanjost/M_system?color=blue) "
"![issues](https://img.shields.io/github/issues/urbanjost/M_system?color=yellow)"
msgstr ""

#: ../../source/packages/interfaces.md:327
msgid "[mpifx](https://github.com/dftbplus/mpifx)"
msgstr ""

#: ../../source/packages/interfaces.md:328
msgid "Modern Fortran wrappers around MPI routines"
msgstr ""

#: ../../source/packages/interfaces.md:330
msgid "Tags: mpi fypp"
msgstr ""

#: ../../source/packages/interfaces.md:332
msgid ""
"![Release](https://img.shields.io/github/v/release/dftbplus/mpifx?color=green)"
" ![license](https://img.shields.io/github/license/dftbplus/mpifx) "
"![stars](https://img.shields.io/github/stars/dftbplus/mpifx) "
"![forks](https://img.shields.io/github/forks/dftbplus/mpifx) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/dftbplus/mpifx?color=blue) "
"![issues](https://img.shields.io/github/issues/dftbplus/mpifx?color=yellow)"
msgstr ""

#: ../../source/packages/interfaces.md:342
msgid "[node-fortran](https://github.com/IonicaBizau/node-fortran)"
msgstr ""

#: ../../source/packages/interfaces.md:343
msgid ""
"Fortran bridge for Node.js which allows you to run Fortran code from "
"Node.js"
msgstr ""

#: ../../source/packages/interfaces.md:347
msgid ""
"![Release](https://img.shields.io/github/v/release/IonicaBizau/node-"
"fortran?color=green) "
"![license](https://img.shields.io/github/license/IonicaBizau/node-"
"fortran) ![stars](https://img.shields.io/github/stars/IonicaBizau/node-"
"fortran) ![forks](https://img.shields.io/github/forks/IonicaBizau/node-"
"fortran) ![last-commit](https://img.shields.io/github/last-"
"commit/IonicaBizau/node-fortran?color=blue) "
"![issues](https://img.shields.io/github/issues/IonicaBizau/node-"
"fortran?color=yellow)"
msgstr ""

#: ../../source/packages/interfaces.md:357
msgid "[node.fortran](https://github.com/IonicaBizau/node.fortran)"
msgstr ""

#: ../../source/packages/interfaces.md:358
msgid "Execute Node.js in your Fortran programs"
msgstr ""

#: ../../source/packages/interfaces.md:362
msgid ""
"![Release](https://img.shields.io/github/v/release/IonicaBizau/node.fortran?color=green)"
" "
"![license](https://img.shields.io/github/license/IonicaBizau/node.fortran)"
" ![stars](https://img.shields.io/github/stars/IonicaBizau/node.fortran) "
"![forks](https://img.shields.io/github/forks/IonicaBizau/node.fortran) "
"![last-commit](https://img.shields.io/github/last-"
"commit/IonicaBizau/node.fortran?color=blue) "
"![issues](https://img.shields.io/github/issues/IonicaBizau/node.fortran?color=yellow)"
msgstr ""

#: ../../source/packages/interfaces.md:387
#: ../../source/packages/numerical.md:479
msgid "[OpenFFT](http://www.openmx-square.org/openfft/)"
msgstr ""

#: ../../source/packages/interfaces.md:389
#: ../../source/packages/numerical.md:481
msgid ""
"Open source parallel package for computing multi-dimensional Fast Fourier"
" Transforms (3-D and 4-D FFTs)"
msgstr ""

#: ../../source/packages/interfaces.md:391
#: ../../source/packages/numerical.md:483
msgid "Tags: fft openmpi domain-decomposition-method"
msgstr ""

#: ../../source/packages/interfaces.md:420
msgid "[scalapackfx](https://github.com/dftbplus/scalapackfx)"
msgstr ""

#: ../../source/packages/interfaces.md:421
msgid "Modern Fortran wrappers around ScaLAPACK routines"
msgstr ""

#: ../../source/packages/interfaces.md:423
msgid "Tags: mpi fypp pblas blacs"
msgstr ""

#: ../../source/packages/interfaces.md:425
msgid ""
"![Release](https://img.shields.io/github/v/release/dftbplus/scalapackfx?color=green)"
" ![license](https://img.shields.io/github/license/dftbplus/scalapackfx) "
"![stars](https://img.shields.io/github/stars/dftbplus/scalapackfx) "
"![forks](https://img.shields.io/github/forks/dftbplus/scalapackfx) "
"![last-commit](https://img.shields.io/github/last-"
"commit/dftbplus/scalapackfx?color=blue) "
"![issues](https://img.shields.io/github/issues/dftbplus/scalapackfx?color=yellow)"
msgstr ""

#: ../../source/packages/interfaces.md:435
msgid "[sqliteff](https://gitlab.com/everythingfunctional/sqliteff)"
msgstr ""

#: ../../source/packages/interfaces.md:436
msgid "A thin wrapper around the SQLite library"
msgstr ""

#: ../../source/packages/interfaces.md:438
msgid "Tags: sql database"
msgstr ""

#: ../../source/packages/interfaces.md:440
msgid ""
"![Release](https://img.shields.io/gitlab/v/release/everythingfunctional/sqliteff?date_order_by=created_at&sort=date&color=green)"
" "
"![license](https://img.shields.io/gitlab/license/everythingfunctional/sqliteff)"
" "
"![forks](https://img.shields.io/gitlab/forks/everythingfunctional/sqliteff)"
" "
"![issues](https://img.shields.io/gitlab/issues/all/everythingfunctional/sqliteff?color=yellow)"
msgstr ""

#: ../../source/packages/io.md:14
msgid "[atomsk](https://github.com/pierrehirel/atomsk)"
msgstr ""

#: ../../source/packages/io.md:15
msgid "A Tool For Manipulating And Converting Atomic Data Files"
msgstr ""

#: ../../source/packages/io.md:17
msgid "Tags: file-formats"
msgstr ""

#: ../../source/packages/io.md:19
msgid ""
"![Release](https://img.shields.io/github/v/release/pierrehirel/atomsk?color=green)"
" ![license](https://img.shields.io/github/license/pierrehirel/atomsk) "
"![stars](https://img.shields.io/github/stars/pierrehirel/atomsk) "
"![forks](https://img.shields.io/github/forks/pierrehirel/atomsk) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/pierrehirel/atomsk?color=blue) "
"![issues](https://img.shields.io/github/issues/pierrehirel/atomsk?color=yellow)"
msgstr ""

#: ../../source/packages/io.md:29
msgid "[config_fortran](https://github.com/jannisteunissen/config_fortran)"
msgstr ""

#: ../../source/packages/io.md:30
msgid "Configuration file parser for Fortran"
msgstr ""

#: ../../source/packages/io.md:34
msgid ""
"![Release](https://img.shields.io/github/v/release/jannisteunissen/config_fortran?color=green)"
" "
"![license](https://img.shields.io/github/license/jannisteunissen/config_fortran)"
" "
"![stars](https://img.shields.io/github/stars/jannisteunissen/config_fortran)"
" "
"![forks](https://img.shields.io/github/forks/jannisteunissen/config_fortran)"
" ![last-commit](https://img.shields.io/github/last-"
"commit/jannisteunissen/config_fortran?color=blue) "
"![issues](https://img.shields.io/github/issues/jannisteunissen/config_fortran?color=yellow)"
msgstr ""

#: ../../source/packages/io.md:44
msgid "[FEconv](https://github.com/victorsndvg/FEconv)"
msgstr ""

#: ../../source/packages/io.md:45
msgid ""
"utility and library for converting between mesh and finite element field "
"formats"
msgstr ""

#: ../../source/packages/io.md:47
msgid "Tags: ansys msh nastran bdf vtk"
msgstr ""

#: ../../source/packages/io.md:49
msgid ""
"![Release](https://img.shields.io/github/v/release/victorsndvg/FEconv?color=green)"
" ![license](https://img.shields.io/github/license/victorsndvg/FEconv) "
"![stars](https://img.shields.io/github/stars/victorsndvg/FEconv) "
"![forks](https://img.shields.io/github/forks/victorsndvg/FEconv) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/victorsndvg/FEconv?color=blue) "
"![issues](https://img.shields.io/github/issues/victorsndvg/FEconv?color=yellow)"
msgstr ""

#: ../../source/packages/io.md:59
msgid "[FiNeR](https://github.com/szaghi/FiNeR)"
msgstr ""

#: ../../source/packages/io.md:60
msgid "INI ParseR and generator"
msgstr ""

#: ../../source/packages/io.md:62
msgid "Tags: config"
msgstr ""

#: ../../source/packages/io.md:64
msgid ""
"![Release](https://img.shields.io/github/v/release/szaghi/FiNeR?color=green)"
" ![license](https://img.shields.io/github/license/szaghi/FiNeR) "
"![stars](https://img.shields.io/github/stars/szaghi/FiNeR) "
"![forks](https://img.shields.io/github/forks/szaghi/FiNeR) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/szaghi/FiNeR?color=blue) "
"![issues](https://img.shields.io/github/issues/szaghi/FiNeR?color=yellow)"
msgstr ""

#: ../../source/packages/io.md:74
msgid "[FortJSON](https://gitlab.com/elsi_project/fortjson)"
msgstr ""

#: ../../source/packages/io.md:75
msgid "A JSON library designed with portability across HPC architectures in mind"
msgstr ""

#: ../../source/packages/io.md:77
msgid "Tags: json hpc"
msgstr ""

#: ../../source/packages/io.md:79
msgid ""
"![Release](https://img.shields.io/gitlab/v/release/elsi_project/fortjson?date_order_by=created_at&sort=date&color=green)"
" ![license](https://img.shields.io/gitlab/license/elsi_project/fortjson) "
"![forks](https://img.shields.io/gitlab/forks/elsi_project/fortjson) "
"![issues](https://img.shields.io/gitlab/issues/all/elsi_project/fortjson?color=yellow)"
msgstr ""

#: ../../source/packages/io.md:87 ../../source/packages/strings.md:29
msgid "[Fortran Equation Parser](https://github.com/FluidNumerics/feq-parse)"
msgstr ""

#: ../../source/packages/io.md:88 ../../source/packages/strings.md:30
msgid ""
"An equation parser class for interpreting and evaluating equations "
"provided as strings."
msgstr ""

#: ../../source/packages/io.md:90 ../../source/packages/strings.md:32
msgid "Tags: equation parser"
msgstr ""

#: ../../source/packages/io.md:92 ../../source/packages/strings.md:34
msgid ""
"![Release](https://img.shields.io/github/v/release/FluidNumerics/feq-"
"parse?color=green) "
"![license](https://img.shields.io/github/license/FluidNumerics/feq-parse)"
" ![stars](https://img.shields.io/github/stars/FluidNumerics/feq-parse) "
"![forks](https://img.shields.io/github/forks/FluidNumerics/feq-parse) "
"![last-commit](https://img.shields.io/github/last-commit/FluidNumerics"
"/feq-parse?color=blue) "
"![issues](https://img.shields.io/github/issues/FluidNumerics/feq-"
"parse?color=yellow)"
msgstr ""

#: ../../source/packages/io.md:102
msgid "[fortran-csv-module](https://github.com/jacobwilliams/fortran-csv-module)"
msgstr ""

#: ../../source/packages/io.md:103
msgid "Read and write CSV Files using modern Fortran"
msgstr ""

#: ../../source/packages/io.md:105
msgid "Tags: csv"
msgstr ""

#: ../../source/packages/io.md:107
msgid ""
"![Release](https://img.shields.io/github/v/release/jacobwilliams/fortran-"
"csv-module?color=green) "
"![license](https://img.shields.io/github/license/jacobwilliams/fortran-"
"csv-module) ![stars](https://img.shields.io/github/stars/jacobwilliams"
"/fortran-csv-module) "
"![forks](https://img.shields.io/github/forks/jacobwilliams/fortran-csv-"
"module) ![last-commit](https://img.shields.io/github/last-"
"commit/jacobwilliams/fortran-csv-module?color=blue) "
"![issues](https://img.shields.io/github/issues/jacobwilliams/fortran-csv-"
"module?color=yellow)"
msgstr ""

#: ../../source/packages/io.md:117 ../../source/packages/libraries.md:74
msgid "[fortran-utils](https://github.com/certik/fortran-utils)"
msgstr ""

#: ../../source/packages/io.md:118 ../../source/packages/libraries.md:75
msgid "Various utilities for Fortran programs"
msgstr ""

#: ../../source/packages/io.md:120 ../../source/packages/libraries.md:77
msgid "Tags: constants types sorting mesh spline ppm hdf5 lapack"
msgstr ""

#: ../../source/packages/io.md:122 ../../source/packages/libraries.md:79
msgid ""
"![Release](https://img.shields.io/github/v/release/certik/fortran-"
"utils?color=green) "
"![license](https://img.shields.io/github/license/certik/fortran-utils) "
"![stars](https://img.shields.io/github/stars/certik/fortran-utils) "
"![forks](https://img.shields.io/github/forks/certik/fortran-utils) "
"![last-commit](https://img.shields.io/github/last-commit/certik/fortran-"
"utils?color=blue) ![issues](https://img.shields.io/github/issues/certik"
"/fortran-utils?color=yellow)"
msgstr ""

#: ../../source/packages/io.md:147
msgid "[fox](https://github.com/andreww/fox)"
msgstr ""

#: ../../source/packages/io.md:148
msgid "A Fortran XML library"
msgstr ""

#: ../../source/packages/io.md:152
msgid ""
"![Release](https://img.shields.io/github/v/release/andreww/fox?color=green)"
" ![license](https://img.shields.io/github/license/andreww/fox) "
"![stars](https://img.shields.io/github/stars/andreww/fox) "
"![forks](https://img.shields.io/github/forks/andreww/fox) ![last-"
"commit](https://img.shields.io/github/last-commit/andreww/fox?color=blue)"
" ![issues](https://img.shields.io/github/issues/andreww/fox?color=yellow)"
msgstr ""

#: ../../source/packages/io.md:177
msgid "[h5fortran](https://github.com/geospace-code/h5fortran)"
msgstr ""

#: ../../source/packages/io.md:178
msgid "Simple, robust, thin HDF5 polymorphic read/write interface"
msgstr ""

#: ../../source/packages/io.md:180
msgid "Tags: hdf5"
msgstr ""

#: ../../source/packages/io.md:182
msgid ""
"![Release](https://img.shields.io/github/v/release/geospace-"
"code/h5fortran?color=green) "
"![license](https://img.shields.io/github/license/geospace-code/h5fortran)"
" ![stars](https://img.shields.io/github/stars/geospace-code/h5fortran) "
"![forks](https://img.shields.io/github/forks/geospace-code/h5fortran) "
"![last-commit](https://img.shields.io/github/last-commit/geospace-"
"code/h5fortran?color=blue) ![issues](https://img.shields.io/github/issues"
"/geospace-code/h5fortran?color=yellow)"
msgstr ""

#: ../../source/packages/io.md:192
msgid "[json-fortran](https://github.com/jacobwilliams/json-fortran)"
msgstr ""

#: ../../source/packages/io.md:193
msgid "A Fortran 2008 JSON API"
msgstr ""

#: ../../source/packages/io.md:195 ../../source/packages/io.md:210
msgid "Tags: json"
msgstr ""

#: ../../source/packages/io.md:197
msgid ""
"![Release](https://img.shields.io/github/v/release/jacobwilliams/json-"
"fortran?color=green) "
"![license](https://img.shields.io/github/license/jacobwilliams/json-"
"fortran) ![stars](https://img.shields.io/github/stars/jacobwilliams/json-"
"fortran) ![forks](https://img.shields.io/github/forks/jacobwilliams/json-"
"fortran) ![last-commit](https://img.shields.io/github/last-"
"commit/jacobwilliams/json-fortran?color=blue) "
"![issues](https://img.shields.io/github/issues/jacobwilliams/json-"
"fortran?color=yellow)"
msgstr ""

#: ../../source/packages/io.md:207
msgid "[jsonff](https://gitlab.com/everythingfunctional/jsonff)"
msgstr ""

#: ../../source/packages/io.md:208
msgid "Routines for building JSON structures in Fortran"
msgstr ""

#: ../../source/packages/io.md:212
msgid ""
"![Release](https://img.shields.io/gitlab/v/release/everythingfunctional/jsonff?date_order_by=created_at&sort=date&color=green)"
" "
"![license](https://img.shields.io/gitlab/license/everythingfunctional/jsonff)"
" "
"![forks](https://img.shields.io/gitlab/forks/everythingfunctional/jsonff)"
" "
"![issues](https://img.shields.io/gitlab/issues/all/everythingfunctional/jsonff?color=yellow)"
msgstr ""

#: ../../source/packages/io.md:220
msgid "[M_IO](https://github.com/urbanjost/M_io)"
msgstr ""

#: ../../source/packages/io.md:221
msgid "Fortran module for common I/O tasks"
msgstr ""

#: ../../source/packages/io.md:223
msgid "Tags: delete slurp swallow dirname split path"
msgstr ""

#: ../../source/packages/io.md:225
msgid ""
"![Release](https://img.shields.io/github/v/release/urbanjost/M_io?color=green)"
" ![license](https://img.shields.io/github/license/urbanjost/M_io) "
"![stars](https://img.shields.io/github/stars/urbanjost/M_io) "
"![forks](https://img.shields.io/github/forks/urbanjost/M_io) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/urbanjost/M_io?color=blue) "
"![issues](https://img.shields.io/github/issues/urbanjost/M_io?color=yellow)"
msgstr ""

#: ../../source/packages/io.md:235
msgid "[nc4fortran](https://github.com/geospace-code/nc4fortran)"
msgstr ""

#: ../../source/packages/io.md:236
msgid "Object-oriented interface for NetCDF4 in Fortran"
msgstr ""

#: ../../source/packages/io.md:238 ../../source/packages/io.md:253
msgid "Tags: netcdf"
msgstr ""

#: ../../source/packages/io.md:240
msgid ""
"![Release](https://img.shields.io/github/v/release/geospace-"
"code/nc4fortran?color=green) "
"![license](https://img.shields.io/github/license/geospace-"
"code/nc4fortran) ![stars](https://img.shields.io/github/stars/geospace-"
"code/nc4fortran) ![forks](https://img.shields.io/github/forks/geospace-"
"code/nc4fortran) ![last-commit](https://img.shields.io/github/last-commit"
"/geospace-code/nc4fortran?color=blue) "
"![issues](https://img.shields.io/github/issues/geospace-"
"code/nc4fortran?color=yellow)"
msgstr ""

#: ../../source/packages/io.md:250
msgid "[netCDF-Fortran](https://github.com/Unidata/netcdf-fortran)"
msgstr ""

#: ../../source/packages/io.md:251
msgid "Fortran interfaces for netCDF C library."
msgstr ""

#: ../../source/packages/io.md:255
msgid ""
"![Release](https://img.shields.io/github/v/release/Unidata/netcdf-"
"fortran?color=green) "
"![license](https://img.shields.io/github/license/Unidata/netcdf-fortran) "
"![stars](https://img.shields.io/github/stars/Unidata/netcdf-fortran) "
"![forks](https://img.shields.io/github/forks/Unidata/netcdf-fortran) "
"![last-commit](https://img.shields.io/github/last-commit/Unidata/netcdf-"
"fortran?color=blue) "
"![issues](https://img.shields.io/github/issues/Unidata/netcdf-"
"fortran?color=yellow)"
msgstr ""

#: ../../source/packages/io.md:265
msgid "[NPY for Fortran](https://github.com/MRedies/NPY-for-Fortran)"
msgstr ""

#: ../../source/packages/io.md:266
msgid "Allows saving numerical Fortran arrays in Numpy's .npy or .npz format"
msgstr ""

#: ../../source/packages/io.md:268
msgid "Tags: python"
msgstr ""

#: ../../source/packages/io.md:270
msgid ""
"![Release](https://img.shields.io/github/v/release/MRedies/NPY-for-"
"Fortran?color=green) "
"![license](https://img.shields.io/github/license/MRedies/NPY-for-Fortran)"
" ![stars](https://img.shields.io/github/stars/MRedies/NPY-for-Fortran) "
"![forks](https://img.shields.io/github/forks/MRedies/NPY-for-Fortran) "
"![last-commit](https://img.shields.io/github/last-commit/MRedies/NPY-for-"
"Fortran?color=blue) "
"![issues](https://img.shields.io/github/issues/MRedies/NPY-for-"
"Fortran?color=yellow)"
msgstr ""

#: ../../source/packages/io.md:280
msgid "[os](https://github.com/MarDiehl/stdlib_os)"
msgstr ""

#: ../../source/packages/io.md:281
msgid "Selected routines from python's os module (meant for stdlib)"
msgstr ""

#: ../../source/packages/io.md:283
msgid "Tags: file C-interface directory access"
msgstr ""

#: ../../source/packages/io.md:285
msgid ""
"![Release](https://img.shields.io/github/v/release/MarDiehl/stdlib_os?color=green)"
" ![license](https://img.shields.io/github/license/MarDiehl/stdlib_os) "
"![stars](https://img.shields.io/github/stars/MarDiehl/stdlib_os) "
"![forks](https://img.shields.io/github/forks/MarDiehl/stdlib_os) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/MarDiehl/stdlib_os?color=blue) "
"![issues](https://img.shields.io/github/issues/MarDiehl/stdlib_os?color=yellow)"
msgstr ""

#: ../../source/packages/io.md:295
msgid "[parff](https://gitlab.com/everythingfunctional/parff)"
msgstr ""

#: ../../source/packages/io.md:296
msgid "The foundations of a functional style parser combinator library"
msgstr ""

#: ../../source/packages/io.md:298 ../../source/packages/programming.md:153
msgid "Tags: parser"
msgstr ""

#: ../../source/packages/io.md:300
msgid ""
"![Release](https://img.shields.io/gitlab/v/release/everythingfunctional/parff?date_order_by=created_at&sort=date&color=green)"
" "
"![license](https://img.shields.io/gitlab/license/everythingfunctional/parff)"
" ![forks](https://img.shields.io/gitlab/forks/everythingfunctional/parff)"
" "
"![issues](https://img.shields.io/gitlab/issues/all/everythingfunctional/parff?color=yellow)"
msgstr ""

#: ../../source/packages/io.md:308
msgid "[pFlogger](https://github.com/Goddard-Fortran-Ecosystem/pFlogger)"
msgstr ""

#: ../../source/packages/io.md:309
msgid "A parallel Fortran logger (based on the design of the Python logger)"
msgstr ""

#: ../../source/packages/io.md:311
msgid "Tags: logger mpi"
msgstr ""

#: ../../source/packages/io.md:313
msgid ""
"![Release](https://img.shields.io/github/v/release/Goddard-Fortran-"
"Ecosystem/pFlogger?color=green) "
"![license](https://img.shields.io/github/license/Goddard-Fortran-"
"Ecosystem/pFlogger) ![stars](https://img.shields.io/github/stars/Goddard-"
"Fortran-Ecosystem/pFlogger) ![forks](https://img.shields.io/github/forks"
"/Goddard-Fortran-Ecosystem/pFlogger) ![last-"
"commit](https://img.shields.io/github/last-commit/Goddard-Fortran-"
"Ecosystem/pFlogger?color=blue) "
"![issues](https://img.shields.io/github/issues/Goddard-Fortran-"
"Ecosystem/pFlogger?color=yellow)"
msgstr ""

#: ../../source/packages/io.md:323
msgid "[Serialbox](https://github.com/GridTools/serialbox)"
msgstr ""

#: ../../source/packages/io.md:324
msgid "A serialization library and tools for C/C++, Python3 and Fortran"
msgstr ""

#: ../../source/packages/io.md:326
msgid "Tags: validation"
msgstr ""

#: ../../source/packages/io.md:328
msgid ""
"![Release](https://img.shields.io/github/v/release/GridTools/serialbox?color=green)"
" ![license](https://img.shields.io/github/license/GridTools/serialbox) "
"![stars](https://img.shields.io/github/stars/GridTools/serialbox) "
"![forks](https://img.shields.io/github/forks/GridTools/serialbox) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/GridTools/serialbox?color=blue) "
"![issues](https://img.shields.io/github/issues/GridTools/serialbox?color=yellow)"
msgstr ""

#: ../../source/packages/io.md:338
msgid "[toml-f](https://github.com/toml-f/toml-f)"
msgstr ""

#: ../../source/packages/io.md:339
msgid ""
"A TOML parser implementation for data serialization and deserialization "
"in Fortran"
msgstr ""

#: ../../source/packages/io.md:341
msgid "Tags: toml"
msgstr ""

#: ../../source/packages/io.md:343
msgid ""
"![Release](https://img.shields.io/github/v/release/toml-f/toml-f?color=green)"
" ![license](https://img.shields.io/github/license/toml-f/toml-f) "
"![stars](https://img.shields.io/github/stars/toml-f/toml-f) "
"![forks](https://img.shields.io/github/forks/toml-f/toml-f) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/toml-f/toml-f?color=blue) "
"![issues](https://img.shields.io/github/issues/toml-f/toml-f?color=yellow)"
msgstr ""

#: ../../source/packages/io.md:353
msgid "[VTKFortran](https://github.com/szaghi/VTKFortran)"
msgstr ""

#: ../../source/packages/io.md:354
msgid "Library to parse and emit files conforming VTK (XML) standard"
msgstr ""

#: ../../source/packages/io.md:358
msgid ""
"![Release](https://img.shields.io/github/v/release/szaghi/VTKFortran?color=green)"
" ![license](https://img.shields.io/github/license/szaghi/VTKFortran) "
"![stars](https://img.shields.io/github/stars/szaghi/VTKFortran) "
"![forks](https://img.shields.io/github/forks/szaghi/VTKFortran) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/szaghi/VTKFortran?color=blue) "
"![issues](https://img.shields.io/github/issues/szaghi/VTKFortran?color=yellow)"
msgstr ""

#: ../../source/packages/libraries.md:29
msgid "[FLAP](https://github.com/szaghi/FLAP)"
msgstr ""

#: ../../source/packages/libraries.md:30
msgid "Fortran command Line Arguments Parser"
msgstr ""

#: ../../source/packages/libraries.md:32
msgid "Tags: command line cli argument parser"
msgstr ""

#: ../../source/packages/libraries.md:34
msgid ""
"![Release](https://img.shields.io/github/v/release/szaghi/FLAP?color=green)"
" ![license](https://img.shields.io/github/license/szaghi/FLAP) "
"![stars](https://img.shields.io/github/stars/szaghi/FLAP) "
"![forks](https://img.shields.io/github/forks/szaghi/FLAP) ![last-"
"commit](https://img.shields.io/github/last-commit/szaghi/FLAP?color=blue)"
" ![issues](https://img.shields.io/github/issues/szaghi/FLAP?color=yellow)"
msgstr ""

#: ../../source/packages/libraries.md:44
msgid ""
"[Fortran Astrodynamics Toolkit](https://github.com/jacobwilliams/Fortran-"
"Astrodynamics-Toolkit)"
msgstr ""

#: ../../source/packages/libraries.md:45
msgid "A Modern Fortran Library for Astrodynamics"
msgstr ""

#: ../../source/packages/libraries.md:49
msgid ""
"![Release](https://img.shields.io/github/v/release/jacobwilliams/Fortran-"
"Astrodynamics-Toolkit?color=green) "
"![license](https://img.shields.io/github/license/jacobwilliams/Fortran-"
"Astrodynamics-Toolkit) "
"![stars](https://img.shields.io/github/stars/jacobwilliams/Fortran-"
"Astrodynamics-Toolkit) "
"![forks](https://img.shields.io/github/forks/jacobwilliams/Fortran-"
"Astrodynamics-Toolkit) ![last-commit](https://img.shields.io/github/last-"
"commit/jacobwilliams/Fortran-Astrodynamics-Toolkit?color=blue) "
"![issues](https://img.shields.io/github/issues/jacobwilliams/Fortran-"
"Astrodynamics-Toolkit?color=yellow)"
msgstr ""

#: ../../source/packages/libraries.md:59
msgid ""
"[Fortran Standard Library (stdlib)](https://github.com/fortran-"
"lang/stdlib)"
msgstr ""

#: ../../source/packages/libraries.md:60
msgid "A community driven and agreed upon de facto standard library for Fortran"
msgstr ""

#: ../../source/packages/libraries.md:64
msgid ""
"![Release](https://img.shields.io/github/v/release/fortran-"
"lang/stdlib?color=green) ![license](https://img.shields.io/github/license"
"/fortran-lang/stdlib) ![stars](https://img.shields.io/github/stars"
"/fortran-lang/stdlib) ![forks](https://img.shields.io/github/forks"
"/fortran-lang/stdlib) ![last-commit](https://img.shields.io/github/last-"
"commit/fortran-lang/stdlib?color=blue) "
"![issues](https://img.shields.io/github/issues/fortran-"
"lang/stdlib?color=yellow)"
msgstr ""

#: ../../source/packages/libraries.md:104
msgid ""
"[functional-fortran](https://github.com/wavebitscientific/functional-"
"fortran)"
msgstr ""

#: ../../source/packages/libraries.md:105
msgid "Functional programming for modern Fortran"
msgstr ""

#: ../../source/packages/libraries.md:107
msgid "Tags: functional filter fold map"
msgstr ""

#: ../../source/packages/libraries.md:109
msgid ""
"![Release](https://img.shields.io/github/v/release/wavebitscientific"
"/functional-fortran?color=green) "
"![license](https://img.shields.io/github/license/wavebitscientific"
"/functional-fortran) "
"![stars](https://img.shields.io/github/stars/wavebitscientific"
"/functional-fortran) "
"![forks](https://img.shields.io/github/forks/wavebitscientific"
"/functional-fortran) ![last-commit](https://img.shields.io/github/last-"
"commit/wavebitscientific/functional-fortran?color=blue) "
"![issues](https://img.shields.io/github/issues/wavebitscientific"
"/functional-fortran?color=yellow)"
msgstr ""

#: ../../source/packages/libraries.md:134
msgid "[M_CLI](https://github.com/urbanjost/M_CLI)"
msgstr ""

#: ../../source/packages/libraries.md:135
msgid "Unix-like command line argument parsing"
msgstr ""

#: ../../source/packages/libraries.md:137
msgid "Tags: namelist args"
msgstr ""

#: ../../source/packages/libraries.md:139
msgid ""
"![Release](https://img.shields.io/github/v/release/urbanjost/M_CLI?color=green)"
" ![license](https://img.shields.io/github/license/urbanjost/M_CLI) "
"![stars](https://img.shields.io/github/stars/urbanjost/M_CLI) "
"![forks](https://img.shields.io/github/forks/urbanjost/M_CLI) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/urbanjost/M_CLI?color=blue) "
"![issues](https://img.shields.io/github/issues/urbanjost/M_CLI?color=yellow)"
msgstr ""

#: ../../source/packages/libraries.md:149
msgid "[M_history](https://github.com/urbanjost/M_history)"
msgstr ""

#: ../../source/packages/libraries.md:150
msgid "Subroutine to give a line-mode command history to interactive programs"
msgstr ""

#: ../../source/packages/libraries.md:152
msgid "Tags: redo"
msgstr ""

#: ../../source/packages/libraries.md:154
msgid ""
"![Release](https://img.shields.io/github/v/release/urbanjost/M_history?color=green)"
" ![license](https://img.shields.io/github/license/urbanjost/M_history) "
"![stars](https://img.shields.io/github/stars/urbanjost/M_history) "
"![forks](https://img.shields.io/github/forks/urbanjost/M_history) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/urbanjost/M_history?color=blue) "
"![issues](https://img.shields.io/github/issues/urbanjost/M_history?color=yellow)"
msgstr ""

#: ../../source/packages/libraries.md:164
msgid "[Open Coarrays](https://github.com/sourceryinstitute/OpenCoarrays)"
msgstr ""

#: ../../source/packages/libraries.md:165
msgid "A parallel application binary interface for Fortran 2018 compilers."
msgstr ""

#: ../../source/packages/libraries.md:167
msgid "Tags: mpi openshmem gfortran"
msgstr ""

#: ../../source/packages/libraries.md:169
msgid ""
"![Release](https://img.shields.io/github/v/release/sourceryinstitute/OpenCoarrays?color=green)"
" "
"![license](https://img.shields.io/github/license/sourceryinstitute/OpenCoarrays)"
" "
"![stars](https://img.shields.io/github/stars/sourceryinstitute/OpenCoarrays)"
" "
"![forks](https://img.shields.io/github/forks/sourceryinstitute/OpenCoarrays)"
" ![last-commit](https://img.shields.io/github/last-"
"commit/sourceryinstitute/OpenCoarrays?color=blue) "
"![issues](https://img.shields.io/github/issues/sourceryinstitute/OpenCoarrays?color=yellow)"
msgstr ""

#: ../../source/packages/libraries.md:179
msgid ""
"[The NJOY Nuclear Data Processing "
"System](https://github.com/njoy/NJOY2016)"
msgstr ""

#: ../../source/packages/libraries.md:180
msgid ""
"Package for producing pointwise and multigroup nuclear cross sections and"
" related quantities from evaluated nuclear data in the ENDF format"
msgstr ""

#: ../../source/packages/libraries.md:184
msgid ""
"![Release](https://img.shields.io/github/v/release/njoy/NJOY2016?color=green)"
" ![license](https://img.shields.io/github/license/njoy/NJOY2016) "
"![stars](https://img.shields.io/github/stars/njoy/NJOY2016) "
"![forks](https://img.shields.io/github/forks/njoy/NJOY2016) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/njoy/NJOY2016?color=blue) "
"![issues](https://img.shields.io/github/issues/njoy/NJOY2016?color=yellow)"
msgstr ""

#: ../../source/packages/libraries.md:194
msgid "[yaFyaml](https://github.com/Goddard-Fortran-Ecosystem/yaFyaml)"
msgstr ""

#: ../../source/packages/libraries.md:195
msgid "Yet another Fortran YAML library"
msgstr ""

#: ../../source/packages/libraries.md:197
msgid "Tags: configuration yaml"
msgstr ""

#: ../../source/packages/libraries.md:199
msgid ""
"![Release](https://img.shields.io/github/v/release/Goddard-Fortran-"
"Ecosystem/yaFyaml?color=green) "
"![license](https://img.shields.io/github/license/Goddard-Fortran-"
"Ecosystem/yaFyaml) ![stars](https://img.shields.io/github/stars/Goddard-"
"Fortran-Ecosystem/yaFyaml) ![forks](https://img.shields.io/github/forks"
"/Goddard-Fortran-Ecosystem/yaFyaml) ![last-"
"commit](https://img.shields.io/github/last-commit/Goddard-Fortran-"
"Ecosystem/yaFyaml?color=blue) "
"![issues](https://img.shields.io/github/issues/Goddard-Fortran-"
"Ecosystem/yaFyaml?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:14 ../../source/packages/scientific.md:14
msgid "[2DECOMP&FFT](http://www.2decomp.org/)"
msgstr ""

#: ../../source/packages/numerical.md:16 ../../source/packages/scientific.md:16
msgid "Library for 2D pencil decomposition and distributed Fast Fourier Transform"
msgstr ""

#: ../../source/packages/numerical.md:18 ../../source/packages/scientific.md:18
msgid "Tags: fft parallel distributed-memory openmpi"
msgstr ""

#: ../../source/packages/numerical.md:23
msgid "[ARPACK](https://github.com/opencollab/arpack-ng)"
msgstr ""

#: ../../source/packages/numerical.md:24
msgid ""
"Collection of Fortran77 subroutines designed to solve large scale "
"eigenvalue problems."
msgstr ""

#: ../../source/packages/numerical.md:26
msgid "Tags: eigenvalue eigenvector singular value decomposition svd"
msgstr ""

#: ../../source/packages/numerical.md:28
msgid ""
"![Release](https://img.shields.io/github/v/release/opencollab/arpack-"
"ng?color=green) "
"![license](https://img.shields.io/github/license/opencollab/arpack-ng) "
"![stars](https://img.shields.io/github/stars/opencollab/arpack-ng) "
"![forks](https://img.shields.io/github/forks/opencollab/arpack-ng) "
"![last-commit](https://img.shields.io/github/last-commit/opencollab"
"/arpack-ng?color=blue) "
"![issues](https://img.shields.io/github/issues/opencollab/arpack-"
"ng?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:38
msgid "[bspline-fortran](https://github.com/jacobwilliams/bspline-fortran)"
msgstr ""

#: ../../source/packages/numerical.md:39
msgid "Multidimensional B-Spline interpolation of data on a regular grid"
msgstr ""

#: ../../source/packages/numerical.md:41
msgid "Tags: spline interpolation extrapolation integration integral"
msgstr ""

#: ../../source/packages/numerical.md:43
msgid ""
"![Release](https://img.shields.io/github/v/release/jacobwilliams/bspline-"
"fortran?color=green) "
"![license](https://img.shields.io/github/license/jacobwilliams/bspline-"
"fortran) ![stars](https://img.shields.io/github/stars/jacobwilliams"
"/bspline-fortran) "
"![forks](https://img.shields.io/github/forks/jacobwilliams/bspline-"
"fortran) ![last-commit](https://img.shields.io/github/last-"
"commit/jacobwilliams/bspline-fortran?color=blue) "
"![issues](https://img.shields.io/github/issues/jacobwilliams/bspline-"
"fortran?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:53
msgid "[DBCSR](https://github.com/cp2k/dbcsr)"
msgstr ""

#: ../../source/packages/numerical.md:54
msgid "Distributed block compresseed sparse row matrix library"
msgstr ""

#: ../../source/packages/numerical.md:56
msgid "Tags: linear-algebra parallel mpi openmp cuda hip"
msgstr ""

#: ../../source/packages/numerical.md:58
msgid ""
"![Release](https://img.shields.io/github/v/release/cp2k/dbcsr?color=green)"
" ![license](https://img.shields.io/github/license/cp2k/dbcsr) "
"![stars](https://img.shields.io/github/stars/cp2k/dbcsr) "
"![forks](https://img.shields.io/github/forks/cp2k/dbcsr) ![last-"
"commit](https://img.shields.io/github/last-commit/cp2k/dbcsr?color=blue) "
"![issues](https://img.shields.io/github/issues/cp2k/dbcsr?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:68
msgid "[ddeabm](https://github.com/jacobwilliams/ddeabm)"
msgstr ""

#: ../../source/packages/numerical.md:69
msgid "Modern Fortran implementation of the DDEABM Adams-Bashforth algorithm"
msgstr ""

#: ../../source/packages/numerical.md:71
msgid "Tags: ode adams-bashforth"
msgstr ""

#: ../../source/packages/numerical.md:73
msgid ""
"![Release](https://img.shields.io/github/v/release/jacobwilliams/ddeabm?color=green)"
" ![license](https://img.shields.io/github/license/jacobwilliams/ddeabm) "
"![stars](https://img.shields.io/github/stars/jacobwilliams/ddeabm) "
"![forks](https://img.shields.io/github/forks/jacobwilliams/ddeabm) "
"![last-commit](https://img.shields.io/github/last-"
"commit/jacobwilliams/ddeabm?color=blue) "
"![issues](https://img.shields.io/github/issues/jacobwilliams/ddeabm?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:83
msgid "[ddPCM](https://github.com/filippolipparini/ddPCM)"
msgstr ""

#: ../../source/packages/numerical.md:84
msgid ""
"A fast domain decomposition based implementation of the COSMO solvation "
"model"
msgstr ""

#: ../../source/packages/numerical.md:86
msgid "Tags: continuum-solvation cosmo pcm cpcm"
msgstr ""

#: ../../source/packages/numerical.md:88
msgid ""
"![Release](https://img.shields.io/github/v/release/filippolipparini/ddPCM?color=green)"
" ![license](https://img.shields.io/github/license/filippolipparini/ddPCM)"
" ![stars](https://img.shields.io/github/stars/filippolipparini/ddPCM) "
"![forks](https://img.shields.io/github/forks/filippolipparini/ddPCM) "
"![last-commit](https://img.shields.io/github/last-"
"commit/filippolipparini/ddPCM?color=blue) "
"![issues](https://img.shields.io/github/issues/filippolipparini/ddPCM?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:98
msgid "[DelaunaySparse](https://github.com/vtopt/DelaunaySparse)"
msgstr ""

#: ../../source/packages/numerical.md:99
msgid ""
"Multivariate Interpolation via a Sparse Subset of the Delaunay "
"Triangulation in Medium to High Dimensions."
msgstr ""

#: ../../source/packages/numerical.md:101
msgid "Tags: interpolation openmp acm-toms"
msgstr ""

#: ../../source/packages/numerical.md:103
msgid ""
"![Release](https://img.shields.io/github/v/release/vtopt/DelaunaySparse?color=green)"
" ![license](https://img.shields.io/github/license/vtopt/DelaunaySparse) "
"![stars](https://img.shields.io/github/stars/vtopt/DelaunaySparse) "
"![forks](https://img.shields.io/github/forks/vtopt/DelaunaySparse) "
"![last-commit](https://img.shields.io/github/last-"
"commit/vtopt/DelaunaySparse?color=blue) "
"![issues](https://img.shields.io/github/issues/vtopt/DelaunaySparse?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:113
msgid "[dop853](https://github.com/jacobwilliams/dop853)"
msgstr ""

#: ../../source/packages/numerical.md:114
msgid "Modern Fortran Edition of Hairer's DOP853 ODE Solver"
msgstr ""

#: ../../source/packages/numerical.md:116
#: ../../source/packages/numerical.md:185
msgid "Tags: ode runge kutta"
msgstr ""

#: ../../source/packages/numerical.md:118
msgid ""
"![Release](https://img.shields.io/github/v/release/jacobwilliams/dop853?color=green)"
" ![license](https://img.shields.io/github/license/jacobwilliams/dop853) "
"![stars](https://img.shields.io/github/stars/jacobwilliams/dop853) "
"![forks](https://img.shields.io/github/forks/jacobwilliams/dop853) "
"![last-commit](https://img.shields.io/github/last-"
"commit/jacobwilliams/dop853?color=blue) "
"![issues](https://img.shields.io/github/issues/jacobwilliams/dop853?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:128
msgid "[ElmerFEM](https://github.com/ElmerCSC/elmerfem)"
msgstr ""

#: ../../source/packages/numerical.md:129
msgid ""
"Finite element software for numerical solution of partial differential "
"equations"
msgstr ""

#: ../../source/packages/numerical.md:131
msgid "Tags: pde fe"
msgstr ""

#: ../../source/packages/numerical.md:133
msgid ""
"![Release](https://img.shields.io/github/v/release/ElmerCSC/elmerfem?color=green)"
" ![license](https://img.shields.io/github/license/ElmerCSC/elmerfem) "
"![stars](https://img.shields.io/github/stars/ElmerCSC/elmerfem) "
"![forks](https://img.shields.io/github/forks/ElmerCSC/elmerfem) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/ElmerCSC/elmerfem?color=blue) "
"![issues](https://img.shields.io/github/issues/ElmerCSC/elmerfem?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:143
msgid "[ELPA](https://gitlab.mpcdf.mpg.de/elpa/elpa)"
msgstr ""

#: ../../source/packages/numerical.md:145
msgid "Eigenvalue Solvers for Petaflop Applications"
msgstr ""

#: ../../source/packages/numerical.md:147
msgid "Tags: mpi gpu"
msgstr ""

#: ../../source/packages/numerical.md:152
#: ../../source/packages/scientific.md:324
msgid "[FATODE](https://github.com/ComputationalScienceLaboratory/FATODE)"
msgstr ""

#: ../../source/packages/numerical.md:153
#: ../../source/packages/scientific.md:325
msgid ""
"A Fortran library for the integration of ordinary differential equations "
"with direct and adjoint sensitivity analysis capabilities"
msgstr ""

#: ../../source/packages/numerical.md:155
#: ../../source/packages/scientific.md:327
msgid "Tags: ode-solver"
msgstr ""

#: ../../source/packages/numerical.md:157
#: ../../source/packages/scientific.md:329
msgid ""
"![Release](https://img.shields.io/github/v/release/ComputationalScienceLaboratory/FATODE?color=green)"
" "
"![license](https://img.shields.io/github/license/ComputationalScienceLaboratory/FATODE)"
" "
"![stars](https://img.shields.io/github/stars/ComputationalScienceLaboratory/FATODE)"
" "
"![forks](https://img.shields.io/github/forks/ComputationalScienceLaboratory/FATODE)"
" ![last-commit](https://img.shields.io/github/last-"
"commit/ComputationalScienceLaboratory/FATODE?color=blue) "
"![issues](https://img.shields.io/github/issues/ComputationalScienceLaboratory/FATODE?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:182
msgid "[FLINT](https://github.com/princemahajan/FLINT)"
msgstr ""

#: ../../source/packages/numerical.md:183
msgid "Fortran Library for numerical INTegration of differential equations"
msgstr ""

#: ../../source/packages/numerical.md:187
msgid ""
"![Release](https://img.shields.io/github/v/release/princemahajan/FLINT?color=green)"
" ![license](https://img.shields.io/github/license/princemahajan/FLINT) "
"![stars](https://img.shields.io/github/stars/princemahajan/FLINT) "
"![forks](https://img.shields.io/github/forks/princemahajan/FLINT) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/princemahajan/FLINT?color=blue) "
"![issues](https://img.shields.io/github/issues/princemahajan/FLINT?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:197
msgid "[fmm2d](https://github.com/flatironinstitute/fmm2d)"
msgstr ""

#: ../../source/packages/numerical.md:198
msgid ""
"Compute N-body interactions governed by the Laplace and Helmholtz "
"equations, to a specified precision, in two dimensions, on a multi-core "
"shared-memory machine."
msgstr ""

#: ../../source/packages/numerical.md:200
#: ../../source/packages/numerical.md:215
msgid "Tags: fast-multipole-method"
msgstr ""

#: ../../source/packages/numerical.md:202
msgid ""
"![Release](https://img.shields.io/github/v/release/flatironinstitute/fmm2d?color=green)"
" "
"![license](https://img.shields.io/github/license/flatironinstitute/fmm2d)"
" ![stars](https://img.shields.io/github/stars/flatironinstitute/fmm2d) "
"![forks](https://img.shields.io/github/forks/flatironinstitute/fmm2d) "
"![last-commit](https://img.shields.io/github/last-"
"commit/flatironinstitute/fmm2d?color=blue) "
"![issues](https://img.shields.io/github/issues/flatironinstitute/fmm2d?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:212
msgid "[FMM3D](https://github.com/flatironinstitute/FMM3D)"
msgstr ""

#: ../../source/packages/numerical.md:213
msgid ""
"Compute N-body interactions governed by the Laplace and Helmholtz "
"equations, to a specified precision, in three dimensions, on a multi-core"
" shared-memory machine."
msgstr ""

#: ../../source/packages/numerical.md:217
msgid ""
"![Release](https://img.shields.io/github/v/release/flatironinstitute/FMM3D?color=green)"
" "
"![license](https://img.shields.io/github/license/flatironinstitute/FMM3D)"
" ![stars](https://img.shields.io/github/stars/flatironinstitute/FMM3D) "
"![forks](https://img.shields.io/github/forks/flatironinstitute/FMM3D) "
"![last-commit](https://img.shields.io/github/last-"
"commit/flatironinstitute/FMM3D?color=blue) "
"![issues](https://img.shields.io/github/issues/flatironinstitute/FMM3D?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:227
msgid "[FOODIE](https://github.com/Fortran-FOSS-Programmers/FOODIE)"
msgstr ""

#: ../../source/packages/numerical.md:228
msgid "Fortran Object-Oriented Differential-equations Integration Environment"
msgstr ""

#: ../../source/packages/numerical.md:230
msgid "Tags: ode pde euler runge kutta"
msgstr ""

#: ../../source/packages/numerical.md:232
msgid ""
"![Release](https://img.shields.io/github/v/release/Fortran-FOSS-"
"Programmers/FOODIE?color=green) "
"![license](https://img.shields.io/github/license/Fortran-FOSS-"
"Programmers/FOODIE) ![stars](https://img.shields.io/github/stars/Fortran-"
"FOSS-Programmers/FOODIE) ![forks](https://img.shields.io/github/forks"
"/Fortran-FOSS-Programmers/FOODIE) ![last-"
"commit](https://img.shields.io/github/last-commit/Fortran-FOSS-"
"Programmers/FOODIE?color=blue) "
"![issues](https://img.shields.io/github/issues/Fortran-FOSS-"
"Programmers/FOODIE?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:272
msgid "[GALAHAD](https://github.com/ralna/GALAHAD)"
msgstr ""

#: ../../source/packages/numerical.md:273
msgid "Modules for nonlinear optimization"
msgstr ""

#: ../../source/packages/numerical.md:275
msgid ""
"Tags: least squares active set quadratic-programming interior point "
"convex-programming linear-programming"
msgstr ""

#: ../../source/packages/numerical.md:277
msgid ""
"![Release](https://img.shields.io/github/v/release/ralna/GALAHAD?color=green)"
" ![license](https://img.shields.io/github/license/ralna/GALAHAD) "
"![stars](https://img.shields.io/github/stars/ralna/GALAHAD) "
"![forks](https://img.shields.io/github/forks/ralna/GALAHAD) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/ralna/GALAHAD?color=blue) "
"![issues](https://img.shields.io/github/issues/ralna/GALAHAD?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:287
#: ../../source/packages/scientific.md:444
msgid "[HANDE](https://github.com/hande-qmc/hande)"
msgstr ""

#: ../../source/packages/numerical.md:288
#: ../../source/packages/scientific.md:445
msgid "Open source stochastic quantum chemistry"
msgstr ""

#: ../../source/packages/numerical.md:290
#: ../../source/packages/scientific.md:447
msgid "Tags: qmc electronic-structure"
msgstr ""

#: ../../source/packages/numerical.md:292
#: ../../source/packages/scientific.md:449
msgid ""
"![Release](https://img.shields.io/github/v/release/hande-"
"qmc/hande?color=green) ![license](https://img.shields.io/github/license"
"/hande-qmc/hande) ![stars](https://img.shields.io/github/stars/hande-"
"qmc/hande) ![forks](https://img.shields.io/github/forks/hande-qmc/hande) "
"![last-commit](https://img.shields.io/github/last-commit/hande-"
"qmc/hande?color=blue) ![issues](https://img.shields.io/github/issues"
"/hande-qmc/hande?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:302
msgid "[Incompact3d](https://github.com/xcompact3d/incompact3d)"
msgstr ""

#: ../../source/packages/numerical.md:303
msgid "Solver for the incompressible Navier-Stokes equations"
msgstr ""

#: ../../source/packages/numerical.md:307
msgid ""
"![Release](https://img.shields.io/github/v/release/xcompact3d/incompact3d?color=green)"
" ![license](https://img.shields.io/github/license/xcompact3d/incompact3d)"
" ![stars](https://img.shields.io/github/stars/xcompact3d/incompact3d) "
"![forks](https://img.shields.io/github/forks/xcompact3d/incompact3d) "
"![last-commit](https://img.shields.io/github/last-"
"commit/xcompact3d/incompact3d?color=blue) "
"![issues](https://img.shields.io/github/issues/xcompact3d/incompact3d?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:317
msgid "[LAPACK](https://github.com/Reference-LAPACK/lapack)"
msgstr ""

#: ../../source/packages/numerical.md:318
msgid "Routines for numerical linear algebra"
msgstr ""

#: ../../source/packages/numerical.md:320
#: ../../source/packages/numerical.md:467
msgid "Tags: blas linear-algebra"
msgstr ""

#: ../../source/packages/numerical.md:322
msgid ""
"![Release](https://img.shields.io/github/v/release/Reference-"
"LAPACK/lapack?color=green) "
"![license](https://img.shields.io/github/license/Reference-LAPACK/lapack)"
" ![stars](https://img.shields.io/github/stars/Reference-LAPACK/lapack) "
"![forks](https://img.shields.io/github/forks/Reference-LAPACK/lapack) "
"![last-commit](https://img.shields.io/github/last-commit/Reference-"
"LAPACK/lapack?color=blue) ![issues](https://img.shields.io/github/issues"
"/Reference-LAPACK/lapack?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:332
msgid "[libnegf](https://github.com/libnegf/libnegf)"
msgstr ""

#: ../../source/packages/numerical.md:333
msgid "A general library for Non Equilibrium Green's Functions"
msgstr ""

#: ../../source/packages/numerical.md:335
msgid "Tags: transport electronic-structure"
msgstr ""

#: ../../source/packages/numerical.md:337
msgid ""
"![Release](https://img.shields.io/github/v/release/libnegf/libnegf?color=green)"
" ![license](https://img.shields.io/github/license/libnegf/libnegf) "
"![stars](https://img.shields.io/github/stars/libnegf/libnegf) "
"![forks](https://img.shields.io/github/forks/libnegf/libnegf) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/libnegf/libnegf?color=blue) "
"![issues](https://img.shields.io/github/issues/libnegf/libnegf?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:356
msgid "[Los Alamos Grid Toolbox (LaGriT)](https://github.com/lanl/LaGriT)"
msgstr ""

#: ../../source/packages/numerical.md:357
msgid ""
"a library of user callable tools that provide mesh generation, mesh "
"optimization and dynamic mesh maintenance"
msgstr ""

#: ../../source/packages/numerical.md:361
msgid ""
"![Release](https://img.shields.io/github/v/release/lanl/LaGriT?color=green)"
" ![license](https://img.shields.io/github/license/lanl/LaGriT) "
"![stars](https://img.shields.io/github/stars/lanl/LaGriT) "
"![forks](https://img.shields.io/github/forks/lanl/LaGriT) ![last-"
"commit](https://img.shields.io/github/last-commit/lanl/LaGriT?color=blue)"
" ![issues](https://img.shields.io/github/issues/lanl/LaGriT?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:371
msgid "[MapTran3D](https://github.com/geospace-code/maptran3d)"
msgstr ""

#: ../../source/packages/numerical.md:372
msgid "Geodesy, 3D coordinate conversions for ECEF, ENU, ECI, ..."
msgstr ""

#: ../../source/packages/numerical.md:376
msgid ""
"![Release](https://img.shields.io/github/v/release/geospace-"
"code/maptran3d?color=green) "
"![license](https://img.shields.io/github/license/geospace-code/maptran3d)"
" ![stars](https://img.shields.io/github/stars/geospace-code/maptran3d) "
"![forks](https://img.shields.io/github/forks/geospace-code/maptran3d) "
"![last-commit](https://img.shields.io/github/last-commit/geospace-"
"code/maptran3d?color=blue) ![issues](https://img.shields.io/github/issues"
"/geospace-code/maptran3d?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:386
msgid "[neural-fortran](https://github.com/modern-fortran/neural-fortran)"
msgstr ""

#: ../../source/packages/numerical.md:387
msgid "A parallel neural net microframework."
msgstr ""

#: ../../source/packages/numerical.md:389
msgid "Tags: back propagation coarray"
msgstr ""

#: ../../source/packages/numerical.md:391
msgid ""
"![Release](https://img.shields.io/github/v/release/modern-fortran/neural-"
"fortran?color=green) ![license](https://img.shields.io/github/license"
"/modern-fortran/neural-fortran) "
"![stars](https://img.shields.io/github/stars/modern-fortran/neural-"
"fortran) ![forks](https://img.shields.io/github/forks/modern-fortran"
"/neural-fortran) ![last-commit](https://img.shields.io/github/last-commit"
"/modern-fortran/neural-fortran?color=blue) "
"![issues](https://img.shields.io/github/issues/modern-fortran/neural-"
"fortran?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:401
msgid "[NTPoly](https://github.com/william-dawson/ntpoly)"
msgstr ""

#: ../../source/packages/numerical.md:402
msgid ""
"A massively parallel library for computing the functions of sparse "
"matrices."
msgstr ""

#: ../../source/packages/numerical.md:404
#: ../../source/packages/numerical.md:575
msgid "Tags: mpi"
msgstr ""

#: ../../source/packages/numerical.md:406
msgid ""
"![Release](https://img.shields.io/github/v/release/william-"
"dawson/ntpoly?color=green) "
"![license](https://img.shields.io/github/license/william-dawson/ntpoly) "
"![stars](https://img.shields.io/github/stars/william-dawson/ntpoly) "
"![forks](https://img.shields.io/github/forks/william-dawson/ntpoly) "
"![last-commit](https://img.shields.io/github/last-commit/william-"
"dawson/ntpoly?color=blue) ![issues](https://img.shields.io/github/issues"
"/william-dawson/ntpoly?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:416
msgid "[NUFFT](https://cims.nyu.edu/cmcl/nufft/nufft.html)"
msgstr ""

#: ../../source/packages/numerical.md:418
msgid "Non-Uniform Fast Fourier Transforms"
msgstr ""

#: ../../source/packages/numerical.md:420
msgid "Tags: non-uniform-fft fft"
msgstr ""

#: ../../source/packages/numerical.md:425
msgid "[NumDiff](https://github.com/jacobwilliams/NumDiff)"
msgstr ""

#: ../../source/packages/numerical.md:426
msgid ""
"a modern Fortran interface for computing the Jacobian (derivative) matrix"
" of m nonlinear functions which depend on n variables"
msgstr ""

#: ../../source/packages/numerical.md:428
msgid "Tags: finite difference"
msgstr ""

#: ../../source/packages/numerical.md:430
msgid ""
"![Release](https://img.shields.io/github/v/release/jacobwilliams/NumDiff?color=green)"
" ![license](https://img.shields.io/github/license/jacobwilliams/NumDiff) "
"![stars](https://img.shields.io/github/stars/jacobwilliams/NumDiff) "
"![forks](https://img.shields.io/github/forks/jacobwilliams/NumDiff) "
"![last-commit](https://img.shields.io/github/last-"
"commit/jacobwilliams/NumDiff?color=blue) "
"![issues](https://img.shields.io/github/issues/jacobwilliams/NumDiff?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:455
msgid "[ODEPACK](https://computing.llnl.gov/projects/odepack/software)"
msgstr ""

#: ../../source/packages/numerical.md:457
msgid "A Systematized Collection of ODE Solvers (FORTRAN 77)"
msgstr ""

#: ../../source/packages/numerical.md:459
msgid "Tags: ode runge kutta adams-bashforth"
msgstr ""

#: ../../source/packages/numerical.md:464
msgid "[OpenBLAS](https://github.com/xianyi/OpenBLAS)"
msgstr ""

#: ../../source/packages/numerical.md:465
msgid "Optimized BLAS library based on GotoBLAS2"
msgstr ""

#: ../../source/packages/numerical.md:469
msgid ""
"![Release](https://img.shields.io/github/v/release/xianyi/OpenBLAS?color=green)"
" ![license](https://img.shields.io/github/license/xianyi/OpenBLAS) "
"![stars](https://img.shields.io/github/stars/xianyi/OpenBLAS) "
"![forks](https://img.shields.io/github/forks/xianyi/OpenBLAS) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/xianyi/OpenBLAS?color=blue) "
"![issues](https://img.shields.io/github/issues/xianyi/OpenBLAS?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:488
msgid "[ParaMonte](https://github.com/cdslaborg/paramonte)"
msgstr ""

#: ../../source/packages/numerical.md:489
msgid ""
"A general-purpose high-performance MPI/Coarray-parallel Monte Carlo "
"simulation library implemented in Fortran 2018 with interfaces to "
"C/C++/Fortran/MATLAB/Python"
msgstr ""

#: ../../source/packages/numerical.md:491
msgid ""
"Tags: parallel mpi coarray monte carlo mcmc c cpp matlab python "
"statistics bayesian stochastic optimization sampling integration machine "
"learning"
msgstr ""

#: ../../source/packages/numerical.md:493
msgid ""
"![Release](https://img.shields.io/github/v/release/cdslaborg/paramonte?color=green)"
" ![license](https://img.shields.io/github/license/cdslaborg/paramonte) "
"![stars](https://img.shields.io/github/stars/cdslaborg/paramonte) "
"![forks](https://img.shields.io/github/forks/cdslaborg/paramonte) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/cdslaborg/paramonte?color=blue) "
"![issues](https://img.shields.io/github/issues/cdslaborg/paramonte?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:503
msgid "[PCHIP](https://github.com/jacobwilliams/PCHIP)"
msgstr ""

#: ../../source/packages/numerical.md:504
msgid "Piecewise Cubic Hermite Interpolation Package"
msgstr ""

#: ../../source/packages/numerical.md:506
msgid "Tags: hermite spline interpolation integration integral"
msgstr ""

#: ../../source/packages/numerical.md:508
msgid ""
"![Release](https://img.shields.io/github/v/release/jacobwilliams/PCHIP?color=green)"
" ![license](https://img.shields.io/github/license/jacobwilliams/PCHIP) "
"![stars](https://img.shields.io/github/stars/jacobwilliams/PCHIP) "
"![forks](https://img.shields.io/github/forks/jacobwilliams/PCHIP) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/jacobwilliams/PCHIP?color=blue) "
"![issues](https://img.shields.io/github/issues/jacobwilliams/PCHIP?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:533
msgid "[PoisFFT](https://github.com/LadaF/PoisFFT)"
msgstr ""

#: ../../source/packages/numerical.md:534
msgid ""
"Library to solve Poisson equation on a uniform Cartesian grid using the "
"Fast Fourier Transform"
msgstr ""

#: ../../source/packages/numerical.md:536
msgid "Tags: fft poisson"
msgstr ""

#: ../../source/packages/numerical.md:538
msgid ""
"![Release](https://img.shields.io/github/v/release/LadaF/PoisFFT?color=green)"
" ![license](https://img.shields.io/github/license/LadaF/PoisFFT) "
"![stars](https://img.shields.io/github/stars/LadaF/PoisFFT) "
"![forks](https://img.shields.io/github/forks/LadaF/PoisFFT) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/LadaF/PoisFFT?color=blue) "
"![issues](https://img.shields.io/github/issues/LadaF/PoisFFT?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:548
msgid "[PROPACK](http://sun.stanford.edu/~rmunk/PROPACK/)"
msgstr ""

#: ../../source/packages/numerical.md:550
msgid ""
"Software package for computing the singular value decomposition of large "
"and sparse or structured matrices"
msgstr ""

#: ../../source/packages/numerical.md:552
msgid "Tags: linear-algebra svd lanczos-bidiagonalization openmp"
msgstr ""

#: ../../source/packages/numerical.md:572
msgid "[QMD-PROGRESS](https://github.com/lanl/qmd-progress)"
msgstr ""

#: ../../source/packages/numerical.md:573
msgid ""
"Parallel, Rapid O(N) and Graph-based Recursive Electronic Structure "
"Solver."
msgstr ""

#: ../../source/packages/numerical.md:577
msgid ""
"![Release](https://img.shields.io/github/v/release/lanl/qmd-"
"progress?color=green) "
"![license](https://img.shields.io/github/license/lanl/qmd-progress) "
"![stars](https://img.shields.io/github/stars/lanl/qmd-progress) "
"![forks](https://img.shields.io/github/forks/lanl/qmd-progress) ![last-"
"commit](https://img.shields.io/github/last-commit/lanl/qmd-"
"progress?color=blue) ![issues](https://img.shields.io/github/issues/lanl"
"/qmd-progress?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:587
msgid "[QNSTOP](https://github.com/vtopt/qnstop)"
msgstr ""

#: ../../source/packages/numerical.md:588
msgid "Quasi-Newton Algorithm for Stochastic Optimization."
msgstr ""

#: ../../source/packages/numerical.md:590
msgid "Tags: quasi-newton-optimization stochastic-optimization acm-toms"
msgstr ""

#: ../../source/packages/numerical.md:592
msgid ""
"![Release](https://img.shields.io/github/v/release/vtopt/qnstop?color=green)"
" ![license](https://img.shields.io/github/license/vtopt/qnstop) "
"![stars](https://img.shields.io/github/stars/vtopt/qnstop) "
"![forks](https://img.shields.io/github/forks/vtopt/qnstop) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/vtopt/qnstop?color=blue) "
"![issues](https://img.shields.io/github/issues/vtopt/qnstop?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:602
msgid "[quaff](https://gitlab.com/everythingfunctional/quaff)"
msgstr ""

#: ../../source/packages/numerical.md:603
msgid "Quantities for Fortran. Make math with units more convenient"
msgstr ""

#: ../../source/packages/numerical.md:607
msgid ""
"![Release](https://img.shields.io/gitlab/v/release/everythingfunctional/quaff?date_order_by=created_at&sort=date&color=green)"
" "
"![license](https://img.shields.io/gitlab/license/everythingfunctional/quaff)"
" ![forks](https://img.shields.io/gitlab/forks/everythingfunctional/quaff)"
" "
"![issues](https://img.shields.io/gitlab/issues/all/everythingfunctional/quaff?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:615
msgid "[regridpack](https://github.com/jacobwilliams/regridpack)"
msgstr ""

#: ../../source/packages/numerical.md:616
msgid ""
"Suite of Fortran routines for interpolating values between one-, two-, "
"three-, and four-dimensional arrays defined on uniform or nonuniform "
"orthogonal grids"
msgstr ""

#: ../../source/packages/numerical.md:618
msgid "Tags: linear cubic interpolation"
msgstr ""

#: ../../source/packages/numerical.md:620
msgid ""
"![Release](https://img.shields.io/github/v/release/jacobwilliams/regridpack?color=green)"
" "
"![license](https://img.shields.io/github/license/jacobwilliams/regridpack)"
" ![stars](https://img.shields.io/github/stars/jacobwilliams/regridpack) "
"![forks](https://img.shields.io/github/forks/jacobwilliams/regridpack) "
"![last-commit](https://img.shields.io/github/last-"
"commit/jacobwilliams/regridpack?color=blue) "
"![issues](https://img.shields.io/github/issues/jacobwilliams/regridpack?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:630
msgid "[rng_fortran](https://github.com/jannisteunissen/rng_fortran)"
msgstr ""

#: ../../source/packages/numerical.md:631
msgid "Pseudo random number generator in Fortran, internally using xoroshiro128+"
msgstr ""

#: ../../source/packages/numerical.md:633
msgid "Tags: uniform normal poisson distributed"
msgstr ""

#: ../../source/packages/numerical.md:635
msgid ""
"![Release](https://img.shields.io/github/v/release/jannisteunissen/rng_fortran?color=green)"
" "
"![license](https://img.shields.io/github/license/jannisteunissen/rng_fortran)"
" "
"![stars](https://img.shields.io/github/stars/jannisteunissen/rng_fortran)"
" "
"![forks](https://img.shields.io/github/forks/jannisteunissen/rng_fortran)"
" ![last-commit](https://img.shields.io/github/last-"
"commit/jannisteunissen/rng_fortran?color=blue) "
"![issues](https://img.shields.io/github/issues/jannisteunissen/rng_fortran?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:645
msgid "[RPNcalc](https://github.com/scivision/rpn-calc-fortran)"
msgstr ""

#: ../../source/packages/numerical.md:646
msgid "Reverse Polish Notation calculator for interactive console use"
msgstr ""

#: ../../source/packages/numerical.md:650
msgid ""
"![Release](https://img.shields.io/github/v/release/scivision/rpn-calc-"
"fortran?color=green) "
"![license](https://img.shields.io/github/license/scivision/rpn-calc-"
"fortran) ![stars](https://img.shields.io/github/stars/scivision/rpn-calc-"
"fortran) ![forks](https://img.shields.io/github/forks/scivision/rpn-calc-"
"fortran) ![last-commit](https://img.shields.io/github/last-"
"commit/scivision/rpn-calc-fortran?color=blue) "
"![issues](https://img.shields.io/github/issues/scivision/rpn-calc-"
"fortran?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:660
msgid "[SciFortran](https://github.com/aamaricci/SciFortran)"
msgstr ""

#: ../../source/packages/numerical.md:661
msgid "collection of fortran modules and procedures for scientific calculations."
msgstr ""

#: ../../source/packages/numerical.md:665
msgid ""
"![Release](https://img.shields.io/github/v/release/aamaricci/SciFortran?color=green)"
" ![license](https://img.shields.io/github/license/aamaricci/SciFortran) "
"![stars](https://img.shields.io/github/stars/aamaricci/SciFortran) "
"![forks](https://img.shields.io/github/forks/aamaricci/SciFortran) "
"![last-commit](https://img.shields.io/github/last-"
"commit/aamaricci/SciFortran?color=blue) "
"![issues](https://img.shields.io/github/issues/aamaricci/SciFortran?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:675
msgid "[SHTOOLS](https://github.com/SHTOOLS/SHTOOLS)"
msgstr ""

#: ../../source/packages/numerical.md:676
msgid ""
"A Fortran-95/Python library that can be used to perform spherical "
"harmonic transforms"
msgstr ""

#: ../../source/packages/numerical.md:678
msgid "Tags: spectral analysis Slepian bases gravitational magnetic field openmp"
msgstr ""

#: ../../source/packages/numerical.md:680
msgid ""
"![Release](https://img.shields.io/github/v/release/SHTOOLS/SHTOOLS?color=green)"
" ![license](https://img.shields.io/github/license/SHTOOLS/SHTOOLS) "
"![stars](https://img.shields.io/github/stars/SHTOOLS/SHTOOLS) "
"![forks](https://img.shields.io/github/forks/SHTOOLS/SHTOOLS) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/SHTOOLS/SHTOOLS?color=blue) "
"![issues](https://img.shields.io/github/issues/SHTOOLS/SHTOOLS?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:690
#: ../../source/packages/scientific.md:814
msgid "[SLICOT](https://github.com/SLICOT/SLICOT-Reference)"
msgstr ""

#: ../../source/packages/numerical.md:691
#: ../../source/packages/scientific.md:815
msgid "A Fortran subroutines library for systems and control"
msgstr ""

#: ../../source/packages/numerical.md:695
#: ../../source/packages/scientific.md:819
msgid ""
"![Release](https://img.shields.io/github/v/release/SLICOT/SLICOT-"
"Reference?color=green) "
"![license](https://img.shields.io/github/license/SLICOT/SLICOT-Reference)"
" ![stars](https://img.shields.io/github/stars/SLICOT/SLICOT-Reference) "
"![forks](https://img.shields.io/github/forks/SLICOT/SLICOT-Reference) "
"![last-commit](https://img.shields.io/github/last-commit/SLICOT/SLICOT-"
"Reference?color=blue) "
"![issues](https://img.shields.io/github/issues/SLICOT/SLICOT-"
"Reference?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:705
msgid "[slsqp](https://github.com/jacobwilliams/slsqp)"
msgstr ""

#: ../../source/packages/numerical.md:706
msgid "SLSQP nonlinear constrained optimizer"
msgstr ""

#: ../../source/packages/numerical.md:708
msgid "Tags: nonlinear-programming equality inequality constraints"
msgstr ""

#: ../../source/packages/numerical.md:710
msgid ""
"![Release](https://img.shields.io/github/v/release/jacobwilliams/slsqp?color=green)"
" ![license](https://img.shields.io/github/license/jacobwilliams/slsqp) "
"![stars](https://img.shields.io/github/stars/jacobwilliams/slsqp) "
"![forks](https://img.shields.io/github/forks/jacobwilliams/slsqp) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/jacobwilliams/slsqp?color=blue) "
"![issues](https://img.shields.io/github/issues/jacobwilliams/slsqp?color=yellow)"
msgstr ""

#: ../../source/packages/numerical.md:720
#: ../../source/packages/programming.md:324
msgid "[Tapenade](https://gitlab.inria.fr/tapenade/tapenade)"
msgstr ""

#: ../../source/packages/numerical.md:722
#: ../../source/packages/programming.md:326
msgid ""
"A tool for automatic differentiation (forward/reverse) of Fortran and c "
"programs"
msgstr ""

#: ../../source/packages/numerical.md:724
#: ../../source/packages/programming.md:328
msgid "Tags: algorithmic derivative ad"
msgstr ""

#: ../../source/packages/numerical.md:729
msgid "[VTMOP](https://github.com/vtopt/VTMOP)"
msgstr ""

#: ../../source/packages/numerical.md:730
msgid "Solver for Blackbox Multiobjective Optimization Problems."
msgstr ""

#: ../../source/packages/numerical.md:732
msgid ""
"Tags: global-optimization simulation-optimization blackbox-optimization "
"multiobjective-optimization multicriteria-optimization response-surface-"
"methodology acm-toms"
msgstr ""

#: ../../source/packages/numerical.md:734
msgid ""
"![Release](https://img.shields.io/github/v/release/vtopt/VTMOP?color=green)"
" ![license](https://img.shields.io/github/license/vtopt/VTMOP) "
"![stars](https://img.shields.io/github/stars/vtopt/VTMOP) "
"![forks](https://img.shields.io/github/forks/vtopt/VTMOP) ![last-"
"commit](https://img.shields.io/github/last-commit/vtopt/VTMOP?color=blue)"
" ![issues](https://img.shields.io/github/issues/vtopt/VTMOP?color=yellow)"
msgstr ""

#: ../../source/packages/programming.md:14
msgid "[camfort](https://github.com/camfort/camfort)"
msgstr ""

#: ../../source/packages/programming.md:15
msgid "Light-weight verification and transformation tools for Fortran"
msgstr ""

#: ../../source/packages/programming.md:17
msgid "Tags: refactoring"
msgstr ""

#: ../../source/packages/programming.md:19
msgid ""
"![Release](https://img.shields.io/github/v/release/camfort/camfort?color=green)"
" ![license](https://img.shields.io/github/license/camfort/camfort) "
"![stars](https://img.shields.io/github/stars/camfort/camfort) "
"![forks](https://img.shields.io/github/forks/camfort/camfort) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/camfort/camfort?color=blue) "
"![issues](https://img.shields.io/github/issues/camfort/camfort?color=yellow)"
msgstr ""

#: ../../source/packages/programming.md:29
msgid "[convert_FORTRAN_case](https://github.com/dav05/convert_FORTRAN_case)"
msgstr ""

#: ../../source/packages/programming.md:30
msgid "Case conversion of files written in fixed form Fortran"
msgstr ""

#: ../../source/packages/programming.md:32
#: ../../source/packages/programming.md:91
msgid "Tags: formatter converter"
msgstr ""

#: ../../source/packages/programming.md:34
msgid ""
"![Release](https://img.shields.io/github/v/release/dav05/convert_FORTRAN_case?color=green)"
" "
"![license](https://img.shields.io/github/license/dav05/convert_FORTRAN_case)"
" ![stars](https://img.shields.io/github/stars/dav05/convert_FORTRAN_case)"
" ![forks](https://img.shields.io/github/forks/dav05/convert_FORTRAN_case)"
" ![last-commit](https://img.shields.io/github/last-"
"commit/dav05/convert_FORTRAN_case?color=blue) "
"![issues](https://img.shields.io/github/issues/dav05/convert_FORTRAN_case?color=yellow)"
msgstr ""

#: ../../source/packages/programming.md:59
msgid "[erloff](https://gitlab.com/everythingfunctional/erloff)"
msgstr ""

#: ../../source/packages/programming.md:60
msgid "Errors and logging for fortran"
msgstr ""

#: ../../source/packages/programming.md:62
msgid "Tags: errors logging"
msgstr ""

#: ../../source/packages/programming.md:64
msgid ""
"![Release](https://img.shields.io/gitlab/v/release/everythingfunctional/erloff?date_order_by=created_at&sort=date&color=green)"
" "
"![license](https://img.shields.io/gitlab/license/everythingfunctional/erloff)"
" "
"![forks](https://img.shields.io/gitlab/forks/everythingfunctional/erloff)"
" "
"![issues](https://img.shields.io/gitlab/issues/all/everythingfunctional/erloff?color=yellow)"
msgstr ""

#: ../../source/packages/programming.md:72
msgid "[f90wrap](https://github.com/jameskermode/f90wrap)"
msgstr ""

#: ../../source/packages/programming.md:73
msgid "F90 to Python interface generator with derived type support"
msgstr ""

#: ../../source/packages/programming.md:75
msgid "Tags: interface-generator python"
msgstr ""

#: ../../source/packages/programming.md:77
msgid ""
"![Release](https://img.shields.io/github/v/release/jameskermode/f90wrap?color=green)"
" ![license](https://img.shields.io/github/license/jameskermode/f90wrap) "
"![stars](https://img.shields.io/github/stars/jameskermode/f90wrap) "
"![forks](https://img.shields.io/github/forks/jameskermode/f90wrap) "
"![last-commit](https://img.shields.io/github/last-"
"commit/jameskermode/f90wrap?color=blue) "
"![issues](https://img.shields.io/github/issues/jameskermode/f90wrap?color=yellow)"
msgstr ""

#: ../../source/packages/programming.md:87
msgid "[findent](https://sourceforge.net/projects/findent/)"
msgstr ""

#: ../../source/packages/programming.md:89
msgid "Indents/beautifies/converts Fortran sources"
msgstr ""

#: ../../source/packages/programming.md:96
msgid "[FORD](https://github.com/Fortran-FOSS-Programmers/ford)"
msgstr ""

#: ../../source/packages/programming.md:97
msgid "Automatic documentation generator for modern Fortran programs"
msgstr ""

#: ../../source/packages/programming.md:99
msgid "Tags: documentation"
msgstr ""

#: ../../source/packages/programming.md:101
msgid ""
"![Release](https://img.shields.io/github/v/release/Fortran-FOSS-"
"Programmers/ford?color=green) "
"![license](https://img.shields.io/github/license/Fortran-FOSS-"
"Programmers/ford) ![stars](https://img.shields.io/github/stars/Fortran-"
"FOSS-Programmers/ford) ![forks](https://img.shields.io/github/forks"
"/Fortran-FOSS-Programmers/ford) ![last-"
"commit](https://img.shields.io/github/last-commit/Fortran-FOSS-"
"Programmers/ford?color=blue) "
"![issues](https://img.shields.io/github/issues/Fortran-FOSS-"
"Programmers/ford?color=yellow)"
msgstr ""

#: ../../source/packages/programming.md:111
msgid ""
"[fortran-error-handler](https://github.com/samharrison7/fortran-error-"
"handler)"
msgstr ""

#: ../../source/packages/programming.md:112
msgid "Comprehensive error handling framework for Modern Fortran"
msgstr ""

#: ../../source/packages/programming.md:114
msgid "Tags: errors logging fpm"
msgstr ""

#: ../../source/packages/programming.md:116
msgid ""
"![Release](https://img.shields.io/github/v/release/samharrison7/fortran-"
"error-handler?color=green) "
"![license](https://img.shields.io/github/license/samharrison7/fortran-"
"error-handler) ![stars](https://img.shields.io/github/stars/samharrison7"
"/fortran-error-handler) "
"![forks](https://img.shields.io/github/forks/samharrison7/fortran-error-"
"handler) ![last-commit](https://img.shields.io/github/last-"
"commit/samharrison7/fortran-error-handler?color=blue) "
"![issues](https://img.shields.io/github/issues/samharrison7/fortran-"
"error-handler?color=yellow)"
msgstr ""

#: ../../source/packages/programming.md:126
msgid "[FortranCallGraph](https://github.com/fortesg/fortrancallgraph)"
msgstr ""

#: ../../source/packages/programming.md:127
msgid "Static source code analysis tool for Fortran"
msgstr ""

#: ../../source/packages/programming.md:131
msgid ""
"![Release](https://img.shields.io/github/v/release/fortesg/fortrancallgraph?color=green)"
" "
"![license](https://img.shields.io/github/license/fortesg/fortrancallgraph)"
" ![stars](https://img.shields.io/github/stars/fortesg/fortrancallgraph) "
"![forks](https://img.shields.io/github/forks/fortesg/fortrancallgraph) "
"![last-commit](https://img.shields.io/github/last-"
"commit/fortesg/fortrancallgraph?color=blue) "
"![issues](https://img.shields.io/github/issues/fortesg/fortrancallgraph?color=yellow)"
msgstr ""

#: ../../source/packages/programming.md:150
msgid "[fparser](https://github.com/stfc/fparser)"
msgstr ""

#: ../../source/packages/programming.md:151
msgid ""
"Fortran parser written purely in Python which supports Fortran 2003 and "
"some Fortran 2008"
msgstr ""

#: ../../source/packages/programming.md:155
msgid ""
"![Release](https://img.shields.io/github/v/release/stfc/fparser?color=green)"
" ![license](https://img.shields.io/github/license/stfc/fparser) "
"![stars](https://img.shields.io/github/stars/stfc/fparser) "
"![forks](https://img.shields.io/github/forks/stfc/fparser) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/stfc/fparser?color=blue) "
"![issues](https://img.shields.io/github/issues/stfc/fparser?color=yellow)"
msgstr ""

#: ../../source/packages/programming.md:165
msgid "[fpm](https://github.com/fortran-lang/fpm)"
msgstr ""

#: ../../source/packages/programming.md:168
msgid "Tags: build-system package-manager"
msgstr ""

#: ../../source/packages/programming.md:170
msgid ""
"![Release](https://img.shields.io/github/v/release/fortran-"
"lang/fpm?color=green) ![license](https://img.shields.io/github/license"
"/fortran-lang/fpm) ![stars](https://img.shields.io/github/stars/fortran-"
"lang/fpm) ![forks](https://img.shields.io/github/forks/fortran-lang/fpm) "
"![last-commit](https://img.shields.io/github/last-commit/fortran-"
"lang/fpm?color=blue) ![issues](https://img.shields.io/github/issues"
"/fortran-lang/fpm?color=yellow)"
msgstr ""

#: ../../source/packages/programming.md:180
msgid "[fprettify](https://github.com/pseewald/fprettify)"
msgstr ""

#: ../../source/packages/programming.md:181
msgid "auto-formatter for modern fortran source code"
msgstr ""

#: ../../source/packages/programming.md:183
msgid "Tags: formatter"
msgstr ""

#: ../../source/packages/programming.md:185
msgid ""
"![Release](https://img.shields.io/github/v/release/pseewald/fprettify?color=green)"
" ![license](https://img.shields.io/github/license/pseewald/fprettify) "
"![stars](https://img.shields.io/github/stars/pseewald/fprettify) "
"![forks](https://img.shields.io/github/forks/pseewald/fprettify) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/pseewald/fprettify?color=blue) "
"![issues](https://img.shields.io/github/issues/pseewald/fprettify?color=yellow)"
msgstr ""

#: ../../source/packages/programming.md:210
msgid "[fypp](https://github.com/aradi/fypp)"
msgstr ""

#: ../../source/packages/programming.md:211
msgid "Python powered Fortran preprocessor"
msgstr ""

#: ../../source/packages/programming.md:213
msgid "Tags: metaprogramming"
msgstr ""

#: ../../source/packages/programming.md:215
msgid ""
"![Release](https://img.shields.io/github/v/release/aradi/fypp?color=green)"
" ![license](https://img.shields.io/github/license/aradi/fypp) "
"![stars](https://img.shields.io/github/stars/aradi/fypp) "
"![forks](https://img.shields.io/github/forks/aradi/fypp) ![last-"
"commit](https://img.shields.io/github/last-commit/aradi/fypp?color=blue) "
"![issues](https://img.shields.io/github/issues/aradi/fypp?color=yellow)"
msgstr ""

#: ../../source/packages/programming.md:225
msgid "[fytest](https://bitbucket.org/aradi/fytest/src/develop/)"
msgstr ""

#: ../../source/packages/programming.md:227
msgid "a lightweight unit testing framework for Fortran"
msgstr ""

#: ../../source/packages/programming.md:229
#: ../../source/packages/programming.md:282
msgid "Tags: unit testing"
msgstr ""

#: ../../source/packages/programming.md:234
msgid "[gFTL](https://github.com/Goddard-Fortran-Ecosystem/gFTL)"
msgstr ""

#: ../../source/packages/programming.md:235
msgid ""
"Templates for STL-like Fortran implementations of containers for "
"arbitrary types (Vector, Set, Map, Deque, Stack, Queue, ...)"
msgstr ""

#: ../../source/packages/programming.md:237
#: ../../source/packages/programming.md:252
msgid "Tags: container template"
msgstr ""

#: ../../source/packages/programming.md:239
msgid ""
"![Release](https://img.shields.io/github/v/release/Goddard-Fortran-"
"Ecosystem/gFTL?color=green) "
"![license](https://img.shields.io/github/license/Goddard-Fortran-"
"Ecosystem/gFTL) ![stars](https://img.shields.io/github/stars/Goddard-"
"Fortran-Ecosystem/gFTL) ![forks](https://img.shields.io/github/forks"
"/Goddard-Fortran-Ecosystem/gFTL) ![last-"
"commit](https://img.shields.io/github/last-commit/Goddard-Fortran-"
"Ecosystem/gFTL?color=blue) ![issues](https://img.shields.io/github/issues"
"/Goddard-Fortran-Ecosystem/gFTL?color=yellow)"
msgstr ""

#: ../../source/packages/programming.md:249
msgid "[gFTL-shared](https://github.com/Goddard-Fortran-Ecosystem/gFTL-shared)"
msgstr ""

#: ../../source/packages/programming.md:250
msgid "Instantiations of gFTL templates of common containers for intrinsic types"
msgstr ""

#: ../../source/packages/programming.md:254
msgid ""
"![Release](https://img.shields.io/github/v/release/Goddard-Fortran-"
"Ecosystem/gFTL-shared?color=green) "
"![license](https://img.shields.io/github/license/Goddard-Fortran-"
"Ecosystem/gFTL-shared) ![stars](https://img.shields.io/github/stars"
"/Goddard-Fortran-Ecosystem/gFTL-shared) "
"![forks](https://img.shields.io/github/forks/Goddard-Fortran-Ecosystem"
"/gFTL-shared) ![last-commit](https://img.shields.io/github/last-commit"
"/Goddard-Fortran-Ecosystem/gFTL-shared?color=blue) "
"![issues](https://img.shields.io/github/issues/Goddard-Fortran-Ecosystem"
"/gFTL-shared?color=yellow)"
msgstr ""

#: ../../source/packages/programming.md:264
msgid "[hipfort](https://github.com/ROCmSoftwarePlatform/hipfort)"
msgstr ""

#: ../../source/packages/programming.md:265
msgid "Fortran interfaces for ROCm libraries"
msgstr ""

#: ../../source/packages/programming.md:267
msgid "Tags: hip rocm"
msgstr ""

#: ../../source/packages/programming.md:269
msgid ""
"![Release](https://img.shields.io/github/v/release/ROCmSoftwarePlatform/hipfort?color=green)"
" "
"![license](https://img.shields.io/github/license/ROCmSoftwarePlatform/hipfort)"
" "
"![stars](https://img.shields.io/github/stars/ROCmSoftwarePlatform/hipfort)"
" "
"![forks](https://img.shields.io/github/forks/ROCmSoftwarePlatform/hipfort)"
" ![last-commit](https://img.shields.io/github/last-"
"commit/ROCmSoftwarePlatform/hipfort?color=blue) "
"![issues](https://img.shields.io/github/issues/ROCmSoftwarePlatform/hipfort?color=yellow)"
msgstr ""

#: ../../source/packages/programming.md:279
msgid "[pFUnit](https://github.com/Goddard-Fortran-Ecosystem/pFUnit)"
msgstr ""

#: ../../source/packages/programming.md:280
msgid "Parallel Fortran Unit Testing Framework"
msgstr ""

#: ../../source/packages/programming.md:284
msgid ""
"![Release](https://img.shields.io/github/v/release/Goddard-Fortran-"
"Ecosystem/pFUnit?color=green) "
"![license](https://img.shields.io/github/license/Goddard-Fortran-"
"Ecosystem/pFUnit) ![stars](https://img.shields.io/github/stars/Goddard-"
"Fortran-Ecosystem/pFUnit) ![forks](https://img.shields.io/github/forks"
"/Goddard-Fortran-Ecosystem/pFUnit) ![last-"
"commit](https://img.shields.io/github/last-commit/Goddard-Fortran-"
"Ecosystem/pFUnit?color=blue) "
"![issues](https://img.shields.io/github/issues/Goddard-Fortran-"
"Ecosystem/pFUnit?color=yellow)"
msgstr ""

#: ../../source/packages/programming.md:294
msgid "[shroud](https://github.com/LLNL/shroud)"
msgstr ""

#: ../../source/packages/programming.md:295
msgid "generate Fortran and Python wrappers for C and C++ libraries"
msgstr ""

#: ../../source/packages/programming.md:297
#: ../../source/packages/programming.md:312
msgid "Tags: interface-generator c++"
msgstr ""

#: ../../source/packages/programming.md:299
msgid ""
"![Release](https://img.shields.io/github/v/release/LLNL/shroud?color=green)"
" ![license](https://img.shields.io/github/license/LLNL/shroud) "
"![stars](https://img.shields.io/github/stars/LLNL/shroud) "
"![forks](https://img.shields.io/github/forks/LLNL/shroud) ![last-"
"commit](https://img.shields.io/github/last-commit/LLNL/shroud?color=blue)"
" ![issues](https://img.shields.io/github/issues/LLNL/shroud?color=yellow)"
msgstr ""

#: ../../source/packages/programming.md:309
msgid "[SWIG-Fortran](https://github.com/swig-fortran/swig)"
msgstr ""

#: ../../source/packages/programming.md:310
msgid "SWIG for C++ to Fortran interface generation"
msgstr ""

#: ../../source/packages/programming.md:314
msgid ""
"![Release](https://img.shields.io/github/v/release/swig-"
"fortran/swig?color=green) "
"![license](https://img.shields.io/github/license/swig-fortran/swig) "
"![stars](https://img.shields.io/github/stars/swig-fortran/swig) "
"![forks](https://img.shields.io/github/forks/swig-fortran/swig) ![last-"
"commit](https://img.shields.io/github/last-commit/swig-"
"fortran/swig?color=blue) ![issues](https://img.shields.io/github/issues"
"/swig-fortran/swig?color=yellow)"
msgstr ""

#: ../../source/packages/programming.md:333
msgid "[vegetables](https://gitlab.com/everythingfunctional/vegetables)"
msgstr ""

#: ../../source/packages/programming.md:334
msgid ""
"A Fortran testing framework written using functional programming "
"principles."
msgstr ""

#: ../../source/packages/programming.md:336
msgid "Tags: testing assert"
msgstr ""

#: ../../source/packages/programming.md:338
msgid ""
"![Release](https://img.shields.io/gitlab/v/release/everythingfunctional/vegetables?date_order_by=created_at&sort=date&color=green)"
" "
"![license](https://img.shields.io/gitlab/license/everythingfunctional/vegetables)"
" "
"![forks](https://img.shields.io/gitlab/forks/everythingfunctional/vegetables)"
" "
"![issues](https://img.shields.io/gitlab/issues/all/everythingfunctional/vegetables?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:23
msgid "[ABINIT](https://github.com/abinit/abinit)"
msgstr ""

#: ../../source/packages/scientific.md:24
msgid ""
"ABINIT is a software suite to calculate the optical, mechanical, "
"vibrational, and other observable properties of materials"
msgstr ""

#: ../../source/packages/scientific.md:26
#: ../../source/packages/scientific.md:744
msgid ""
"Tags: electronic-structure quantum-chemistry physics molecular-dynamics "
"mpi"
msgstr ""

#: ../../source/packages/scientific.md:28
msgid ""
"![Release](https://img.shields.io/github/v/release/abinit/abinit?color=green)"
" ![license](https://img.shields.io/github/license/abinit/abinit) "
"![stars](https://img.shields.io/github/stars/abinit/abinit) "
"![forks](https://img.shields.io/github/forks/abinit/abinit) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/abinit/abinit?color=blue) "
"![issues](https://img.shields.io/github/issues/abinit/abinit?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:38
msgid "[ADflow](https://github.com/mdolab/adflow)"
msgstr ""

#: ../../source/packages/scientific.md:39
msgid ""
"A finite volume RANS solver tailored for gradient-based aerodynamic "
"design optimization"
msgstr ""

#: ../../source/packages/scientific.md:41
msgid ""
"Tags: simulation computational-fluid-dynamics automatic-differentiation "
"adjoint structured multiblock overset python hpc cfd mpi"
msgstr ""

#: ../../source/packages/scientific.md:43
msgid ""
"![Release](https://img.shields.io/github/v/release/mdolab/adflow?color=green)"
" ![license](https://img.shields.io/github/license/mdolab/adflow) "
"![stars](https://img.shields.io/github/stars/mdolab/adflow) "
"![forks](https://img.shields.io/github/forks/mdolab/adflow) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/mdolab/adflow?color=blue) "
"![issues](https://img.shields.io/github/issues/mdolab/adflow?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:53
msgid "[aenet](https://github.com/atomisticnet/aenet)"
msgstr ""

#: ../../source/packages/scientific.md:54
msgid "Atomic interaction potentials based on artificial neural networks"
msgstr ""

#: ../../source/packages/scientific.md:58
msgid ""
"![Release](https://img.shields.io/github/v/release/atomisticnet/aenet?color=green)"
" ![license](https://img.shields.io/github/license/atomisticnet/aenet) "
"![stars](https://img.shields.io/github/stars/atomisticnet/aenet) "
"![forks](https://img.shields.io/github/forks/atomisticnet/aenet) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/atomisticnet/aenet?color=blue) "
"![issues](https://img.shields.io/github/issues/atomisticnet/aenet?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:68
msgid "[BandUP](https://github.com/band-unfolding/bandup)"
msgstr ""

#: ../../source/packages/scientific.md:69
msgid "Band Unfolding code for Plane-wave based calculations"
msgstr ""

#: ../../source/packages/scientific.md:73
msgid ""
"![Release](https://img.shields.io/github/v/release/band-"
"unfolding/bandup?color=green) "
"![license](https://img.shields.io/github/license/band-unfolding/bandup) "
"![stars](https://img.shields.io/github/stars/band-unfolding/bandup) "
"![forks](https://img.shields.io/github/forks/band-unfolding/bandup) "
"![last-commit](https://img.shields.io/github/last-commit/band-"
"unfolding/bandup?color=blue) "
"![issues](https://img.shields.io/github/issues/band-"
"unfolding/bandup?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:83
msgid "[BigDFT](https://gitlab.com/l_sim/bigdft-suite)"
msgstr ""

#: ../../source/packages/scientific.md:84
msgid "fast, precise, and flexible DFT code for ab-initio atomistic simulation"
msgstr ""

#: ../../source/packages/scientific.md:86
msgid "Tags: electronic-structure wavelets density-functional-theory"
msgstr ""

#: ../../source/packages/scientific.md:88
msgid ""
"![Release](https://img.shields.io/gitlab/v/release/l_sim/bigdft-"
"suite?date_order_by=created_at&sort=date&color=green) "
"![license](https://img.shields.io/gitlab/license/l_sim/bigdft-suite) "
"![forks](https://img.shields.io/gitlab/forks/l_sim/bigdft-suite) "
"![issues](https://img.shields.io/gitlab/issues/all/l_sim/bigdft-"
"suite?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:96
msgid "[CaNS](https://github.com/p-costa/CaNS)"
msgstr ""

#: ../../source/packages/scientific.md:97
msgid ""
"A code for fast, massively-parallel direct numerical simulations (DNS) of"
" canonical flows"
msgstr ""

#: ../../source/packages/scientific.md:99
#: ../../source/packages/scientific.md:832
msgid ""
"Tags: fluid-dynamics fluid-simulation computational-fluid-dynamics "
"turbulence high-performance-computing hpc cfd"
msgstr ""

#: ../../source/packages/scientific.md:101
msgid ""
"![Release](https://img.shields.io/github/v/release/p-costa/CaNS?color=green)"
" ![license](https://img.shields.io/github/license/p-costa/CaNS) "
"![stars](https://img.shields.io/github/stars/p-costa/CaNS) "
"![forks](https://img.shields.io/github/forks/p-costa/CaNS) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/p-costa/CaNS?color=blue) "
"![issues](https://img.shields.io/github/issues/p-costa/CaNS?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:111
msgid "[Cantera](https://github.com/Cantera/cantera)"
msgstr ""

#: ../../source/packages/scientific.md:112
msgid "Chemical kinetics, thermodynamics, and transport tool suite"
msgstr ""

#: ../../source/packages/scientific.md:116
msgid ""
"![Release](https://img.shields.io/github/v/release/Cantera/cantera?color=green)"
" ![license](https://img.shields.io/github/license/Cantera/cantera) "
"![stars](https://img.shields.io/github/stars/Cantera/cantera) "
"![forks](https://img.shields.io/github/forks/Cantera/cantera) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/Cantera/cantera?color=blue) "
"![issues](https://img.shields.io/github/issues/Cantera/cantera?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:126
msgid "[Castro](https://github.com/AMReX-Astro/Castro)"
msgstr ""

#: ../../source/packages/scientific.md:127
msgid "An adaptive mesh, astrophysical radiation hydrodynamics simulation code"
msgstr ""

#: ../../source/packages/scientific.md:129
msgid "Tags: adaptive mesh astrophysics radiation hydrodynamics"
msgstr ""

#: ../../source/packages/scientific.md:131
msgid ""
"![Release](https://img.shields.io/github/v/release/AMReX-"
"Astro/Castro?color=green) "
"![license](https://img.shields.io/github/license/AMReX-Astro/Castro) "
"![stars](https://img.shields.io/github/stars/AMReX-Astro/Castro) "
"![forks](https://img.shields.io/github/forks/AMReX-Astro/Castro) ![last-"
"commit](https://img.shields.io/github/last-commit/AMReX-"
"Astro/Castro?color=blue) ![issues](https://img.shields.io/github/issues"
"/AMReX-Astro/Castro?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:141
msgid "[CFL3D](https://github.com/nasa/CFL3D)"
msgstr ""

#: ../../source/packages/scientific.md:142
msgid ""
"Structured-grid, cell-centered, upwind-biased, Reynolds-averaged Navier-"
"Stokes (RANS) code"
msgstr ""

#: ../../source/packages/scientific.md:146
msgid ""
"![Release](https://img.shields.io/github/v/release/nasa/CFL3D?color=green)"
" ![license](https://img.shields.io/github/license/nasa/CFL3D) "
"![stars](https://img.shields.io/github/stars/nasa/CFL3D) "
"![forks](https://img.shields.io/github/forks/nasa/CFL3D) ![last-"
"commit](https://img.shields.io/github/last-commit/nasa/CFL3D?color=blue) "
"![issues](https://img.shields.io/github/issues/nasa/CFL3D?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:156
msgid "[CompDam_DGD](https://github.com/nasa/CompDam_DGD)"
msgstr ""

#: ../../source/packages/scientific.md:157
msgid ""
"continuum damage mechanics (CDM) material model intended for use with the"
" Abaqus finite element code"
msgstr ""

#: ../../source/packages/scientific.md:161
msgid ""
"![Release](https://img.shields.io/github/v/release/nasa/CompDam_DGD?color=green)"
" ![license](https://img.shields.io/github/license/nasa/CompDam_DGD) "
"![stars](https://img.shields.io/github/stars/nasa/CompDam_DGD) "
"![forks](https://img.shields.io/github/forks/nasa/CompDam_DGD) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/nasa/CompDam_DGD?color=blue) "
"![issues](https://img.shields.io/github/issues/nasa/CompDam_DGD?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:171
msgid "[cp2k](https://github.com/cp2k/cp2k)"
msgstr ""

#: ../../source/packages/scientific.md:172
msgid ""
"quantum chemistry and solid state physics software package that can "
"perform atomistic simulations"
msgstr ""

#: ../../source/packages/scientific.md:174
msgid "Tags: quantum-chemistry physics molecular-dynamics metadynamics mpi cuda"
msgstr ""

#: ../../source/packages/scientific.md:176
msgid ""
"![Release](https://img.shields.io/github/v/release/cp2k/cp2k?color=green)"
" ![license](https://img.shields.io/github/license/cp2k/cp2k) "
"![stars](https://img.shields.io/github/stars/cp2k/cp2k) "
"![forks](https://img.shields.io/github/forks/cp2k/cp2k) ![last-"
"commit](https://img.shields.io/github/last-commit/cp2k/cp2k?color=blue) "
"![issues](https://img.shields.io/github/issues/cp2k/cp2k?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:186
msgid "[crest](https://github.com/grimme-lab/crest)"
msgstr ""

#: ../../source/packages/scientific.md:187
msgid "Conformer-rotamer ensemble search tool"
msgstr ""

#: ../../source/packages/scientific.md:189
msgid ""
"Tags: computational-chemistry atomistic-simulations conformational-"
"analysis metadynamics"
msgstr ""

#: ../../source/packages/scientific.md:191
msgid ""
"![Release](https://img.shields.io/github/v/release/grimme-"
"lab/crest?color=green) ![license](https://img.shields.io/github/license"
"/grimme-lab/crest) ![stars](https://img.shields.io/github/stars/grimme-"
"lab/crest) ![forks](https://img.shields.io/github/forks/grimme-lab/crest)"
" ![last-commit](https://img.shields.io/github/last-commit/grimme-"
"lab/crest?color=blue) ![issues](https://img.shields.io/github/issues"
"/grimme-lab/crest?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:201
msgid "[CTSM](https://github.com/ESCOMP/CTSM)"
msgstr ""

#: ../../source/packages/scientific.md:202
msgid "The Community Terrestrial Systems Model"
msgstr ""

#: ../../source/packages/scientific.md:206
msgid ""
"![Release](https://img.shields.io/github/v/release/ESCOMP/CTSM?color=green)"
" ![license](https://img.shields.io/github/license/ESCOMP/CTSM) "
"![stars](https://img.shields.io/github/stars/ESCOMP/CTSM) "
"![forks](https://img.shields.io/github/forks/ESCOMP/CTSM) ![last-"
"commit](https://img.shields.io/github/last-commit/ESCOMP/CTSM?color=blue)"
" ![issues](https://img.shields.io/github/issues/ESCOMP/CTSM?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:216
msgid "[Dalton](https://gitlab.com/dalton/dalton)"
msgstr ""

#: ../../source/packages/scientific.md:217
msgid "Powerful molecular electronic structure program"
msgstr ""

#: ../../source/packages/scientific.md:219
#: ../../source/packages/scientific.md:531
msgid "Tags: electronic-structure relativistic"
msgstr ""

#: ../../source/packages/scientific.md:221
msgid ""
"![Release](https://img.shields.io/gitlab/v/release/dalton/dalton?date_order_by=created_at&sort=date&color=green)"
" ![license](https://img.shields.io/gitlab/license/dalton/dalton) "
"![forks](https://img.shields.io/gitlab/forks/dalton/dalton) "
"![issues](https://img.shields.io/gitlab/issues/all/dalton/dalton?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:229
msgid "[DAMASK](https://github.com/eisenforschung/DAMASK)"
msgstr ""

#: ../../source/packages/scientific.md:230
msgid "A unified multi-physics crystal plasticity simulation package"
msgstr ""

#: ../../source/packages/scientific.md:232
msgid "Tags: plasticity simulation material multi-physics"
msgstr ""

#: ../../source/packages/scientific.md:234
msgid ""
"![Release](https://img.shields.io/github/v/release/eisenforschung/DAMASK?color=green)"
" ![license](https://img.shields.io/github/license/eisenforschung/DAMASK) "
"![stars](https://img.shields.io/github/stars/eisenforschung/DAMASK) "
"![forks](https://img.shields.io/github/forks/eisenforschung/DAMASK) "
"![last-commit](https://img.shields.io/github/last-"
"commit/eisenforschung/DAMASK?color=blue) "
"![issues](https://img.shields.io/github/issues/eisenforschung/DAMASK?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:244
msgid "[DFT-D4](https://github.com/dftd4/dftd4)"
msgstr ""

#: ../../source/packages/scientific.md:245
msgid ""
"A Generally Applicable Atomic-Charge Dependent London Dispersion "
"Correction"
msgstr ""

#: ../../source/packages/scientific.md:247
msgid "Tags: dft-d dispersion-correction"
msgstr ""

#: ../../source/packages/scientific.md:249
msgid ""
"![Release](https://img.shields.io/github/v/release/dftd4/dftd4?color=green)"
" ![license](https://img.shields.io/github/license/dftd4/dftd4) "
"![stars](https://img.shields.io/github/stars/dftd4/dftd4) "
"![forks](https://img.shields.io/github/forks/dftd4/dftd4) ![last-"
"commit](https://img.shields.io/github/last-commit/dftd4/dftd4?color=blue)"
" ![issues](https://img.shields.io/github/issues/dftd4/dftd4?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:259
msgid "[dftatom](https://github.com/certik/dftatom)"
msgstr ""

#: ../../source/packages/scientific.md:260
msgid ""
"Routines for Radial Integration of Dirac, Schrödinger, and Poisson "
"Equations"
msgstr ""

#: ../../source/packages/scientific.md:262
msgid "Tags: electronic-structure atomic"
msgstr ""

#: ../../source/packages/scientific.md:264
msgid ""
"![Release](https://img.shields.io/github/v/release/certik/dftatom?color=green)"
" ![license](https://img.shields.io/github/license/certik/dftatom) "
"![stars](https://img.shields.io/github/stars/certik/dftatom) "
"![forks](https://img.shields.io/github/forks/certik/dftatom) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/certik/dftatom?color=blue) "
"![issues](https://img.shields.io/github/issues/certik/dftatom?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:274
msgid "[DFTB+](https://github.com/dftbplus/dftbplus)"
msgstr ""

#: ../../source/packages/scientific.md:275
msgid "DFTB+ general package for performing fast atomistic simulations"
msgstr ""

#: ../../source/packages/scientific.md:277
msgid "Tags: tight-binding quantum-mechanics density-functional-theory"
msgstr ""

#: ../../source/packages/scientific.md:279
msgid ""
"![Release](https://img.shields.io/github/v/release/dftbplus/dftbplus?color=green)"
" ![license](https://img.shields.io/github/license/dftbplus/dftbplus) "
"![stars](https://img.shields.io/github/stars/dftbplus/dftbplus) "
"![forks](https://img.shields.io/github/forks/dftbplus/dftbplus) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/dftbplus/dftbplus?color=blue) "
"![issues](https://img.shields.io/github/issues/dftbplus/dftbplus?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:289
msgid "[DL_POLY_4](https://gitlab.com/ccp5/dl-poly)"
msgstr ""

#: ../../source/packages/scientific.md:290
msgid ""
"classical molecular dynamics code developed at Daresbury Laboratory since"
" 1992"
msgstr ""

#: ../../source/packages/scientific.md:292
msgid "Tags: molecular-dynamics mpi"
msgstr ""

#: ../../source/packages/scientific.md:294
msgid ""
"![Release](https://img.shields.io/gitlab/v/release/ccp5/dl-"
"poly?date_order_by=created_at&sort=date&color=green) "
"![license](https://img.shields.io/gitlab/license/ccp5/dl-poly) "
"![forks](https://img.shields.io/gitlab/forks/ccp5/dl-poly) "
"![issues](https://img.shields.io/gitlab/issues/all/ccp5/dl-"
"poly?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:302
msgid "[Elk](https://elk.sourceforge.io/)"
msgstr ""

#: ../../source/packages/scientific.md:304
msgid ""
"An all-electron full-potential linearised augmented-plane wave (LAPW) "
"code with many advanced features"
msgstr ""

#: ../../source/packages/scientific.md:306
msgid "Tags: density-functional-theory"
msgstr ""

#: ../../source/packages/scientific.md:311
msgid "[eT](https://gitlab.com/eT-program/eT)"
msgstr ""

#: ../../source/packages/scientific.md:312
msgid ""
"electronic structure program with coupled cluster, multiscale and "
"multilevel methods"
msgstr ""

#: ../../source/packages/scientific.md:314
msgid "Tags: electronic-structure coupled-cluster"
msgstr ""

#: ../../source/packages/scientific.md:316
msgid ""
"![Release](https://img.shields.io/gitlab/v/release/eT-"
"program/eT?date_order_by=created_at&sort=date&color=green) "
"![license](https://img.shields.io/gitlab/license/eT-program/eT) "
"![forks](https://img.shields.io/gitlab/forks/eT-program/eT) "
"![issues](https://img.shields.io/gitlab/issues/all/eT-"
"program/eT?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:339
msgid "[fds](https://github.com/firemodels/fds)"
msgstr ""

#: ../../source/packages/scientific.md:340
msgid ""
"Large-eddy simulation code for low-speed flows, with an emphasis on smoke"
" and heat transport from fires."
msgstr ""

#: ../../source/packages/scientific.md:344
msgid ""
"![Release](https://img.shields.io/github/v/release/firemodels/fds?color=green)"
" ![license](https://img.shields.io/github/license/firemodels/fds) "
"![stars](https://img.shields.io/github/stars/firemodels/fds) "
"![forks](https://img.shields.io/github/forks/firemodels/fds) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/firemodels/fds?color=blue) "
"![issues](https://img.shields.io/github/issues/firemodels/fds?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:354
msgid "[flexi](https://github.com/flexi-framework/flexi)"
msgstr ""

#: ../../source/packages/scientific.md:355
msgid ""
"Open Source High-Order Unstructured Discontinuous Galerkin Fluid Dynamics"
" Solver"
msgstr ""

#: ../../source/packages/scientific.md:359
msgid ""
"![Release](https://img.shields.io/github/v/release/flexi-"
"framework/flexi?color=green) "
"![license](https://img.shields.io/github/license/flexi-framework/flexi) "
"![stars](https://img.shields.io/github/stars/flexi-framework/flexi) "
"![forks](https://img.shields.io/github/forks/flexi-framework/flexi) "
"![last-commit](https://img.shields.io/github/last-commit/flexi-"
"framework/flexi?color=blue) "
"![issues](https://img.shields.io/github/issues/flexi-"
"framework/flexi?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:369
msgid "[fluidity](https://github.com/FluidityProject/fluidity)"
msgstr ""

#: ../../source/packages/scientific.md:370
msgid ""
"Computational fluid dynamics code with adaptive unstructured mesh "
"capabilities"
msgstr ""

#: ../../source/packages/scientific.md:372
msgid "Tags: cfd computational-fluid-dynamics unstructured"
msgstr ""

#: ../../source/packages/scientific.md:374
msgid ""
"![Release](https://img.shields.io/github/v/release/FluidityProject/fluidity?color=green)"
" "
"![license](https://img.shields.io/github/license/FluidityProject/fluidity)"
" ![stars](https://img.shields.io/github/stars/FluidityProject/fluidity) "
"![forks](https://img.shields.io/github/forks/FluidityProject/fluidity) "
"![last-commit](https://img.shields.io/github/last-"
"commit/FluidityProject/fluidity?color=blue) "
"![issues](https://img.shields.io/github/issues/FluidityProject/fluidity?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:384
msgid "[FMS](https://github.com/NOAA-GFDL/FMS)"
msgstr ""

#: ../../source/packages/scientific.md:385
msgid "Flexible Modeling System"
msgstr ""

#: ../../source/packages/scientific.md:389
msgid ""
"![Release](https://img.shields.io/github/v/release/NOAA-"
"GFDL/FMS?color=green) ![license](https://img.shields.io/github/license"
"/NOAA-GFDL/FMS) ![stars](https://img.shields.io/github/stars/NOAA-"
"GFDL/FMS) ![forks](https://img.shields.io/github/forks/NOAA-GFDL/FMS) "
"![last-commit](https://img.shields.io/github/last-commit/NOAA-"
"GFDL/FMS?color=blue) ![issues](https://img.shields.io/github/issues/NOAA-"
"GFDL/FMS?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:399
msgid "[freeCappuccino](https://github.com/nikola-m/freeCappuccino)"
msgstr ""

#: ../../source/packages/scientific.md:400
msgid ""
"A three-dimensional unstructured finite volume code for fluid flow "
"simulations."
msgstr ""

#: ../../source/packages/scientific.md:402
msgid "Tags: finite volume turbulent turbulence"
msgstr ""

#: ../../source/packages/scientific.md:404
msgid ""
"![Release](https://img.shields.io/github/v/release/nikola-m/freeCappuccino?color=green)"
" "
"![license](https://img.shields.io/github/license/nikola-m/freeCappuccino)"
" ![stars](https://img.shields.io/github/stars/nikola-m/freeCappuccino) "
"![forks](https://img.shields.io/github/forks/nikola-m/freeCappuccino) "
"![last-commit](https://img.shields.io/github/last-"
"commit/nikola-m/freeCappuccino?color=blue) "
"![issues](https://img.shields.io/github/issues/nikola-m/freeCappuccino?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:429
msgid "[Gemini3D](https://github.com/gemini3d/gemini3d)"
msgstr ""

#: ../../source/packages/scientific.md:430
msgid "3D ionospheric model covering local (> 10 gyroradii) to global scales."
msgstr ""

#: ../../source/packages/scientific.md:434
msgid ""
"![Release](https://img.shields.io/github/v/release/gemini3d/gemini3d?color=green)"
" ![license](https://img.shields.io/github/license/gemini3d/gemini3d) "
"![stars](https://img.shields.io/github/stars/gemini3d/gemini3d) "
"![forks](https://img.shields.io/github/forks/gemini3d/gemini3d) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/gemini3d/gemini3d?color=blue) "
"![issues](https://img.shields.io/github/issues/gemini3d/gemini3d?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:459
msgid "[ICAR](https://github.com/NCAR/icar)"
msgstr ""

#: ../../source/packages/scientific.md:460
msgid "The Intermediate Complexity Atmospheric Research model"
msgstr ""

#: ../../source/packages/scientific.md:464
msgid ""
"![Release](https://img.shields.io/github/v/release/NCAR/icar?color=green)"
" ![license](https://img.shields.io/github/license/NCAR/icar) "
"![stars](https://img.shields.io/github/stars/NCAR/icar) "
"![forks](https://img.shields.io/github/forks/NCAR/icar) ![last-"
"commit](https://img.shields.io/github/last-commit/NCAR/icar?color=blue) "
"![issues](https://img.shields.io/github/issues/NCAR/icar?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:474
msgid "[LATTE](https://github.com/lanl/LATTE)"
msgstr ""

#: ../../source/packages/scientific.md:475
msgid "Open source density functional tight binding molecular dynamics"
msgstr ""

#: ../../source/packages/scientific.md:477
msgid "Tags: tight-binding molecular-dynamics"
msgstr ""

#: ../../source/packages/scientific.md:479
msgid ""
"![Release](https://img.shields.io/github/v/release/lanl/LATTE?color=green)"
" ![license](https://img.shields.io/github/license/lanl/LATTE) "
"![stars](https://img.shields.io/github/stars/lanl/LATTE) "
"![forks](https://img.shields.io/github/forks/lanl/LATTE) ![last-"
"commit](https://img.shields.io/github/last-commit/lanl/LATTE?color=blue) "
"![issues](https://img.shields.io/github/issues/lanl/LATTE?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:489
msgid "[lesgo](https://github.com/lesgo-jhu/lesgo)"
msgstr ""

#: ../../source/packages/scientific.md:494
msgid ""
"![Release](https://img.shields.io/github/v/release/lesgo-"
"jhu/lesgo?color=green) ![license](https://img.shields.io/github/license"
"/lesgo-jhu/lesgo) ![stars](https://img.shields.io/github/stars/lesgo-"
"jhu/lesgo) ![forks](https://img.shields.io/github/forks/lesgo-jhu/lesgo) "
"![last-commit](https://img.shields.io/github/last-commit/lesgo-"
"jhu/lesgo?color=blue) ![issues](https://img.shields.io/github/issues"
"/lesgo-jhu/lesgo?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:504
msgid "[libmbd](https://github.com/libmbd/libmbd)"
msgstr ""

#: ../../source/packages/scientific.md:505
msgid "Many-body dispersion library"
msgstr ""

#: ../../source/packages/scientific.md:507
msgid "Tags: dispersion-correction"
msgstr ""

#: ../../source/packages/scientific.md:509
msgid ""
"![Release](https://img.shields.io/github/v/release/libmbd/libmbd?color=green)"
" ![license](https://img.shields.io/github/license/libmbd/libmbd) "
"![stars](https://img.shields.io/github/stars/libmbd/libmbd) "
"![forks](https://img.shields.io/github/forks/libmbd/libmbd) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/libmbd/libmbd?color=blue) "
"![issues](https://img.shields.io/github/issues/libmbd/libmbd?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:528
msgid "[LSDalton](https://gitlab.com/dalton/lsdalton)"
msgstr ""

#: ../../source/packages/scientific.md:529
msgid "Linear scaling molecular electronic structure program"
msgstr ""

#: ../../source/packages/scientific.md:533
msgid ""
"![Release](https://img.shields.io/gitlab/v/release/dalton/lsdalton?date_order_by=created_at&sort=date&color=green)"
" ![license](https://img.shields.io/gitlab/license/dalton/lsdalton) "
"![forks](https://img.shields.io/gitlab/forks/dalton/lsdalton) "
"![issues](https://img.shields.io/gitlab/issues/all/dalton/lsdalton?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:541
msgid "[MESA](http://mesa.sourceforge.net/)"
msgstr ""

#: ../../source/packages/scientific.md:543
msgid "Modules for Experiments in Stellar Astrophysics"
msgstr ""

#: ../../source/packages/scientific.md:545
msgid "Tags: stellar astrophysics"
msgstr ""

#: ../../source/packages/scientific.md:550
msgid "[MITgcm](https://github.com/MITgcm/MITgcm)"
msgstr ""

#: ../../source/packages/scientific.md:551
msgid "M.I.T General Circulation Model master code and documentation repository"
msgstr ""

#: ../../source/packages/scientific.md:555
msgid ""
"![Release](https://img.shields.io/github/v/release/MITgcm/MITgcm?color=green)"
" ![license](https://img.shields.io/github/license/MITgcm/MITgcm) "
"![stars](https://img.shields.io/github/stars/MITgcm/MITgcm) "
"![forks](https://img.shields.io/github/forks/MITgcm/MITgcm) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/MITgcm/MITgcm?color=blue) "
"![issues](https://img.shields.io/github/issues/MITgcm/MITgcm?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:565
msgid "[MOM6](https://github.com/NOAA-GFDL/MOM6)"
msgstr ""

#: ../../source/packages/scientific.md:566
msgid "Modular Ocean Model"
msgstr ""

#: ../../source/packages/scientific.md:570
msgid ""
"![Release](https://img.shields.io/github/v/release/NOAA-"
"GFDL/MOM6?color=green) ![license](https://img.shields.io/github/license"
"/NOAA-GFDL/MOM6) ![stars](https://img.shields.io/github/stars/NOAA-"
"GFDL/MOM6) ![forks](https://img.shields.io/github/forks/NOAA-GFDL/MOM6) "
"![last-commit](https://img.shields.io/github/last-commit/NOAA-"
"GFDL/MOM6?color=blue) ![issues](https://img.shields.io/github/issues"
"/NOAA-GFDL/MOM6?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:580
msgid "[MPAS-Model](https://github.com/MPAS-Dev/MPAS-Model)"
msgstr ""

#: ../../source/packages/scientific.md:581
msgid ""
"collaborative project for developing atmosphere, ocean, and other earth-"
"system simulation components for use in climate, regional climate, and "
"weather studies"
msgstr ""

#: ../../source/packages/scientific.md:585
msgid ""
"![Release](https://img.shields.io/github/v/release/MPAS-Dev/MPAS-"
"Model?color=green) ![license](https://img.shields.io/github/license/MPAS-"
"Dev/MPAS-Model) ![stars](https://img.shields.io/github/stars/MPAS-Dev"
"/MPAS-Model) ![forks](https://img.shields.io/github/forks/MPAS-Dev/MPAS-"
"Model) ![last-commit](https://img.shields.io/github/last-commit/MPAS-Dev"
"/MPAS-Model?color=blue) ![issues](https://img.shields.io/github/issues"
"/MPAS-Dev/MPAS-Model?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:595
msgid "[NASTRAN 93](https://github.com/nasa/NASTRAN-93)"
msgstr ""

#: ../../source/packages/scientific.md:596
msgid ""
"NASTRAN is the NASA Structural Analysis System, a finite element analysis"
" program (FEA)"
msgstr ""

#: ../../source/packages/scientific.md:598
msgid "Tags: finite element structural"
msgstr ""

#: ../../source/packages/scientific.md:600
msgid ""
"![Release](https://img.shields.io/github/v/release/nasa/NASTRAN-93?color=green)"
" ![license](https://img.shields.io/github/license/nasa/NASTRAN-93) "
"![stars](https://img.shields.io/github/stars/nasa/NASTRAN-93) "
"![forks](https://img.shields.io/github/forks/nasa/NASTRAN-93) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/nasa/NASTRAN-93?color=blue) "
"![issues](https://img.shields.io/github/issues/nasa/NASTRAN-93?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:610
msgid "[NASTRAN 95](https://github.com/nasa/NASTRAN-95)"
msgstr ""

#: ../../source/packages/scientific.md:611
msgid ""
"NASA Structural Analysis System, a finite element analysis program (FEA) "
"completed in the early 1970's"
msgstr ""

#: ../../source/packages/scientific.md:613
msgid "Tags: finite element structural eigne stability loads"
msgstr ""

#: ../../source/packages/scientific.md:615
msgid ""
"![Release](https://img.shields.io/github/v/release/nasa/NASTRAN-95?color=green)"
" ![license](https://img.shields.io/github/license/nasa/NASTRAN-95) "
"![stars](https://img.shields.io/github/stars/nasa/NASTRAN-95) "
"![forks](https://img.shields.io/github/forks/nasa/NASTRAN-95) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/nasa/NASTRAN-95?color=blue) "
"![issues](https://img.shields.io/github/issues/nasa/NASTRAN-95?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:625
msgid "[Nek5000](https://github.com/Nek5000/Nek5000)"
msgstr ""

#: ../../source/packages/scientific.md:626
msgid "MPI parallel higher-order spectral element CFD solver"
msgstr ""

#: ../../source/packages/scientific.md:628
msgid ""
"Tags: cfd computational-fluid-dynamics spectral element higher order mpi "
"parallel les rans"
msgstr ""

#: ../../source/packages/scientific.md:630
msgid ""
"![Release](https://img.shields.io/github/v/release/Nek5000/Nek5000?color=green)"
" ![license](https://img.shields.io/github/license/Nek5000/Nek5000) "
"![stars](https://img.shields.io/github/stars/Nek5000/Nek5000) "
"![forks](https://img.shields.io/github/forks/Nek5000/Nek5000) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/Nek5000/Nek5000?color=blue) "
"![issues](https://img.shields.io/github/issues/Nek5000/Nek5000?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:640
msgid "[NWChem](https://github.com/nwchemgit/nwchem)"
msgstr ""

#: ../../source/packages/scientific.md:641
msgid "Open Source High-Performance Computational Chemistry"
msgstr ""

#: ../../source/packages/scientific.md:643
#: ../../source/packages/scientific.md:759
msgid ""
"Tags: computational-chemistry parallel-computing electronic-structure "
"molecular-simulations density-functional-theory hartree-fock quantum-"
"chemistry"
msgstr ""

#: ../../source/packages/scientific.md:645
msgid ""
"![Release](https://img.shields.io/github/v/release/nwchemgit/nwchem?color=green)"
" ![license](https://img.shields.io/github/license/nwchemgit/nwchem) "
"![stars](https://img.shields.io/github/stars/nwchemgit/nwchem) "
"![forks](https://img.shields.io/github/forks/nwchemgit/nwchem) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/nwchemgit/nwchem?color=blue) "
"![issues](https://img.shields.io/github/issues/nwchemgit/nwchem?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:655
msgid "[Octopus](https://gitlab.com/octopus-code/octopus)"
msgstr ""

#: ../../source/packages/scientific.md:656
msgid "Real-space Time-Dependent Density Functional Theory code"
msgstr ""

#: ../../source/packages/scientific.md:658
#: ../../source/packages/scientific.md:920
msgid "Tags: electronic-structure"
msgstr ""

#: ../../source/packages/scientific.md:660
msgid ""
"![Release](https://img.shields.io/gitlab/v/release/octopus-"
"code/octopus?date_order_by=created_at&sort=date&color=green) "
"![license](https://img.shields.io/gitlab/license/octopus-code/octopus) "
"![forks](https://img.shields.io/gitlab/forks/octopus-code/octopus) "
"![issues](https://img.shields.io/gitlab/issues/all/octopus-"
"code/octopus?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:668
msgid "[OFF](https://github.com/szaghi/OFF)"
msgstr ""

#: ../../source/packages/scientific.md:669
msgid "Finite volume fluid dynamics"
msgstr ""

#: ../../source/packages/scientific.md:671
msgid "Tags: godunov riemann euler runge kutta structured"
msgstr ""

#: ../../source/packages/scientific.md:673
msgid ""
"![Release](https://img.shields.io/github/v/release/szaghi/OFF?color=green)"
" ![license](https://img.shields.io/github/license/szaghi/OFF) "
"![stars](https://img.shields.io/github/stars/szaghi/OFF) "
"![forks](https://img.shields.io/github/forks/szaghi/OFF) ![last-"
"commit](https://img.shields.io/github/last-commit/szaghi/OFF?color=blue) "
"![issues](https://img.shields.io/github/issues/szaghi/OFF?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:683
msgid "[OpenMolcas](https://gitlab.com/Molcas/OpenMolcas)"
msgstr ""

#: ../../source/packages/scientific.md:684
msgid ""
"Quantum chemistry software package for multiconfigurational approaches to"
" the electronic structure"
msgstr ""

#: ../../source/packages/scientific.md:686
msgid "Tags: electronic-structure casscf caspt2"
msgstr ""

#: ../../source/packages/scientific.md:688
msgid ""
"![Release](https://img.shields.io/gitlab/v/release/Molcas/OpenMolcas?date_order_by=created_at&sort=date&color=green)"
" ![license](https://img.shields.io/gitlab/license/Molcas/OpenMolcas) "
"![forks](https://img.shields.io/gitlab/forks/Molcas/OpenMolcas) "
"![issues](https://img.shields.io/gitlab/issues/all/Molcas/OpenMolcas?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:696
msgid "[OpenSWPC](https://github.com/tktmyd/OpenSWPC)"
msgstr ""

#: ../../source/packages/scientific.md:697
msgid "A Seismic Wave Propagation Code by Parallel Finite Difference Method"
msgstr ""

#: ../../source/packages/scientific.md:701
msgid ""
"![Release](https://img.shields.io/github/v/release/tktmyd/OpenSWPC?color=green)"
" ![license](https://img.shields.io/github/license/tktmyd/OpenSWPC) "
"![stars](https://img.shields.io/github/stars/tktmyd/OpenSWPC) "
"![forks](https://img.shields.io/github/forks/tktmyd/OpenSWPC) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/tktmyd/OpenSWPC?color=blue) "
"![issues](https://img.shields.io/github/issues/tktmyd/OpenSWPC?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:711
msgid "[pencil-code](https://github.com/pencil-code/pencil-code)"
msgstr ""

#: ../../source/packages/scientific.md:712
msgid ""
"A high-order finite-difference code for compressible hydrodynamic flows "
"with magnetic fields and particles"
msgstr ""

#: ../../source/packages/scientific.md:714
msgid "Tags: finite-difference hydrodynamics magnetic-field particles"
msgstr ""

#: ../../source/packages/scientific.md:716
msgid ""
"![Release](https://img.shields.io/github/v/release/pencil-code/pencil-"
"code?color=green) ![license](https://img.shields.io/github/license"
"/pencil-code/pencil-code) ![stars](https://img.shields.io/github/stars"
"/pencil-code/pencil-code) ![forks](https://img.shields.io/github/forks"
"/pencil-code/pencil-code) ![last-commit](https://img.shields.io/github"
"/last-commit/pencil-code/pencil-code?color=blue) "
"![issues](https://img.shields.io/github/issues/pencil-code/pencil-"
"code?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:726
msgid "[qcxms](https://github.com/qcxms/qcxms)"
msgstr ""

#: ../../source/packages/scientific.md:727
msgid "Quantum mechanic mass spectrometry calculation program"
msgstr ""

#: ../../source/packages/scientific.md:729
msgid "Tags: computational-chemistry molecular-dynamics mass-spectrometry"
msgstr ""

#: ../../source/packages/scientific.md:731
msgid ""
"![Release](https://img.shields.io/github/v/release/qcxms/qcxms?color=green)"
" ![license](https://img.shields.io/github/license/qcxms/qcxms) "
"![stars](https://img.shields.io/github/stars/qcxms/qcxms) "
"![forks](https://img.shields.io/github/forks/qcxms/qcxms) ![last-"
"commit](https://img.shields.io/github/last-commit/qcxms/qcxms?color=blue)"
" ![issues](https://img.shields.io/github/issues/qcxms/qcxms?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:741
msgid "[Quantum ESPRESSO](https://github.com/QEF/q-e)"
msgstr ""

#: ../../source/packages/scientific.md:742
msgid ""
"Quantum ESPRESSO is an integrated suite of Open-Source computer codes for"
" electronic-structure calculations and materials modeling at the "
"nanoscale"
msgstr ""

#: ../../source/packages/scientific.md:746
msgid ""
"![Release](https://img.shields.io/github/v/release/QEF/q-e?color=green) "
"![license](https://img.shields.io/github/license/QEF/q-e) "
"![stars](https://img.shields.io/github/stars/QEF/q-e) "
"![forks](https://img.shields.io/github/forks/QEF/q-e) ![last-"
"commit](https://img.shields.io/github/last-commit/QEF/q-e?color=blue) "
"![issues](https://img.shields.io/github/issues/QEF/q-e?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:756
msgid "[QUICK](https://github.com/merzlab/QUICK)"
msgstr ""

#: ../../source/packages/scientific.md:757
msgid "A GPU-enabled ab initio quantum chemistry software package"
msgstr ""

#: ../../source/packages/scientific.md:761
msgid ""
"![Release](https://img.shields.io/github/v/release/merzlab/QUICK?color=green)"
" ![license](https://img.shields.io/github/license/merzlab/QUICK) "
"![stars](https://img.shields.io/github/stars/merzlab/QUICK) "
"![forks](https://img.shields.io/github/forks/merzlab/QUICK) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/merzlab/QUICK?color=blue) "
"![issues](https://img.shields.io/github/issues/merzlab/QUICK?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:771
msgid "[QUIP](https://github.com/libAtoms/QUIP)"
msgstr ""

#: ../../source/packages/scientific.md:772
msgid ""
"The QUIP package is a collection of software tools to carry out molecular"
" dynamics simulations."
msgstr ""

#: ../../source/packages/scientific.md:774
msgid ""
"Tags: electronic-structure quantum-chemistry physics molecular-dynamics "
"mpi qm-mm"
msgstr ""

#: ../../source/packages/scientific.md:776
msgid ""
"![Release](https://img.shields.io/github/v/release/libAtoms/QUIP?color=green)"
" ![license](https://img.shields.io/github/license/libAtoms/QUIP) "
"![stars](https://img.shields.io/github/stars/libAtoms/QUIP) "
"![forks](https://img.shields.io/github/forks/libAtoms/QUIP) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/libAtoms/QUIP?color=blue) "
"![issues](https://img.shields.io/github/issues/libAtoms/QUIP?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:786
msgid "[SeisSol](https://github.com/SeisSol/SeisSol)"
msgstr ""

#: ../../source/packages/scientific.md:787
msgid ""
"A software for the numerical simulation of seismic wave phenomena and "
"earthquake dynamics"
msgstr ""

#: ../../source/packages/scientific.md:789
msgid "Tags: hpc earthquakes dynamic-rupture"
msgstr ""

#: ../../source/packages/scientific.md:791
msgid ""
"![Release](https://img.shields.io/github/v/release/SeisSol/SeisSol?color=green)"
" ![license](https://img.shields.io/github/license/SeisSol/SeisSol) "
"![stars](https://img.shields.io/github/stars/SeisSol/SeisSol) "
"![forks](https://img.shields.io/github/forks/SeisSol/SeisSol) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/SeisSol/SeisSol?color=blue) "
"![issues](https://img.shields.io/github/issues/SeisSol/SeisSol?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:801
msgid "[siesta](https://gitlab.com/siesta-project/siesta)"
msgstr ""

#: ../../source/packages/scientific.md:802
msgid "A first-principles materials simulation code using DFT"
msgstr ""

#: ../../source/packages/scientific.md:804
msgid ""
"Tags: electronic-structure density-functional-theory molecular-dynamics "
"mpi"
msgstr ""

#: ../../source/packages/scientific.md:806
msgid ""
"![Release](https://img.shields.io/gitlab/v/release/siesta-"
"project/siesta?date_order_by=created_at&sort=date&color=green) "
"![license](https://img.shields.io/gitlab/license/siesta-project/siesta) "
"![forks](https://img.shields.io/gitlab/forks/siesta-project/siesta) "
"![issues](https://img.shields.io/gitlab/issues/all/siesta-"
"project/siesta?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:829
msgid "[SNaC](https://github.com/p-costa/SNaC)"
msgstr ""

#: ../../source/packages/scientific.md:830
msgid ""
"A multi-block solver for massively parallel direct numerical simulations "
"(DNS) of fluid flows"
msgstr ""

#: ../../source/packages/scientific.md:834
msgid ""
"![Release](https://img.shields.io/github/v/release/p-costa/SNaC?color=green)"
" ![license](https://img.shields.io/github/license/p-costa/SNaC) "
"![stars](https://img.shields.io/github/stars/p-costa/SNaC) "
"![forks](https://img.shields.io/github/forks/p-costa/SNaC) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/p-costa/SNaC?color=blue) "
"![issues](https://img.shields.io/github/issues/p-costa/SNaC?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:844
msgid "[SNAP](https://github.com/lanl/SNAP)"
msgstr ""

#: ../../source/packages/scientific.md:845
msgid ""
"proxy application to model the performance of a modern discrete ordinates"
" neutral particle transport application"
msgstr ""

#: ../../source/packages/scientific.md:849
msgid ""
"![Release](https://img.shields.io/github/v/release/lanl/SNAP?color=green)"
" ![license](https://img.shields.io/github/license/lanl/SNAP) "
"![stars](https://img.shields.io/github/stars/lanl/SNAP) "
"![forks](https://img.shields.io/github/forks/lanl/SNAP) ![last-"
"commit](https://img.shields.io/github/last-commit/lanl/SNAP?color=blue) "
"![issues](https://img.shields.io/github/issues/lanl/SNAP?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:859
msgid "[Specfem3D](https://github.com/geodynamics/specfem3d)"
msgstr ""

#: ../../source/packages/scientific.md:860
msgid ""
"Simulates acoustic (fluid), elastic (solid), coupled acoustic/elastic, "
"poroelastic or seismic wave propagation in any type of conforming mesh of"
" hexahedra (structured or not)"
msgstr ""

#: ../../source/packages/scientific.md:864
msgid ""
"![Release](https://img.shields.io/github/v/release/geodynamics/specfem3d?color=green)"
" ![license](https://img.shields.io/github/license/geodynamics/specfem3d) "
"![stars](https://img.shields.io/github/stars/geodynamics/specfem3d) "
"![forks](https://img.shields.io/github/forks/geodynamics/specfem3d) "
"![last-commit](https://img.shields.io/github/last-"
"commit/geodynamics/specfem3d?color=blue) "
"![issues](https://img.shields.io/github/issues/geodynamics/specfem3d?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:874
msgid "[tinker](https://github.com/TinkerTools/tinker)"
msgstr ""

#: ../../source/packages/scientific.md:875
msgid "Software Tools for Molecular Design"
msgstr ""

#: ../../source/packages/scientific.md:877
msgid "Tags: molecular-modeling"
msgstr ""

#: ../../source/packages/scientific.md:879
msgid ""
"![Release](https://img.shields.io/github/v/release/TinkerTools/tinker?color=green)"
" ![license](https://img.shields.io/github/license/TinkerTools/tinker) "
"![stars](https://img.shields.io/github/stars/TinkerTools/tinker) "
"![forks](https://img.shields.io/github/forks/TinkerTools/tinker) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/TinkerTools/tinker?color=blue) "
"![issues](https://img.shields.io/github/issues/TinkerTools/tinker?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:889
msgid "[Tracmass](https://github.com/TRACMASS/tracmass)"
msgstr ""

#: ../../source/packages/scientific.md:890
msgid "Lagrangian particle tracking code"
msgstr ""

#: ../../source/packages/scientific.md:894
msgid ""
"![Release](https://img.shields.io/github/v/release/TRACMASS/tracmass?color=green)"
" ![license](https://img.shields.io/github/license/TRACMASS/tracmass) "
"![stars](https://img.shields.io/github/stars/TRACMASS/tracmass) "
"![forks](https://img.shields.io/github/forks/TRACMASS/tracmass) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/TRACMASS/tracmass?color=blue) "
"![issues](https://img.shields.io/github/issues/TRACMASS/tracmass?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:904
msgid "[Truchas](https://gitlab.com/truchas/truchas)"
msgstr ""

#: ../../source/packages/scientific.md:905
msgid "3D Multiphysics Simulation of Metal Casting and Processing"
msgstr ""

#: ../../source/packages/scientific.md:907
msgid "Tags: fluid-dynamics metal-casting multiphysics hpc"
msgstr ""

#: ../../source/packages/scientific.md:909
msgid ""
"![Release](https://img.shields.io/gitlab/v/release/truchas/truchas?date_order_by=created_at&sort=date&color=green)"
" ![license](https://img.shields.io/gitlab/license/truchas/truchas) "
"![forks](https://img.shields.io/gitlab/forks/truchas/truchas) "
"![issues](https://img.shields.io/gitlab/issues/all/truchas/truchas?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:917
msgid "[Wannier90](https://github.com/wannier-developers/wannier90)"
msgstr ""

#: ../../source/packages/scientific.md:918
msgid "The Maximally-Localised Generalised Wannier Functions Code"
msgstr ""

#: ../../source/packages/scientific.md:922
msgid ""
"![Release](https://img.shields.io/github/v/release/wannier-"
"developers/wannier90?color=green) "
"![license](https://img.shields.io/github/license/wannier-"
"developers/wannier90) ![stars](https://img.shields.io/github/stars"
"/wannier-developers/wannier90) "
"![forks](https://img.shields.io/github/forks/wannier-"
"developers/wannier90) ![last-commit](https://img.shields.io/github/last-"
"commit/wannier-developers/wannier90?color=blue) "
"![issues](https://img.shields.io/github/issues/wannier-"
"developers/wannier90?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:932
msgid "[WHIZARD](https://whizard.hepforge.org/)"
msgstr ""

#: ../../source/packages/scientific.md:934
msgid "Particle Physics Monte Carlo Event Generator"
msgstr ""

#: ../../source/packages/scientific.md:936
msgid ""
"Tags: particle physics parallel mpi monte carlo optimization sampling "
"integration"
msgstr ""

#: ../../source/packages/scientific.md:941
msgid "[WRF](https://github.com/wrf-model/WRF)"
msgstr ""

#: ../../source/packages/scientific.md:942
msgid "Weather Research and Forecasting model"
msgstr ""

#: ../../source/packages/scientific.md:946
msgid ""
"![Release](https://img.shields.io/github/v/release/wrf-"
"model/WRF?color=green) ![license](https://img.shields.io/github/license"
"/wrf-model/WRF) ![stars](https://img.shields.io/github/stars/wrf-"
"model/WRF) ![forks](https://img.shields.io/github/forks/wrf-model/WRF) "
"![last-commit](https://img.shields.io/github/last-commit/wrf-"
"model/WRF?color=blue) ![issues](https://img.shields.io/github/issues/wrf-"
"model/WRF?color=yellow)"
msgstr ""

#: ../../source/packages/scientific.md:956
msgid "[xtb](https://github.com/grimme-lab/xtb)"
msgstr ""

#: ../../source/packages/scientific.md:957
msgid "Semiempirical Extended Tight-Binding Program Package"
msgstr ""

#: ../../source/packages/scientific.md:959
msgid "Tags: quantum-chemistry computational-chemistry atomistic-simulations"
msgstr ""

#: ../../source/packages/scientific.md:961
msgid ""
"![Release](https://img.shields.io/github/v/release/grimme-"
"lab/xtb?color=green) ![license](https://img.shields.io/github/license"
"/grimme-lab/xtb) ![stars](https://img.shields.io/github/stars/grimme-"
"lab/xtb) ![forks](https://img.shields.io/github/forks/grimme-lab/xtb) "
"![last-commit](https://img.shields.io/github/last-commit/grimme-"
"lab/xtb?color=blue) ![issues](https://img.shields.io/github/issues"
"/grimme-lab/xtb?color=yellow)"
msgstr ""

#: ../../source/packages/strings.md:59
msgid "[iso_varying_string](https://gitlab.com/everythingfunctional/iso_varying_string)"
msgstr ""

#: ../../source/packages/strings.md:60
msgid ""
"Implementation of the Fortran ISO_VARYING_STRING module in accordance "
"with the standard"
msgstr ""

#: ../../source/packages/strings.md:62
msgid "Tags: varying length character strings"
msgstr ""

#: ../../source/packages/strings.md:64
msgid ""
"![Release](https://img.shields.io/gitlab/v/release/everythingfunctional/iso_varying_string?date_order_by=created_at&sort=date&color=green)"
" "
"![license](https://img.shields.io/gitlab/license/everythingfunctional/iso_varying_string)"
" "
"![forks](https://img.shields.io/gitlab/forks/everythingfunctional/iso_varying_string)"
" "
"![issues](https://img.shields.io/gitlab/issues/all/everythingfunctional/iso_varying_string?color=yellow)"
msgstr ""

#: ../../source/packages/strings.md:72
msgid "[M_strings](https://github.com/urbanjost/M_strings)"
msgstr ""

#: ../../source/packages/strings.md:73
msgid "Fortran string manipulations"
msgstr ""

#: ../../source/packages/strings.md:75
msgid ""
"Tags: upper lower quoted join replace white space string conversion "
"tokens split"
msgstr ""

#: ../../source/packages/strings.md:77
msgid ""
"![Release](https://img.shields.io/github/v/release/urbanjost/M_strings?color=green)"
" ![license](https://img.shields.io/github/license/urbanjost/M_strings) "
"![stars](https://img.shields.io/github/stars/urbanjost/M_strings) "
"![forks](https://img.shields.io/github/forks/urbanjost/M_strings) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/urbanjost/M_strings?color=blue) "
"![issues](https://img.shields.io/github/issues/urbanjost/M_strings?color=yellow)"
msgstr ""

#: ../../source/packages/strings.md:87
msgid "[strff](https://gitlab.com/everythingfunctional/strff)"
msgstr ""

#: ../../source/packages/strings.md:88
msgid "Strings for Fortran - A library of string functions for Fortran."
msgstr ""

#: ../../source/packages/strings.md:92
msgid ""
"![Release](https://img.shields.io/gitlab/v/release/everythingfunctional/strff?date_order_by=created_at&sort=date&color=green)"
" "
"![license](https://img.shields.io/gitlab/license/everythingfunctional/strff)"
" ![forks](https://img.shields.io/gitlab/forks/everythingfunctional/strff)"
" "
"![issues](https://img.shields.io/gitlab/issues/all/everythingfunctional/strff?color=yellow)"
msgstr ""

#: ../../source/packages/strings.md:100
msgid "[StringiFor](https://github.com/szaghi/StringiFor)"
msgstr ""

#: ../../source/packages/strings.md:101
msgid "Fortran strings manipulator"
msgstr ""

#: ../../source/packages/strings.md:103
msgid "Tags: split join basename search concat"
msgstr ""

#: ../../source/packages/strings.md:105
msgid ""
"![Release](https://img.shields.io/github/v/release/szaghi/StringiFor?color=green)"
" ![license](https://img.shields.io/github/license/szaghi/StringiFor) "
"![stars](https://img.shields.io/github/stars/szaghi/StringiFor) "
"![forks](https://img.shields.io/github/forks/szaghi/StringiFor) ![last-"
"commit](https://img.shields.io/github/last-"
"commit/szaghi/StringiFor?color=blue) "
"![issues](https://img.shields.io/github/issues/szaghi/StringiFor?color=yellow)"
msgstr ""

#~ msgid ""
#~ "It is sometimes useful to display "
#~ "a hyperlinked page contents for lengthy"
#~ " pages. the inpage toc tree has "
#~ "been automated and would generate the"
#~ " toc of the current page. whereas "
#~ "thd method to generate toc of the"
#~ " entire directory on `fortran-lang.org` "
#~ "is:"
#~ msgstr ""

#~ msgid "Get started"
#~ msgstr ""

